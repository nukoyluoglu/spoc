create integer stack S	stack < int > S ;
	stack < int > S ;	1
declare funcion with long longs a , b as arguments , returning integer	int a, b ;
	int funcion ( long long a , long long b )	NA
create integer	int n ;
	int r ;	NA
if a is b , return 1 from function	if ( a == b ) return 1 ;
	if ( a == b ) return 1 ;	1
if a is less than b	if ( a < b )
	if ( a < b )	1
set r to result of run funcion with 2 * a , b as arguments	r = funcion ( 2 * a, b ) ;
	r = funcion ( 2 * a , b ) ;	NA
if r is 1	if ( r == 1 )
	if ( r == 1 )	1
add element 1 to end of S	S. push_back ( 1 ) ;
	S . push ( 1 ) ;	NA
return 1 from function	return 1 ;
	return 1 ;	1
}	}	}	DUMMY	DUMMY	DUMMY
set r to result of run funcion with ( 10 * a ) + 1 , b as arguments	r = funcion ( 10 * a ) + 1, b ;
	r = funcion ( ( 10 * a ) + 1 , b ) ;	NA
if r is 1	if ( r == 1 )
	if ( r == 1 )	1
add element 2 to end of S	S. push ( 2 ) ;
	S . push ( 2 ) ;	NA
return 1 from function	return 1 ;
	return 1 ;	1
}	}	}	DUMMY	DUMMY	DUMMY
else	else
	else	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
create long longs a , b	long long a, b ;
	long long a , b ;	NA
create integers op , ans	int op, ans ;
	int op , ans ;	NA
read a read b	cin >> a >> b ;
	cin >> a >> b ;	1
set ans to result of run funcion with a , b as arguments	ans = funcion ( a, b ) ;
	ans = funcion ( a , b ) ;	NA
if ans is 0	if ( ans == 0 )
	if ( ans == 0 )	1
print " NO " print ' \ n '	cout << " NO " <<'\n';
	cout << " NO " << ' \n ' ;	NA
else	else
	else	1
print " YES " print ' \ n '	cout << " YES " <<'\n';
	cout << " YES " << ' \n ' ;	NA
print size of S + 1 print ' \ n '	cout << S. size ( ) + 1 <<'\n';
	cout << S . size ( ) + 1 << ' \n ' ;	NA
print a	cout << a <<'\n';
	cout << a ;	NA
while S is not empty	while (! S. empty ( ) )
	while ( ! S . empty ( ) )	NA
set op to top of S	op = S. top ( ) ;
	op = S . top ( ) ;	NA
remove element from top of S	S. pop ( ) ;
	S . pop ( ) ;	NA
if op is 1	if ( op == 1 )
	if ( op == 1 )	1
set a to a * 2	a *= 2 ;
	a *= 2 ;	1
else	else
	else	1
set a to a * 10	a *= 10 ;
	a *= 10 ;	1
increment a	a ++ ;
	a ++ ;	1
}	}	}	DUMMY	DUMMY	DUMMY
print " " print a	cout << " " << a << endl ;
	cout << " " << a ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
print ' \ n '	cout <<'\n';
	cout << ' \n ' ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
