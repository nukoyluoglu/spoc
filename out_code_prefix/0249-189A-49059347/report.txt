N = constant integer with N = 1e5 + 7	const int N = 1e5 + 7 ;
	const int N = 1e5 + 7 ;	1
arr = array of size N	int arr [ N ] ;
	int arr [ N ] ;	1
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
n , a , b , c = integers	int n, a, b, c ;
	int n , a , b , c ;	NA
read n , a , b , c	cin >> n >> a >> b >> c ;
	cin >> n >> a >> b >> c ;	1
set all contents of arr to 0 after casting to integer	memset ( arr, 0, sizeof ( arr ) ) ;
	memset ( arr , ( int ) ( 0 ) , sizeof ( arr ) ) ;	NA
arr [ a ] = arr [ b ] = arr [ c ] = 1	arr [ a ] == arr [ b ] = arr [ c ] = 1 ;
	arr [ a ] = arr [ b ] = arr [ c ] = 1 ;	NA
for i = ( cast to integer ) ( 1 ) to ( cast to integer ) ( n )	for ( int i = ( int ) ( 1 ) ; i <= int ( n ) ; ++ i )
	for ( int i = ( int ) ( 1 ) ; i <= ( int ) ( n ) ; i ++ )	NA
if i > = a and arr [ i - a ] , arr [ i ] = max ( arr [ i ] , arr [ i - a ] + 1 )	if ( i >= a && arr [ i -'a'] ) { arr [ 1 ] = max ( arr [ j ], arr [ ( i - a ] + 1 ) ; }
	if ( i >= a and arr [ i - a ] ) arr [ i ] = max ( arr [ i ] , arr [ i - a ] + 1 ) ;	NA
if i > = b and arr [ i - b ] , arr [ i ] = max ( arr [ i ] , arr [ i - b ] + 1 )	if ( i >= b and arr [ i - b ] ) arr [ 1 ] = max ( arr [ 0 ], arr [ j - a ] + 1 ) ;
	if ( i >= b and arr [ i - b ] ) arr [ i ] = max ( arr [ i ] , arr [ i - b ] + 1 ) ;	NA
if i > = c and arr [ i - c ] , arr [ i ] = max ( arr [ i ] , arr [ i - c ] + 1 )	if ( i >= c and arr [ i - c ] ) arr [ 1 ] = max ( arr [ 0 ], arr [ 2 ] + 1 ) ;
	if ( i >= c and arr [ i - c ] ) arr [ i ] = max ( arr [ i ] , arr [ i - c ] + 1 ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
print arr [ n ]	cout << arr [ n ] << endl ;
	cout << arr [ n ] << endl ;	1
}	}	}	DUMMY	DUMMY	DUMMY
