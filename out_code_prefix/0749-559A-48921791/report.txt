declare int array side with size 7	int side [ 7 ] ;
	int side [ 7 ] ;	1
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
for integer i = 1 to 6 inclusive read side [ i ]	for ( int i = 1 ; i <= 6 ; i ++ ) cin >> side [ i ] ;
	for ( int i = 1 ; i <= 6 ; ++ i ) cin >> side [ i ] ;	NA
create integer h1 = min of side [ 2 ] and side [ 6 ]	int h1 = min ( side [ 2 ], side [ 6 ] ) ;
	int h1 = min ( side [ 2 ] , side [ 6 ] ) ;	NA
create integer h2 = min of side [ 3 ] and side [ 5 ]	int h2 = min ( side [ 3 ], side [ 5 ] ) ;
	int h2 = min ( side [ 3 ] , side [ 5 ] ) ;	NA
declare int h3 = side [ 2 ] + side [ 3 ] - h1 - h2	int h3 = side [ 2 ] + side [ 3 ] - h1 - h2 ;
	int h3 = side [ 2 ] + side [ 3 ] - h1 - h2 ;	1
create int ans = 0	int ans = 0 ;
	int ans = 0 ;	1
for integer i = side [ 1 ] + 1 to side [ 1 ] + h1 inclusive , increase ans by 2 * i - 1	for ( int i = side [ 1 ] + 1 ; i <= side [ i ] + h1 ; ++ i ) { ans += 2 * i - 1 ; }
	for ( int i = side [ 1 ] + 1 ; i <= side [ 1 ] + h1 ; ++ i ) ans += 2 * i - 1 ;	NA
for integer i = side [ 4 ] + 1 to side [ 4 ] + h2 inclusive , increase ans by 2 * i - 1	for ( int i = side [ 4 ] + 1 ; i <= side [ 7 ] + h2 ; ++ i ) ans += 2 * i - 1 ;
	for ( int i = side [ 4 ] + 1 ; i <= side [ 4 ] + h2 ; ++ i ) ans += 2 * i - 1 ;	NA
for i = 1 to h3 inclusive , increase ans by ( side [ 1 ] + h1 ) * 2	for ( int i = 1 ; i <= h3 ; ++ i ) ans += ( side [ 1 ] + h1 ) * 2 ;
	for ( int i = 1 ; i <= h3 ; ++ i ) ans += ( side [ 1 ] + h1 ) * 2 ;	1
print ans	cout << ans << endl ;
	cout << ans << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
