int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
create long long a and b	long long a, b ;
	long long a , b ;	NA
read a , b	cin >> a >> b ;
	cin >> a >> b ;	1
if a equal to 0	if ( a == 0 )
	if ( a == 0 )	1
print - 1 * b * b	cout << - 1 * b * b << endl ;
	cout << - 1 * b * b << endl ;	1
for i = 0 to b exclusive , print x	for ( int i = 0 ; i < b ; i ++ ) cout << x ;
	for ( int ( i ) = ( 0 ) ; ( i ) < ( b ) ; ++ ( i ) ) cout << ' x ' ;	NA
print a newline	cout << endl ;
	cout << endl ;	1
else if b = 0	else if ( b == 0 )
	else if ( b == 0 )	1
print a * a	cout << a * a << endl ;
	cout << a * a << endl ;	1
for i = 0 to a exclusive , print o	for ( int i = ( 0 ) ; i < ( a ) ; ++ i ) cout <<'o';
	for ( int ( i ) = ( 0 ) ; ( i ) < ( a ) ; ++ ( i ) ) cout << ' o ' ;	NA
print a newline	cout << endl ;
	cout << endl ;	1
else if b equal to 1	else if ( b == 1 )
	else if ( b == 1 )	1
print a * a - 1	cout << a * a - 1 << endl ;
	cout << a * a - 1 << endl ;	1
for i = 0 to a exclusive , print o	for ( int i = ( 0 ) ; i < ( a ) ; ++ i ) cout <<'o';
	for ( int ( i ) = ( 0 ) ; ( i ) < ( a ) ; ++ ( i ) ) cout << ' o ' ;	NA
print x	cout << x << endl ;
	cout << ' x ' ;	NA
print a newline	cout << endl ;
	cout << endl ;	1
else	else
	else	1
ser ret to LLONG_MIN	char ret = LLONG_MIN ;
	long long ret = LLONG_MIN ;	NA
set foo = 0	long long foo = 0 ;
	long long foo = 0 ;	1
for j = 1 to min of b - 1 and a	for ( long long j = 1 ; j <= min ( b - 1, a ) ; j ++ )
	for ( long long j = 1 ; j <= min ( b - 1 , a ) ; j ++ )	NA
assign ( a - j + 1 ) * ( a - j + 1 ) + ( j - 1 ) to pos	long long pos = ( a - j + 1 ) * ( b - j - 1 ) + ( j - i ) ;
	long long pos = ( a - j + 1 ) * ( a - j + 1 ) + ( j - 1 ) ;	NA
set q = b / ( j + 1 ) and r to b % ( j + 1 )	long long q = b / ( j + 1 ), r = b % ( j - 1 ) ;
	long long q = b / ( j + 1 ) , r = b % ( j + 1 ) ;	NA
set neg = r * ( q + 1 ) * ( q + 1 ) + ( j + 1 - r ) * q * q	long long neg = r * ( q + 1 ) * ( ( q - 1 ) + ( j + 1 - r ) * q * q ;
	long long neg = r * ( q + 1 ) * ( q + 1 ) + ( j + 1 - r ) * q * q ;	NA
if pos - neg greater than ret	if ( pos - neg > ret )
	if ( pos - neg > ret )	1
ret = pos - neg	ret = pos - neg ;
	ret = pos - neg ;	1
assign j + 1 to foo	long long foo = j + 1 ;
	foo = j + 1 ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
print ret	cout << ret << endl ;
	cout << ret << endl ;	1
set q = b / foo , r = b % foo	q = b / foo, r = b % foo ;
	long long q = b / foo , r = b % foo ;	NA
assign ( a - ( foo - 1 ) + 1 ) to g	long long g = ( a - ( foo - 1 ) + 1 ) ;
	long long g = ( a - ( foo - 1 ) + 1 ) ;	1
for j = 1 to foo + 1 exclusive	for ( long long j = 1 ; j < ( foo + 1 ) ; j ++ )
	for ( int ( j ) = ( 1 ) ; ( j ) < ( foo + 1 ) ; ++ ( j ) )	NA
for i = 0 to q exclusive , print x	for ( int i = 0 ; i < q ; ++ i ) cout << x ;
	for ( int ( i ) = ( 0 ) ; ( i ) < ( q ) ; ++ ( i ) ) cout << ' x ' ;	NA
if < = r , print x	if ( ( j ) <= r ) cout <<'x';
	if ( j <= r ) cout << ' x ' ;	NA
if j different from foo	if ( j!= foo )
	if ( j != foo )	NA
if j equal to 1	if ( j == 1 )
	if ( j == 1 )	1
for i = 0 to g exclusive , print o	for ( int i = ( 0 ) ; i < ( g ) ; ++ i ) cout <<'o';
	for ( int ( i ) = ( 0 ) ; ( i ) < ( g ) ; ++ ( i ) ) cout << ' o ' ;	NA
else	else
	else	1
print o	cout <<'o';
	cout << ' o ' ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
print a newline	cout << endl ;
	cout << endl ;	1
}	}	}	DUMMY	DUMMY	DUMMY
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
