create long longs A , B , ans with ans = - 0x7fffffff	long long A, B, ans = - 0x7fffffff ;
	long long A , B , ans = - 0x7fffffff ;	NA
create long longs bxb , bex , bob , bpb	long long bxb, bex, bob, bpb ;
	long long bxb , bex , bob , bpb ;	NA
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
read A read B	cin >> A >> B ;
	cin >> A >> B ;	1
if B is 0	if ( B == 0 )
	if ( B == 0 )	1
print A * A print newline	cout << A * A << endl ;
	cout << A * A << endl ;	1
for i = 0 to A exclusive print " o "	for ( int i = 0 ; i < A ; i ++ ) cout << " o " ;
	for ( int i = 0 ; i < A ; i ++ ) cout << " o " ;	1
print newline	cout << endl ;
	cout << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
if B is 1	if ( B == 1 )
	if ( B == 1 )	1
print A * A - 1 print newline	cout << A * A - 1 << endl ;
	cout << A * A - 1 << endl ;	1
for i = 0 to A exclusive , print " o "	for ( int i = 0 ; i < A ; i ++ ) cout << " o " ;
	for ( int i = 0 ; i < A ; i ++ ) cout << " o " ;	1
print " x " print newline	cout << " x " << endl ;
	cout << " x " << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
if A is 0	if ( A == 0 )
	if ( A == 0 )	1
print - B * B print newline	cout << - B * B << endl ;
	cout << - B * B << endl ;	1
for i = 0 to B exclusive , print " x '	for ( int i = 0 ; i < B ; i ++ ) cout << " x " ;
	for ( int i = 0 ; i < B ; i ++ ) cout << " x " ;	1
print newline	cout << endl ;
	cout << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
for xb = 2 to minimum of ( B and A + 1 ) inclusive	for ( int xb = 2 ; xb <= min ( B, A + 1 ) ; ++ xb )
	for ( int xb = 2 ; xb <= min ( B , A + 1 ) ; xb ++ )	NA
create integer ob with ob = xb - 1	int ob = xb - 1 ;
	int ob = xb - 1 ;	1
create long long score with score = ob - 1	long long score = ob - 1 ;
	long long score = ob - 1 ;	1
increment score by ( A - ( ob - 1 ) ) * ( A - ( ob - 1 ) )	score += ( A - ( ob - 1 ) ) * ( A- (ob - 1. ) ) ;
	score += ( A - ( ob - 1 ) ) * ( A - ( ob - 1 ) ) ;	NA
end statement	;
	;	1
create long long pb with pb = B / xb	long long pb = B / xb ;
	long long pb = B / xb ;	1
create long long ex with ex = B % xb	long long ex = B % xb ;
	long long ex = B % xb ;	1
decrement score by ( xb - ex ) * pb * pb	score -= ( ( xb - ex ) * pb * powb ) ;
	score -= ( xb - ex ) * pb * pb ;	NA
decrement score by ex * ( pb + 1 ) * ( pb + 1 )	score -= ex * ( pb + 1 ) * ( Pb + 2 ) ;
	score -= ex * ( pb + 1 ) * ( pb + 1 ) ;	NA
if score is greater than ans	if ( score > ans )
	if ( score > ans )	1
set ans to score	ans = score ;
	ans = score ;	1
set bxb to xb	xb = xb ;
	bxb = xb ;	NA
set bex to ex	int bex = ex ;
	bex = ex ;	NA
set bob to ob	bob = ob ;
	bob = ob ;	1
set bpb to pb	bb = pb ;
	bpb = pb ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
print ans print newline	cout << ans << endl ;
	cout << ans << endl ;	1
for i = 0 to bxb exclusive	for ( int i = 0 ; i < bxb ; i ++ )
	for ( int i = 0 ; i < bxb ; i ++ )	1
for j = 0 to bpb exclusive , print " x "	for ( int j = 0 ; j < bpb ; j ++ ) cout << " x " ;
	for ( int j = 0 ; j < bpb ; j ++ ) cout << " x " ;	1
if i is less than bex , print " x "	if ( i < bex ) cout << " x " ;
	if ( i < bex ) cout << " x " ;	1
if i is 0	if ( i == 0 )
	if ( i == 0 )	1
for j = 0 to A - ( bob - 1 ) exclusive , print " o "	for ( int j = 0 ; j < A - ( bob - 1 ) ; j ++ ) cout << " o " ;
	for ( int j = 0 ; j < A - ( bob - 1 ) ; j ++ ) cout << " o " ;	1
else if i + 1 is less than bxb	else if ( i + 1 < bxb )
	else if ( i + 1 < bxb )	1
print " o "	cout << " o " ;
	cout << " o " ;	1
}	}	}	DUMMY	DUMMY	DUMMY
print newline	cout << endl ;
	cout << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
