declare constant int MAX_N = 2e5 + 10	const int MAX_N = 2e5 + 10 ;
	const int MAX_N = 2e5 + 10 ;	1
declare constant int MAX_LOG = 62	const int MAX_LOG = 62 ;
	const int MAX_LOG = 62 ;	1
declare constant long long INF = 1e18 + 1	const long long INF = 1e18 + 1 ;
	const long long INF = 1e18 + 1 ;	1
declare constant long long MOD = 1e9 + 7	const long long MOD = 1e9 + 7 ;
	const long long MOD = 1e9 + 7 ;	1
declare long long variables n , c1 , c2 and ans with ans = INF	long long n, c1, c2, ans = INF ;
	long long n , c1 , c2 , ans = INF ;	NA
create string s	string s ;
	string s ;	1
declare integer variable m	int m ;
	int m ;	1
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
read input to n , c1 and c2	cin >> n >> c1 >> c2 ;
	cin >> n >> c1 >> c2 ;	1
read s	cin >> s ;
	cin >> s ;	1
for i from 0 to n exclusive	for ( int i = 0 ; i < n ; i ++ )
	for ( int i = 0 ; i < n ; i ++ )	1
if s [ i ] = ' 1 ' , increment m	if ( s [ i ] =='1') { m ++ ; }
	if ( s [ i ] == ' 1 ' ) m ++ ;	NA
for i from 1 to m inclusive	for ( int i = 1 ; i <= m ; i ++ )
	for ( int i = 1 ; i <= m ; i ++ )	1
create long long k = n / i	long long k = n / i ;
	long long k = n / i ;	1
create long long r = n % i	long long r = n % i ;
	long long r = n % i ;	1
declare long long variable tmp = r * ( c1 + c2 * k * k )	long long tmp = r * ( c1 + c2 * k * k ) ;
	long long tmp = r * ( c1 + c2 * ( k ) * k ) ;	NA
add ( i - r ) * ( c1 + c2 * ( k - 1 ) * ( k - 1 ) ) to tmp	tmp = tmp + ( i - r ) * ( c1 + c2 * ( k - 1 ) * c1 ) ;
	tmp += ( i - r ) * ( c1 + c2 * ( k - 1 ) * ( k - 1 ) ) ;	NA
set ans to min of ans and tmp	ans = min ( ans, tmp ) ;
	ans = min ( ans , tmp ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
print ans	cout << ans << endl ;
	cout << ans << endl ;	1
}	}	}	DUMMY	DUMMY	DUMMY
