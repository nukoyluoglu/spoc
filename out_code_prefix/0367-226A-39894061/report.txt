declare long longs m and n	long long m, n ;
	long long m , n ;	NA
pw is a long long function with long long arguments a and b	long long pw ( long long a, long long b )
	long long pw ( long long a , long long b )	NA
declare long long res with value 1	long long res = 1 ;
	long long res = 1 ;	1
while b is not 0	while ( b )
	while ( b )	1
if b & 1 is true , change res to ( res * a ) modulo m	if ( b & 1 ) res = ( res * a ) % m ;
	if ( b & 1 ) res = ( res * a ) % m ;	1
set a to a squared modulo m	a = ( a * a ) % m ;
	a = ( a * a ) % m ;	1
change the value of b to b divided by 2	b /= 2 ;
	b /= 2 ;	1
}	}	}	DUMMY	DUMMY	DUMMY
return res	return res ;
	return res ;	1
}	}	}	DUMMY	DUMMY	DUMMY
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
read input to n and m	cin >> n >> m ;
	cin >> n >> m ;	1
declare long long variable with name ans and value = pw of 3 and n	long long ans = pw ( 3, n ) ;
	long long ans = ( pw ( 3 , n ) ) ;	NA
decrement ans	ans -- ;
	ans -- ;	1
if ans is less than 0 , add m to ans	if ( ans < 0 ) { ans += m ; }
	if ( ans < 0 ) ans += m ;	NA
print ans to the standard output	cout << ans << endl ;
	cout << ans << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
