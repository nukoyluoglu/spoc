int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
create integers n and v	int n, v ;
	int n , v ;	NA
read n and v	cin >> n >> v ;
	cin >> n >> v ;	1
a is an array of doubles with size n	double a [ n ] ;
	double a [ n ] ;	1
read n elements into array a	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }
	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }	1
declare double called minvalue = INT_MAX	double minvalue = INT_MAX ;
	double minvalue = INT_MAX ;	1
b is an array of doubles with size n	double b [ n ] ;
	double b [ n ] ;	1
for integer i = 0 to n exclusive	for ( int i = 0 ; i < n ; i ++ )
	for ( int i = 0 ; i < n ; i ++ )	1
read b [ i ]	cin >> b [ i ] ;
	cin >> b [ i ] ;	1
assign value of min of minvalue and b [ i ] to the minvalue	minvalue = min ( minvalue, b [ i ] ) ;
	minvalue = min ( minvalue , b [ i ] ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
l is double = 0	double l = 0 ;
	double l = 0 ;	1
let r be double = 1e18	double r = 1e18 ;
	double r = 1e18 ;	1
answer is double = 0	double answer = 0 ;
	double answer = 0 ;	1
for integer i = 1 to 100 inclusive	for ( int i = 1 ; i <= 100 ; i ++ )
	for ( int i = 1 ; i <= 100 ; i ++ )	1
double mid = ( l + ( r - l ) / 2 )	double mid = ( l + ( r - l ) / 2 ) ;
	double mid = ( l + ( r - l ) / 2 ) ;	1
sum is double = 0	double sum = 0 ;
	double sum = 0 ;	1
flag is integer = 0	int flag = 0 ;
	int flag = 0 ;	1
for i = 0 to n exclusive	for ( int i = 0 ; i < n ; i ++ )
	for ( int i = 0 ; i < n ; i ++ )	1
set double value to a [ i ] * mid	double a [ i ] * mid = 0 ;
	double value = a [ i ] * mid ;	NA
if value is greater than b [ i ]	if ( value > b [ i ] )
	if ( value > b [ i ] )	1
set flag to 1	flag = 1 ;
	flag = 1 ;	1
break the loop	break ;
	break ;	1
else	else
	else	1
increase sum by ( a [ i ] * mid )	sum += ( a [ i ] * mid ) ;
	sum += ( a [ i ] * mid ) ;	1
}	}	}	DUMMY	DUMMY	DUMMY
if flag = 1	if ( flag == 1 )
	if ( flag == 1 )	1
set value of r to mid - 1	r = mid - 1 ;
	r = mid - 1 ;	1
skip the rest of the loop	continue ;
	continue ;	1
}	}	}	DUMMY	DUMMY	DUMMY
if sum < = v	if ( sum <= v )
	if ( sum <= v )	1
set answer to sum	answer = sum ;
	answer = sum ;	1
l = mid + 1	l = mid + 1 ;
	l = mid + 1 ;	1
else	else
	else	1
r = mid - 1	r = mid - 1 ;
	r = mid - 1 ;	1
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
print setprecision ( 6 ) , fixed , answer and " \ n "	cout << setprecision ( 6 ) << fixed << answer << " \n " ;
	cout << setprecision ( 6 ) << fixed << answer << " \n " ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
