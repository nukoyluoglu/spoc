create string s and string array s1 with dimension 101	string s, s1 [ 101 ] ;
	string s , s1 [ 101 ] ;	NA
create integer n , ok	int n, ok ;
	int n , ok ;	NA
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
get s , n	cin >> s >> n ;
	cin >> s >> n ;	1
for integer i = 1 to n with increment i do get s1 [ i ]	for ( int i = 1 ; i <= n ; i ++ ) { cin >> s1 [ i ] ; }
	for ( int i = 1 ; i <= n ; ++ i ) cin >> s1 [ i ] ;	NA
for integer i = n to 1 with decrement i	for ( int i = n ; i >= 1 ; -- i )
	for ( int i = n ; i >= 1 ; -- i )	1
for integer j = 1 with increment j till j less than i	for ( int j = 1 ; j <= i ; ++ j )
	for ( int j = 1 ; j < i ; ++ j )	NA
if s1 [ j ] greater than s1 [ j + 1 ] then swap s1 [ j ] and s1 [ j + 1 ]	if ( s1 [ j ] > s1. sum ( ) + 1 ] ) swap ( s2 [ j - 1 ], s1 ( j + 1 ) ) ;
	if ( s1 [ j ] > s1 [ j + 1 ] ) swap ( s1 [ j ] , s1 [ j + 1 ] ) ;	NA
for integer k = 1 to n with increment k	for ( int k = 1 ; k <= n ; ++ k )
	for ( int k = 1 ; k <= n ; ++ k )	1
set ok to 1	ok = 1 ;
	ok = 1 ;	1
for integer i = 0 to length of s - 1 with increment i	for ( int i = 0 ; i < s. length ( ) ; ++ i )
	for ( int i = 0 ; i < s . length ( ) ; ++ i )	NA
if s [ i ] not equal to s1 [ k ] [ i ] then	if ( s [ i ]!= s1 [ k ] [ 1 ] )
	if ( s [ i ] != s1 [ k ] [ i ] )	NA
set ok to 0	ok = 0 ;
	ok = 0 ;	1
break the loop	break ;
	break ;	1
}	}	}	DUMMY	DUMMY	DUMMY
if ok not equal to 0 then	if ( ok )
	if ( ok )	1
print s1 [ k ]	cout << s1 [ k ] ;
	cout << s1 [ k ] << endl ;	NA
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
print s	cout << s << endl ;
	cout << s << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
