declare solve	void solve ( )
	void solve ( )	1
create ints n and p	int n, p ;
	int n , p ;	NA
read n and p	cin >> n >> p ;
	cin >> n >> p ;	1
let long double ans = 0	long double ans = 0 ;
	long double ans = 0 ;	1
let int cnt = 0	int cnt = 0 ;
	int cnt = 0 ;	1
create string vector v	vector < string > v ;
	vector < string > v ;	1
for i = 0 to n exclusive	for ( int i = 0 ; i < n ; i ++ )
	for ( int i = 0 ; i < n ; i ++ )	1
let string s	string s ;
	string s ;	1
read s	cin >> s ;
	cin >> s ;	1
append s to vector v	v. push_back ( s ) ;
	v . push_back ( s ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
reverse order of contents of vector v	reverse ( v. begin ( ), v. end ( ) ) ;
	reverse ( v . begin ( ) , v . end ( ) ) ;	NA
for i = 0 to n exclusive	for ( int i = 0 ; i < n ; i ++ )
	for ( int i = 0 ; i < n ; i ++ )	1
if v [ i ] is equal to " halfplus "	if ( v [ i ] == " halfplus " )
	if ( v [ i ] == " halfplus " )	1
set ans to ans + 0 . 5	ans += 0.5 ;
	ans += 0.5 ;	1
set ans to ans * 2	ans *= 2 ;
	ans *= 2 ;	1
increment cnt	cnt ++ ;
	cnt ++ ;	1
otherwise do :	else
	else	1
set ans to ans * 2	ans *= 2 ;
	ans *= 2 ;	1
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
print the result of ( long long ) ( ans ) * p - cnt * ( p / 2 )	cout << ( long long ) ( ans ) * p - cnt * ( p / 2 ) << endl ;
	cout << ( long long ) ( ans ) * p - cnt * ( p / 2 ) << endl ;	1
}	}	}	DUMMY	DUMMY	DUMMY
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
call solve ( )	solve ( ) ;
	solve ( ) ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
