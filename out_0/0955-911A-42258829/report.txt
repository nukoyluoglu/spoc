create constant int maxn = 1e7 + 10	const int maxn = 1e7 + 10 ;
	const int maxn = 1e7 + 10 ;	1
let int array a of size maxn	int a [ maxn ] ;
	int a [ maxn ] ;	1
let int n	int n ;
	int n ;	1
let integer mini = 1e9 + 10	int mini = 1e9 + 10 ;
	int mini = 1e9 + 10 ;	1
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
read n	cin >> n ;
	cin >> n ;	1
for i = 0 to n exclusive	for ( int i = 0 ; i < n ; i ++ )
	for ( int i = 0 ; i < n ; i ++ )	1
read a [ i ]	cin >> a [ i ] ;
	cin >> a [ i ] ;	1
if a [ i ] is less than mini , set mini to a [ i ]	if ( a [ i ] < mini ) mini = a [ 1 ] ;
	if ( a [ i ] < mini ) mini = a [ i ] ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
create int vector vec	vector < int > vec ;
	vector < int > vec ;	1
for i = 0 to n exclusive	for ( int i = 0 ; i < n ; i ++ )
	for ( int i = 0 ; i < n ; i ++ )	1
if mini is equal to a [ i ] , append i to vec	if ( mini == a [ i ] ) vec. push_back ( i ) ;
	if ( mini == a [ i ] ) { vec . push_back ( i ) ; }	NA
}	}	}	DUMMY	DUMMY	DUMMY
set mini to n	mini = n ;
	mini = n ;	1
for i = 0 to the size of vec exclusive , set mini to the min of mini and vec [ i + 1 ] - vec [ i ]	for ( int i = 0 ; i < vec. size ( ) ; i ++ ) { mini = min ( mini, vec [ i + 1 ] - vec [ j ] ) ; }
	for ( int i = 0 ; i < vec . size ( ) - 1 ; i ++ ) { mini = min ( mini , vec [ i + 1 ] - vec [ i ] ) ; }	NA
print mini	cout << mini << endl ;
	cout << mini << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
