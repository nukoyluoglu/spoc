create 64 bit integer infint64_t with infint64_t = 9223372036854775807LL	long long infint64_t = 9223372036854775807LL ;
	const int64_t infint64_t = 9223372036854775807LL ;	NA
declare solve with no arguments , returning void	void solve ( )
	void solve ( )	1
create 64 bit integers n , k , p	int64_t n, k, p ;
	int64_t n , k , p ;	NA
read n read k read p	cin >> n >> k >> p ;
	cin >> n >> k >> p ;	1
create 64 bit integer vector a initialized with n	vector < int >64_t a ( n ) ;
	vector < int64_t > a ( n ) ;	NA
for i = 0 to n exclusive , read a [ i ]	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
	for ( int64_t i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }	NA
sort elements from beginning of a to end of a	sort ( a. begin ( ), a. end ( ) ) ;
	sort ( a . begin ( ) , a . end ( ) ) ;	NA
create 64 bit integer vector b initialized with k	vector < int >64_t b ( k ) ;
	vector < int64_t > b ( k ) ;	NA
for i = 0 to k exclusive , read b [ i ]	for ( int i = 0 ; i < k ; i ++ ) cin >> b [ i ] ;
	for ( int64_t i = 0 ; i < k ; i ++ ) { cin >> b [ i ] ; }	NA
sort elements from beginning of b to end of b	sort ( b. begin ( ), b. end ( ) ) ;
	sort ( b . begin ( ) , b . end ( ) ) ;	NA
create 64 bit integer best with best = infint64_t	long long64_t best = infint64__t ;
	int64_t best = infint64_t ;	NA
for i = 0 to k - n inclusive	for ( int i = 0 ; i <= k - n ; i ++ )
	for ( int64_t i = 0 ; i <= k - n ; i ++ )	NA
create 64 bit integer curWorst with curWorst = 0	int64_t curWorst = 0 ;
	int64_t curWorst = 0 ;	1
for j = 0 to n exclusive	for ( int j = 0 ; j < n ; j ++ )
	for ( int64_t j = 0 ; j < n ; j ++ )	NA
create 64 bit integer cur with cur = absolute value of ( b [ i + j ] - p ) + absolute value of ( b [ i + j ] - a [ j ] )	int64_t cur = abs ( b [ i + j ] - p ) + abs ( a [ i - j ] + a [ j ] ) ;
	int64_t cur = abs ( b [ i + j ] - p ) + abs ( b [ i + j ] - a [ j ] ) ;	NA
set curWorst to maximum of curWorst and cur	curWorst = max ( curWorst, cur ) ;
	curWorst = max ( curWorst , cur ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
set best to minimum of best and curWorst	best = min ( best, curWorst ) ;
	best = min ( best , curWorst ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
print best print newline	cout << best << endl ;
	cout << best << endl ;	1
}	}	}	DUMMY	DUMMY	DUMMY
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
run solve	solve ( ) ;
	solve ( ) ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
