int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
n , xx = long long	long long n, xx ;
	long long n , xx ;	NA
read n	cin >> n ;
	cin >> n ;	1
m1 = 0 , m2 = 1023	int m1 = 0, m2 = 1023 ;
	long long m1 = 0 , m2 = 1023 ;	NA
rr and ss = array of 1024 long long	long long rr [ 1024 ], ss [ 1024 + 10 ] ;
	long long rr [ 1024 ] , ss [ 1024 ] ;	NA
for i = 0 to 1024 exclusive	for ( int i = 0 ; i < 1024 ; i ++ )
	for ( long long i = 0 ; i < 1024 ; i ++ )	NA
rr [ i ] = i	rr [ i ] = i ;
	rr [ i ] = i ;	1
ss [ i ] = i	ss [ i ] = i ;
	ss [ i ] = i ;	1
}	}	}	DUMMY	DUMMY	DUMMY
while decremented value of n is not 0	while ( n -- )
	while ( n -- )	1
r = char	char r ;
	char r ;	1
read r , xx	cin >> r >> xx ;
	cin >> r >> xx ;	1
if r is ' | '	if ( r =='|')
	if ( r == ' | ' )	NA
m1 = m1 or xx	m1 |= xx ;
	m1 = m1 | xx ;	NA
m2 = m2 or xx	m2 |= xx ;
	m2 = m2 | xx ;	NA
for i = 0 to 1024 exclusive rr [ i ] = rr [ i ] or xx	for ( int i = 0 ; i < 1024 ; i ++ ) { rr [ i ] |= xx ; }
	for ( long long i = 0 ; i < 1024 ; i ++ ) { rr [ i ] = rr [ i ] | xx ; }	NA
else if r is ' ^ '	else if ( r =='^')
	else if ( r == ' ^ ' )	NA
m1 = m1 xor xx	m1 = m1 * xx ;
	m1 = m1 ^ xx ;	NA
m2 = m2 xor xx	m2 = m2 * xx ;
	m2 = m2 ^ xx ;	NA
for i = 0 to 1024 exclusive rr [ i ] = rr [ i ] xor xx	for ( int i = 0 ; i < 1024 ; i ++ ) rr [ i ] += xx ;
	for ( long long i = 0 ; i < 1024 ; i ++ ) { rr [ i ] = rr [ i ] ^ xx ; }	NA
else	else
	else	1
m1 = m1 and xx	m1 = m1 & xx ;
	m1 = m1 & xx ;	1
m2 = m2 and xx	m2 = m2 & xx ;
	m2 = m2 & xx ;	1
for i = 0 to 1024 exclusive rr [ i ] = rr [ i ] and xx	for ( int i = 0 ; i < 1024 ; i ++ ) rr [ i ] += xx ;
	for ( long long i = 0 ; i < 1024 ; i ++ ) { rr [ i ] = rr [ i ] & xx ; }	NA
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
x , a , o = 0	int x, a = 0, o = 0 ;
	long long x = 0 , a = 0 , o = 0 ;	NA
for i = 0 to 10 exclusive	for ( int i = 0 ; i < 10 ; i ++ )
	for ( long long i = 0 ; i < 10 ; i ++ )	NA
u = m1 and ( 2 ^ ( i + 1 ) )	u = m1, ( 2 ^ ( i + 1 ) ) ;
	long long u = m1 & ( 1 << i ) ;	NA
v = m2 and ( 2 ^ ( i + 1 ) )	v = m2, ( 2 ^ ( i + 1 ) ) ;
	long long v = m2 & ( 1 << i ) ;	NA
if m1 and ( 2 ^ ( i + 1 ) ) and v is 0	if ( m1 && ( 2 ^ ( i + 1 ) ) && v == 0 )
	if ( m1 & ( 1 << i ) && v == 0 )	NA
x = x or ( 2 ^ ( i + 1 ) )	x |= ( 2 ^ ( i + 1 ) ) ;
	x = x | ( 1 << i ) ;	NA
a = a or ( 2 ^ ( i + 1 ) )	a |= ( 2 ^ ( i + 1 ) ) ;
	a = a | ( 1 << i ) ;	NA
else if u is 0 and m2 and ( 2 ^ ( i + 1 ) )	else if ( u == 0 && u == m2 && ( 2 * i + 1 ) )
	else if ( u == 0 && m2 & ( 1 << i ) )	NA
a = a or ( 2 ^ ( i + 1 ) )	a |= ( 2 ^ ( i + 1 ) ) ;
	a = a | ( 1 << i ) ;	NA
else if m1 and ( 2 ^ ( i + 1 ) ) and m2 and ( 2 ^ ( i + 1 ) )	else if ( m1 && ( 2 ^ ( i + 1 ) ) && ( m2 && ( 1 << ( 2 << ( int ) ) )
	else if ( m1 & ( 1 << i ) && m2 & ( 1 << i ) )	NA
a = a or ( 2 ^ ( i + 1 ) )	a |= ( 2 ^ ( i + 1 ) ) ;
	a = a | ( 1 << i ) ;	NA
o = o or ( 2 ^ ( i + 1 ) )	o |= ( 2 ^ ( i + 1 ) ) ;
	o = o | ( 1 << i ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
print " 3 "	cout << " 3 " ;
	cout << " 3 " << ' \n ' ;	NA
print " | " and o	cout << " | " << o << endl ;
	cout << " | " << o << ' \n ' ;	NA
print " ^ " and x	cout << " ^ " << x << endl ;
	cout << " ^ " << x << ' \n ' ;	NA
print " & " and a	cout << " & " << a << endl ;
	cout << " & " << a << ' \n ' ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
