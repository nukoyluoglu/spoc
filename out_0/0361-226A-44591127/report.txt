in function modl taking three long longs n , k and p and returning a long long	long long modl ( long long n, long long k, long int p )
	long long modl ( long long n , long long k , long long p )	NA
if n is 0 return 0	if ( n == 0 ) return 0 ;
	if ( n == 0 ) return 0 ;	1
if k is 0	if ( k == 0 )
	if ( k == 0 )	1
return 1	return 1 ;
	return 1 ;	1
else if k is even	else if ( k % 2 == 0 )
	else if ( k % 2 == 0 )	1
return ( modl of n , k / 2 and p * ( modl of n , k / 2 and p ) ) mod p	return modl ( n, k / 2 ) && p * ( modl of n, ( k / 3 ), ( p ) ) % p ;
	return ( modl ( n , k / 2 , p ) * ( modl ( n , k / 2 , p ) ) ) % p ;	NA
else	else
	else	1
return ( n * modl of n , k - 1 and p ) mod p	return n * modl ( n, k - 1, p ) % p ;
	return ( n * modl ( n , k - 1 , p ) ) % p ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
n , m = long long	long long n, m ;
	long long n , m ;	NA
read n then m	cin >> n >> m ;
	cin >> n >> m ;	1
z = long long with z = modl of 3 , n and m	long long z = modl ( 3, n, m ) ;
	long long z = modl ( 3 , n , m ) ;	NA
if z is 0	if ( z == 0 )
	if ( z == 0 )	1
print m - 1	cout << m - 1 << endl ;
	cout << m - 1 << endl ;	1
else	else
	else	1
print z - 1	cout << z - 1 << endl ;
	cout << z - 1 << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
