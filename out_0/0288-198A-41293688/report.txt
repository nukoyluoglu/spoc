long long function bigmod with long long arguments a , b and m	long long bigmod ( long long a [ ], long long b [ ] and long long m )
	long long bigmod ( long long a , long long b , long long m )	NA
if b = 0	if ( b == 0 )
	if ( b == 0 ) return 1 % m ;	NA
x = bigmod of a , b / 2 and m	x = bigmod ( a, b / 2, m ) ;
	long long x = bigmod ( a , b / 2 , m ) ;	NA
x = ( x % m * x % m ) % m	x = ( x % ( m * x % m ) ) % m ;
	x = ( x % m * x % m ) % m ;	NA
if b % 2 ) x = ( x % m * a % m	if ( b % 2 ) x = ( x % m * a % m ) ;
	if ( b % 2 ) x = ( x % m * a % m ) % m ;	NA
return x % m	return x % m ;
	return x % m ;	1
}	}	}	DUMMY	DUMMY	DUMMY
long long function po with long long arguments a and b	long long po ( long long a, long long b )
	long long po ( long long a , long long b )	NA
return 1 if a = 1	if ( a == 1 ) return 1 ;
	if ( a == 1 ) return 1 ;	1
declare long long r = 1	long long r = 1 ;
	long long r = 1 ;	1
decrement b and loop , while b > 0 ; multiply r by a in that loop	while ( b -- ) { r *= a ; }
	while ( b -- ) r *= a ;	NA
return r	return r ;
	return r ;	1
}	}	}	DUMMY	DUMMY	DUMMY
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
declare long long variables k , b , n , t and s where s = 0	long long k, b, n, t, s = 0 ;
	long long k , b , n , t , s = 0 ;	NA
read k , b , n and t	cin >> k >> b >> n >> t ;
	cin >> k >> b >> n >> t ;	1
for i = 0 to n inclusive	for ( int i = 0 ; i <= n ; i ++ )
	for ( int i = 0 ; i <= n ; i ++ )	1
assign value of s + po ( k , i ) to new long long v	v = s + po ( k, i ) ;
	long long v = s + po ( k , i ) ;	NA
if v > = t	if ( v >= t )
	if ( v >= t )	1
if v is greater than t	if ( v > t )
	if ( v > t )	1
print n - i + 1	cout << n - i + 1 << endl ;
	cout << n - i + 1 << endl ;	1
else	else
	else	1
print n - i	cout << n - i << endl ;
	cout << n - i << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
increase s by b * po ( k , i )	s += b * po ( k, i ) ;
	s += b * po ( k , i ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
print " 0 "	cout << " 0 " ;
	puts ( " 0 " ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
