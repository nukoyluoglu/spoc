integer function check with string argument s and integer arguments i and j	int check ( string s, int i, int j )
	int check ( string s , int i , int j )	NA
declare integer variables l = i and r = j	int l = i, r = j ;
	int l = i , r = j ;	NA
while l is less than r	while ( l < r )
	while ( l < r )	1
if s [ l ] = s [ r ]	if ( s [ l ] == s [ r ] )
	if ( s [ l ] == s [ r ] )	1
increment l	l ++ ;
	l ++ ;	1
decrease r by one	r -- ;
	r -- ;	1
skip the rest of the loop	continue ;
	continue ;	1
else	else
	else	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
return 1	return 1 ;
	return 1 ;	1
}	}	}	DUMMY	DUMMY	DUMMY
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
declare string variable s	string s ;
	string s ;	1
read s	cin >> s ;
	cin >> s ;	1
i , n and j are integers where n = length of s	int i, n = s. length ( ), j ;
	int i , n = s . length ( ) , j ;	NA
set value of i to 0	i = 0 ;
	i = 0 ;	1
set j to n - 1	j = n - 1 ;
	j = n - 1 ;	1
while i is less than j	while ( i < j )
	while ( i < j )	1
if s [ i ] ! = s [ j ]	if ( s [ i ]!= s [ j ] )
	if ( s [ i ] != s [ j ] )	NA
if i + 1 = j	if ( i + 1 == j )
	if ( i + 1 == j )	1
insert s [ i ] at position s . begin ( ) + j + 1 of s	s. insert ( s. begin ( ) + j + 1 ) ;
	s . insert ( s . begin ( ) + j + 1 , s [ i ] ) ;	NA
print s	cout << s << endl ;
	cout << s << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
else	else
	else	1
if check ( s , i + 1 , j ) is 1	if ( check ( s, i + 1, j ) == 1 )
	if ( check ( s , i + 1 , j ) )	NA
insert s [ i ] at position s . begin ( ) + j + 1 of s	s. insert ( s. begin ( ) + j + 1 ) ;
	s . insert ( s . begin ( ) + j + 1 , s [ i ] ) ;	NA
print s	cout << s << endl ;
	cout << s << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
else if check ( s , i , j - 1 ) is 1	else if ( check ( s, i, j - 1 ) == 1 )
	else if ( check ( s , i , j - 1 ) )	NA
insert s [ j ] at position s . begin ( ) + i of s	s. insert ( s. begin ( ) + i ) ;
	s . insert ( s . begin ( ) + i , s [ j ] ) ;	NA
print s	cout << s << endl ;
	cout << s << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
else	else
	else	1
print " NA "	puts ( " NA " ) ;
	cout << " NA " << endl ;	NA
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
else	else
	else	1
increase i	i ++ ;
	i ++ ;	1
decrease j by one	j -- ;
	j -- ;	1
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
if length of s is even	if ( s. length ( ) % 2 == 0 )
	if ( s . length ( ) % 2 == 0 )	NA
push character ' a ' to s at position s . begin ( ) + n / 2	s. push_back ('a') + n / 2 ;
	s . insert ( s . begin ( ) + n / 2 , ' a ' ) ;	NA
print s	cout << s << endl ;
	cout << s << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
else	else
	else	1
push character aat s [ n / 2 ] to s at position s . begin ( ) + n / 2 + 1	s. insert ( s. begin ( ) + n / 2 + 1 ) ;
	s . insert ( s . begin ( ) + n / 2 + 1 , s [ n / 2 ] ) ;	NA
print s	cout << s << endl ;
	cout << s << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
