a , dp1 , dp2 = int array of size 100005 each	int a [ 100005 ], dp1 [ 100000 + 5 ], bp2 [ 1000000 + 5 ) ;
	int a [ 100005 ] , dp1 [ 100005 ] , dp2 [ 100005 ] ;	NA
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
n = int	int n ;
	int n ;	1
read n	cin >> n ;
	cin >> n ;	1
for i = 1 to n inclusive read a [ i ]	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
	for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }	NA
set a [ 0 ] to 0x3f3f3f3f	int a [ 0 ] = { 0x3f3f }3f ;
	a [ 0 ] = 0x3f3f3f3f ;	NA
set a [ n + 1 ] to 0x3f3f3f3f	int a [ n + 1 ] = { 0x3f3f, 0f, 3f } ;
	a [ n + 1 ] = 0x3f3f3f3f ;	NA
ans = int with ans = 0	int ans = 0 ;
	int ans = 0 ;	1
for i = 1 to n inclusive set dp1 [ i ] and dp2 [ i ] to 1	for ( int i = 1 ; i <= n ; i ++ ) { dp1 [ i ] = dp2 [ j ] = i ; }
	for ( int i = 1 ; i <= n ; i ++ ) { dp1 [ i ] = dp2 [ i ] = 1 ; }	NA
for i = 1 to n inclusive	for ( int i = 1 ; i <= n ; i ++ )
	for ( int i = 1 ; i <= n ; i ++ )	1
if a [ i ] is greater than a [ i - 1 ] then set dp1 [ i ] to dp1 [ i - 1 ] + 1	if ( a [ 1 ] > a [ i - 1 ] ) dp1 [ i ] += 1 ;
	if ( a [ i ] > a [ i - 1 ] ) { dp1 [ i ] = dp1 [ i - 1 ] + 1 ; }	NA
set ans to max of ans and dp1 [ i ]	ans = max ( ans, dp1 [ i ] ) ;
	ans = max ( ans , dp1 [ i ] ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
for i = n to 0 decrementing i	for ( int i = n ; i > 0 ; i -- )
	for ( int i = n ; i > 0 ; i -- )	1
if a [ i ] is less than a [ i + 1 ] then set dp2 [ i ] to dp2 [ i + 1 ] + 1	if ( a [ i ] < a [ 1 ] ) { dp2 [ j ] = dp3 [ i + 1 ] + 1 ; }
	if ( a [ i ] < a [ i + 1 ] ) { dp2 [ i ] = dp2 [ i + 1 ] + 1 ; }	NA
set ans to max of ans and dp2 [ i ]	ans = max ( ans, dp2 [ i ] ) ;
	ans = max ( ans , dp2 [ i ] ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
for i = 2 to n inclusive set ans to max of ans and dp2 [ i ] + 1	for ( int i = 2 ; i <= n ; i ++ ) ans = max ( ans, dp2 [ i ] + 1 ) ;
	for ( int i = 2 ; i <= n ; i ++ ) { ans = max ( ans , dp2 [ i ] + 1 ) ; }	NA
for i = 1 to n set ans to max of ans and dp1 [ i ] + 1	for ( int i = 1 ; i < n ; i ++ ) ans = max ( ans, dp1 [ i ] + 1 ) ;
	for ( int i = 1 ; i < n ; i ++ ) { ans = max ( ans , dp1 [ i ] + 1 ) ; }	NA
for i = 2 to n	for ( int i = 2 ; i <= n ; i ++ )
	for ( int i = 2 ; i < n ; i ++ )	NA
if a [ i + 1 ] - a [ i - 1 ] is greater than 1 then set ans to max of ans and dp2 [ i + 1 ] + dp1 [ i - 1 ] + 1	if ( a [ i + 1 ] - a [ j - 1 ] > 1 ) { ans = max ( ans, dp2 [ 1 ] + dp1 [ i - 2 ] + 1 ) ; }
	if ( a [ i + 1 ] - a [ i - 1 ] > 1 ) { ans = max ( ans , dp2 [ i + 1 ] + dp1 [ i - 1 ] + 1 ) ; }	NA
}	}	}	DUMMY	DUMMY	DUMMY
print ans	cout << ans << endl ;
	cout << ans << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
