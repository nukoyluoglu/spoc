int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
i , j , n , a , k = int	int i, j, n, a, k ;
	int i , j , n , a , k ;	NA
arr = two dimensional int array of sizes 55 and 2	int arr [ 55 ] [ 2 ] ;
	int arr [ 55 ] [ 2 ] ;	1
read n then k	cin >> n >> k ;
	cin >> n >> k ;	1
for i = 0 to n	for ( int i = 0 ; i < n ; i ++ )
	for ( i = 0 ; i < n ; i ++ )	NA
for j = 0 to 2 read arr [ i ] [ j ]	for ( int j = 0 ; j < 3 ; j ++ ) { cin >> arr [ i ] [ j ] ; }
	for ( j = 0 ; j < 2 ; j ++ ) { cin >> arr [ i ] [ j ] ; }	NA
}	}	}	DUMMY	DUMMY	DUMMY
for i = 0 to n	for ( int i = 0 ; i < n ; i ++ )
	for ( i = 0 ; i < n ; i ++ )	NA
for j = 0 to n	for ( int j = 0 ; j < n ; j ++ )
	for ( j = 0 ; j < n ; j ++ )	NA
if arr [ i ] [ 0 ] > arr [ j ] [ 0 ]	if ( arr [ i ] [ 0 ] > arr [ j ] [ 1 ] )
	if ( arr [ i ] [ 0 ] > arr [ j ] [ 0 ] )	NA
tmp = int with tmp = arr [ i ] [ 0 ]	int tmp = arr [ i ] [ 0 ] ;
	int tmp = arr [ i ] [ 0 ] ;	1
set arr [ i ] [ 0 ] to arr [ j ] [ 0 ]	arr [ i ] [ 0 ] = arr [ j ] [ 1 ] ;
	arr [ i ] [ 0 ] = arr [ j ] [ 0 ] ;	NA
set arr [ j ] [ 0 ] to tmp	arr [ j ] [ 0 ] = tmp ;
	arr [ j ] [ 0 ] = tmp ;	1
set tmp to arr [ i ] [ 1 ]	tmp = arr [ i ] [ 1 ] ;
	tmp = arr [ i ] [ 1 ] ;	1
set arr [ i ] [ 1 ] to arr [ j ] [ 1 ]	arr [ i ] [ 1 ] = arr [ j ] [ 2 ] ;
	arr [ i ] [ 1 ] = arr [ j ] [ 1 ] ;	NA
set arr [ j ] [ 1 ] to tmp	arr [ j ] [ 1 ] = tmp ;
	arr [ j ] [ 1 ] = tmp ;	1
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
for i = 0 to n	for ( int i = 0 ; i < n ; i ++ )
	for ( i = 0 ; i < n ; i ++ )	NA
for j = 0 to n	for ( int j = 0 ; j < n ; j ++ )
	for ( j = 0 ; j < n ; j ++ )	NA
if arr [ i ] [ 0 ] is arr [ j ] [ 0 ]	if ( arr [ i ] [ 0 ] == arr [ j ] [ 1 ] )
	if ( arr [ i ] [ 0 ] == arr [ j ] [ 0 ] )	NA
if arr [ i ] [ 1 ] < arr [ j ] [ 1 ]	if ( arr [ i ] [ 1 ] < arr [ j ] [ 2 ] )
	if ( arr [ i ] [ 1 ] < arr [ j ] [ 1 ] )	NA
tmp = int with tmp = arr [ i ] [ 1 ]	int tmp = arr [ i ] [ 1 ] ;
	int tmp = arr [ i ] [ 1 ] ;	1
set arr [ i ] [ 1 ] to arr [ j ] [ 1 ]	arr [ i ] [ 1 ] = arr [ j ] [ 2 ] ;
	arr [ i ] [ 1 ] = arr [ j ] [ 1 ] ;	NA
set arr [ j ] [ 1 ] to tmp	arr [ j ] [ 1 ] = tmp ;
	arr [ j ] [ 1 ] = tmp ;	1
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
p = int with p = 0 and frr = int array of size 55	int p = 0, frr [ 55 ] ;
	int frr [ 55 ] , p = 0 ;	NA
for i = 0 to n set frr [ i ] to 0	for ( int i = 0 ; i < n ; i ++ ) { frr [ i ] ='0'; }
	for ( i = 0 ; i < n ; i ++ ) { frr [ i ] = 0 ; }	NA
for i = 0 to n	for ( int i = 0 ; i < n ; i ++ )
	for ( i = 0 ; i < n ; i ++ )	NA
for j = 0 to n	for ( int j = 0 ; j < n ; j ++ )
	for ( j = 0 ; j < n ; j ++ )	NA
if arr [ i ] [ 0 ] is arr [ j ] [ 0 ] and arr [ i ] [ 1 ] is arr [ j ] [ 1 ] increment frr [ p ]	if ( arr [ i ] [ 0 ] == arr [ j ] [ 1 ] && arr [ k ] [ 2 ] < arr [ l ] [ 3 ] ) { frr [ p ] ++ ; }
	if ( arr [ i ] [ 0 ] == arr [ j ] [ 0 ] && arr [ i ] [ 1 ] == arr [ j ] [ 1 ] ) { frr [ p ] ++ ; }	NA
}	}	}	DUMMY	DUMMY	DUMMY
increment p	p ++ ;
	p ++ ;	1
}	}	}	DUMMY	DUMMY	DUMMY
print frr [ k - 1 ]	cout << frr [ k - 1 ] << endl ;
	cout << frr [ k - 1 ] << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
