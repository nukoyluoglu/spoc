s = string	string s ;
	string s ;	1
n = integer	int n ;
	int n ;	1
in function Run that returns nothing	void Run ( )
	inline void Run ( )	NA
while s can be read as a valid string	while ( cin >> s )
	while ( cin >> s )	1
ans , tmp = string	string ans, tmp ;
	string ans = " " , tmp = " " ;	NA
for i = 1 to 110 inclusive and increase i at the start of the loop , then ans = ans + z , tmp = tmp + z	for ( int i = 1 ; i <= 110 ; ++ i ) { ans += z, tmp += z ; }
	for ( int i = 1 ; i <= 110 ; ++ i ) ans += ' z ' , tmp += ' z ' ;	NA
read n	cin >> n ;
	cin >> n ;	1
t = string t	string t ;
	string t ;	1
for i = 1 to n inclusive	for ( int i = 1 ; i <= n ; i ++ )
	for ( int i = 1 ; i <= n ; ++ i )	NA
read t	cin >> t ;
	cin >> t ;	1
if size of t < size of s , continue	if ( ( t. size ( ) ) < ( int ) ( ( s ). length ( ) - 1 ) ) continue ;
	if ( t . size ( ) < s . size ( ) ) continue ;	NA
if contents of t from the beginning of t to size of s elements away is s , then ans = lower value between ans and t	if ( t. begin ( )!= t. size ( ) && t. end ( ) == s ) { ans = min ( ans, t ) ; }
	if ( t . substr ( 0 , s . size ( ) ) == s ) ans = min ( ans , t ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
if ans is tmp , then ans = s	if ( ans == tmp ) ans = s ;
	if ( ans == tmp ) ans = s ;	1
print ans	cout << ans << endl ;
	cout << ans << endl ;	1
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
call Run	Run ( ) ;
	Run ( ) ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
