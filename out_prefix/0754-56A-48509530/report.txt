int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
mp = map of string and int	map < string, int > mp ;
	map < string , int > mp ;	NA
set mp [ " ABSINTH " ] and mp [ " BEER " ] and mp [ " BRANDY " ] and mp [ " CHAMPAGNE " ] to 1	mp [ " ABSINTH " ] += mp [ " BEER " ], mp ['BRANDY " ] = mp [ 1 CHAMPAGNE " ] == 1 ;
	mp [ " ABSINTH " ] = mp [ " BEER " ] = mp [ " BRANDY " ] = mp [ " CHAMPAGNE " ] = 1 ;	NA
set mp [ " GIN " ] and mp [ " RUM " ] and mp [ " SAKE " ] and mp [ " TEQUILA " ] and mp [ " VODKA " ] to 1	mp [ " GIN " ] = 1, mp [ " RUM " ]= 1, m [ " SAKE " ] == 1, p [ " TEQUILA " ] += mp ['VODKA " ] %= 1 ;
	mp [ " GIN " ] = mp [ " RUM " ] = mp [ " SAKE " ] = mp [ " TEQUILA " ] = mp [ " VODKA " ] = 1 ;	NA
set mp [ " WHISKEY " ] and mp [ " WINE " ] to 1	mp [ " WHISKEY " ] = mp [ " WINE " ] == 1 ;
	mp [ " WHISKEY " ] = mp [ " WINE " ] = 1 ;	NA
n = int	int n ;
	int n ;	1
read n	cin >> n ;
	cin >> n ;	1
cnt = int with cnt = 0	int cnt = 0 ;
	int cnt = 0 ;	1
loop n times	while ( n -- )
	while ( n -- )	1
s = string	string s ;
	string s ;	1
read s	cin >> s ;
	cin >> s ;	1
if mp [ s ] is not 0	if ( mp [ s ]!= 0 )
	if ( mp [ s ] )	NA
increment cnt	cnt ++ ;
	cnt ++ ;	1
else if s [ 0 ] is numeric char	else if ( isdigit ( s [ 0 ] ) )
	else if ( s [ 0 ] >= ' 0 ' && s [ 0 ] <= ' 9 ' )	NA
geek = stringstream initialized with s	stringstream geek ( s ) ;
	stringstream geek ( s ) ;	1
x = int with x = 0	int x = 0 ;
	int x = 0 ;	1
read into x from geek	geek >> x ;
	geek >> x ;	1
if x is less than 18 then increment cnt	if ( x < 18 ) cnt ++ ;
	if ( x < 18 ) cnt ++ ;	1
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
print cnt	cout << cnt << endl ;
	cout << cnt << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
