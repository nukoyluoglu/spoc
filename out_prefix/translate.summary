index	text	gold_score	pred_score	gold	pred
1	DUMMY	0.0	0.0	int main() {	DUMMY
2	create integer n	N/A	N/A	int n ;	int n ;
3	read n	N/A	N/A	cin >> n ;	cin >> n ;
4	create integers cur , cnt with cur = 1 , cnt = 0	N/A	N/A	int cur = 1 , cnt = 0 ;	int cur = 1, cnt = 0 ;
5	create integer vector ans	N/A	N/A	vector < int > ans ;	vector < int > ans ;
6	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
7	create integer x	N/A	N/A	int x ;	int x ;
8	read x	N/A	N/A	cin >> x ;	cin >> x ;
9	if x is cur	N/A	N/A	if ( x == cur )	if ( x == cur )
10	increment cnt	N/A	N/A	cnt ++ ;	cnt ++ ;
11	increment cur	N/A	N/A	cur ++ ;	cur ++ ;
12	else	N/A	N/A	else	else
13	add element cnt to end of ans	N/A	N/A	ans . push_back ( cnt ) ;	ans. push_back ( cnt ) ;
14	set cnt to 1	N/A	N/A	cnt = 1 ;	cnt = 1 ;
15	set cur to 2	N/A	N/A	cur = 2 ;	cur = 2 ;
16	DUMMY	0.0	0.0	}	DUMMY
17	if i is n - 1 , add element cnt to end of ans	N/A	N/A	if ( i == n - 1 ) { ans . push_back ( cnt ) ; }	if ( i == n - 1 ) ans. push_back ( cnt ) ;
18	DUMMY	0.0	0.0	}	DUMMY
19	print integer casted size of ans print newline	N/A	N/A	cout << ( int ) ans . size ( ) << endl ;	cout << ( int ) ans. size ( ) << endl ;
20	for i = 0 to integer casted size of ans exclusive	N/A	N/A	for ( int i = 0 ; i < ( int ) ans . size ( ) ; i ++ )	for ( int i = 0 ; i < ( int ) ans. size ( ) ; i ++ )
21	if i is greater than 0 , print " "	N/A	N/A	if ( i > 0 ) cout << " " ;	if ( i > 0 ) cout << " " ;
22	print ans [ i ]	N/A	N/A	cout << ans [ i ] ;	cout << ans [ i ] ;
23	DUMMY	0.0	0.0	}	DUMMY
24	print newline	N/A	N/A	cout << endl ;	cout << endl ;
25	DUMMY	0.0	0.0	return 0;	DUMMY
26	DUMMY	0.0	0.0	}	DUMMY
27	DUMMY	0.0	0.0	int main() {	DUMMY
28	let n be an integer	N/A	N/A	int n ;	int n ;
29	while reading n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
30	let a be an integer array of length n	N/A	N/A	int a [ n ] ;	int a [ n ] ;
31	let b be an integer array of length n	N/A	N/A	int b [ n ] ;	int b [ n ] ;
32	let max be an int	N/A	N/A	int max ;	int max ;
33	let count = 0 be an int	N/A	N/A	int count = 0 ;	int count = 0 ;
34	read a n times	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }
35	set max = a at 0	N/A	N/A	max = a [ 0 ] ;	max = a [ 0 ] ;
36	for q = 1 to n exclusive	N/A	N/A	for ( int q = 1 ; q < n ; q ++ )	for ( int q = 1 ; q < n ; q ++ )
37	if a at q is 1 then increment count , set b [ count ] to a [ q - 1 ]	N/A	N/A	if ( a [ q ] == 1 ) { b [ ++ count ] = a [ q - 1 ] ; }	if ( a [ q ] == 1 ) count ++, b [ count ++ ] = a [ Q - 1 ] ;
38	DUMMY	0.0	0.0	}	DUMMY
39	print count + 1	N/A	N/A	cout << count + 1 << endl ;	cout << count + 1 << endl ;
40	for j = 1 to count inclusive print b	N/A	N/A	for ( int j = 1 ; j <= count ; j ++ ) cout << b [ j ] << " " ;	for ( int j = 1 ; j <= count ; j ++ ) { cout << b ; }
41	print a [ n - 1 ]	N/A	N/A	cout << a [ n - 1 ] << endl ;	cout << a [ n - 1 ] << endl ;
42	DUMMY	0.0	0.0	}	DUMMY
43	DUMMY	0.0	0.0	return 0;	DUMMY
44	DUMMY	0.0	0.0	}	DUMMY
45	DUMMY	0.0	0.0	int main() {	DUMMY
46	create int n	N/A	N/A	int n ;	int n ;
47	read n	N/A	N/A	cin >> n ;	cin >> n ;
48	declare int array arr with n elements and int variable ct = 0	N/A	N/A	int arr [ n ] , ct = 0 ;	int arr [ n ], ct = 0 ;
49	change i from 0 to n exclusive in a loop	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
50	read input to arr [ i ]	N/A	N/A	cin >> arr [ i ] ;	cin >> arr [ i ] ;
51	if arr [ i ] is equal to 1 , increment ct	N/A	N/A	if ( arr [ i ] == 1 ) ct ++ ;	if ( arr [ i ] == 1 ) ct ++ ;
52	DUMMY	0.0	0.0	}	DUMMY
53	print ct	N/A	N/A	cout << ct << endl ;	cout << ct << endl ;
54	for i from 1 to n exclusive	N/A	N/A	for ( int i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
55	if arr [ i ] is equal to 1 , print arr [ i - 1 ] and " "	N/A	N/A	if ( arr [ i ] == 1 ) cout << arr [ i - 1 ] << " " ;	if ( arr [ i ] == 1 ) { cout << arr [ 1 - 1 ] << " " ; }
56	DUMMY	0.0	0.0	}	DUMMY
57	print arr [ n - 1 ]	N/A	N/A	cout << arr [ n - 1 ] << endl ;	cout << arr [ n - 1 ] << endl ;
58	DUMMY	0.0	0.0	return 0;	DUMMY
59	DUMMY	0.0	0.0	}	DUMMY
60	DUMMY	0.0	0.0	int main() {	DUMMY
61	n = int	N/A	N/A	int n ;	int n ;
62	read n	N/A	N/A	cin >> n ;	cin >> n ;
63	i , j , k = int with k = 0 and a = int array of size n + 1	N/A	N/A	int a [ n + 1 ] , i , j , k = 0 ;	int a [ n + 1 ], i, j, k = 0 ;
64	for i = 0 to n	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
65	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
66	if a [ i ] is 1 then increment k	N/A	N/A	if ( a [ i ] == 1 ) k ++ ;	if ( a [ i ] == 1 ) k ++ ;
67	DUMMY	0.0	0.0	}	DUMMY
68	print k	N/A	N/A	cout << k << endl ;	cout << k << endl ;
69	for i = 1 to n	N/A	N/A	for ( i = 1 ; i < n ; i ++ )	for ( i = 1 ; i <= n ; i ++ )
70	if a [ i ] is 1 print a [ i - 1 ] and " "	N/A	N/A	if ( a [ i ] == 1 ) cout << a [ i - 1 ] << " " ;	if ( a [ i ] == 1 ) { cout << a [ j - 1 ] << " " ; }
71	DUMMY	0.0	0.0	}	DUMMY
72	print a [ n - 1 ]	N/A	N/A	cout << a [ n - 1 ] << endl ;	cout << a [ n - 1 ] << endl ;
73	DUMMY	0.0	0.0	}	DUMMY
74	DUMMY	0.0	0.0	int main() {	DUMMY
75	declare int variable n	N/A	N/A	int n ;	int n ;
76	read n	N/A	N/A	cin >> n ;	cin >> n ;
77	declare an array of integers a with size 1005	N/A	N/A	int a [ 1005 ] ;	int a [ 1005 ] ;
78	declare an array of integers ans with size 1005	N/A	N/A	int ans [ 1005 ] ;	int ans [ 1005 ] ;
79	for i from 1 to n inclusive , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
80	create integer j = 0	N/A	N/A	int j = 0 ;	int j = 0 ;
81	loop i from 1 to n exclusive	N/A	N/A	for ( int i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
82	if a [ i + 1 ] < = a [ i ] , set ans [ j ] to a [ i ] and increment j	N/A	N/A	if ( a [ i + 1 ] <= a [ i ] ) { ans [ j ++ ] = a [ i ] ; }	if ( a [ i + 1 ] <= a [ 1 ] ) ans [ j ++ ] = a [ j ] ;
83	DUMMY	0.0	0.0	}	DUMMY
84	set ans [ j ] to a [ n ] and increment j	N/A	N/A	ans [ j ++ ] = a [ n ] ;	ans [ j ++ ] = a [ n ] ;
85	print j	N/A	N/A	cout << j << endl ;	cout << j << endl ;
86	for i = 0 to j - 1 exclusive , print ans [ i ] and " "	N/A	N/A	for ( int i = 0 ; i < j - 1 ; i ++ ) cout << ans [ i ] << " " ;	for ( int i = 0 ; i < j - 1 ; i ++ ) { cout << ans [ i ] << " " ; }
87	print ans [ j - 1 ]	N/A	N/A	cout << ans [ j - 1 ] << endl ;	cout << ans [ j - 1 ] << endl ;
88	DUMMY	0.0	0.0	return 0;	DUMMY
89	DUMMY	0.0	0.0	}	DUMMY
90	maxn = const integer with maxn = 1e3 + 5	N/A	N/A	const int maxn = 1e3 + 5 ;	const int maxn = 1e3 + 5 ;
91	arr = integer array of size maxn	N/A	N/A	int arr [ maxn ] ;	int arr [ maxn ] ;
92	stc = integer array of size maxn	N/A	N/A	int stc [ maxn ] ;	int stc [ maxn ] ;
93	DUMMY	0.0	0.0	int main() {	DUMMY
94	n , top = integers	N/A	N/A	int n , top ;	int n, top ;
95	while read n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
96	top = 0	N/A	N/A	top = 0 ;	top = 0 ;
97	for i = 0 to n exclusive , readarr [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; ++ i ) { cin >> arr [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;
98	i = integer	N/A	N/A	int i ;	int i ;
99	for i = 0 to n - 1 exclusive	N/A	N/A	for ( i = 0 ; i < n - 1 ; ++ i )	for ( i = 0 ; i < n - 1 ; i ++ )
100	if arr [ i + 1 ] is 1 , stc [ increment top ] = arr [ i ]	N/A	N/A	if ( arr [ i + 1 ] == 1 ) { stc [ top ++ ] = arr [ i ] ; }	if ( arr [ i + 1 ] == 1 ) stc [ top ++ ] = arr [ 1 ] ;
101	DUMMY	0.0	0.0	}	DUMMY
102	stc [ increment top ] = arr [ i ]	N/A	N/A	stc [ top ++ ] = arr [ i ] ;	stc [ top ++ ] = arr [ i ] ;
103	print top , stc [ 0 ]	N/A	N/A	cout << top << endl << stc [ 0 ] ;	cout << top << stc [ 0 ] << endl ;
104	for i = 1 to top exclusive , print stc [ i ]	N/A	N/A	for ( int i = 1 ; i < top ; ++ i ) { cout << " " << stc [ i ] ; }	for ( i = 1 ; i < top ; i ++ ) { cout << stc [ i ] << endl ; }
105	print next line	N/A	N/A	cout << endl ;	cout << endl ;
106	DUMMY	0.0	0.0	}	DUMMY
107	DUMMY	0.0	0.0	return 0;	DUMMY
108	DUMMY	0.0	0.0	}	DUMMY
109	DUMMY	0.0	0.0	int main() {	DUMMY
110	n = integer	N/A	N/A	int n ;	int n ;
111	read n	N/A	N/A	cin >> n ;	cin >> n ;
112	nxt = integer = 1	N/A	N/A	int nxt = 1 ;	int nxt = 1 ;
113	ans = integer vector	N/A	N/A	vector < int > ans ;	vector < int > ans ;
114	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
115	x = integer	N/A	N/A	int x ;	int x ;
116	read x	N/A	N/A	cin >> x ;	cin >> x ;
117	if x is not nxt , then push back the values of ans and insert a new element of nxt - 1 at the end of ans	N/A	N/A	if ( x != nxt ) { ans . push_back ( nxt - 1 ) ; }	if ( x!= nxt ) ans. push_back ( nxt - 1 ) ;
118	nxt = x + 1	N/A	N/A	nxt = x + 1 ;	nxt = x + 1 ;
119	DUMMY	0.0	0.0	}	DUMMY
120	push back the values of ans and insert a new element of nxt - 1 at the end of ans	N/A	N/A	ans . push_back ( nxt - 1 ) ;	ans. push_back ( nxt - 1 ) ;
121	print size of ans in integer form	N/A	N/A	cout << ( int ) ans . size ( ) << endl ;	cout << ( int ) ans. size ( ) << endl ;
122	for i = 0 to size of ans in integer form	N/A	N/A	for ( int i = 0 ; i < ( int ) ans . size ( ) ; i ++ )	for ( int i = 0 ; i < ( int ) ans. size ( ) ; i ++ )
123	if i > 0 , then print a space	N/A	N/A	if ( i > 0 ) cout << " " ;	if ( i > 0 ) cout << " " ;
124	print ans [ i ]	N/A	N/A	cout << ans [ i ] ;	cout << ans [ i ] << endl ;
125	DUMMY	0.0	0.0	}	DUMMY
126	print endline	N/A	N/A	cout << endl ;	cout << endl ;
127	DUMMY	0.0	0.0	return 0;	DUMMY
128	DUMMY	0.0	0.0	}	DUMMY
129	DUMMY	0.0	0.0	int main() {	DUMMY
130	a = int array of length 1001 , n = int , s = int = 0	N/A	N/A	int a [ 1001 ] , n , sum = 0 ;	int a [ 1001 ], n, s = 0 ;
131	read n	N/A	N/A	cin >> n ;	cin >> n ;
132	read n values into array a	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
133	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
134	if a at i is 1 increment sum	N/A	N/A	if ( a [ i ] == 1 ) sum ++ ;	if ( a [ i ] == 1 ) sum ++ ;
135	print sum	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
136	for i = 1 to n exclusive	N/A	N/A	for ( int i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
137	if a at i + 1 is 1 print a at i	N/A	N/A	if ( a [ i + 1 ] == 1 ) cout << a [ i ] << " " ;	if ( ( a [ i + 1 ] == 1 ) ) cout << a [ j ] << endl ;
138	print a at n	N/A	N/A	cout << a [ n ] << endl ;	cout << a [ n ] << endl ;
139	DUMMY	0.0	0.0	return 0;	DUMMY
140	DUMMY	0.0	0.0	}	DUMMY
141	DUMMY	0.0	0.0	int main() {	DUMMY
142	create integers n , c with c = 0 , create integer array arr with size 1001	N/A	N/A	int n , arr [ 1001 ] , c = 0 ;	int n, arr [ 1001 ], c = 0 ;
143	read n	N/A	N/A	cin >> n ;	cin >> n ;
144	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
145	read arr [ i ]	N/A	N/A	cin >> arr [ i ] ;	cin >> arr [ i ] ;
146	if arr [ i ] is 1 increment c	N/A	N/A	if ( arr [ i ] == 1 ) c ++ ;	if ( arr [ i ] == 1 ) c ++ ;
147	DUMMY	0.0	0.0	}	DUMMY
148	print c print newline	N/A	N/A	cout << c << endl ;	cout << c << endl ;
149	for i = 1 to n exclusive	N/A	N/A	for ( int i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
150	if arr [ i ] is 1 , print arr [ i - 1 ] print " "	N/A	N/A	if ( arr [ i ] == 1 ) { cout << arr [ i - 1 ] << " " ; }	if ( arr [ i ] == 1 ) { cout << arr [ 1 - 1 ] << " " ; }
151	DUMMY	0.0	0.0	}	DUMMY
152	print arr [ n - 1 ] print newline	N/A	N/A	cout << arr [ n - 1 ] << endl ;	cout << arr [ n - 1 ] << endl ;
153	DUMMY	0.0	0.0	return 0;	DUMMY
154	DUMMY	0.0	0.0	}	DUMMY
155	DUMMY	0.0	0.0	int main() {	DUMMY
156	n = integer	N/A	N/A	int n ;	int n ;
157	val = integer	N/A	N/A	int val ;	int val ;
158	Read n	N/A	N/A	cin >> n ;	cin >> n ;
159	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
160	if i is greater than 0 , print " "	N/A	N/A	if ( i > 0 ) { cout << " " ; }	if ( i > 0 ) { cout << " " ; }
161	Read val	N/A	N/A	cin >> val ;	cin >> val ;
162	print val - ( val + 1 ) % 2 and a new line	N/A	N/A	cout << ( val - ( ( val + 1 ) % 2 ) ) ;	cout << val - ( val + 1 ) % 2 << endl ;
163	DUMMY	0.0	0.0	}	DUMMY
164	print a new line	N/A	N/A	cout << endl ;	<< " \n " ;
165	DUMMY	0.0	0.0	return 0;	DUMMY
166	DUMMY	0.0	0.0	}	DUMMY
167	n = integer	N/A	N/A	int n ;	int n ;
168	DUMMY	0.0	0.0	int main() {	DUMMY
169	Read n	N/A	N/A	cin >> n ;	cin >> n ;
170	a = array of n + 10 integers	N/A	N/A	int a [ n + 10 ] ;	int a [ n + 10 ] ;
171	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
172	Read n values into array a	N/A	N/A	cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }
173	if a [ i ] modulo 2 is 0 , then set a [ i ] to a [ i ] - 1	N/A	N/A	if ( a [ i ] % 2 == 0 ) { a [ i ] -= 1 ; }	if ( a [ i ] % 2 == 0 ) { a [ j ] -= 1 ; }
174	DUMMY	0.0	0.0	}	DUMMY
175	print a [ j ] and a new line	N/A	N/A	for ( int j = 0 ; j < n - 1 ; j ++ ) { cout << a [ j ] << " " ; }	cout << a [ j ] << endl ;
176	print a [ n - 1 ] and a new line	N/A	N/A	cout << a [ n - 1 ] << endl ;	cout << a [ n - 1 ] << endl ;
177	DUMMY	0.0	0.0	return 0;	DUMMY
178	DUMMY	0.0	0.0	}	DUMMY
179	DUMMY	0.0	0.0	int main() {	DUMMY
180	create integer n	N/A	N/A	int n ;	int n ;
181	while read n is true	N/A	N/A	while ( cin >> n )	while ( cin >> n )
182	create integer flag with flag = 1	N/A	N/A	int flag = 1 ;	int flag = 1 ;
183	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
184	create integer num	N/A	N/A	int num ;	int num ;
185	read num	N/A	N/A	cin >> num ;	cin >> num ;
186	if num is 0	N/A	N/A	if ( num == 0 )	if ( num == 0 )
187	if flag is true	N/A	N/A	if ( flag )	if ( flag )
188	print num , set flag to 0	N/A	N/A	cout << num , flag = 0 ;	cout << num, flag = 0 ;
189	else	N/A	N/A	else	else
190	print " " print num	N/A	N/A	cout << " " << num ;	cout << " " << num ;
191	else if num % 2 is 0	N/A	N/A	else if ( num % 2 == 0 )	else if ( num % 2 == 0 )
192	if flag is true	N/A	N/A	if ( flag )	if ( flag )
193	print num - 1 , set flag to 0	N/A	N/A	cout << num - 1 , flag = 0 ;	cout << num - 1, flag = 0 ;
194	else	N/A	N/A	else	else
195	print " " print num - 1	N/A	N/A	cout << " " << num - 1 ;	cout << " " << num - 1 ;
196	else	N/A	N/A	else	else
197	if flag is true	N/A	N/A	if ( flag )	if ( flag )
198	print num , flag with flag = 0	N/A	N/A	cout << num , flag = 0 ;	cout << num << " " << flag << endl ;
199	else	N/A	N/A	else	else
200	print " " print num	N/A	N/A	cout << " " << num ;	cout << " " << num ;
201	DUMMY	0.0	0.0	}	DUMMY
202	DUMMY	0.0	0.0	}	DUMMY
203	print newline	N/A	N/A	cout << endl ;	cout << endl ;
204	DUMMY	0.0	0.0	}	DUMMY
205	DUMMY	0.0	0.0	}	DUMMY
206	array of 1000 = a	N/A	N/A	int a [ 10000 ] ;	int a [ 1000 ] = { 0 } ;
207	DUMMY	0.0	0.0	int main() {	DUMMY
208	integers = n	N/A	N/A	int n ;	int n ;
209	read n	N/A	N/A	cin >> n ;	cin >> n ;
210	read in a until i = n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
211	for i = 0 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 0 ; i <= n ; i ++ )
212	if a [ i ] modulo 2 is 0 then do the following a [ i ] - = 1	N/A	N/A	if ( a [ i ] % 2 == 0 ) a [ i ] -= 1 ;	if ( a [ i ] % 2 == 0 ) { a [ j ] -= 1 ; }
213	if i = n then do the following	N/A	N/A	if ( i == n )	if ( i == n )
214	output a [ i ]	N/A	N/A	cout << a [ i ] << endl ;	cout << a [ i ] << endl ;
215	else	N/A	N/A	else	else
216	output a [ i ] ,	N/A	N/A	cout << a [ i ] << " " ;	cout << a [ i ] << endl ;
217	DUMMY	0.0	0.0	}	DUMMY
218	DUMMY	0.0	0.0	return 0;	DUMMY
219	DUMMY	0.0	0.0	}	DUMMY
220	create integer n	N/A	N/A	int n ;	int n ;
221	DUMMY	0.0	0.0	int main() {	DUMMY
222	read n	N/A	N/A	cin >> n ;	cin >> n ;
223	create integer array a with size n + 10	N/A	N/A	int a [ n + 10 ] ;	int a [ n + 10 ] ;
224	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
225	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
226	if a [ i ] % 2 is 0 , decrement a [ i ] by 1	N/A	N/A	if ( a [ i ] % 2 == 0 ) { a [ i ] -= 1 ; }	if ( a [ i ] % 2 == 0 ) a [ j ] -= 1 ;
227	DUMMY	0.0	0.0	}	DUMMY
228	for j = 0 to n - 1 exclusive , print a [ j ] print " "	N/A	N/A	for ( int j = 0 ; j < n - 1 ; ++ j ) { cout << a [ j ] << " " ; }	for ( int j = 0 ; j < n - 1 ; j ++ ) cout << a [ j ] << " " ;
229	print a [ n - 1 ] print newline	N/A	N/A	cout << a [ n - 1 ] << endl ;	cout << a [ n - 1 ] << endl ;
230	DUMMY	0.0	0.0	return 0;	DUMMY
231	DUMMY	0.0	0.0	}	DUMMY
232	declare const int N = 1e5 + 50	N/A	N/A	const int N = 1e5 + 50 ;	const int N = 1e5 + 50 ;
233	declare ints T , n , m , L and R	N/A	N/A	int T , n , m , L , R ;	int T, n, m, L, R ;
234	declare long long array a with size 2 * N	N/A	N/A	long long a [ 2 * N ] ;	long long a [ 2 * N ] ;
235	DUMMY	0.0	0.0	int main() {	DUMMY
236	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
237	for i from 0 to n * 2 exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n * 2 ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < n * 2 ; i ++ ) cin >> a [ i ] ;
238	if n < = 1	N/A	N/A	if ( n <= 1 )	if ( n <= 1 )
239	print " 0 "	N/A	N/A	cout << " 0 " << endl ;	cout << " 0 " ;
240	DUMMY	0.0	0.0	return 0;	DUMMY
241	DUMMY	0.0	0.0	}	DUMMY
242	sort a from the start to the position 2 * n	N/A	N/A	sort ( a , a + 2 * n ) ;	sort ( a, a + 2 * n ) ;
243	declare long long ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] )	N/A	N/A	long long ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) ;	long long ans = ( long long ) ( a [ n - 1 ] - a [ 0 ] ) * ( ( ( long double ) a [ 2 * n - i ] ) - ( double ) b [ n ] ) ;
244	declare long long C = a [ 2 * n - 1 ] - a [ 0 ]	N/A	N/A	long long C = a [ 2 * n - 1 ] - a [ 0 ] ;	long long C = a [ 2 * n - 1 ] - a [ 0 ] ;
245	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
246	declare long long variable temp = C * ( a [ i + n - 1 ] - a [ i ] )	N/A	N/A	long long temp = C * ( a [ i + n - 1 ] - a [ i ] ) ;	long long temp = C * ( a [ i + n - 1 ] - a [ 1 ] ) ;
247	set ans to min of ans and temp	N/A	N/A	ans = min ( ans , temp ) ;	ans = min ( ans, temp ) ;
248	DUMMY	0.0	0.0	}	DUMMY
249	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
250	DUMMY	0.0	0.0	return 0;	DUMMY
251	DUMMY	0.0	0.0	}	DUMMY
252	DUMMY	0.0	0.0	int main() {	DUMMY
253	n = long long	N/A	N/A	long long n ;	long long n ;
254	while the loop reads n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
255	a = long long array of size 2 * n + 10	N/A	N/A	long long a [ 2 * n + 10 ] ;	long long a [ 2 * n + 10 ] ;
256	for i = 0 to 2 * n exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < 2 * n ; i ++ ) cin >> a [ i ] ;	for ( long long i = 0 ; i < 2 * n ; i ++ ) { cin >> a [ i ] ; }
257	sort a in ascending order	N/A	N/A	sort ( a , a + 2 * n ) ;	sort ( a, a + n ) ;
258	ans = long long = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] )	N/A	N/A	long long ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) ;	long long ans = ( long long ) ( a [ n - 1 ] - a [ 0 ] ) * ( ( long double ) a [ 2 * n - i ] - ( double ) b [ n ] ) ;
259	for i = 1 to n exclusive , ans = the minimum value between ans and ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( a [ i + n - 1 ] - a [ i ] )	N/A	N/A	for ( int i = 1 ; i < n ; i ++ ) ans = min ( ans , ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( a [ i + n - 1 ] - a [ i ] ) ) ;	for ( long long i = 1 ; i < n ; i ++ ) { ans = min ( ans, ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( b [ i + n - i ] - b [ 1 ] ) ) ; }
260	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
261	DUMMY	0.0	0.0	}	DUMMY
262	DUMMY	0.0	0.0	return 0;	DUMMY
263	DUMMY	0.0	0.0	}	DUMMY
264	create constant integer sz with sz = 200010	N/A	N/A	const int sz = 200010 ;	const int sz = 200010 ;
265	create long long integer array a with size sz	N/A	N/A	long long int a [ sz ] ;	long long int a [ sz ] ;
266	DUMMY	0.0	0.0	int main() {	DUMMY
267	create integer n	N/A	N/A	int n ;	int n ;
268	read n	N/A	N/A	cin >> n ;	cin >> n ;
269	for i = 0 to 2 * n exclusive , read [ i ]	N/A	N/A	for ( int i = 0 ; i < 2 * n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < 2 * n ; i ++ ) cin >> a [ i ] ;
270	sort elements from a to a + 2 * n	N/A	N/A	sort ( a , a + 2 * n ) ;	sort ( a, a + 2 * n ) ;
271	create long long integer ans with ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] )	N/A	N/A	long long int ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) ;	long long int ans = ( long long int ) ( a [ n - 1 ] - a [ 0 ] ) * ( ( ( double ) a [ 2 * n - i ] ) - ( double int ) b [ n ] ) ) ;
272	for i = n to 2 * 2 exclusive , set ans to minimum of ( ans and ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( a [ i ] - a [ i - n + 1 ] ) )	N/A	N/A	for ( int i = n ; i < 2 * n ; i ++ ) { ans = min ( ans , ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( a [ i ] - a [ i - n + 1 ] ) ) ; }	for ( int i = n ; i < 2 * 2 ; i ++ ) { ans = min ( ans, ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( ( long long int ) a [ i ] - ( long double int ) b [ i - n + 1 ] ) ) ; }
273	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
274	DUMMY	0.0	0.0	return 0;	DUMMY
275	DUMMY	0.0	0.0	}	DUMMY
276	set N to 2e6 + 5	N/A	N/A	const int N = 2e6 + 5 ;	const int N = 2e6 + 5 ;
277	create long long a [ N ]	N/A	N/A	long long a [ N ] ;	long long a [ N ] ;
278	DUMMY	0.0	0.0	int main() {	DUMMY
279	create int n	N/A	N/A	int n ;	int n ;
280	read n	N/A	N/A	cin >> n ;	cin >> n ;
281	for i = 0 to 2 * n , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < 2 * n ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i <= 2 * n ; i ++ ) cin >> a [ i ] ;
282	sort elements between a and a + 2 * n	N/A	N/A	sort ( a , a + 2 * n ) ;	sort ( a, a + 2 * n ) ;
283	set ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] )	N/A	N/A	long long ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) ;	long long ans = ( a [ n - 1 ] - a [ 0 ] ) * ( ( long long ) a [ 2 * n - i ] ) - ( long double ) ( n [ n ] ) ;
284	for i = 1 to n exclusive , set and to min ( ans , ( a [ i + n - 1 ] - a [ i ] ) * ( a [ 2 * n - 1 ] - a [ 0 ] ) )	N/A	N/A	for ( int i = 1 ; i < n ; i ++ ) ans = min ( ans , ( a [ i + n - 1 ] - a [ i ] ) * ( a [ 2 * n - 1 ] - a [ 0 ] ) ) ;	for ( int i = 1 ; i < n ; i ++ ) { ans = min ( ans, ( a [ i + n - 1 ] - a [ 1 ] ) * ( ( ( int ) a [ 2 * n - i ] ) - ( long long ) b [ 0 ] ) ) ; }
285	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
286	DUMMY	0.0	0.0	return 0;	DUMMY
287	DUMMY	0.0	0.0	}	DUMMY
288	N = const integer with N = 2e5 + 50	N/A	N/A	const int N = 2e5 + 50 ;	const int N = 2e5 + 50 ;
289	M = const integer with M = 1e6	N/A	N/A	const int M = 1e6 ;	const int M = 1e6 ;
290	oo = const long long with oo = 1e18	N/A	N/A	const long long oo = 1e18 ;	const long long oo = 1e18 ;
291	mod = const integer mod = 1e9 + 7	N/A	N/A	const int mod = 1e9 + 7 ;	const int mod = 1e9 + 7 ;
292	DUMMY	0.0	0.0	int main() {	DUMMY
293	n = integer	N/A	N/A	int n ;	int n ;
294	read n	N/A	N/A	cin >> n ;	cin >> n ;
295	a ( 2 * n ) = vector of long long	N/A	N/A	vector < long long > a ( 2 * n ) ;	vector < long long > a ( 2 * n ) ;
296	for i = 0 to n * 2 exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n * 2 ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < n * 2 ; i ++ ) cin >> a [ i ] ;
297	sort a . begin ( ) and a . end ( )	N/A	N/A	sort ( a . begin ( ) , a . end ( ) ) ;	sort ( a. begin ( ), a. end ( ) ) ;
298	ans = long long with ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a . back ( ) - a [ n ] )	N/A	N/A	long long ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a . back ( ) - a [ n ] ) ;	long long ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a. back ( ) - a. n ] ) ;
299	for i = 1 to n exclusive , ans = min ( ans , ( a [ i + n - 1 ] - a [ i ] ) * ( a . back ( ) - a [ 0 ] ) )	N/A	N/A	for ( int i = 1 ; i < n ; i ++ ) { ans = min ( ans , ( a [ i + n - 1 ] - a [ i ] ) * ( a . back ( ) - a [ 0 ] ) ) ; }	for ( long long i = 1 ; i < n ; i ++ ) { ans = min ( ans, ( a [ i + n - 1 ] - a [ 1 ] ) * ( a. back ( ) -a [ 0 ] ) ) ; }
300	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
301	DUMMY	0.0	0.0	}	DUMMY
302	declare const int INF = 0x3f3f3f3f	N/A	N/A	const int INF = 0x3f3f3f3f ;	const int INF = ( 0x3f3f )3f ;
303	create const int maxa = 1e5 + 10	N/A	N/A	const int maxa = 1e5 + 10 ;	const int maxa = 1e5 + 10 ;
304	declare int array a with size maxa < < 1	N/A	N/A	int a [ maxa << 1 ] ;	int a [ maxa << 1 ] ;
305	DUMMY	0.0	0.0	int main() {	DUMMY
306	declare integer variable n	N/A	N/A	int n ;	int n ;
307	read n and loop further	N/A	N/A	while ( cin >> n )	while ( cin >> n )
308	declare int variable i	N/A	N/A	int i ;	int i ;
309	for i = 0 to 2 * n exclusive , read a [ i ]	N/A	N/A	for ( i = 0 ; i < 2 * n ; i ++ ) cin >> a [ i ] ;	for ( i = 0 ; i < 2 * n ; i ++ ) cin >> a [ i ] ;
310	sort a	N/A	N/A	sort ( a , a + 2 * n ) ;	sort ( a, a + n ) ;
311	declare long long x = a [ n - 1 ] - a [ 0 ]	N/A	N/A	long long x = a [ n - 1 ] - a [ 0 ] ;	long long x = a [ n - 1 ] - a [ 0 ] ;
312	create long long y = a [ 2 * n - 1 ] - a [ n ]	N/A	N/A	long long y = a [ 2 * n - 1 ] - a [ n ] ;	long long y = a [ 2 * n - 1 ] - a [ n ] ;
313	declare long long minsq = x * y	N/A	N/A	long long minsq = x * y ;	long long minsq = x * y ;
314	set x to a [ 2 * n - 1 ] - a [ 0 ]	N/A	N/A	x = a [ 2 * n - 1 ] - a [ 0 ] ;	x = a [ 2 * n - 1 ] - a [ 0 ] ;
315	for i from 1 to n exclusive	N/A	N/A	for ( i = 1 ; i < n ; i ++ )	for ( long long i = 1 ; i < n ; i ++ )
316	set y to a [ i + n - 1 ] - a [ i ]	N/A	N/A	y = a [ i + n - 1 ] - a [ i ] ;	y = a [ i + n - 1 ] - a [ 1 ] ;
317	change minsq to min of minsq and x * y	N/A	N/A	minsq = min ( minsq , x * y ) ;	min minsq = min ( minsq, x * y ) ;
318	DUMMY	0.0	0.0	}	DUMMY
319	print minsq	N/A	N/A	cout << minsq << endl ;	cout << minsq << endl ;
320	DUMMY	0.0	0.0	}	DUMMY
321	DUMMY	0.0	0.0	return 0;	DUMMY
322	DUMMY	0.0	0.0	}	DUMMY
323	create integer N	N/A	N/A	int N ;	int N ;
324	create long long array A with size 200005	N/A	N/A	long long A [ 200005 ] ;	long long A [ 200005 ] ;
325	DUMMY	0.0	0.0	int main() {	DUMMY
326	read N	N/A	N/A	cin >> N ;	cin >> N ;
327	for i = 0 to 2 * N - 1 inclusive , read A [ i ]	N/A	N/A	for ( int i = 0 ; i <= 2 * N - 1 ; i ++ ) cin >> A [ i ] ;	for ( int i = 0 ; i <= 2 * N - 1 ; i ++ ) cin >> A [ i ] ;
328	sort elements from A to A + 2 * N	N/A	N/A	sort ( A , A + 2 * N ) ;	sort ( A, A + 2 * N ) ;
329	create long long Ans with Ans = ( A [ N - 1 ] - A [ 0 ] ) * ( A [ 2 * N - 1 ] - A [ N ] )	N/A	N/A	long long Ans = ( A [ N - 1 ] - A [ 0 ] ) * ( A [ 2 * N - 1 ] - A [ N ] ) ;	long long Ans = A [ N - 1 ] - A [ 0 ] ) * ( A [ 2 * N - 2 ] -A [ N ] ) ;
330	for i = 1 to N - 1 inclusive , set Ans to minimum of Ans and ( A [ 2 * N - 1 ] - A [ 0 ] ) * ( A [ i + N - 1 ] - A [ i ] )	N/A	N/A	for ( int i = 1 ; i <= N - 1 ; i ++ ) { Ans = min ( Ans , ( A [ 2 * N - 1 ] - A [ 0 ] ) * ( A [ i + N - 1 ] - A [ i ] ) ) ; }	for ( long long i = 1 ; i <= N - 1 ; ++ i ) Ans = min ( Ans, ( A [ 2 * N - i ] - A [ 0 ] ) * (A [ i + N + 1 ] - B [ i ] ) ) ;
331	print Ans print ' \ n '	N/A	N/A	cout << Ans << ' \n ' ;	cout << Ans <<'\n';
332	DUMMY	0.0	0.0	return 0;	DUMMY
333	DUMMY	0.0	0.0	}	DUMMY
334	niz = array of integers of length 200005	N/A	N/A	int niz [ 200005 ] ;	int niz [ 200005 ] ;
335	DUMMY	0.0	0.0	int main() {	DUMMY
336	let n be a integer	N/A	N/A	int n ;	int n ;
337	read n	N/A	N/A	cin >> n ;	cin >> n ;
338	for i = 1 to 2 * n inclusive , read niz [ i ]	N/A	N/A	for ( int i = 1 ; i <= 2 * n ; i ++ ) { cin >> niz [ i ] ; }	for ( int i = 1 ; i <= 2 * n ; i ++ ) cin >> niz [ i ] ;
339	sort the values niz + 1 and niz + 2 * n + 1	N/A	N/A	sort ( niz + 1 , niz + 2 * n + 1 ) ;	sort ( ( niz + 1 ), _n ) + 2 * n + 1 ;
340	let dx be a integer with dx = niz [ n ] - niz [ 1 ]	N/A	N/A	int dx = niz [ n ] - niz [ 1 ] ;	int dx [ n ] - niz [ 1 ] ;
341	let dy be a integer with dy = niz [ 2 * n ] - niz [ n + 1 ]	N/A	N/A	int dy = niz [ 2 * n ] - niz [ n + 1 ] ;	int dy [ 2 * n ] - niz [ n + 1 ] ;
342	let p be a long integer with p = 0	N/A	N/A	long long int p = 0 ;	long long p = 0 ;
343	the value ( long long int ) dx * dy is initialized to p	N/A	N/A	p = ( long long int ) dx * dy ;	p = ( long long int ) dx * dy ;
344	set the long integer tren to 0	N/A	N/A	long long int tren = 0 ;	long long int tren = 0 ;
345	for i = n + 1 to 2 * n - 1 inclusive	N/A	N/A	for ( int i = n + 1 ; i <= 2 * n - 1 ; i ++ )	for ( int i = n + 1 ; i <= 2 * n - 1 ; ++ i )
346	the long integer value of ( niz [ i ] - niz [ i - n + 1 ] ) * ( niz [ 2 * n ] - niz [ 1 ] ) is assigned to tren	N/A	N/A	tren = ( long long int ) ( niz [ i ] - niz [ i - n + 1 ] ) * ( niz [ 2 * n ] - niz [ 1 ] ) ;	tren = ( long long int ) ( niz [ i ] - niz ( i - n + 1 ] ) * ( naz [ 2 * n ] - Niz [ 1 ]) ) ;
347	if tren is less than p , the value of p is equal to tren	N/A	N/A	if ( tren < p ) p = tren ;	if ( tren < p ) p = tren ;
348	DUMMY	0.0	0.0	}	DUMMY
349	print p and newline	N/A	N/A	cout << p << endl ;	cout << p << endl ;
350	DUMMY	0.0	0.0	return 0;	DUMMY
351	DUMMY	0.0	0.0	}	DUMMY
352	declare long long n and long long array a with size 1000001	N/A	N/A	long long n , a [ 1000001 ] ;	long long n, a [ 1000001 ] ;
353	DUMMY	0.0	0.0	int main() {	DUMMY
354	read n	N/A	N/A	cin >> n ;	cin >> n ;
355	multiply n by 2	N/A	N/A	n *= 2 ;	n *= 2 ;
356	loop i from 1 to n inclusive , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;	for ( long long i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
357	sort a from element 1 to n + 1	N/A	N/A	sort ( a + 1 , a + n + 1 ) ;	sort ( a + 1, a + n + 1 ) ;
358	create long long ans = ( a [ n / 2 ] - a [ 1 ] ) * ( a [ n ] - a [ n / 2 + 1 ] )	N/A	N/A	long long ans = ( a [ n / 2 ] - a [ 1 ] ) * ( a [ n ] - a [ n / 2 + 1 ] ) ;	long long ans = ( long long ) ( a [ n / 2 ] - a [ 1 ] ) * ( ( long double ) a [ ( n ] - ( long int ) ( ( n / 3 ] ) ) ) + 1 ] ;
359	loop i from 2 to n / 2 + 1 inclusive , assign min of ans and ( a [ i + n / 2 - 1 ] - a [ i ] ) * ( a [ n ] - a [ 1 ] ) to ans	N/A	N/A	for ( int i = 2 ; i <= n / 2 + 1 ; i ++ ) ans = min ( ans , ( a [ i + n / 2 - 1 ] - a [ i ] ) * ( a [ n ] - a [ 1 ] ) ) ;	for ( long long i = 2 ; i <= n / 2 + 1 ; i ++ ) { ans = min ( ans, ( a [ i + n /2 - 1 ] - a [ 1 ] ) * ( b [ n ] - b [ i ] ) ) ; }
360	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
361	DUMMY	0.0	0.0	return 0;	DUMMY
362	DUMMY	0.0	0.0	}	DUMMY
363	declare long long array a with size 202000	N/A	N/A	long long a [ 202000 ] ;	long long a [ 202000 ] ;
364	DUMMY	0.0	0.0	int main() {	DUMMY
365	declare integer n	N/A	N/A	int n ;	int n ;
366	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
367	for i = 1 to n < < 1 inclusive , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= ( n << 1 ) ; ++ i ) { cin >> a [ i ] ; }	for ( int i = 1 ; i <= n << 1 ; ++ i ) cin >> a [ i ] ;
368	sort a fron index 1 to 1 + n + n	N/A	N/A	sort ( a + 1 , a + 1 + n + n ) ;	sort ( a + 1, a + ( 1 + n + n ) ) ;
369	long long s = 1ll < < 62	N/A	N/A	long long s = 1ll << 62 ;	long long s = 1ll << 62 ;
370	set s to min of s and ( a [ n ] - a [ 1 ] ) * ( a [ n < < 1 ] - a [ n + 1 ] )	N/A	N/A	s = min ( s , ( a [ n ] - a [ 1 ] ) * ( a [ n << 1 ] - a [ n + 1 ] ) ) ;	s = min ( s, ( ( a [ n ] - a [ 1 ] ) * ( ( long long ) a [ ( n << 1 ] - ( ( n + 1 ]) ) ) ) - s ) ) ;
371	for i from 2 to n inclusive , change s to min of s and ( a [ n < < 1 ] - a [ 1 ] ) * ( a [ n + i - 1 ] - a [ i ] )	N/A	N/A	for ( int i = 2 ; i <= n ; i ++ ) { s = min ( s , ( a [ n << 1 ] - a [ 1 ] ) * ( a [ n + i - 1 ] - a [ i ] ) ) ; }	for ( long long i = 2 ; i <= n ; i ++ ) { s = min ( s, ( a [ n << 1 ] - a [ 1 ] ) * ( b [ n + i - 1 ] + a [ i ] ) ) ; }
372	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
373	DUMMY	0.0	0.0	return 0;	DUMMY
374	DUMMY	0.0	0.0	}	DUMMY
375	flag = int	N/A	N/A	int flag ;	int flag ;
376	n , m , len = int	N/A	N/A	int n , m , len ;	int n, m, len ;
377	a = long long array of size 200005	N/A	N/A	long long a [ 200005 ] ;	long long a [ 200005 ] ;
378	ans , temp = long long	N/A	N/A	long long ans , temp ;	long long ans, temp ;
379	DUMMY	0.0	0.0	int main() {	DUMMY
380	loop while reading n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
381	read 2 * n values into a	N/A	N/A	for ( int i = 0 ; i < 2 * n ; ++ i ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }
382	sort a	N/A	N/A	sort ( a , a + n + n ) ;	sort ( a, a + n ) ;
383	set ans to ( a [ 2 * n - 1 ] - a [ n ] ) * ( a [ n - 1 ] - a [ 0 ] )	N/A	N/A	ans = ( a [ 2 * n - 1 ] - a [ n ] ) * ( a [ n - 1 ] - a [ 0 ] ) ;	ans = ( ( a [ 2 * n - 1 ] - a [ n ] ) * ( b [ n - i ] - ( a1 [ 0 ] ) ) ;
384	set temp to a [ 2 * n - 1 ] - a [ 0 ]	N/A	N/A	temp = a [ 2 * n - 1 ] - a [ 0 ] ;	temp = a [ 2 * n - 1 ] - a [ 0 ] ;
385	for i = 1 to n set ans to min of ans and temp * ( a [ i + n - 1 ] - a [ i ] )	N/A	N/A	for ( int i = 1 ; i < n ; ++ i ) { ans = min ( ans , temp * ( a [ i + n - 1 ] - a [ i ] ) ) ; }	for ( int i = 1 ; i <= n ; i ++ ) { ans = min ( ans, temp * ( a [ i + n - 1 ] - a [ 1 ] ) ) ; }
386	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
387	DUMMY	0.0	0.0	}	DUMMY
388	DUMMY	0.0	0.0	return 0;	DUMMY
389	DUMMY	0.0	0.0	}	DUMMY
390	create integer flag	N/A	N/A	int flag ;	int flag ;
391	create integers n , m , len	N/A	N/A	int n , m , len ;	int n, m, len ;
392	create long long array a with size 200005	N/A	N/A	long long a [ 200005 ] ;	long long a [ 200005 ] ;
393	create long longs ans , temp	N/A	N/A	long long ans , temp ;	long long ans, temp ;
394	DUMMY	0.0	0.0	int main() {	DUMMY
395	while read n is true	N/A	N/A	while ( cin >> n )	while ( cin >> n )
396	for i = 0 to 2 * n exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < 2 * n ; ++ i ) cin >> a [ i ] ;	for ( int i = 0 ; i < 2 * n ; i ++ ) cin >> a [ i ] ;
397	sort elements from a to a + n + n	N/A	N/A	sort ( a , a + n + n ) ;	sort ( a, a + n + n ) ;
398	set ans to ( a [ 2 * n - 1 ] - a [ n ] ) * ( a [ n - 1 ] - a [ 0 ] )	N/A	N/A	ans = ( a [ 2 * n - 1 ] - a [ n ] ) * ( a [ n - 1 ] - a [ 0 ] ) ;	ans = ( a [ 2 * n - 1 ] - a [ n ] ) * ( a1 + n - i ] ) ;
399	set temp to a [ 2 * n - 1 ] - a [ 0 ]	N/A	N/A	temp = a [ 2 * n - 1 ] - a [ 0 ] ;	temp = a [ 2 * n - 1 ] - a [ 0 ] ;
400	for i = 1 to n exclusive , set ans to minimum of ans and temp * ( a [ i + n - 1 ] - a [ i ] )	N/A	N/A	for ( int i = 1 ; i < n ; ++ i ) { ans = min ( ans , temp * ( a [ i + n - 1 ] - a [ i ] ) ) ; }	for ( int i = 1 ; i < n ; i ++ ) { ans = min ( ans, temp * ( a [ i + n - 1 ] - a [ 1 ] ) ) ; }
401	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
402	DUMMY	0.0	0.0	}	DUMMY
403	DUMMY	0.0	0.0	return 0;	DUMMY
404	DUMMY	0.0	0.0	}	DUMMY
405	maxn = const integer with maxn = 2e5 + 10	N/A	N/A	const int maxn = 2e5 + 10 ;	const int maxn = 2e5 + 10 ;
406	a = array of size maxn long long	N/A	N/A	long long a [ maxn ] ;	long long a [ maxn ] ;
407	DUMMY	0.0	0.0	int main() {	DUMMY
408	n = integer	N/A	N/A	int n ;	int n ;
409	read n	N/A	N/A	cin >> n ;	cin >> n ;
410	ans = long long with ans = 0	N/A	N/A	long long ans = 0 ;	long long ans = 0 ;
411	for i = 0 to 2 * n exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < 2 * n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < 2 * n ; i ++ ) cin >> a [ i ] ;
412	sort a and a + 2 * n	N/A	N/A	sort ( a , a + 2 * n ) ;	sort ( a, a + 2 * n ) ;
413	ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] )	N/A	N/A	ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) ;	long long ans = ( a [ n - 1 ] - a [ 0 ] ) * ( ( long long ) a [ 2 * n - i ] - ( long double ) ( b [ n ] ) ) ;
414	for i = 1 to n exclusive , ans = min ( ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( a [ i + n - 1 ] - a [ i ] ) , ans )	N/A	N/A	for ( int i = 1 ; i < n ; i ++ ) { ans = min ( ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( a [ i + n - 1 ] - a [ i ] ) , ans ) ; }	for ( long long i = 1 ; i < n ; i ++ ) { ans = min ( ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( b [ i + n - i ] - ( a1 [ i ] ), ans ) ; }
415	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
416	DUMMY	0.0	0.0	return 0;	DUMMY
417	DUMMY	0.0	0.0	}	DUMMY
418	n = integer	N/A	N/A	int n ;	int n ;
419	a = long long array of size 200001 , ans = long long	N/A	N/A	long long a [ 200001 ] , ans ;	long long a [ 200001 ], ans ;
420	DUMMY	0.0	0.0	int main() {	DUMMY
421	read n	N/A	N/A	cin >> n ;	cin >> n ;
422	for i = 1 to ( left shift n 1 place ) , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= ( n << 1 ) ; i ++ ) cin >> a [ i ] ;	for ( int i = 1 ; i << ( n << 1 ) ; i ++ ) cin >> a [ i ] ;
423	sort a + 1 and a + ( n < < 1 ) + 1	N/A	N/A	sort ( a + 1 , a + ( n << 1 ) + 1 ) ;	sort ( a + 1, a + ( n << 1 ) + 1 ) ;
424	ans = ( a [ n ] - a [ 1 ] ) * ( a [ shift n 1 place ] - a [ n + 1 ] )	N/A	N/A	ans = ( a [ n ] - a [ 1 ] ) * ( a [ n << 1 ] - a [ n + 1 ] ) ;	ans = a [ n ] - a [ 1 ] ) * ( a [ shift ( 1 << n ) ] - b [ n + i ] ) ;
425	for i = 1 to n exclusive , ans = min ( ( a [ left shift n 1 place ] - a [ 1 ] ) * ( a [ n + i ] - a [ i + 1 ] ) , ans )	N/A	N/A	for ( int i = 1 ; i < n ; i ++ ) ans = min ( ( a [ n << 1 ] - a [ 1 ] ) * ( a [ n + i ] - a [ i + 1 ] ) , ans ) ;	for ( long long i = 1 ; i < n ; i ++ ) ans = min ( ( a [ 1 << n ) - a [ i ] ) * ( ( b [ n + i ] - b [ i + 1 ] ), ans ) ;
426	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
427	DUMMY	0.0	0.0	return 0;	DUMMY
428	DUMMY	0.0	0.0	}	DUMMY
429	let in be long long array with size 200010	N/A	N/A	long long in [ 200010 ] ;	long long in [ 200010 ] ;
430	create ints n and n2	N/A	N/A	int n , n2 ;	int n, n2 ;
431	declare long long ans	N/A	N/A	long long ans ;	long long ans ;
432	DUMMY	0.0	0.0	int main() {	DUMMY
433	read n	N/A	N/A	cin >> n ;	cin >> n ;
434	change n2 to n * 2	N/A	N/A	n2 = n * 2 ;	n2 = n * 2 ;
435	for integer i = 0 to n2 exclusive , read in [ i ]	N/A	N/A	for ( int i = 0 ; i < n2 ; i ++ ) cin >> in [ i ] ;	for ( int i = 0 ; i < n2 ; i ++ ) cin >> in [ i ] ;
436	sort n2 elements of in	N/A	N/A	sort ( in , in + n2 ) ;	sort ( in, in + n2 ) ;
437	assign ( in [ n - 1 ] - in [ 0 ] ) * ( in [ n2 - 1 ] - in [ n ] ) to ans	N/A	N/A	ans = ( in [ n - 1 ] - in [ 0 ] ) * ( in [ n2 - 1 ] - in [ n ] ) ;	ans = ( long long ) ( in [ n - 1 ] - in [ 0 ] ) * ( ( long double ) in [ ( n2 - i ] ) - ( long int ) n [ n ] ) ) ;
438	for i from 1 to n exclusive , set ans to min of ans and in [ n - 1 + i ] - in [ i ] ) * ( in [ n2 - 1 ] - in [ 0 ]	N/A	N/A	for ( int i = 1 ; i < n ; i ++ ) ans = min ( ans , ( in [ n - 1 + i ] - in [ i ] ) * ( in [ n2 - 1 ] - in [ 0 ] ) ) ;	for ( int i = 1 ; i < n ; i ++ ) { ans = min ( ans, in [ n - 1 + i ] - in [ i ] ) * ( in [ N2 - 1 ] -in [ 0 ] ) ; }
439	print ans and ' \ n '	N/A	N/A	cout << ans << ' \n ' ;	cout << ans <<'\n';
440	DUMMY	0.0	0.0	return 0;	DUMMY
441	DUMMY	0.0	0.0	}	DUMMY
442	create long long array of length 200020	N/A	N/A	long long a [ 200020 ] ;	long long array [ 200020 ] ;
443	DUMMY	0.0	0.0	int main() {	DUMMY
444	create int n	N/A	N/A	int n ;	int n ;
445	read n	N/A	N/A	cin >> n ;	cin >> n ;
446	for i = 1 to 2 * n inclusive , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= 2 * n ; i ++ ) cin >> a [ i ] ;	for ( int i = 1 ; i <= 2 * n ; i ++ ) cin >> a [ i ] ;
447	sort elements between a + 1 and a + 2 * n + 1	N/A	N/A	sort ( a + 1 , a + 2 * n + 1 ) ;	sort ( a + 1, a + 2 * n + 1 ) ;
448	set min1 to ( a [ n ] - a [ 1 ] ) * ( a [ 2 * n ] - a [ n + 1 ] )	N/A	N/A	long long min1 = ( a [ n ] - a [ 1 ] ) * ( a [ 2 * n ] - a [ n + 1 ] ) ;	long long min1 = ( a [ n ] - a [ 1 ] ) * ( ( ( long long ) a [ 2 * n ] ) - ( long double ) ( ( n + 1 ) ) ) ;
449	for i = 2 to n + 1 inclusive , assign min of min1 and ( a [ 2 * n ] - a [ 1 ] ) * ( a [ i + n - 1 ] - a [ i ] ) to min1	N/A	N/A	for ( int i = 2 ; i <= n + 1 ; i ++ ) { min1 = min ( min1 , ( a [ 2 * n ] - a [ 1 ] ) * ( a [ i + n - 1 ] - a [ i ] ) ) ; }	for ( int i = 2 ; i <= n + 1 ; i ++ ) { min1 = min ( min1, ( a [ 2 * n ] - a [ 1 ] ) * ( a ( i + n - 1 ] - b [ i ] ) ) ; }
450	print min1	N/A	N/A	cout << min1 << endl ;	cout << min1 << endl ;
451	DUMMY	0.0	0.0	return 0;	DUMMY
452	DUMMY	0.0	0.0	}	DUMMY
453	create long long array a with size 202000	N/A	N/A	long long a [ 202000 ] ;	long long a [ 202000 ] ;
454	DUMMY	0.0	0.0	int main() {	DUMMY
455	create integer n	N/A	N/A	int n ;	int n ;
456	read n	N/A	N/A	cin >> n ;	cin >> n ;
457	for i = 1 to i is less than or equal to ( n bitshift left 1 ) , incrementing i , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= ( n << 1 ) ; ++ i ) { cin >> a [ i ] ; }	for ( int i = 1 ; i <= ( n << 1 ) ; i ++ ) cin >> a [ i ] ;
458	sort elements from a + 1 to a + 1 + n + n	N/A	N/A	sort ( a + 1 , a + 1 + n + n ) ;	sort ( a + 1, a + 2 + n + n ) ;
459	create long long s with s = ( s , ( a [ n ] - a [ 1 ] ) * ( a [ n bitshift left 1 ] - a [ n + 1 ] ) )	N/A	N/A	long long s = ( s , ( a [ n ] - a [ 1 ] ) * ( a [ n << 1 ] - a [ n + 1 ] ) ) ;	long long s = ( long long ) ( s, ( a [ n ] - a [ 1 ] ) * ( ( ( n << 1 ] - A [ n + i ] ) ) ) ;
460	for i = 2 to n inclusive , set s to minimum of ( s and ( a [ n bitshift left 1 ] - a [ 1 ] ) * ( a [ n + i - 1 ] - a [ i ] )	N/A	N/A	for ( int i = 2 ; i <= n ; i ++ ) { s = min ( s , ( a [ n << 1 ] - a [ 1 ] ) * ( a [ n + i - 1 ] - a [ i ] ) ) ; }	for ( int i = 2 ; i <= n ; i ++ ) { s = min ( s, ( a [ n << 1 ] - a [ 1 ] ) * ( ( n + i - 1 ] + a [ i ] ) ) ) ; }
461	print s print newline	N/A	N/A	cout << s << endl ;	cout << s << endl ;
462	DUMMY	0.0	0.0	return 0;	DUMMY
463	DUMMY	0.0	0.0	}	DUMMY
464	DUMMY	0.0	0.0	int main() {	DUMMY
465	declare integer variable n	N/A	N/A	int n ;	int n ;
466	read n	N/A	N/A	cin >> n ;	cin >> n ;
467	create long longs vector a with n * 2 elements	N/A	N/A	vector < long long > a ( n * 2 ) ;	vector < long long > a ( n * 2 ) ;
468	for i = 0 to n * 2 exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n * 2 ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < n * 2 ; i ++ ) cin >> a [ i ] ;
469	sort a	N/A	N/A	sort ( a . begin ( ) , a . end ( ) ) ;	sort ( a. begin ( ), a. end ( ) ) ;
470	create long long ans = LLONG_MAX	N/A	N/A	long long ans = LLONG_MAX ;	long long ans = LLONG_MAX ;
471	loop i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( long long i = 0 ; i < n ; i ++ )
472	if i = 0	N/A	N/A	if ( i == 0 )	if ( i == 0 )
473	assign min of ans and ( a [ n - 1 ] - a [ 0 ] ) * ( a [ n * 2 - 1 ] - a [ n ] ) to ans	N/A	N/A	ans = min ( ans , ( a [ n - 1 ] - a [ 0 ] ) * ( a [ n * 2 - 1 ] - a [ n ] ) ) ;	ans = min ( ans, ( ( a [ n - 1 ] - a [ 0 ] ) * ( ( long long ) a [ ( n * 2 - i ] ) - ( long double ) ( n [ n ] ) ) ) ;
474	else	N/A	N/A	else	else
475	assign min of ans and ( a [ i + n - 1 ] - a [ i ] ) * ( a [ n * 2 - 1 ] - a [ 0 ] ) to ans	N/A	N/A	ans = min ( ans , ( a [ i + n - 1 ] - a [ i ] ) * ( a [ n * 2 - 1 ] - a [ 0 ] ) ) ;	ans = min ( ans, ( ( a [ i + n - 1 ] - a [ 1 ] ) * ( ( ( long long ) a [ n * 2 - i ] ) - ( long double ) ( ( n + 2 - 1 ) ) ) + a [ 0 ] ) ) ;
476	DUMMY	0.0	0.0	}	DUMMY
477	DUMMY	0.0	0.0	}	DUMMY
478	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
479	DUMMY	0.0	0.0	return 0;	DUMMY
480	DUMMY	0.0	0.0	}	DUMMY
481	create const int maxn = 1e5 + 2	N/A	N/A	const int maxn = 1e5 + 2 ;	const int maxn = 1e5 + 2 ;
482	let a be long long array with size maxn * 2	N/A	N/A	long long a [ maxn * 2 ] ;	long long a [ maxn * 2 ] ;
483	DUMMY	0.0	0.0	int main() {	DUMMY
484	declare integer variable n	N/A	N/A	int n ;	int n ;
485	read n	N/A	N/A	cin >> n ;	cin >> n ;
486	create long long m = n * 2	N/A	N/A	long long m = n * 2 ;	long long m = n * 2 ;
487	for i from 1 to m inclusive , read input to a [ i ]	N/A	N/A	for ( int i = 1 ; i <= m ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 1 ; i <= m ; i ++ ) cin >> a [ i ] ;
488	sort a from index 1 to m + 1	N/A	N/A	sort ( a + 1 , a + m + 1 ) ;	sort ( a + 1, a + m + 1 ) ;
489	create long long ans = 1e18	N/A	N/A	long long ans = 1e18 ;	long long ans = 1e18 ;
490	for i from 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( long long i = 1 ; i <= n ; i ++ )
491	if i = 1	N/A	N/A	if ( i == 1 )	if ( i == 1 )
492	change ans to min of ans and ( a [ n ] - a [ 1 ] ) * ( a [ m ] - a [ n + 1 ] )	N/A	N/A	ans = min ( ans , ( a [ n ] - a [ 1 ] ) * ( a [ m ] - a [ n + 1 ] ) ) ;	ans = min ( ans, ( ( a [ n ] - a [ 1 ] ) * ( ( long long ) a [ m ] - ( long double ) ( ( n + 1 ) ) ) ;
493	else	N/A	N/A	else	else
494	change ans to min of ans and ( a [ m ] - a [ 1 ] ) * ( a [ n + i - 1 ] - a [ i ] )	N/A	N/A	ans = min ( ans , ( a [ m ] - a [ 1 ] ) * ( a [ n + i - 1 ] - a [ i ] ) ) ;	ans = min ( ans, a [ m ] - a [ 1 ] ) * ( a [ n + i - 1 ] + a [ i ] ) ;
495	DUMMY	0.0	0.0	}	DUMMY
496	DUMMY	0.0	0.0	}	DUMMY
497	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
498	DUMMY	0.0	0.0	return 0;	DUMMY
499	DUMMY	0.0	0.0	}	DUMMY
500	create constant integer MAXN with MAXN = integer casted ( 2 * 1e5 + 5 )	N/A	N/A	const int MAXN = ( int ) ( 2 * 1e5 + 5 ) ;	const int MAXN = int ( 2 * 1e5 + 5 ) ;
501	create integer n	N/A	N/A	int n ;	int n ;
502	create long long array a with size MAXN	N/A	N/A	long long a [ MAXN ] ;	long long a [ MAXN ] ;
503	DUMMY	0.0	0.0	int main() {	DUMMY
504	read n	N/A	N/A	cin >> n ;	cin >> n ;
505	for i = 0 to n + n exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n + n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < n + n ; i ++ ) cin >> a [ i ] ;
506	sort elements from a to a + n + n	N/A	N/A	sort ( a , a + n + n ) ;	sort ( a, a + n + n ) ;
507	if n is less than or equal to 1	N/A	N/A	if ( n <= 1 )	if ( n <= 1 )
508	print " 0 " print newline	N/A	N/A	cout << " 0 " << endl ;	cout << " 0 " << endl ;
509	else	N/A	N/A	else	else
510	create long long ans with ans = a [ n - 1 ] - a [ 0 ]	N/A	N/A	long long ans = a [ n - 1 ] - a [ 0 ] ;	long long ans = a [ n - 1 ] - a [ 0 ] ;
511	set ans to ans * ( a [ n + n - 1 ] - a [ n ] )	N/A	N/A	ans *= a [ n + n - 1 ] - a [ n ] ;	ans = ans * ( a [ n + n - 1 ] - a [ 1 ] ) ;
512	create long long l with l = a [ n + n - 1 ] - a [ 0 ]	N/A	N/A	long long l = a [ n + n - 1 ] - a [ 0 ] ;	long long l = a [ n + n - 1 ] - a [ 0 ] ;
513	for i = 1 to n inclusive , set ans to minimum of ( ans and ( l * ( a [ i + n - 1 ] - a [ i ] ) ) )	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { ans = min ( ans , l * ( a [ i + n - 1 ] - a [ i ] ) ) ; }	for ( long long i = 1 ; i <= n ; i ++ ) ans = min ( ans, ( l * ( a [ i + n - 1 ] - a [ 1 ] ) ) ) ;
514	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
515	DUMMY	0.0	0.0	}	DUMMY
516	DUMMY	0.0	0.0	}	DUMMY
517	DUMMY	0.0	0.0	int main() {	DUMMY
518	n , x = integers	N/A	N/A	int n , x ;	int n, x ;
519	read n	N/A	N/A	cin >> n ;	cin >> n ;
520	set cnt1 , cnt2 = 0	N/A	N/A	int cnt1 = 0 , cnt2 = 0 ;	int cnt1 = 0, cnt2 = 0 ;
521	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
522	read x	N/A	N/A	cin >> x ;	cin >> x ;
523	set cnt1 = cnt1 + x	N/A	N/A	cnt1 += x ;	cnt1 += x ;
524	DUMMY	0.0	0.0	}	DUMMY
525	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
526	read x	N/A	N/A	cin >> x ;	cin >> x ;
527	set cnt2 = cnt2 + x	N/A	N/A	cnt2 += x ;	cnt2 += x ;
528	DUMMY	0.0	0.0	}	DUMMY
529	if cnt1 > = cnt2	N/A	N/A	if ( cnt1 >= cnt2 )	if ( cnt1 >= cnt2 )
530	print " YES "	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
531	else	N/A	N/A	else	else
532	print " NO "	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
533	DUMMY	0.0	0.0	}	DUMMY
534	DUMMY	0.0	0.0	int main() {	DUMMY
535	declare long long integer variables n , i and j	N/A	N/A	long long int n , i , j ;	long long int n, i, j ;
536	read n	N/A	N/A	cin >> n ;	cin >> n ;
537	declare long long integers s1 and s2 = 0 and long long integer arrays a and b with size n	N/A	N/A	long long int a [ n ] , b [ n ] , s1 = 0 , s2 = 0 ;	long long int s1 = 0, b [ n ], s2 = 0 ;
538	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
539	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
540	increase s1 by a [ i ]	N/A	N/A	s1 += a [ i ] ;	s1 += a [ i ] ;
541	DUMMY	0.0	0.0	}	DUMMY
542	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( long long int i = 0 ; i < n ; i ++ )
543	read b [ i ]	N/A	N/A	cin >> b [ i ] ;	cin >> b [ i ] ;
544	increase s2 by b [ i ]	N/A	N/A	s2 += b [ i ] ;	s2 += b [ i ] ;
545	DUMMY	0.0	0.0	}	DUMMY
546	if s1 > = s2	N/A	N/A	if ( s1 >= s2 )	if ( s1 >= s2 )
547	print " YES " and ' \ n '	N/A	N/A	cout << " YES " << ' \n ' ;	cout << " YES " <<'\n';
548	else	N/A	N/A	else	else
549	print " NO " and ' \ n '	N/A	N/A	cout << " NO " << ' \n ' ;	cout << " NO " <<'\n';
550	DUMMY	0.0	0.0	}	DUMMY
551	DUMMY	0.0	0.0	return 0;	DUMMY
552	DUMMY	0.0	0.0	}	DUMMY
553	DUMMY	0.0	0.0	int main() {	DUMMY
554	n = integer	N/A	N/A	int n ;	int n ;
555	Read n	N/A	N/A	cin >> n ;	cin >> n ;
556	sumx = integer , set to 0	N/A	N/A	int sumx = 0 ;	int sumx = 0 ;
557	sumy = integer , set to 0	N/A	N/A	int sumy = 0 ;	int sumy = 0 ;
558	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
559	x = integer	N/A	N/A	int x ;	int x ;
560	Read x	N/A	N/A	cin >> x ;	cin >> x ;
561	set sumx to sumx + x	N/A	N/A	sumx = sumx + x ;	sumx += x ;
562	DUMMY	0.0	0.0	}	DUMMY
563	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
564	y = integer	N/A	N/A	int y ;	int y ;
565	Read y	N/A	N/A	cin >> y ;	cin >> y ;
566	set sumy to sumy + y	N/A	N/A	sumy = sumy + y ;	sumy += y ;
567	DUMMY	0.0	0.0	}	DUMMY
568	if sumy is less than or equal to sumx	N/A	N/A	if ( sumy <= sumx )	if ( sumy <= sumx )
569	print YES and a new line	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
570	else do the following	N/A	N/A	else	else
571	print NO and a new line	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
572	DUMMY	0.0	0.0	}	DUMMY
573	DUMMY	0.0	0.0	return 0;	DUMMY
574	DUMMY	0.0	0.0	}	DUMMY
575	DUMMY	0.0	0.0	int main() {	DUMMY
576	x , y , n = integers with x , y = 0	N/A	N/A	int x = 0 , y = 0 , n ;	long long int x = 0, y = 1, n ;
577	a = integer	N/A	N/A	int a ;	int a ;
578	read n	N/A	N/A	cin >> n ;	cin >> n ;
579	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
580	read a	N/A	N/A	cin >> a ;	cin >> a ;
581	set x to x + a	N/A	N/A	x += a ;	x += a ;
582	DUMMY	0.0	0.0	}	DUMMY
583	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
584	read a	N/A	N/A	cin >> a ;	cin >> a ;
585	set y to y + a	N/A	N/A	y += a ;	y += a ;
586	DUMMY	0.0	0.0	}	DUMMY
587	if x > = y	N/A	N/A	if ( x >= y )	if ( x >= y )
588	print YES	N/A	N/A	cout << " YES\n " ;	cout << " YES\n " ;
589	else	N/A	N/A	else	else
590	print NO	N/A	N/A	cout << " NO\n " ;	cout << " NO " << endl ;
591	DUMMY	0.0	0.0	}	DUMMY
592	DUMMY	0.0	0.0	return 0;	DUMMY
593	DUMMY	0.0	0.0	}	DUMMY
594	create integer arrays x , y , with x size 51 , y size 51	N/A	N/A	int x [ 51 ] , y [ 51 ] ;	int x [ 51 ] = { 0 }, y [ 50 ] ={ 0 } ;
595	DUMMY	0.0	0.0	int main() {	DUMMY
596	create integers n , sum_x , sum_y , with sum_x = 0 , sum_y = 0	N/A	N/A	int n , sum_x = 0 , sum_y = 0 ;	int n, sum_x = 0, sum-y = 0 ;
597	read n	N/A	N/A	cin >> n ;	cin >> n ;
598	for i = 0 to n exclusive , read x [ i ] , increment sum_x by x [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] , sum_x += x [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ], sum_x += x [ 1 ] ;
599	for i = 0 to n exclusive , read y [ i ] , increment sum_y by y [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> y [ i ] , sum_y += y [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> y [ i ], sum_y += y [ 1 ] ;
600	if sum_x is greater than or equal than sum_y	N/A	N/A	if ( sum_x >= sum_y )	if ( sum_x >= sum_y )
601	print " YES " print newline	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
602	else	N/A	N/A	else	else
603	print " NO " print newline	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
604	DUMMY	0.0	0.0	}	DUMMY
605	DUMMY	0.0	0.0	int main() {	DUMMY
606	create n , sum , s as int set sum and s to 0	N/A	N/A	int n , sum = 0 , s = 0 ;	int n, sum = 0, s = 0 ;
607	read in to n	N/A	N/A	cin >> n ;	cin >> n ;
608	create int array arr and ar both size n	N/A	N/A	int arr [ n ] , ar [ n ] ;	int arr [ n ], ar [ n + 1 ] ;
609	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
610	read in to arr [ i ]	N/A	N/A	cin >> arr [ i ] ;	cin >> arr [ i ] ;
611	increase sum by arr [ i ]	N/A	N/A	sum += arr [ i ] ;	sum += arr [ i ] ;
612	DUMMY	0.0	0.0	}	DUMMY
613	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
614	read in to ar [ i ]	N/A	N/A	cin >> ar [ i ] ;	cin >> ar [ i ] ;
615	increase s by ar [ i ]	N/A	N/A	s += ar [ i ] ;	s += ar [ i ] ;
616	DUMMY	0.0	0.0	}	DUMMY
617	if s < = sum	N/A	N/A	if ( s <= sum )	if ( s <= sum )
618	print YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
619	else	N/A	N/A	else	else
620	print NO	N/A	N/A	cout << " NO " << endl ;	cout << " NO\n " ;
621	DUMMY	0.0	0.0	}	DUMMY
622	DUMMY	0.0	0.0	}	DUMMY
623	let is be integer array with size 105	N/A	N/A	int is [ 105 ] ;	int is [ 105 ] ;
624	DUMMY	0.0	0.0	int main() {	DUMMY
625	create integers n , m , a and b	N/A	N/A	int n , m , a , b ;	int n, m, a, b ;
626	read n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
627	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
628	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
629	for j = a to b inclusive set is [ j ] to 1	N/A	N/A	for ( int j = a ; j <= b ; j ++ ) is [ j ] = 1 ;	for ( int j = a ; j <= b ; j ++ ) is [ j ] = 1 ;
630	DUMMY	0.0	0.0	}	DUMMY
631	declare integer vector ans	N/A	N/A	vector < int > ans ;	vector < int > ans ;
632	for i = 1 to m inclusive	N/A	N/A	for ( int i = 1 ; i <= m ; i ++ )	for ( int i = 1 ; i <= m ; i ++ )
633	if is [ i ] is 0 , push i into ans	N/A	N/A	if ( ! is [ i ] ) ans . push_back ( i ) ;	if ( is [ i ] == 0 ) ans. push_back ( i ) ;
634	print length of ans and " \ n "	N/A	N/A	cout << ans . size ( ) << " \n " ;	cout << ans. size ( ) << " \n " ;
635	for i = 0 to length of ans exclusive	N/A	N/A	for ( int i = 0 ; i < ans . size ( ) ; i ++ )	for ( int i = 0 ; i < ans. size ( ) ; i ++ )
636	if i ! = length of ans - 1	N/A	N/A	if ( i != ans . size ( ) - 1 )	if ( i!= ans. size ( ) - 1 )
637	print ans [ i ] and " "	N/A	N/A	cout << ans [ i ] << " " ;	cout << ans [ i ] << " " ;
638	else	N/A	N/A	else	else
639	print ans [ i ] and " \ n "	N/A	N/A	cout << ans [ i ] << " \n " ;	cout << ans [ i ] << " \n " ;
640	DUMMY	0.0	0.0	return 0;	DUMMY
641	DUMMY	0.0	0.0	}	DUMMY
642	DUMMY	0.0	0.0	int main() {	DUMMY
643	a , tam , comeco , fim = int witha = 0 and tam = 0 and comeco = 0 and fim = 0	N/A	N/A	int a = 0 , tam = 0 , comeco = 0 , fim = 0 ;	int a ( 0 ), tam = 0, comeco ( 0, fim = 0 ) ;
644	read a then tam	N/A	N/A	cin >> a >> tam ;	cin >> a >> tam ;
645	isThere = bool array of size tam + 1	N/A	N/A	bool isThere [ tam + 1 ] ;	bool isThere [ tam + 1 ] ;
646	set all values of isThere to false	N/A	N/A	for ( int j = 0 ; j <= tam ; j ++ ) { isThere [ j ] = false ; }	memset ( isThere, false, sizeof isThere ) ;
647	for b = 0 to a	N/A	N/A	for ( int b = 0 ; b < a ; b ++ )	for ( int b = 0 ; b < a ; b ++ )
648	read comeco then fim	N/A	N/A	cin >> comeco >> fim ;	cin >> comeco >> fim ;
649	for c = comeco to fim inclusive set siThere [ c ] to true	N/A	N/A	for ( int c = comeco ; c <= fim ; c ++ ) { isThere [ c ] = true ; }	for ( int c = comeco ; c <= fim ; c ++ ) siThere [ c ] = true ;
650	DUMMY	0.0	0.0	}	DUMMY
651	resp = int with resp = 0	N/A	N/A	int resp = 0 ;	int resp = 0 ;
652	presentes = int array of size tam + 1	N/A	N/A	int presentes [ tam + 1 ] ;	int presentes [ tam + 1 ] ;
653	ordem = string with ordem = " "	N/A	N/A	string ordem = " " ;	string ordem = " " ;
654	for b = 1 to tam inclusive	N/A	N/A	for ( int b = 1 ; b <= tam ; b ++ )	for ( int b = 1 ; b <= tam ; b ++ )
655	is isThere [ b ] is false	N/A	N/A	if ( ! isThere [ b ] )	isThere [ b ] = false ;
656	set presentes [ resp ] to b	N/A	N/A	presentes [ resp ] = b ;	presentes [ resp ] = b ;
657	increment resp	N/A	N/A	resp ++ ;	resp ++ ;
658	DUMMY	0.0	0.0	}	DUMMY
659	DUMMY	0.0	0.0	}	DUMMY
660	print resp	N/A	N/A	cout << resp << endl ;	cout << resp << endl ;
661	for b = 0 to resp	N/A	N/A	for ( int b = 0 ; b < resp ; b ++ )	for ( int b = 0 ; b < resp ; b ++ )
662	print presentes [ b ]	N/A	N/A	cout << presentes [ b ] ;	cout << presentes [ b ] ;
663	if b is resp - 1	N/A	N/A	if ( b == resp - 1 )	if ( b == resp - 1 )
664	print newline	N/A	N/A	cout << endl ;	cout << endl ;
665	else	N/A	N/A	else	else
666	print " "	N/A	N/A	cout << " " ;	cout << " " ;
667	DUMMY	0.0	0.0	}	DUMMY
668	DUMMY	0.0	0.0	}	DUMMY
669	DUMMY	0.0	0.0	return 0;	DUMMY
670	DUMMY	0.0	0.0	}	DUMMY
671	M = const int with M = 3010	N/A	N/A	const int M = 3010 ;	const int M = 3010 ;
672	b = int vector and a = int vector array of size M	N/A	N/A	vector < int > a [ M ] , b ;	vector < int > b, a [ M ] ;
673	n , m = int	N/A	N/A	int n , m ;	int n, m ;
674	in function judge taking an int x and returning a bool	N/A	N/A	bool judge ( int x )	bool judge ( int x )
675	num1 = int with num1 = size of a [ 1 ]	N/A	N/A	int num1 = a [ 1 ] . size ( ) ;	int num1 = a [ 1 ]. size ( ) ;
676	for i = 2 to m inclusive	N/A	N/A	for ( int i = 2 ; i <= m ; i ++ )	for ( int i = 2 ; i <= m ; i ++ )
677	if size of a [ i ] is greater than x	N/A	N/A	if ( a [ i ] . size ( ) > x )	if ( a [ i ]. size ( ) > x )
678	increment num1 by size of a [ i ] - x	N/A	N/A	num1 += a [ i ] . size ( ) - x ;	num1 += a [ i ]. size ( ) - x ;
679	else	N/A	N/A	else	else
680	increment num1 by size of a [ i ]	N/A	N/A	num1 += a [ i ] . size ( ) ;	num1 += a [ i ]. size ( ) ;
681	DUMMY	0.0	0.0	}	DUMMY
682	return true if num1 is greater than x else return false	N/A	N/A	return num1 > x ;	return num1 > x ;
683	DUMMY	0.0	0.0	}	DUMMY
684	in function get_ans taking an int x and returning a long long	N/A	N/A	long long get_ans ( int x )	long long get_ans ( int x )
685	ans = long long with ans = 0	N/A	N/A	long long ans = 0 ;	long long ans = 0 ;
686	num1 = int with num1 = size of a [ 1 ]	N/A	N/A	int num1 = a [ 1 ] . size ( ) ;	int num1 = a [ 1 ]. size ( ) ;
687	clear b	N/A	N/A	b . clear ( ) ;	b. clear ( ) ;
688	for i = 2 to m inclusive	N/A	N/A	for ( int i = 2 ; i <= m ; i ++ )	for ( int i = 2 ; i <= m ; i ++ )
689	if size of a [ i ] is greater than x	N/A	N/A	if ( a [ i ] . size ( ) > x )	if ( a [ i ]. size ( ) > x )
690	for j = x to size of a [ i ]	N/A	N/A	for ( int j = x ; j < a [ i ] . size ( ) ; j ++ )	for ( int j = x ; j < a [ i ]. size ( ) ; j ++ )
691	increment num1	N/A	N/A	num1 ++ ;	num1 ++ ;
692	increment ans by a [ i ] [ j ]	N/A	N/A	ans += a [ i ] [ j ] ;	ans += a [ i ] [ j ] ;
693	DUMMY	0.0	0.0	}	DUMMY
694	for j = 0 to x append a [ i ] [ j ] to b	N/A	N/A	for ( int j = 0 ; j < x ; j ++ ) b . push_back ( a [ i ] [ j ] ) ;	for ( int j = 0 ; j < x ; j ++ ) { b += a [ i ] [ j ] ; }
695	else	N/A	N/A	else	else
696	for j = 0 to size of a [ i ] append a [ i ] [ j ] to b	N/A	N/A	for ( int j = 0 ; j < a [ i ] . size ( ) ; j ++ ) b . push_back ( a [ i ] [ j ] ) ;	for ( int j = 0 ; j < a [ i ]. size ( ) ; j ++ ) { b. push_back ( a [ 1 ] [ j ] ) ; }
697	DUMMY	0.0	0.0	}	DUMMY
698	sort b	N/A	N/A	sort ( b . begin ( ) , b . end ( ) ) ;	sort ( b. begin ( ), b. end ( ) ) ;
699	if num1 is less than x and x - num1 + 1 is greater than size of b then return 10000000000000ll	N/A	N/A	if ( num1 < x && x - num1 + 1 > b . size ( ) ) return 10000000000000ll ;	if ( num1 < x && x - num1 + 1 > b. size ( ) ) return 10000000000000ll ;
700	hh = int with hh = x - num1 + 1	N/A	N/A	int hh = x - num1 + 1 ;	int hh = x - num1 + 1 ;
701	for i = 0 to hh increment ans by b [ i ]	N/A	N/A	for ( int i = 0 ; i < hh ; i ++ ) ans += b [ i ] ;	for ( int i = 0 ; i < hh ; i ++ ) ans += b [ i ] ;
702	return ans	N/A	N/A	return ans ;	return ans ;
703	DUMMY	0.0	0.0	}	DUMMY
704	in function cmp taking two ints x and y and returning a bool	N/A	N/A	bool cmp ( int x , int y )	bool cmp ( int x, int y )
705	return true if x is greater than y else return false	N/A	N/A	return x > y ;	return x > y ;
706	DUMMY	0.0	0.0	}	DUMMY
707	DUMMY	0.0	0.0	int main() {	DUMMY
708	read n then m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
709	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
710	x , y = int	N/A	N/A	int x , y ;	int x, y ;
711	read x then y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
712	append y to a [ x ]	N/A	N/A	a [ x ] . push_back ( y ) ;	a [ x ]. push_back ( y ) ;
713	DUMMY	0.0	0.0	}	DUMMY
714	for i = 1 to m inclusive sort a [ i ] using cmp	N/A	N/A	for ( int i = 1 ; i <= m ; i ++ ) sort ( a [ i ] . begin ( ) , a [ i ] . end ( ) , cmp ) ;	for ( int i = 1 ; i <= m ; i ++ ) cmp ( a [ i ], cmp ) ;
715	ans = long long with ans = 10000000000000ll	N/A	N/A	long long ans = 10000000000000ll ;	long long ans = 10000000000000ll ;
716	for i = 0 to n / 2 inclusive set ans to min of ans and get_ans of i	N/A	N/A	for ( int i = 0 ; i <= n / 2 ; i ++ ) ans = min ( ans , get_ans ( i ) ) ;	for ( int i = 0 ; i <= n / 2 ; i ++ ) ans = min ( ans, get_ans ( i ) ) ;
717	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
718	DUMMY	0.0	0.0	return 0;	DUMMY
719	DUMMY	0.0	0.0	}	DUMMY
720	create long long integer pair p of 3007 size	N/A	N/A	pair < long long int , long long int > p [ 3007 ] ;	pair < long long int, int > p [ 3007 ] ;
721	c = long long integers array of length 3007	N/A	N/A	long long int c [ 3007 ] ;	long long int c [ 3007 ] ;
722	DUMMY	0.0	0.0	int main() {	DUMMY
723	integer n , m = long long integers	N/A	N/A	long long int n , m ;	long long int n, m ;
724	read n , m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
725	set long long integer mx to 0	N/A	N/A	long long int mx = 0 ;	long long int mx = 0 ;
726	for i = 0 to less than n do the following	N/A	N/A	for ( long long int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
727	read p [ i ] . second , p [ i ] . first	N/A	N/A	cin >> p [ i ] . second >> p [ i ] . first ;	cout << p [ i ]. second << endl ;
728	add one to c [ p [ i ] . second ]	N/A	N/A	c [ p [ i ] . second ] ++ ;	c [ p [ i ]. second ] ++ ;
729	DUMMY	0.0	0.0	}	DUMMY
730	sort the values of p to p + n	N/A	N/A	sort ( p , p + n ) ;	sort ( p, p + n ) ;
731	for i = 2 to less than or equal to m then make mx the maximum of mx or c [ i ]	N/A	N/A	for ( long long int i = 2 ; i <= m ; i ++ ) mx = max ( mx , c [ i ] ) ;	for ( long long int i = 2 ; i <= m ; i ++ ) mx = max ( mx, c [ i ] ) ;
732	set long long integer ans to 21474836470000	N/A	N/A	long long int ans = 21474836470000 ;	long long int ans = 21474836470000 ;
733	set long long integer sum to 0	N/A	N/A	long long int sum = 0 ;	long long int sum = 0 ;
734	for i = mx to greater than or equal to 0 do the following	N/A	N/A	for ( long long int i = mx ; i >= 0 ; i -- )	for ( long long int i = mx ; i >= 0 ; i -- )
735	for j = 0 to less than n do the following	N/A	N/A	for ( long long int j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
736	if p [ j ] . second is not equal to 1 and c [ p [ j ] . second ] > i then do the following	N/A	N/A	if ( p [ j ] . second != 1 && c [ p [ j ] . second ] > i )	if ( ( p [ j ]. second!= 1 ) && ( c [ p [ i ]. first ] > i ) ) sum ++ ;
737	minus 1from c [ p [ j ] . second ]	N/A	N/A	c [ p [ j ] . second ] -- ;	c [ p [ j ]. second ] -- ;
738	set p [ j ] . second to 1	N/A	N/A	p [ j ] . second = 1 ;	p [ j ]. second = 1 ;
739	add 1 to c [ 1 ]	N/A	N/A	c [ 1 ] ++ ;	c [ 1 ] ++ ;
740	sum equals sum plus p [ j ] . first	N/A	N/A	sum += p [ j ] . first ;	sum += p [ j ]. first ;
741	DUMMY	0.0	0.0	}	DUMMY
742	DUMMY	0.0	0.0	}	DUMMY
743	set long long integer k to i - c [ 1 ] + 1	N/A	N/A	long long int k = i - c [ 1 ] + 1 ;	long long int k = i - c [ 1 ] + 1 ;
744	set long long integer t to sum	N/A	N/A	long long int t = sum ;	long long int t = sum ;
745	for j = 0 to less than n do the following	N/A	N/A	for ( long long int j = 0 ; j < n ; j ++ )	for ( long long int j = 0 ; j < n ; j ++ )
746	if k is greater than 0 then do the following	N/A	N/A	if ( k > 0 )	if ( k > 0 )
747	if p [ j ] . second is not equal to 1 then do the following	N/A	N/A	if ( p [ j ] . second != 1 )	if ( p [ j ]. second!= 1 )
748	t equals t plus p [ j ] . first	N/A	N/A	t += p [ j ] . first ;	t += p [ j ]. first ;
749	minus 1 from k - -	N/A	N/A	k -- ;	k -- ;
750	DUMMY	0.0	0.0	}	DUMMY
751	DUMMY	0.0	0.0	}	DUMMY
752	DUMMY	0.0	0.0	}	DUMMY
753	set ans to min ( ans , t )	N/A	N/A	ans = min ( ans , t ) ;	ans = min ( ans, t ) ;
754	DUMMY	0.0	0.0	}	DUMMY
755	output ans , \ n	N/A	N/A	cout << ans << ' \n ' ;	cout << ans <<'\n';
756	DUMMY	0.0	0.0	}	DUMMY
757	DUMMY	0.0	0.0	int main() {	DUMMY
758	ax , ay , bx , by , cx , cy , n = integers	N/A	N/A	int ax , ay , bx , by , cx , cy , n ;	int ax, ay, bx, by, cx, cy, n ;
759	Read ax , ay , bx , by , cx , cy , n	N/A	N/A	cin >> n >> ax >> ay >> bx >> by >> cx >> cy ;	cin >> ax >> ay >> bx >> by >> cx >> cy >> n ;
760	if cx is greater than bx	N/A	N/A	if ( cx > bx )	if ( cx > bx )
761	if cy is greater than by	N/A	N/A	if ( cy > by )	if ( cy > by )
762	if ( ax is less than cx and ax is greater than bx ) OR ( ay is less than cy and ay is greater than by )	N/A	N/A	if ( ( ax < cx && ax > bx ) || ( ay < cy && ay > by ) )	if ( ( ax < cx && ax > bx ) || ( ay < cy && ay > by ) )
763	print NO and a new line	N/A	N/A	cout << " NO\n " ;	cout << " NO " << endl ;
764	else do the following	N/A	N/A	else	else
765	print YES and a new line	N/A	N/A	cout << " YES\n " ;	cout << " YES\n " ;
766	DUMMY	0.0	0.0	}	DUMMY
767	else do the following	N/A	N/A	else	else
768	if ( ax is less than cx and ax is greater than bx ) OR ( ay is greater than cy and ay is less than by )	N/A	N/A	if ( ( ax < cx && ax > bx ) || ( ay > cy && ay < by ) )	if ( ( ax < cx && ax > bx ) || ( ay > cy && ay < by ) )
769	print NO and a new line	N/A	N/A	cout << " NO\n " ;	cout << " NO " << endl ;
770	else do the following	N/A	N/A	else	else
771	print YES and a new line	N/A	N/A	cout << " YES\n " ;	cout << " YES " << endl ;
772	DUMMY	0.0	0.0	}	DUMMY
773	DUMMY	0.0	0.0	}	DUMMY
774	else do the following	N/A	N/A	else	else
775	if cy is greater than by	N/A	N/A	if ( cy > by )	if ( cy > by )
776	if ( ax is greater than cx and ax is less than bx ) OR | ( ay is less than cy and ay is greater than by	N/A	N/A	if ( ( ax > cx && ax < bx ) || ( ay < cy && ay > by ) )	if ( ( ax > cx && ax < bx ) || ( ay < cy && ay > by ) )
777	print NO and a new line	N/A	N/A	cout << " NO\n " ;	cout << " NO " << endl ;
778	else do the following	N/A	N/A	else	else
779	print YES and a new line	N/A	N/A	cout << " YES\n " ;	cout << " YES " << endl ;
780	DUMMY	0.0	0.0	}	DUMMY
781	else do the following	N/A	N/A	else	else
782	if ( ax is greater than cx and ax is less than bx ) OR | ( ay is greater than cy and ay is less than by )	N/A	N/A	if ( ( ax > cx && ax < bx ) || ( ay > cy && ay < by ) )	if ( ax > cx && ax < bx ) || || ( ay > cy && ay < by ) )
783	print NO and a new line	N/A	N/A	cout << " NO\n " ;	cout << " NO " << endl ;
784	else do the following	N/A	N/A	else	else
785	print YES and a new line	N/A	N/A	cout << " YES\n " ;	cout << " YES " << endl ;
786	DUMMY	0.0	0.0	}	DUMMY
787	DUMMY	0.0	0.0	}	DUMMY
788	DUMMY	0.0	0.0	}	DUMMY
789	DUMMY	0.0	0.0	return 0;	DUMMY
790	DUMMY	0.0	0.0	}	DUMMY
791	create 2d integer array bio with size 1000 by 1000	N/A	N/A	int bio [ 1000 ] [ 1000 ] ;	int bio [ 1000 ] [ 1000 + 1 ] ;
792	create constant integer array smjeroviX with size 8 with smjeroviX = { 0 , 0 , 1 , - 1 , 1 , 1 , - 1 , - 1 }	N/A	N/A	const int smjeroviX [ 8 ] = { 0 , 0 , 1 , - 1 , 1 , 1 , - 1 , - 1 } ;	const int smjeroviX [ 8 ] = { 0, 0, 1, - 1, 1 } ;
793	create constant integer array smjeroviY with size 8 with smjeroviY = { 1 , - 1 , 0 , 0 , 1 , - 1 , 1 , - 1 }	N/A	N/A	const int smjeroviY [ 8 ] = { 1 , - 1 , 0 , 0 , 1 , - 1 , 1 , - 1 } ;	const int smjeroviY [ 8 ] = { 1, - 1, 0, 0 ", 1, " -1 ", " 1 " } ;
794	DUMMY	0.0	0.0	int main() {	DUMMY
795	create integers n , aX , aY , bX , bY , cX , cY	N/A	N/A	int n , aX , aY , bX , bY , cX , cY ;	int n, aX, aY, bX, bY, cX, cY ;
796	read n read aX read aY read bX read bY read cX read cY	N/A	N/A	cin >> n >> aX >> aY >> bX >> bY >> cX >> cY ;	cin >> n >> aX >> aY >> bX >> bY >> cX >> cY ;
797	decrement aX	N/A	N/A	aX -- ;	-- aX ;
798	decrement aY	N/A	N/A	aY -- ;	-- aY ;
799	decrement bX	N/A	N/A	bX -- ;	bX -- ;
800	decrement bY	N/A	N/A	bY -- ;	bY -- ;
801	decrement cX	N/A	N/A	cX -- ;	-- cX ;
802	decrement cY	N/A	N/A	cY -- ;	++ cY ;
803	create integer queue q	N/A	N/A	queue < int > q ;	queue < int > q ;
804	add element bX to end of q	N/A	N/A	q . push ( bX ) ;	q. push ( bX ) ;
805	add element bY to end of q	N/A	N/A	q . push ( bY ) ;	q. push ( bY ) ;
806	set bio [ bX ] [ bY ] to 1	N/A	N/A	bio [ bX ] [ bY ] = 1 ;	Bio [ bX ] [ bY ] = 1 ;
807	while q is not empty	N/A	N/A	while ( ! q . empty ( ) )	while (! q. empty ( ) )
808	create integer x with x = front of q	N/A	N/A	int x = q . front ( ) ;	int x = q. front ( ) ;
809	remove next element from q	N/A	N/A	q . pop ( ) ;	q. pop ( ) ;
810	set y to front of q	N/A	N/A	int y = q . front ( ) ;	y = q. front ( ) ;
811	remove next element from q	N/A	N/A	q . pop ( ) ;	q. pop ( ) ;
812	if x is cX and y is cY	N/A	N/A	if ( x == cX && y == cY )	if ( x == cX && y == cY )
813	print " YES \ n "	N/A	N/A	cout << " YES\n " ;	cout << " YES\n " ;
814	DUMMY	0.0	0.0	return 0;	DUMMY
815	DUMMY	0.0	0.0	}	DUMMY
816	for i = 0 to 8 exclusive	N/A	N/A	for ( int i = 0 ; i < 8 ; i ++ )	for ( int i = 0 ; i < 8 ; i ++ )
817	create integer X with X = x + smjeroviX [ i ]	N/A	N/A	int X = x + smjeroviX [ i ] ;	int X += smjeroviX [ i ] ;
818	create integer Y with Y = y + smjeroviY [ i ]	N/A	N/A	int Y = y + smjeroviY [ i ] ;	int Y = y + smjeroviY [ i ] ;
819	if X is less than 0 or X is n or Y is less than 0 or Y is n or bio [ X ] [ Y ] , break current loop iteration	N/A	N/A	if ( X < 0 || X == n || Y < 0 || Y == n || bio [ X ] [ Y ] ) continue ;	if ( X <= 0 || X == n || Y < 0 || Y == n or bio [ X ] [ Y ] ) continue ;
820	set bio [ X ] [ Y ] to 1	N/A	N/A	bio [ X ] [ Y ] = 1 ;	Bio [ X ] [ Y ] = 1 ;
821	if X is not aX and Y is not aY and ( X + Y is not aX + aY ) and ( X - Y is not aX - aY )	N/A	N/A	if ( X != aX && Y != aY && ( X + Y != aX + aY ) && ( X - Y != aX - aY ) )	if ( X!= aX and Y!= aY and ( X + Y!= ( aX + aY ) ) && ( X - Y == aX - aY) )
822	add element X to end of q	N/A	N/A	q . push ( X ) ;	q. push ( X ) ;
823	add element Y to end of q	N/A	N/A	q . push ( Y ) ;	q. push ( Y ) ;
824	DUMMY	0.0	0.0	}	DUMMY
825	DUMMY	0.0	0.0	}	DUMMY
826	DUMMY	0.0	0.0	}	DUMMY
827	print " NO \ n "	N/A	N/A	cout << " NO\n " ;	cout << " NO\n " ;
828	DUMMY	0.0	0.0	return 0;	DUMMY
829	DUMMY	0.0	0.0	}	DUMMY
830	DUMMY	0.0	0.0	int main() {	DUMMY
831	integers = n , ax , ay , bx , by , cx , cy	N/A	N/A	int n , ax , ay , bx , by , cx , cy ;	int n, ax, ay, bx, by, cx, cy ;
832	read n , ax , ay , bx , by , cx , cy	N/A	N/A	cin >> n >> ax >> ay >> bx >> by >> cx >> cy ;	cin >> n >> ax >> ay >> bx >> by >> cx >> cy ;
833	if ( bx - ax ) * ( cx - ax ) is less than 0 or ( by - ay ) * ( cy - ay ) < 0 then do the following	N/A	N/A	if ( ( bx - ax ) * ( cx - ax ) < 0 || ( by - ay ) * ( cy - ay ) < 0 )	if ( ( bx - ax ) * ( cx - ax - 1 ) < 0 || ( by - ay) * ( cy - ay ) <'0')
834	output NO	N/A	N/A	cout << " NO " << endl ;	cout << " NO\n " ;
835	else	N/A	N/A	else	else
836	print YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
837	DUMMY	0.0	0.0	return 0;	DUMMY
838	DUMMY	0.0	0.0	}	DUMMY
839	DUMMY	0.0	0.0	int main() {	DUMMY
840	declare integer variable n	N/A	N/A	int n ;	int n ;
841	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
842	create integers x1 and y1	N/A	N/A	int x1 , y1 ;	int x1, y1 ;
843	read x1 and y1	N/A	N/A	cin >> x1 >> y1 ;	cin >> x1 >> y1 ;
844	declare ints x2 and y2	N/A	N/A	int x2 , y2 ;	int x2, y2 ;
845	read x2 and y2	N/A	N/A	cin >> x2 >> y2 ;	cin >> x2 >> y2 ;
846	declare integers x3 and y3	N/A	N/A	int x3 , y3 ;	int x3, y3 ;
847	read x3 and y3	N/A	N/A	cin >> x3 >> y3 ;	cin >> x3 >> y3 ;
848	if x2 < x1 and y2 < y1 and x3 < x1 and y3 < y1	N/A	N/A	if ( x2 < x1 && y2 < y1 && x3 < x1 && y3 < y1 )	if ( x2 < x1 && y2 < y1 && x3 < x2 && y3 < y2 )
849	print " YES "	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
850	else if x2 > x1 & & y2 > y1 & & x3 > x1 & & y3 > y1	N/A	N/A	else if ( x2 > x1 && y2 > y1 && x3 > x1 && y3 > y1 )	else if ( x2 > x1 && y2 > y1 && x3 > x2 && y3 > y2 )
851	print " YES "	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
852	else if x2 > x1 & & x3 > x1 & & y3 < y1 & & y2 < y1	N/A	N/A	else if ( x2 > x1 && x3 > x1 && y3 < y1 && y2 < y1 )	else if ( x2 > x1 && x3 > x2 && y3 < y1 && y2 < y2 )
853	print " YES "	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
854	else if x2 < x1 & & x3 < x1 & & y2 > y1 & & y3 > y1	N/A	N/A	else if ( x2 < x1 && x3 < x1 && y2 > y1 && y3 > y1 )	else if ( x2 < x1 && x3 < x2 && y2 > y1 && y3 > y2 )
855	print " YES "	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
856	else	N/A	N/A	else	else
857	print " NO "	N/A	N/A	cout << " NO " << endl ;	cout << " NO\n " ;
858	DUMMY	0.0	0.0	}	DUMMY
859	n , qx , qy , kx , ky , tx , ty = integers	N/A	N/A	int n , qx , qy , kx , ky , tx , ty ;	int n, qx, qy, kx, ky, tx, ty ;
860	DUMMY	0.0	0.0	int main() {	DUMMY
861	Read n	N/A	N/A	cin >> n ;	cin >> n ;
862	Read qx	N/A	N/A	cin >> qx ;	cin >> qx ;
863	Read qy	N/A	N/A	cin >> qy ;	cin >> qy ;
864	Read kx	N/A	N/A	cin >> kx ;	cin >> kx ;
865	Read ky	N/A	N/A	cin >> ky ;	cin >> ky ;
866	Read tx	N/A	N/A	cin >> tx ;	cin >> tx ;
867	Read ty	N/A	N/A	cin >> ty ;	cin >> ty ;
868	if kx is less than qx	N/A	N/A	if ( kx < qx )	if ( kx < qx )
869	if ky is less than qy	N/A	N/A	if ( ky < qy )	if ( ky < qy )
870	if tx is less than qx and ty is less than qy	N/A	N/A	if ( tx < qx && ty < qy )	if ( tx < qx && ty < qy )
871	print YES and a new line	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
872	else do the following	N/A	N/A	else	else
873	print NO and a new line	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
874	else do the following	N/A	N/A	else	else
875	if tx is less than qx and ty is greater than qy	N/A	N/A	if ( tx < qx && ty > qy )	if ( tx < qx && ty > qy )
876	print YES and a new line	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
877	else do the following	N/A	N/A	else	else
878	print NO and a new line	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
879	DUMMY	0.0	0.0	}	DUMMY
880	else do the following	N/A	N/A	else	else
881	if ky is less than qy	N/A	N/A	if ( ky < qy )	if ( ky < qy )
882	if tx is greater than qx and ty is less than qy	N/A	N/A	if ( tx > qx && ty < qy )	if ( tx > qx && ty < qy )
883	print YES and a new line	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
884	else do the following	N/A	N/A	else	else
885	print NO and a new line	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
886	else do the following	N/A	N/A	else	else
887	if tx is greater than qx and ty is greater than qy	N/A	N/A	if ( tx > qx && ty > qy )	if ( tx > qx && ty > qy )
888	print YES and a new line	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
889	else do the following	N/A	N/A	else	else
890	print NO and a new line	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
891	DUMMY	0.0	0.0	}	DUMMY
892	DUMMY	0.0	0.0	}	DUMMY
893	DUMMY	0.0	0.0	}	DUMMY
894	DUMMY	0.0	0.0	int main() {	DUMMY
895	integers = n	N/A	N/A	int n ;	int n ;
896	read n	N/A	N/A	cin >> n ;	cin >> n ;
897	integers = x , y , x1 , y1 , x2 , y2	N/A	N/A	int x , y , x1 , y1 , x2 , y2 ;	int x, y, x1, y1, x2, y2 ;
898	read input x , y , x1 , y1 , x2 , y2	N/A	N/A	cin >> x >> y >> x1 >> y1 >> x2 >> y2 ;	cin >> x >> y >> x1 >> y1 >> x2 >> y2 ;
899	integers = flag = 1	N/A	N/A	int flag = 1 ;	int flag = 1 ;
900	if x1 is x or y1 then do the following	N/A	N/A	if ( x1 == x || y1 == y || x2 == x || y2 == y ) { flag = 0 ; }	if ( x1 == x || y1 == y1 )
901	if abs is abs ( y - y1 then do the following or abs ( x - x2	N/A	N/A	if ( abs ( x - x1 ) == abs ( y - y1 ) || abs ( x - x2 ) == abs ( y - y2 ) )	if ( abs ( y - y1 ) == abs ( x - x2 ) )
902	set flag to 0	N/A	N/A	flag = 0 ;	flag = 0 ;
903	else if x1 is less than x and x2 > x then do the following	N/A	N/A	else if ( x1 < x && x2 > x )	else if ( x1 < x && x2 > x )
904	set flag to 0	N/A	N/A	flag = 0 ;	flag = 0 ;
905	else if x1 > x and x2 is less than x then do the following	N/A	N/A	else if ( x1 > x && x2 < x )	else if ( x1 > x && x2 < x )
906	set flag to 0	N/A	N/A	flag = 0 ;	flag = 0 ;
907	else if y1 is less than y and y2 > y then do the following	N/A	N/A	else if ( y1 < y && y2 > y )	else if ( y1 < y && y2 > y )
908	set flag to 0	N/A	N/A	flag = 0 ;	flag = 0 ;
909	else if y1 > y and y2 is less than y then do the following	N/A	N/A	else if ( y1 > y && y2 < y )	else if ( y1 > y && y2 < y )
910	set flag to 0	N/A	N/A	flag = 0 ;	flag = 0 ;
911	DUMMY	0.0	0.0	}	DUMMY
912	if flag is true	N/A	N/A	if ( flag )	if ( flag )
913	output YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
914	else	N/A	N/A	else	else
915	output NO	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
916	DUMMY	0.0	0.0	}	DUMMY
917	boolean function search with int arguments ax , ay , bx , by , cx and cy	N/A	N/A	bool search ( int ax , int ay , int bx , int by , int cx , int cy )	bool search ( int ax, int ay, int bx, int by, int cx, int cy )
918	if bx < ax and cx < ax and by < ay and cy < ay	N/A	N/A	if ( bx < ax && cx < ax && by < ay && cy < ay )	if ( bx < ax && cx < ax and by < ay and cy < ay )
919	return true	N/A	N/A	return true ;	return true ;
920	else if bx < ax and cx < ax and by > ay and cy > ay	N/A	N/A	else if ( bx < ax && cx < ax && by > ay && cy > ay )	else if ( bx < ax && cx < ax and by > ay and cy > ay )
921	return true	N/A	N/A	return true ;	return true ;
922	else if bx > ax and cx > ax and by < ay and cy < ay	N/A	N/A	else if ( bx > ax && cx > ax && by < ay && cy < ay )	else if ( bx < ax && cx > ax && by < ay && cy < ay )
923	return true	N/A	N/A	return true ;	return true ;
924	else if bx > ax and cx > ax and by > ay and cy > ay	N/A	N/A	else if ( bx > ax && cx > ax && by > ay && cy > ay )	else if ( bx > ax && cx > ax and by > ay and cy > ay )
925	return true	N/A	N/A	return true ;	return true ;
926	return false	N/A	N/A	return false ;	return false ;
927	DUMMY	0.0	0.0	}	DUMMY
928	DUMMY	0.0	0.0	int main() {	DUMMY
929	create ints n , ax , ay , bx , by , cx and cy	N/A	N/A	int n , ax , ay , bx , by , cx , cy ;	int n, ax, ay, bx, by, cx, cy ;
930	read n , ax , ay , bx , by , cx and cy	N/A	N/A	cin >> n >> ax >> ay >> bx >> by >> cx >> cy ;	cin >> n >> ax >> ay >> bx >> by >> cx >> cy ;
931	if search ( ax , ay , bx , by , cx , cy ) returns true	N/A	N/A	if ( search ( ax , ay , bx , by , cx , cy ) )	if ( search ( ax, ay, bx, by, cx, cy ) )
932	print " YES "	N/A	N/A	cout << " YES " << endl ;	puts ( " YES " ) ;
933	else	N/A	N/A	else	else
934	print " NO "	N/A	N/A	cout << " NO " << endl ;	cout << " NO\n " ;
935	DUMMY	0.0	0.0	return 0;	DUMMY
936	DUMMY	0.0	0.0	}	DUMMY
937	DUMMY	0.0	0.0	int main() {	DUMMY
938	n , a , b , c = long long int	N/A	N/A	long long int n , a , b , c ;	long long int n, a, b, c ;
939	read n	N/A	N/A	cin >> n ;	cin >> n ;
940	if n is a multiple of 3 or n mod 3 is 1	N/A	N/A	if ( n % 3 == 0 || n % 3 == 1 )	if ( n % 2 == 0 || n % 3 == 1 )
941	set a to n - 2	N/A	N/A	a = n - 2 ;	a = n - 2 ;
942	set b to 1	N/A	N/A	b = 1 ;	b = 1 ;
943	set c to 1	N/A	N/A	c = 1 ;	c = 1 ;
944	else if n mod 3 is 2	N/A	N/A	else if ( n % 3 == 2 )	else if ( n % 3 == 2 )
945	set a to n - 3	N/A	N/A	a = n - 3 ;	a = n - 3 ;
946	set b to 1	N/A	N/A	b = 1 ;	b = 1 ;
947	set c to 2	N/A	N/A	c = 2 ;	c = 2 ;
948	DUMMY	0.0	0.0	}	DUMMY
949	print a and b and c	N/A	N/A	cout << a << " " << b << " " << c << endl ;	cout << a << b << c << endl ;
950	DUMMY	0.0	0.0	}	DUMMY
951	DUMMY	0.0	0.0	int main() {	DUMMY
952	declare integer n	N/A	N/A	int n ;	int n ;
953	declare integer variable c8 = 0	N/A	N/A	int c8 = 0 ;	int c8 = 0 ;
954	read n	N/A	N/A	cin >> n ;	cin >> n ;
955	read from the input input and ignore it	N/A	N/A	cin . ignore ( ) ;	cin. ignore ( ) ;
956	let s be char array with size 101	N/A	N/A	char s [ 101 ] ;	char s [ 101 ] ;
957	read s	N/A	N/A	gets ( s ) ;	cin >> s ;
958	if n > = 11	N/A	N/A	if ( n >= 11 )	if ( n >= 11 )
959	declare integer r = n / 11	N/A	N/A	int r = n / 11 ;	int r = n / 11 ;
960	loop i from 0 while s [ i ] ! = 0 , incrementing i	N/A	N/A	for ( int i = 0 ; s [ i ] ; i ++ )	for ( int i = 0 ; s [ i ]!= 0 ; i ++ )
961	if s [ i ] is equal to ' 8 ' , increment c8	N/A	N/A	if ( s [ i ] == ' 8 ' ) c8 ++ ;	if ( s [ i ] =='8') c8 ++ ;
962	if c8 is equal to r , break the loop	N/A	N/A	if ( c8 == r ) break ;	if ( c8 == r ) break ;
963	DUMMY	0.0	0.0	}	DUMMY
964	print c8	N/A	N/A	cout << c8 << endl ;	cout << c8 << endl ;
965	DUMMY	0.0	0.0	return 0;	DUMMY
966	DUMMY	0.0	0.0	}	DUMMY
967	print c8	N/A	N/A	cout << c8 << endl ;	cout << c8 << endl ;
968	DUMMY	0.0	0.0	return 0;	DUMMY
969	DUMMY	0.0	0.0	}	DUMMY
970	DUMMY	0.0	0.0	int main() {	DUMMY
971	create integers n , num8 , numn and num	N/A	N/A	int n , num8 , numn , num ;	int n, num8, numn, num ;
972	create character array str with 101 element	N/A	N/A	char str [ 101 ] ;	char str [ 101 ] ;
973	read n and loop further	N/A	N/A	while ( cin >> n )	while ( cin >> n )
974	set num8 to 0	N/A	N/A	num8 = 0 ;	num8 = 0 ;
975	read input to str	N/A	N/A	cin >> str ;	cin >> str ;
976	for i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
977	if str [ i ] = ' 8 ' , increment num8 by one	N/A	N/A	if ( str [ i ] == ' 8 ' ) num8 ++ ;	if ( str [ i ] =='8') num8 ++ ;
978	assign n / 11 to numn	N/A	N/A	numn = n / 11 ;	numn = n / 11 ;
979	if num8 is greater than numn	N/A	N/A	if ( num8 > numn )	if ( num8 > numn )
980	change num to numn	N/A	N/A	num = numn ;	num = numn ;
981	else	N/A	N/A	else	else
982	change num to num8	N/A	N/A	num = num8 ;	num = num8 ;
983	print num	N/A	N/A	cout << num << endl ;	cout << num << endl ;
984	DUMMY	0.0	0.0	}	DUMMY
985	DUMMY	0.0	0.0	return 0;	DUMMY
986	DUMMY	0.0	0.0	}	DUMMY
987	DUMMY	0.0	0.0	int main() {	DUMMY
988	st , s = string	N/A	N/A	string st , s ;	string st, s ;
989	i , a , b , count = int with count = 0	N/A	N/A	int i , a , b , count = 0 ;	int i, a, b, count = 0 ;
990	read a then st	N/A	N/A	cin >> a >> st ;	cin >> a >> st ;
991	set b to a / 11	N/A	N/A	b = a / 11 ;	b = a / 11 ;
992	for i = 0 to a	N/A	N/A	for ( i = 0 ; i < a ; i ++ )	for ( i = 0 ; i < a ; i ++ )
993	if st [ i ] is ' 8 ' then increment count	N/A	N/A	if ( st [ i ] == ' 8 ' ) { count ++ ; }	if ( st [ i ] =='8') count ++ ;
994	DUMMY	0.0	0.0	}	DUMMY
995	if count is less than b	N/A	N/A	if ( count < b )	if ( count < b )
996	print count	N/A	N/A	cout << count << endl ;	cout << count << endl ;
997	else	N/A	N/A	else	else
998	print b	N/A	N/A	cout << b << endl ;	cout << b << endl ;
999	DUMMY	0.0	0.0	}	DUMMY
1000	DUMMY	0.0	0.0	return 0;	DUMMY
1001	DUMMY	0.0	0.0	}	DUMMY
1002	DUMMY	0.0	0.0	int main() {	DUMMY
1003	s = character array of size 101	N/A	N/A	char s [ 101 ] ;	char s [ 101 ] ;
1004	n , i = integers , sum8 = integer = 0 , sum = integer = 0 , total = integer = 0	N/A	N/A	int n , i , sum8 = 0 , sum = 0 , total = 0 ;	int n, i, sum8 = 0, sumn = 1, total = 0 ;
1005	read n	N/A	N/A	cin >> n ;	cin >> n ;
1006	read s	N/A	N/A	cin >> s ;	cin >> s ;
1007	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
1008	if s [ i ] is 8 , then increase sum8 by 1	N/A	N/A	if ( s [ i ] == ' 8 ' ) sum8 ++ ;	if ( s [ i ] =='8') sum8 ++ ;
1009	increase sum by 1	N/A	N/A	sum ++ ;	sum ++ ;
1010	DUMMY	0.0	0.0	}	DUMMY
1011	if sum8 > = sum / 11	N/A	N/A	if ( sum8 >= sum / 11 )	if ( sum8 >= sum / 11 )
1012	total = sum / 11	N/A	N/A	total = sum / 11 ;	total = sum / 11 ;
1013	else	N/A	N/A	else	else
1014	total = sum8	N/A	N/A	total = sum8 ;	total = sum8 ;
1015	print total	N/A	N/A	cout << total << endl ;	cout << total << endl ;
1016	DUMMY	0.0	0.0	return 0;	DUMMY
1017	DUMMY	0.0	0.0	}	DUMMY
1018	DUMMY	0.0	0.0	int main() {	DUMMY
1019	create character array s with size 101	N/A	N/A	char s [ 101 ] ;	char s [ 101 ] ;
1020	create integers n , i , sum8 , sum , total , with sum8 = 0 , sum = 0 , total = 0	N/A	N/A	int n , i , sum8 = 0 , sum = 0 , total = 0 ;	int n, i, sum8 = 0, sum, total = 0 ;
1021	read n	N/A	N/A	cin >> n ;	cin >> n ;
1022	read s	N/A	N/A	cin >> s ;	cin >> s ;
1023	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
1024	if s [ i ] is ' 8 ' , increment sum8	N/A	N/A	if ( s [ i ] == ' 8 ' ) sum8 ++ ;	if ( s [ i ] =='8') sum8 ++ ;
1025	increment sum	N/A	N/A	sum ++ ;	sum ++ ;
1026	DUMMY	0.0	0.0	}	DUMMY
1027	if sum8 is greater than or equal to sum / 11	N/A	N/A	if ( sum8 >= sum / 11 )	if ( sum8 >= sum / 11 )
1028	set total to sum / 11	N/A	N/A	total = sum / 11 ;	total = sum / 11 ;
1029	else	N/A	N/A	else	else
1030	set total to sum8	N/A	N/A	total = sum8 ;	total = sum8 ;
1031	print total print newline	N/A	N/A	cout << total << endl ;	cout << total << endl ;
1032	DUMMY	0.0	0.0	return 0;	DUMMY
1033	DUMMY	0.0	0.0	}	DUMMY
1034	DUMMY	0.0	0.0	int main() {	DUMMY
1035	create string s	N/A	N/A	string s ;	string s ;
1036	create int n and sum , set to sum 0	N/A	N/A	int n , sum = 0 ;	int n, sum = 0 ;
1037	read n	N/A	N/A	cin >> n ;	cin >> n ;
1038	read s	N/A	N/A	cin >> s ;	cin >> s ;
1039	for i = 0 to length of s exclusive	N/A	N/A	for ( int i = 0 ; i < s . length ( ) ; i ++ )	for ( int i = 0 ; i < s. length ( ) ; i ++ )
1040	if s [ i ] equal to 8 , increment sum	N/A	N/A	if ( s [ i ] == ' 8 ' ) sum ++ ;	if ( s [ i ] =='8') sum ++ ;
1041	DUMMY	0.0	0.0	}	DUMMY
1042	if n / 11 greater than 11	N/A	N/A	if ( n / 11 < sum )	if ( n / 11 > 11 )
1043	print n / 11	N/A	N/A	cout << ( n / 11 ) << endl ;	cout << n / 11 << endl ;
1044	else	N/A	N/A	else	else
1045	print sum and a newline	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
1046	DUMMY	0.0	0.0	}	DUMMY
1047	set N to 1e6 + 10	N/A	N/A	const int N = 1e6 + 10 ;	const int N = 1e6 + 10 ;
1048	mod = 998244353	N/A	N/A	const int mod = 998244353 ;	const int mod = 998244353 ;
1049	create int n	N/A	N/A	int n ;	int n ;
1050	create string x	N/A	N/A	string x ;	string x ;
1051	create map m from int to int	N/A	N/A	map < int , int > m ;	map < int, int > m ;
1052	DUMMY	0.0	0.0	int main() {	DUMMY
1053	read n and x	N/A	N/A	cin >> n >> x ;	cin >> n >> x ;
1054	for i = 0 to n exclusive , increment m [ x [ i ] - 0 ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) m [ x [ i ] - ' 0 ' ] ++ ;	for ( int i = 0 ; i < n ; i ++ ) m [ x [ i ] -'0'] ++ ;
1055	set s to size of x	N/A	N/A	int s = x . size ( ) ;	int s = x. size ( ) ;
1056	print min of m [ 8 ] and s / 11	N/A	N/A	cout << min ( m [ 8 ] , s / 11 ) << endl ;	cout << min ( m [ 8 ], s / 11 ) << endl ;
1057	DUMMY	0.0	0.0	}	DUMMY
1058	DUMMY	0.0	0.0	int main() {	DUMMY
1059	n , k = integers with k = 0	N/A	N/A	int n , k = 0 ;	int n, k = 0 ;
1060	Read n	N/A	N/A	cin >> n ;	cin >> n ;
1061	s = string	N/A	N/A	string s ;	string s ;
1062	Read s	N/A	N/A	cin >> s ;	cin >> s ;
1063	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
1064	if s [ i ] is 8 , then increment k	N/A	N/A	if ( s [ i ] == ' 8 ' ) { k ++ ; }	if ( s [ i ] =='8') k ++ ;
1065	DUMMY	0.0	0.0	}	DUMMY
1066	print minimum value of n / 11 and k and a new line	N/A	N/A	cout << min ( n / 11 , k ) << endl ;	cout << min ( n / 11, k ) << endl ;
1067	DUMMY	0.0	0.0	return 0;	DUMMY
1068	DUMMY	0.0	0.0	}	DUMMY
1069	MAX = const int with MAX = 100000	N/A	N/A	const int MAX = 100000 ;	const int MAX = 100000 ;
1070	IN = const int with INF = 1000000001	N/A	N/A	const int INF = 1000000001 ;	const int IN = 1000000001 ;
1071	a = int array of size MAX	N/A	N/A	int a [ MAX ] ;	int a [ MAX ] ;
1072	n , sum = int with sum = 0	N/A	N/A	int n , sum = 0 ;	int n, sum = 0 ;
1073	s = string	N/A	N/A	string s ;	string s ;
1074	DUMMY	0.0	0.0	int main() {	DUMMY
1075	read n	N/A	N/A	cin >> n ;	cin >> n ;
1076	read s	N/A	N/A	cin >> s ;	cin >> s ;
1077	len = int with len = length of s	N/A	N/A	int len = s . length ( ) ;	int len = s. length ( ) ;
1078	for i = 0 to len increment sum if s [ i ] is ' 8 '	N/A	N/A	for ( int i = 0 ; i < len ; ++ i ) sum += ( s [ i ] == ' 8 ' ) ;	for ( int i = 0 ; i < len ; i ++ ) { sum += s [ i ] =='8'; }
1079	res = int with res = n / 11	N/A	N/A	int res = n / 11 ;	int res = n / 11 ;
1080	if sum is less or equal to res	N/A	N/A	if ( sum <= res )	if ( sum <= res )
1081	print sum	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
1082	else	N/A	N/A	else	else
1083	print res	N/A	N/A	cout << res << endl ;	cout << res << endl ;
1084	DUMMY	0.0	0.0	return 0;	DUMMY
1085	DUMMY	0.0	0.0	}	DUMMY
1086	DUMMY	0.0	0.0	int main() {	DUMMY
1087	n = integer	N/A	N/A	int n ;	int n ;
1088	Read n	N/A	N/A	cin >> n ;	cin >> n ;
1089	number = string	N/A	N/A	string number ;	string number ;
1090	Read number	N/A	N/A	cin >> number ;	cin >> number ;
1091	has_eight = integer with 0	N/A	N/A	int has_eight = 0 ;	int has_eight = 0 ;
1092	for i = 0 to length of string number exclusive	N/A	N/A	for ( int i = 0 ; i < number . length ( ) ; i ++ )	for ( int i = 0 ; i < number. length ( ) ; i ++ )
1093	if number [ i ] is 8 , then increment has_eight	N/A	N/A	if ( number [ i ] == ' 8 ' ) has_eight ++ ;	if ( number [ i ] =='8') has_eight ++ ;
1094	if n is less than 11 OR has_eight is 0	N/A	N/A	if ( n < 11 || has_eight == 0 )	if ( n < 11 || has_eight == 0 )
1095	print 0 and a new line	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
1096	DUMMY	0.0	0.0	return 0;	DUMMY
1097	DUMMY	0.0	0.0	}	DUMMY
1098	if ( n / 11 ) is greater than or equal to has_eight	N/A	N/A	if ( ( n / 11 ) >= has_eight )	if ( ( n / 11 ) >= has_eight )
1099	print has_eight and a new line	N/A	N/A	cout << has_eight << endl ;	cout << has_eight << endl ;
1100	else if ( n / 11 ) is less than has_eight	N/A	N/A	else if ( ( n / 11 ) < has_eight )	else if ( ( n / 11 ) < has_eight )
1101	print n / 11 and a new line	N/A	N/A	cout << n / 11 << endl ;	cout << n / 11 << endl ;
1102	DUMMY	0.0	0.0	}	DUMMY
1103	DUMMY	0.0	0.0	int main() {	DUMMY
1104	declare integer variables n and count with count = 0	N/A	N/A	int n , count = 0 ;	int n, count = 0 ;
1105	read n	N/A	N/A	cin >> n ;	cin >> n ;
1106	create character c	N/A	N/A	char c ;	char c ;
1107	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
1108	read c	N/A	N/A	cin >> c ;	cin >> c ;
1109	if c = ' 8 ' , increment count	N/A	N/A	if ( c == ' 8 ' ) count ++ ;	if ( c =='8') count ++ ;
1110	DUMMY	0.0	0.0	}	DUMMY
1111	if n < 11 or count = 0	N/A	N/A	if ( n < 11 || count == 0 )	if ( n < 11 || count == 0 )
1112	print 0	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
1113	DUMMY	0.0	0.0	return 0;	DUMMY
1114	DUMMY	0.0	0.0	;	DUMMY
1115	DUMMY	0.0	0.0	}	DUMMY
1116	print min of count and n / 11	N/A	N/A	cout << min ( count , n / 11 ) << endl ;	cout << min ( count, n / 11 ) << endl ;
1117	DUMMY	0.0	0.0	return 0;	DUMMY
1118	DUMMY	0.0	0.0	;	DUMMY
1119	DUMMY	0.0	0.0	}	DUMMY
1120	k , i , n , ans , m = integers	N/A	N/A	int k , i , n , ans , m ;	int k, i, n, ans, m ;
1121	s = string	N/A	N/A	string s ;	string s ;
1122	DUMMY	0.0	0.0	int main() {	DUMMY
1123	read n , s	N/A	N/A	cin >> n >> s ;	cin >> n >> s ;
1124	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
1125	if s [ i ] is 8 , increment k	N/A	N/A	if ( s [ i ] == ' 8 ' ) k ++ ;	if ( s [ i ] =='8') k ++ ;
1126	DUMMY	0.0	0.0	}	DUMMY
1127	ans = min of k and n / 11	N/A	N/A	ans = min ( k , n / 11 ) ;	ans = min ( k, n / 11 ) ;
1128	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
1129	DUMMY	0.0	0.0	}	DUMMY
1130	DUMMY	0.0	0.0	int main() {	DUMMY
1131	n = int	N/A	N/A	int n ;	int n ;
1132	read n	N/A	N/A	cin >> n ;	cin >> n ;
1133	s = string	N/A	N/A	string s ;	string s ;
1134	read s	N/A	N/A	cin >> s ;	cin >> s ;
1135	eight , other = int with eight = 0 and other = 0	N/A	N/A	int eight = 0 , other = 0 ;	int eight = 0, other = 0 ;
1136	for i = 0 to n	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
1137	if s [ i ] is ' 8 '	N/A	N/A	if ( s [ i ] == ' 8 ' )	if ( s [ i ] =='8')
1138	increment eight	N/A	N/A	eight ++ ;	eight ++ ;
1139	else	N/A	N/A	else	else
1140	increment other	N/A	N/A	other ++ ;	other ++ ;
1141	DUMMY	0.0	0.0	}	DUMMY
1142	if eight is 0	N/A	N/A	if ( eight == 0 )	if ( eight == 0 )
1143	print 0	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
1144	else	N/A	N/A	else	else
1145	ans = int with ans = other / 10	N/A	N/A	int ans = other / 10 ;	int ans = other / 10 ;
1146	if ans is greater than eight	N/A	N/A	if ( ans > eight )	if ( ans > eight )
1147	print eight	N/A	N/A	cout << eight << endl ;	cout << eight << endl ;
1148	DUMMY	0.0	0.0	return 0;	DUMMY
1149	DUMMY	0.0	0.0	}	DUMMY
1150	if eight - ans is 0	N/A	N/A	if ( eight - ans == 0 )	if ( eight - ans == 0 )
1151	print ans	N/A	N/A	cout << ans << endl ;	cout << ans ;
1152	else	N/A	N/A	else	else
1153	print ( ( ( eight - ans ) + ( other mod 10 ) ) / 11 ) + ans	N/A	N/A	cout << ( ( ( eight - ans ) + ( other % 10 ) ) / 11 ) + ans << endl ;	cout << ( ( ( eight - ans ) + ( other % 10 ) ) / 11 ) + ans << endl ;
1154	DUMMY	0.0	0.0	}	DUMMY
1155	DUMMY	0.0	0.0	}	DUMMY
1156	DUMMY	0.0	0.0	}	DUMMY
1157	DUMMY	0.0	0.0	int main() {	DUMMY
1158	create integers n , i and cnt where i and cnt = 0	N/A	N/A	int n , i = 0 , cnt = 0 ;	int n, i = 0, cnt = 0 ;
1159	create string s	N/A	N/A	string s ;	string s ;
1160	read n and s	N/A	N/A	cin >> n >> s ;	cin >> n >> s ;
1161	while s [ i ] ! = ' \ 0 '	N/A	N/A	while ( s [ i ] != ' \0 ' )	while ( s [ i ]!='\0')
1162	if s [ i ] = ' 8 ' , increment cnt by one	N/A	N/A	if ( s [ i ] == ' 8 ' ) cnt ++ ;	if ( s [ i ] =='8') cnt ++ ;
1163	increment i	N/A	N/A	i ++ ;	i ++ ;
1164	DUMMY	0.0	0.0	}	DUMMY
1165	if n > = 11 and n / 11 < = cnt and cnt ! = 0	N/A	N/A	if ( n >= 11 && n / 11 <= cnt && cnt != 0 )	if ( n >= 11 && n / 11 <= cnt && cnt!= 0 )
1166	print n / 11 and " \ n "	N/A	N/A	cout << n / 11 << " \n " ;	cout << n / 11 << " \n " ;
1167	else if n > = 11 & & n / 11 > = cnt & & cnt ! = 0	N/A	N/A	else if ( n >= 11 && n / 11 >= cnt && cnt != 0 )	else if ( n >= 11 && n / 11 >= cnt && cnt!= 0 )
1168	print cnt and " \ n "	N/A	N/A	cout << cnt << " \n " ;	cout << cnt << " \n " ;
1169	else	N/A	N/A	else	else
1170	print " 0 \ n "	N/A	N/A	cout << " 0\n " ;	cout << " 0\n " ;
1171	DUMMY	0.0	0.0	return 0;	DUMMY
1172	DUMMY	0.0	0.0	}	DUMMY
1173	DUMMY	0.0	0.0	int main() {	DUMMY
1174	create string s	N/A	N/A	string s ;	string s ;
1175	declare integers n and sum with sum = 0	N/A	N/A	int n , sum = 0 ;	int n, sum = 0 ;
1176	read n	N/A	N/A	cin >> n ;	cin >> n ;
1177	read s	N/A	N/A	cin >> s ;	cin >> s ;
1178	for i from 0 to length of s exclusive	N/A	N/A	for ( int i = 0 ; i < s . length ( ) ; i ++ )	for ( int i = 0 ; i < s. length ( ) ; i ++ )
1179	if s [ i ] = ' 8 ' , increment sum	N/A	N/A	if ( s [ i ] == ' 8 ' ) sum ++ ;	if ( s [ i ] =='8') sum ++ ;
1180	DUMMY	0.0	0.0	}	DUMMY
1181	if n / 11 is less than sum	N/A	N/A	if ( n / 11 < sum )	if ( n / 11 < sum )
1182	print n / 11	N/A	N/A	cout << ( n / 11 ) << endl ;	cout << n / 11 << endl ;
1183	else	N/A	N/A	else	else
1184	print sum	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
1185	DUMMY	0.0	0.0	}	DUMMY
1186	DUMMY	0.0	0.0	int main() {	DUMMY
1187	declare int variable n	N/A	N/A	int n ;	int n ;
1188	declare string variable num	N/A	N/A	string num ;	string num ;
1189	read n and num	N/A	N/A	cin >> n >> num ;	cin >> n >> num ;
1190	declare int count = 0	N/A	N/A	int count = 0 ;	int count = 0 ;
1191	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
1192	if num [ i ] is equal to ' 8 ' , increment count by one	N/A	N/A	if ( num [ i ] == ' 8 ' ) { count ++ ; }	if ( num [ i ] =='8') count ++ ;
1193	DUMMY	0.0	0.0	}	DUMMY
1194	print count if n / 11 > count and n / 11 otherwise	N/A	N/A	cout << ( n / 11 > count ? count : n / 11 ) << endl ;	cout << ( ( n / 11 > count )? count : num / 11 ) << endl ;
1195	DUMMY	0.0	0.0	}	DUMMY
1196	DUMMY	0.0	0.0	int main() {	DUMMY
1197	n , i , no_of_8 , groups = integers with no_of_8 = 0	N/A	N/A	int n , i , no_of_8 = 0 , groups ;	int n, i, no_of_8 = 0, groups ;
1198	c = character	N/A	N/A	char c ;	char c ;
1199	Read n	N/A	N/A	cin >> n ;	cin >> n ;
1200	for i = 1 to n exclusive	N/A	N/A	for ( i = 1 ; i <= n ; i ++ )	for ( i = 1 ; i <= n ; i ++ )
1201	Read c	N/A	N/A	cin >> c ;	cin >> c ;
1202	f c is 8 , then increment no_of_8	N/A	N/A	if ( c == ' 8 ' ) no_of_8 ++ ;	if ( c == 8 ) no_of_8 ++ ;
1203	DUMMY	0.0	0.0	}	DUMMY
1204	set groups to n / 11	N/A	N/A	groups = n / 11 ;	int groups = n / 11 ;
1205	if no_of_8 is greater than or equal to groups	N/A	N/A	if ( no_of_8 >= groups )	if ( no_of_8 >= groups )
1206	print groups and a new line	N/A	N/A	cout << groups << endl ;	cout << groups << endl ;
1207	else do the following	N/A	N/A	else	else
1208	print no_of_8 and a new line	N/A	N/A	cout << no_of_8 << endl ;	cout << no_of_8 << endl ;
1209	DUMMY	0.0	0.0	return 0;	DUMMY
1210	DUMMY	0.0	0.0	}	DUMMY
1211	DUMMY	0.0	0.0	int main() {	DUMMY
1212	create integer n	N/A	N/A	int n ;	int n ;
1213	read n	N/A	N/A	cin >> n ;	cin >> n ;
1214	declare integer ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
1215	create char array s with 101 element	N/A	N/A	char s [ 101 ] ;	char s [ 101 ] ;
1216	read s	N/A	N/A	cin >> s ;	cin >> s ;
1217	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
1218	if s [ i ] = ' 8 ' , increment ans by 1	N/A	N/A	if ( s [ i ] == ' 8 ' ) ans ++ ;	if ( s [ i ] =='8') ans ++ ;
1219	DUMMY	0.0	0.0	}	DUMMY
1220	if ans is equal to 0 or n / 11 is equal to 0	N/A	N/A	if ( ans == 0 || n / 11 == 0 )	if ( ans == 0 || n / 11 == 0 )
1221	print 0	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
1222	else if ans > n / 11	N/A	N/A	else if ( ans > n / 11 )	else if ( ans > n / 11 )
1223	print n / 11	N/A	N/A	cout << n / 11 << endl ;	cout << n / 11 << endl ;
1224	else	N/A	N/A	else	else
1225	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
1226	DUMMY	0.0	0.0	return 0;	DUMMY
1227	DUMMY	0.0	0.0	}	DUMMY
1228	DUMMY	0.0	0.0	int main() {	DUMMY
1229	create int	N/A	N/A	int t ;	int n ;
1230	read t	N/A	N/A	cin >> t ;	cin >> t ;
1231	while decrement t	N/A	N/A	while ( t -- )	while ( t -- )
1232	n and k = int	N/A	N/A	int n , k ;	int n, k ;
1233	read n , k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
1234	set flag = 0	N/A	N/A	int flag = 0 ;	int flag = 0 ;
1235	for i = 0 to n / k exclusive	N/A	N/A	for ( int i = 0 ; i < ( n / k ) ; i ++ )	for ( int i = 0 ; i < n / k ; i ++ )
1236	for j = 0 to k exclusive	N/A	N/A	for ( int j = 0 ; j < k ; j ++ )	for ( int j = 0 ; j < k ; j ++ )
1237	print char ( 97 + j )	N/A	N/A	cout << char ( 97 + j ) ;	cout << char ( 97 + j ) << endl ;
1238	assign j to flag	N/A	N/A	flag = j ;	flag = j ;
1239	DUMMY	0.0	0.0	}	DUMMY
1240	DUMMY	0.0	0.0	}	DUMMY
1241	for i = 0 to n - ( n / k ) * k exclusive , print char ( 97 + flag )	N/A	N/A	for ( int i = 0 ; i < n - ( n / k ) * k ; i ++ ) { cout << char ( 97 + flag ) ; }	for ( int i = 0 ; i < n - ( n / k ) * k ; i ++ ) { cout << char ( 97 + flag ) ; }
1242	print a newline	N/A	N/A	cout << endl ;	cout << endl ;
1243	DUMMY	0.0	0.0	}	DUMMY
1244	DUMMY	0.0	0.0	}	DUMMY
1245	DUMMY	0.0	0.0	int main() {	DUMMY
1246	create integer n	N/A	N/A	int n ;	int n ;
1247	create string s	N/A	N/A	string s ;	string s ;
1248	read n	N/A	N/A	cin >> n ;	cin >> n ;
1249	read s	N/A	N/A	cin >> s ;	cin >> s ;
1250	create string t with t = " "	N/A	N/A	string t = " " ;	string t = " " ;
1251	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
1252	create integer k with k = ( i * ( i + 1 ) ) / 2	N/A	N/A	int k = ( i * ( i + 1 ) ) / 2 ;	int k = ( i * ( i + 1 ) ) / 2 ;
1253	if k is greater than or equal to n , break loop	N/A	N/A	if ( k >= n ) { break ; }	if ( k >= n ) break ;
1254	set t to t + s [ k ]	N/A	N/A	t = t + s [ k ] ;	t += s [ k ] ;
1255	DUMMY	0.0	0.0	}	DUMMY
1256	print t print newline	N/A	N/A	cout << t << endl ;	cout << t << endl ;
1257	DUMMY	0.0	0.0	return 0;	DUMMY
1258	DUMMY	0.0	0.0	}	DUMMY
1259	create long longs x , y and z , with z = 1	N/A	N/A	long long x , y , z = 1 ;	long long x, y, z = 1 ;
1260	declare string variables s and ss	N/A	N/A	string s , ss ;	string s, ss ;
1261	DUMMY	0.0	0.0	int main() {	DUMMY
1262	read x and s	N/A	N/A	cin >> x >> s ;	cin >> x >> s ;
1263	for integer i = 0 to x exclusive	N/A	N/A	for ( int i = 0 ; i < x ; )	for ( int i = 0 ; i < x ; i ++ )
1264	increase ss by s [ i ]	N/A	N/A	ss += s [ i ] ;	ss += s [ i ] ;
1265	increase i by z	N/A	N/A	i += z ;	i += z ;
1266	increment z	N/A	N/A	z ++ ;	z ++ ;
1267	DUMMY	0.0	0.0	}	DUMMY
1268	print ss and a new line	N/A	N/A	cout << ss << endl ;	cout << ss << endl ;
1269	DUMMY	0.0	0.0	return 0;	DUMMY
1270	DUMMY	0.0	0.0	}	DUMMY
1271	DUMMY	0.0	0.0	int main() {	DUMMY
1272	v = vector of characters	N/A	N/A	vector < char > v ;	vector < char > v ;
1273	s = vector of characters	N/A	N/A	vector < char > s ;	vector < char > s ;
1274	count and size are integers , with count = 1	N/A	N/A	int count = 1 , size ;	int count = 1, size ;
1275	declare character variable called c	N/A	N/A	char c ;	char c ;
1276	read size	N/A	N/A	cin >> size ;	cin >> size ;
1277	for integer i = 0 to size exclusive	N/A	N/A	for ( int i = 0 ; i < size ; i ++ )	for ( int i = 0 ; i < size ; i ++ )
1278	read c	N/A	N/A	cin >> c ;	cin >> c ;
1279	push c into v	N/A	N/A	v . push_back ( c ) ;	v. push_back ( c ) ;
1280	DUMMY	0.0	0.0	}	DUMMY
1281	let in and i be integers , with i = 0	N/A	N/A	int in , i = 0 ;	int in, i = 0 ;
1282	while i is less than size	N/A	N/A	while ( i < size )	while ( i < size )
1283	if i = 0	N/A	N/A	if ( i == 0 )	if ( i == 0 )
1284	push v [ i ] into s	N/A	N/A	s . push_back ( v [ i ] ) ;	s. push_back ( v [ i ] ) ;
1285	increase i by one	N/A	N/A	i ++ ;	i ++ ;
1286	else	N/A	N/A	else	else
1287	set value of in to count	N/A	N/A	in = count ;	in = count ;
1288	for integer j = 0 to in exclusive	N/A	N/A	for ( int j = 0 ; j < in ; j ++ ) { i ++ ; }	for ( int j = 0 ; j < in ; j ++ )
1289	if i is less than size push v [ i ] into s	N/A	N/A	if ( i < size ) s . push_back ( v [ i ] ) ;	if ( i < size ) s. push ( v [ i ] ) ;
1290	increase count	N/A	N/A	count ++ ;	count ++ ;
1291	DUMMY	0.0	0.0	}	DUMMY
1292	DUMMY	0.0	0.0	}	DUMMY
1293	for integer i = 0 to length of s exclusive , print s [ i ]	N/A	N/A	for ( int i = 0 ; i < s . size ( ) ; i ++ ) { cout << s [ i ] ; }	for ( int i = 0 ; i < s. size ( ) ; i ++ ) { cout << s [ i ] ; }
1294	print new line	N/A	N/A	cout << endl ;	cout << endl ;
1295	DUMMY	0.0	0.0	return 0;	DUMMY
1296	DUMMY	0.0	0.0	}	DUMMY
1297	DUMMY	0.0	0.0	int main() {	DUMMY
1298	declare integer variable called n	N/A	N/A	int n ;	int n ;
1299	read n	N/A	N/A	cin >> n ;	cin >> n ;
1300	let a be string	N/A	N/A	string a ;	string a ;
1301	read a	N/A	N/A	cin >> a ;	cin >> a ;
1302	for integer i = 1 while i * ( i + 1 ) / 2 < n + 1 , print a [ ( i * ( i + 1 ) / 2 ) - 1 ]	N/A	N/A	for ( int i = 1 ; i * ( i + 1 ) / 2 < n + 1 ; i ++ ) { cout << a [ ( i * ( i + 1 ) / 2 ) - 1 ] ; }	for ( int i = 1 ; i * ( i + 1 ) / 2 < n + 1 ; ++ i ) { cout << a [ ( i ) * ( ( long long ) i + 2 ) - 1 ] ; }
1303	print new line	N/A	N/A	cout << endl ;	cout << endl ;
1304	DUMMY	0.0	0.0	return 0;	DUMMY
1305	DUMMY	0.0	0.0	}	DUMMY
1306	DUMMY	0.0	0.0	int main() {	DUMMY
1307	create integers n , sum , index	N/A	N/A	int n , sum , index ;	int n, sum, index ;
1308	create character arrays s , a , with s size 55 , a size 55	N/A	N/A	char s [ 55 ] , a [ 55 ] ;	char s [ 55 ] = {'a ','i'} ;
1309	read n read s	N/A	N/A	cin >> n >> s ;	cin >> n >> s ;
1310	set sum to index to 0	N/A	N/A	sum = index = 0 ;	sum = index = 0 ;
1311	for i = 0	N/A	N/A	for ( int i = 0 ; ; i ++ )	for ( int i = 0 ; ; i ++ )
1312	increment index by i	N/A	N/A	index += i ;	index += i ;
1313	if index is greater than or equal to n , break loop	N/A	N/A	if ( index >= n ) break ;	if ( index >= n ) break ;
1314	set a [ increment sum ] to s [ index ]	N/A	N/A	a [ sum ++ ] = s [ index ] ;	a [ ++ sum ] = s [ index ] ;
1315	DUMMY	0.0	0.0	}	DUMMY
1316	set a [ sum ] to ' \ 0 '	N/A	N/A	a [ sum ] = ' \0 ' ;	a [ sum ] ='\0';
1317	print a print newline	N/A	N/A	cout << a << endl ;	cout << a << endl ;
1318	DUMMY	0.0	0.0	return 0;	DUMMY
1319	DUMMY	0.0	0.0	}	DUMMY
1320	define function compare with arguments p1 and p2 of type pair of string and int	N/A	N/A	int compare ( pair < string , int > p1 , pair < string , int > p2 )	pair < string, int > compare ( string > p1, string < int > p2 )
1321	return true if p1 . second > p2 . second or false if it is not	N/A	N/A	return ( p1 . second > p2 . second ) ;	return p1. second > p2. second ;
1322	DUMMY	0.0	0.0	}	DUMMY
1323	DUMMY	0.0	0.0	int main() {	DUMMY
1324	n is integer	N/A	N/A	int n ;	int n ;
1325	read n	N/A	N/A	cin >> n ;	cin >> n ;
1326	declare string called s	N/A	N/A	string s ;	string s ;
1327	read s	N/A	N/A	cin >> s ;	cin >> s ;
1328	declare string variable called ans = " "	N/A	N/A	string ans = " " ;	string ans = " " ;
1329	declare integer called h = 1	N/A	N/A	int h = 1 ;	int h = 1 ;
1330	declare integer variable called c = 1	N/A	N/A	int c = 1 ;	int c = 1 ;
1331	for integer i = 0 to length of s exclusive	N/A	N/A	for ( int i = 0 ; i < int ( s . size ( ) ) ; i ++ )	for ( int i = 0 ; i < s. length ( ) ; i ++ )
1332	if c = h	N/A	N/A	if ( c == h )	if ( c == h )
1333	increase ans by s [ i ]	N/A	N/A	ans += s [ i ] ;	ans += s [ i ] ;
1334	increment h	N/A	N/A	h ++ ;	h ++ ;
1335	c = 1	N/A	N/A	c = 1 ;	c = 1 ;
1336	else	N/A	N/A	else	else
1337	increase c by one	N/A	N/A	c ++ ;	c ++ ;
1338	DUMMY	0.0	0.0	}	DUMMY
1339	print ans and a new line	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
1340	read n	N/A	N/A	cin >> n ;	cin >> n ;
1341	DUMMY	0.0	0.0	}	DUMMY
1342	s , d = strings	N/A	N/A	string s , sd ;	string s, d ;
1343	n , i , l = long long	N/A	N/A	long long n , i , l ;	long long n, i, l ;
1344	DUMMY	0.0	0.0	int main() {	DUMMY
1345	read n	N/A	N/A	cin >> n ;	cin >> n ;
1346	read s	N/A	N/A	cin >> s ;	cin >> s ;
1347	while n is not 0	N/A	N/A	while ( n != 0 )	while ( n!= 0 )
1348	increment l	N/A	N/A	l ++ ;	l ++ ;
1349	n = n - l	N/A	N/A	n -= l ;	n -= l ;
1350	DUMMY	0.0	0.0	}	DUMMY
1351	for i = 1 to less or equal l	N/A	N/A	for ( i = 1 ; i <= l ; i ++ )	for ( int i = 1 ; i <= l ; i ++ )
1352	sd = sd + s [ 0 ]	N/A	N/A	sd = sd + s [ 0 ] ;	sd += s [ 0 ] ;
1353	Erases the portion of the string	N/A	N/A	s . erase ( 0 , i ) ;	cin. ignore ( ) ;
1354	DUMMY	0.0	0.0	}	DUMMY
1355	print sd and new line	N/A	N/A	cout << sd << endl ;	cout << sd << endl ;
1356	DUMMY	0.0	0.0	return 0;	DUMMY
1357	DUMMY	0.0	0.0	}	DUMMY
1358	DUMMY	0.0	0.0	int main() {	DUMMY
1359	create string a	N/A	N/A	string a ;	string a ;
1360	create integers n , num , l with num = 0 , l = 2	N/A	N/A	int n , num = 0 , l = 2 ;	int n, num = 0, l = 2 ;
1361	read n read a	N/A	N/A	cin >> n >> a ;	cin >> n >> a ;
1362	while true	N/A	N/A	while ( true )	while ( true )
1363	if num is less than n - 1	N/A	N/A	if ( num < n - 1 )	if ( num < n - 1 )
1364	print a [ num ]	N/A	N/A	cout << a [ num ] ;	cout << a [ num ] << endl ;
1365	increment num by l	N/A	N/A	num += l ;	num += l ;
1366	increment l	N/A	N/A	l ++ ;	l ++ ;
1367	else	N/A	N/A	else	else
1368	print a [ num ] print newline	N/A	N/A	cout << a [ num ] << endl ;	cout << a [ num ] << endl ;
1369	break loop	N/A	N/A	break ;	break ;
1370	DUMMY	0.0	0.0	}	DUMMY
1371	DUMMY	0.0	0.0	}	DUMMY
1372	DUMMY	0.0	0.0	return 0;	DUMMY
1373	DUMMY	0.0	0.0	}	DUMMY
1374	DUMMY	0.0	0.0	int main() {	DUMMY
1375	create long long n	N/A	N/A	long long n ;	long long n ;
1376	read n	N/A	N/A	cin >> n ;	cin >> n ;
1377	create string palabra	N/A	N/A	string palabra ;	string palabra ;
1378	read palabra	N/A	N/A	cin >> palabra ;	cin >> palabra ;
1379	create string answer with answer = " "	N/A	N/A	string answer = " " ;	string answer = " " ;
1380	create long long aumento with aumento = 1	N/A	N/A	long long aumento = 1 ;	long long aumento = 1 ;
1381	for i = 0 to n exclusive , setting i to i + aumento	N/A	N/A	for ( long long i = 0 ; i < n ; i = i + aumento )	for ( long long i = 0 ; i < n ; i += aumento )
1382	add element substring of palabra from i to 1 to end of answer	N/A	N/A	answer . append ( palabra . substr ( i , 1 ) ) ;	answer. push_back ( palabra. substr ( i, 1 ) ) ;
1383	increment aumento	N/A	N/A	aumento ++ ;	aumento ++ ;
1384	DUMMY	0.0	0.0	}	DUMMY
1385	print answer print newline	N/A	N/A	cout << answer << endl ;	cout << answer << endl ;
1386	DUMMY	0.0	0.0	return 0;	DUMMY
1387	DUMMY	0.0	0.0	}	DUMMY
1388	DUMMY	0.0	0.0	int main() {	DUMMY
1389	create integers n , sum , index	N/A	N/A	int n , sum , index ;	int n, sum, index ;
1390	create character arrays s , a , with s size 56 , a size 56	N/A	N/A	char s [ 56 ] , a [ 56 ] ;	char s [ 55 ], a [ 56 ] ;
1391	read n read s	N/A	N/A	cin >> n >> s ;	cin >> n >> s ;
1392	set sum to index to 0	N/A	N/A	sum = index = 0 ;	sum = index = 0 ;
1393	for i = 0	N/A	N/A	for ( int i = 0 ; ; i ++ )	for ( int i = 0 ; ; i ++ )
1394	increment index by i	N/A	N/A	index += i ;	index += i ;
1395	if index is greater than or equal to n , break loop	N/A	N/A	if ( index >= n ) break ;	if ( index >= n ) break ;
1396	set a [ increment sum ] to s [ index ]	N/A	N/A	a [ sum ++ ] = s [ index ] ;	a [ ++ sum ] = s [ index ] ;
1397	DUMMY	0.0	0.0	}	DUMMY
1398	set a [ sum ] to ' \ 0 '	N/A	N/A	a [ sum ] = ' \0 ' ;	a [ sum ] ='\0';
1399	print a print newline	N/A	N/A	cout << a << endl ;	cout << a << endl ;
1400	DUMMY	0.0	0.0	return 0;	DUMMY
1401	DUMMY	0.0	0.0	}	DUMMY
1402	DUMMY	0.0	0.0	int main() {	DUMMY
1403	declare integer called n	N/A	N/A	int n ;	int n ;
1404	read n	N/A	N/A	cin >> n ;	cin >> n ;
1405	create string s	N/A	N/A	string s ;	string s ;
1406	read s	N/A	N/A	cin >> s ;	cin >> s ;
1407	let i be integer = 2	N/A	N/A	int i = 2 ;	int i = 2 ;
1408	ans is an empty string	N/A	N/A	string ans = " " ;	string ans = " " ;
1409	ans = ans + s [ 0 ]	N/A	N/A	ans = ans + s [ 0 ] ;	ans += s [ 0 ] ;
1410	j is integer = 3	N/A	N/A	int j = 3 ;	int j = 3 ;
1411	while i < = n - 1	N/A	N/A	while ( i <= n - 1 )	while ( i <= n - 1 )
1412	ans = ans + s [ i ]	N/A	N/A	ans = ans + s [ i ] ;	ans += s [ i ] ;
1413	i = i + j	N/A	N/A	i = i + j ;	i += j ;
1414	increment j	N/A	N/A	j ++ ;	j ++ ;
1415	DUMMY	0.0	0.0	}	DUMMY
1416	print ans and a new line	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
1417	DUMMY	0.0	0.0	return 0;	DUMMY
1418	DUMMY	0.0	0.0	}	DUMMY
1419	DUMMY	0.0	0.0	int main() {	DUMMY
1420	declare string variable a	N/A	N/A	string a ;	string a ;
1421	declare integer variables n and s with s = 0	N/A	N/A	int n , s = 0 ;	int n, s = 0 ;
1422	read n and a	N/A	N/A	cin >> n >> a ;	cin >> n >> a ;
1423	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; s <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
1424	increase s by i	N/A	N/A	s += i ;	s += i ;
1425	if s < = n print a [ s - i ]	N/A	N/A	if ( s <= n ) cout << a [ s - i ] ;	if ( s <= n ) cout << a [ s - i ] << endl ;
1426	DUMMY	0.0	0.0	}	DUMMY
1427	print new line	N/A	N/A	cout << endl ;	cout << endl ;
1428	DUMMY	0.0	0.0	return 0;	DUMMY
1429	DUMMY	0.0	0.0	}	DUMMY
1430	DUMMY	0.0	0.0	int main() {	DUMMY
1431	n is integer	N/A	N/A	int n ;	int n ;
1432	read n	N/A	N/A	cin >> n ;	cin >> n ;
1433	let a be an array of characters of length n	N/A	N/A	char a [ n ] ;	char a [ n ] ;
1434	for i = 0 to n exclusive put input to a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
1435	let incr be integer = 1	N/A	N/A	int incr = 1 ;	int incr = 1 ;
1436	for integer i = 0 to n exclusive incrementing by incr	N/A	N/A	for ( int i = 0 ; i < n ; i = i + incr )	for ( int i = 0 ; i < n ; i += incr )
1437	print a [ i ]	N/A	N/A	cout << a [ i ] ;	cout << a [ i ] ;
1438	increase incr	N/A	N/A	incr ++ ;	++ incr ;
1439	DUMMY	0.0	0.0	}	DUMMY
1440	print new line	N/A	N/A	cout << endl ;	cout << endl ;
1441	DUMMY	0.0	0.0	}	DUMMY
1442	DUMMY	0.0	0.0	int main() {	DUMMY
1443	create integer n	N/A	N/A	int n ;	int n ;
1444	let s be an array of characters of length 100	N/A	N/A	char s [ 100 ] ;	char s [ 100 ] ;
1445	read n and s	N/A	N/A	cin >> n >> s ;	cin >> n >> s ;
1446	t is integer = 1	N/A	N/A	int t = 1 ;	int t = 1 ;
1447	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i += t )	for ( int i = 0 ; i < n ; i ++ )
1448	print s [ i ]	N/A	N/A	cout << s [ i ] ;	cout << s [ i ] ;
1449	increase t by one	N/A	N/A	t ++ ;	t ++ ;
1450	DUMMY	0.0	0.0	}	DUMMY
1451	print new line	N/A	N/A	cout << endl ;	cout << endl ;
1452	DUMMY	0.0	0.0	return 0;	DUMMY
1453	DUMMY	0.0	0.0	}	DUMMY
1454	DUMMY	0.0	0.0	int main() {	DUMMY
1455	create integers n and it ; it = 1	N/A	N/A	int n , it = 1 ;	int n, it = 1 ;
1456	create string s	N/A	N/A	string s ;	string s ;
1457	read n and s	N/A	N/A	cin >> n >> s ;	cin >> n >> s ;
1458	for i = 0 to n exclusive with step of it	N/A	N/A	for ( int i = 0 ; i < n ; i += it )	for ( int i = 0 ; i < n ; i += it )
1459	increase it by one	N/A	N/A	it ++ ;	it ++ ;
1460	print s [ i ]	N/A	N/A	cout << s [ i ] ;	cout << s [ i ] ;
1461	DUMMY	0.0	0.0	}	DUMMY
1462	print new line	N/A	N/A	cout << endl ;	cout << endl ;
1463	DUMMY	0.0	0.0	}	DUMMY
1464	a and b are char arrays with size 60	N/A	N/A	char a [ 60 ] , b [ 60 ] ;	char a [ 60 ] = { 0 }, b [ 59 ] ={ 0 } ;
1465	DUMMY	0.0	0.0	int main() {	DUMMY
1466	let n be integer	N/A	N/A	int n ;	int n ;
1467	read n in a loop	N/A	N/A	while ( cin >> n )	while ( cin >> n )
1468	call memset ( b , 0 and sizeof ( b ) )	N/A	N/A	memset ( b , 0 , sizeof ( b ) ) ;	memset ( b, 0, sizeof ( b ) ) ;
1469	read n elements into a starting from index 1	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
1470	k and d are integers = 0	N/A	N/A	int k = 0 , d = 0 ;	int k = 0, d = 0 ;
1471	for i = 1 to n inclusive , incrementing by k	N/A	N/A	for ( int i = 1 ; i <= n ; i = i + k )	for ( int i = 1 ; i <= n ; i += k )
1472	set b [ d ] to a [ i ]	N/A	N/A	b [ d ] = a [ i ] ;	b [ d ] = a [ i ] ;
1473	increment d	N/A	N/A	d ++ ;	d ++ ;
1474	increase k	N/A	N/A	k ++ ;	k ++ ;
1475	DUMMY	0.0	0.0	}	DUMMY
1476	print b and a new line	N/A	N/A	cout << b << endl ;	cout << b << endl ;
1477	DUMMY	0.0	0.0	}	DUMMY
1478	DUMMY	0.0	0.0	}	DUMMY
1479	DUMMY	0.0	0.0	int main() {	DUMMY
1480	declare integer variable called n	N/A	N/A	int n ;	int n ;
1481	read n	N/A	N/A	cin >> n ;	cin >> n ;
1482	let a be an array of characters of size 60	N/A	N/A	char a [ 60 ] ;	char a [ 60 ] ;
1483	read a	N/A	N/A	cin >> a ;	cin >> a ;
1484	j is integer = 1	N/A	N/A	int j = 1 ;	int j = 1 ;
1485	for i = 0 to n exclusive , incrementing i by j	N/A	N/A	for ( int i = 0 ; i < n ; i = i + j )	for ( int i = 0 ; i < n ; i += j )
1486	print a [ i ]	N/A	N/A	cout << a [ i ] ;	cout << a [ i ] ;
1487	increase j by one	N/A	N/A	j ++ ;	j ++ ;
1488	DUMMY	0.0	0.0	}	DUMMY
1489	print new line	N/A	N/A	cout << endl ;	cout << endl ;
1490	DUMMY	0.0	0.0	return 0;	DUMMY
1491	DUMMY	0.0	0.0	}	DUMMY
1492	DUMMY	0.0	0.0	int main() {	DUMMY
1493	set s to character array of length 60	N/A	N/A	char s [ 60 ] ;	char s [ 60 ] ;
1494	n , ans = integers with ans set to 0	N/A	N/A	int n , ans = 0 ;	int n, ans = 0 ;
1495	read n	N/A	N/A	cin >> n ;	cin >> n ;
1496	read s	N/A	N/A	cin >> s ;	cin >> s ;
1497	for i to n inclusive incremented by ans	N/A	N/A	for ( int i = 0 ; i < n ; i += ans )	for ( int i = 0 ; i <= n ; i += ans )
1498	increment ans by 1	N/A	N/A	ans += 1 ;	ans ++ ;
1499	print s [ i ]	N/A	N/A	cout << s [ i ] ;	cout << s [ i ] ;
1500	DUMMY	0.0	0.0	}	DUMMY
1501	print new line	N/A	N/A	cout << endl ;	cout << endl ;
1502	DUMMY	0.0	0.0	return 0;	DUMMY
1503	DUMMY	0.0	0.0	}	DUMMY
1504	DUMMY	0.0	0.0	int main() {	DUMMY
1505	create integer n	N/A	N/A	int n ;	int n ;
1506	read n	N/A	N/A	cin >> n ;	cin >> n ;
1507	create string s	N/A	N/A	string s ;	string s ;
1508	read s	N/A	N/A	cin >> s ;	cin >> s ;
1509	create string ans	N/A	N/A	string ans ;	string ans ;
1510	create integers cnt , sum with cnt = 0 , sum = 0	N/A	N/A	int cnt = 0 , sum = 0 ;	int cnt = 0, sum = 0 ;
1511	for i = 0 to n exclusive , incrementing i by cnt	N/A	N/A	for ( int i = 0 ; i < n ; i += cnt )	for ( int i = 0 ; i < n ; i += cnt )
1512	add element s [ i ] to end of ans	N/A	N/A	ans . push_back ( s [ i ] ) ;	ans. push_back ( s [ i ] ) ;
1513	increment cnt	N/A	N/A	cnt ++ ;	cnt ++ ;
1514	DUMMY	0.0	0.0	}	DUMMY
1515	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
1516	DUMMY	0.0	0.0	return 0;	DUMMY
1517	DUMMY	0.0	0.0	}	DUMMY
1518	DUMMY	0.0	0.0	int main() {	DUMMY
1519	create integers n , cnt , i with cnt = 1 , i = 0	N/A	N/A	int n , cnt = 1 , i = 0 ;	int n, cnt = 1, i = 0 ;
1520	create string s	N/A	N/A	string s ;	string s ;
1521	read n read s	N/A	N/A	cin >> n >> s ;	cin >> n >> s ;
1522	while true	N/A	N/A	while ( true )	while ( true )
1523	print s [ i ]	N/A	N/A	cout << s [ i ] ;	cout << s [ i ] ;
1524	increment i by cnt	N/A	N/A	i += cnt ;	i += cnt ;
1525	increment cnt	N/A	N/A	cnt ++ ;	cnt ++ ;
1526	if i + cnt is greater than n , break loop	N/A	N/A	if ( i + cnt > n ) { break ; }	if ( i + cnt > n ) break ;
1527	DUMMY	0.0	0.0	}	DUMMY
1528	print newline	N/A	N/A	cout << endl ;	cout << endl ;
1529	DUMMY	0.0	0.0	return 0;	DUMMY
1530	DUMMY	0.0	0.0	}	DUMMY
1531	DUMMY	0.0	0.0	int main() {	DUMMY
1532	declare integer variables l , r , n and k	N/A	N/A	int l , r , n , k ;	int l, r, n, k ;
1533	read k	N/A	N/A	cin >> k ;	cin >> k ;
1534	for i = 0 to k exclusive	N/A	N/A	for ( int i = 0 ; i < k ; i ++ )	for ( int i = 0 ; i < k ; i ++ )
1535	read l and r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
1536	print l , ' ' and r - ( r modulo l )	N/A	N/A	cout << l << ' ' << r - ( r % l ) << endl ;	cout << l <<' '<< r - ( r % l ) << endl ;
1537	DUMMY	0.0	0.0	}	DUMMY
1538	DUMMY	0.0	0.0	}	DUMMY
1539	DUMMY	0.0	0.0	int main() {	DUMMY
1540	n = int	N/A	N/A	int n ;	int n ;
1541	read n	N/A	N/A	cin >> n ;	cin >> n ;
1542	l , r , R = long long arrays of size 1000 each	N/A	N/A	long long l [ 1000 ] , r [ 1000 ] , R [ 1000 ] ;	long long l [ 1000 ] = { }, r [ 10000 ] ={ } ;
1543	for i = 0 to n	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
1544	read l [ i ] then r [ i ]	N/A	N/A	cin >> l [ i ] >> r [ i ] ;	cin >> l >> r [ i ] ;
1545	set R [ i ] to r [ i ] / l [ i ]	N/A	N/A	R [ i ] = r [ i ] / l [ i ] ;	R [ i ] /= l [ 1 ] ;
1546	DUMMY	0.0	0.0	}	DUMMY
1547	for i = 0 to n print l [ i ] then " " then l [ i ] * R [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cout << l [ i ] << " " << l [ i ] * R [ i ] << endl ;	for ( long long i = 0 ; i < n ; i ++ ) { cout << l [ i ] << " " << r [ ( i ] * R [ 1 ] ) << endl ; }
1548	DUMMY	0.0	0.0	return 0;	DUMMY
1549	DUMMY	0.0	0.0	}	DUMMY
1550	DUMMY	0.0	0.0	int main() {	DUMMY
1551	create integers t , n , l	N/A	N/A	int t , n , l ;	int t, n, l ;
1552	read t	N/A	N/A	cin >> t ;	cin >> t ;
1553	while decrement t is true	N/A	N/A	while ( t -- )	while ( t -- )
1554	read n read l	N/A	N/A	cin >> n >> l ;	cin >> n >> l ;
1555	print n print " " print ( l / n ) * n print newline	N/A	N/A	cout << n << " " << ( l / n ) * n << endl ;	cout << n << " " << ( l / n ) * n << endl ;
1556	DUMMY	0.0	0.0	}	DUMMY
1557	DUMMY	0.0	0.0	return 0;	DUMMY
1558	DUMMY	0.0	0.0	}	DUMMY
1559	DUMMY	0.0	0.0	int main() {	DUMMY
1560	create integers T , l , r	N/A	N/A	int T , l , r ;	int T, l, r ;
1561	read T	N/A	N/A	cin >> T ;	cin >> T ;
1562	for i = 1 to T inclusive	N/A	N/A	for ( int i = 1 ; i <= T ; i ++ )	for ( int i = 1 ; i <= T ; i ++ )
1563	read l read r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
1564	print l print " " print l * ( r / l ) print newline	N/A	N/A	cout << l << " " << l * ( r / l ) << endl ;	cout << l << " " << l * ( r / l ) << endl ;
1565	DUMMY	0.0	0.0	}	DUMMY
1566	DUMMY	0.0	0.0	}	DUMMY
1567	DUMMY	0.0	0.0	int main() {	DUMMY
1568	create integer numberOfInputs	N/A	N/A	int numberOfInputs ;	int numberOfInputs ;
1569	read numberOfInputs	N/A	N/A	cin >> numberOfInputs ;	cin >> numberOfInputs ;
1570	create long longs input1 and input2	N/A	N/A	long long input1 , input2 ;	long long input1, input2 ;
1571	while numberOfInputs > 0 , decrement it and keep looping	N/A	N/A	while ( numberOfInputs -- )	while ( numberOfInputs -- )
1572	read input1 and input2	N/A	N/A	cin >> input1 >> input2 ;	cin >> input1 >> input2 ;
1573	create long long div = input2 / input1	N/A	N/A	long long div = input2 / input1 ;	long long div = input2 / input1 ;
1574	create long long answer = input1 * div	N/A	N/A	long long answer = input1 * div ;	long long answer = input1 * div ;
1575	print input1 , " " and answer	N/A	N/A	cout << input1 << " " << answer << endl ;	cout << input1 << " " << answer << endl ;
1576	DUMMY	0.0	0.0	}	DUMMY
1577	DUMMY	0.0	0.0	return 0;	DUMMY
1578	DUMMY	0.0	0.0	}	DUMMY
1579	create integers T , l , r	N/A	N/A	int T , l , r ;	int T, l, r ;
1580	DUMMY	0.0	0.0	int main() {	DUMMY
1581	create integers i , j	N/A	N/A	int i , j ;	int i, j ;
1582	read T	N/A	N/A	cin >> T ;	cin >> T ;
1583	for i = 1 to T inclusive	N/A	N/A	for ( i = 1 ; i <= T ; i ++ )	for ( i = 1 ; i <= T ; i ++ )
1584	read l read r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
1585	print l print ' ' print ( r / l ) * l print ' \ n '	N/A	N/A	cout << l << ' ' << ( r / l ) * l << ' \n ' ;	cout << l <<' '<< ( ( r / l ) * l ) <<'\n';
1586	DUMMY	0.0	0.0	}	DUMMY
1587	DUMMY	0.0	0.0	return 0;	DUMMY
1588	DUMMY	0.0	0.0	}	DUMMY
1589	DUMMY	0.0	0.0	int main() {	DUMMY
1590	t = int	N/A	N/A	int t ;	int t ;
1591	read t	N/A	N/A	cin >> t ;	cin >> t ;
1592	loop t times	N/A	N/A	while ( t -- )	while ( t -- )
1593	l , r = long int	N/A	N/A	long int l , r ;	long int l, r ;
1594	read l then r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
1595	if l equals 1	N/A	N/A	if ( l == 1 )	if ( l == 1 )
1596	print l and r	N/A	N/A	cout << l << " " << r << endl ;	cout << l << " " << r << endl ;
1597	else	N/A	N/A	else	else
1598	print l and " "	N/A	N/A	cout << l << " " ;	cout << l << " " ;
1599	mod = long int with mod = r modulo l	N/A	N/A	long int mod = ( r % l ) ;	long int mod = r % l ;
1600	print r - mod	N/A	N/A	cout << ( r - mod ) << endl ;	cout << r - mod << endl ;
1601	DUMMY	0.0	0.0	}	DUMMY
1602	DUMMY	0.0	0.0	}	DUMMY
1603	DUMMY	0.0	0.0	return 0;	DUMMY
1604	DUMMY	0.0	0.0	}	DUMMY
1605	DUMMY	0.0	0.0	int main() {	DUMMY
1606	t = int	N/A	N/A	int t ;	int t ;
1607	read t	N/A	N/A	cin >> t ;	cin >> t ;
1608	l , r , d = int	N/A	N/A	int l , r , d ;	int l, r, d ;
1609	while decremented t not equal 0	N/A	N/A	while ( t -- )	while ( t -- )
1610	read l , r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
1611	if r modulo l is zero	N/A	N/A	if ( r % l == 0 )	if ( r % l == 0 )
1612	print l , space , r	N/A	N/A	cout << l << " " << r << endl ;	cout << l <<' '<< r << endl ;
1613	else	N/A	N/A	else	else
1614	d = r modulo l	N/A	N/A	d = r % l ;	d = r % l ;
1615	d = r - d	N/A	N/A	d = r - d ;	d = r - d ;
1616	print l , space , d	N/A	N/A	cout << l << " " << d << endl ;	cout << l << " " << d << endl ;
1617	DUMMY	0.0	0.0	}	DUMMY
1618	DUMMY	0.0	0.0	}	DUMMY
1619	DUMMY	0.0	0.0	}	DUMMY
1620	DUMMY	0.0	0.0	int main() {	DUMMY
1621	create long long n and m	N/A	N/A	long long n , m ;	long long n, m ;
1622	read n	N/A	N/A	cin >> n ;	cin >> n ;
1623	create long long l and r	N/A	N/A	long long l , r ;	long long l, r ;
1624	while decrement n	N/A	N/A	while ( n -- )	while ( n -- )
1625	read l and r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
1626	if r mod l = 0	N/A	N/A	if ( r % l == 0 )	if ( r % l == 0 )
1627	print l , " " , r	N/A	N/A	cout << l << " " << r << endl ;	cout << l << " " << r << endl ;
1628	else	N/A	N/A	else	else
1629	print l , " " , r - ( r mod l )	N/A	N/A	cout << l << " " << r - ( r % l ) << endl ;	cout << l << " " << r - ( r % l ) << endl ;
1630	DUMMY	0.0	0.0	}	DUMMY
1631	DUMMY	0.0	0.0	}	DUMMY
1632	DUMMY	0.0	0.0	}	DUMMY
1633	x , y = long long	N/A	N/A	long long x , y ;	long long x, y ;
1634	DUMMY	0.0	0.0	int main() {	DUMMY
1635	T = int	N/A	N/A	int T ;	int T ;
1636	read T	N/A	N/A	cin >> T ;	cin >> T ;
1637	loop T times	N/A	N/A	while ( T -- )	while ( T -- )
1638	read x then y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
1639	r = long long with r = y mod x	N/A	N/A	long long r = y % x ;	long long r = y % x ;
1640	print x then " " then y - r	N/A	N/A	cout << x << " " << y - r << " \n " ;	cout << x << " " << y - r << endl ;
1641	DUMMY	0.0	0.0	}	DUMMY
1642	DUMMY	0.0	0.0	return 0;	DUMMY
1643	DUMMY	0.0	0.0	}	DUMMY
1644	DUMMY	0.0	0.0	int main() {	DUMMY
1645	create int n , i and arrays p and s of length 100100	N/A	N/A	int n , p [ 100100 ] , s [ 100100 ] , i ;	int n, s [ 100100 ], i ;
1646	read n	N/A	N/A	cin >> n ;	cin >> n ;
1647	for i = 2 to n inclusive , read p [ i ]	N/A	N/A	for ( i = 2 ; i <= n ; i ++ ) cin >> p [ i ] ;	for ( i = 2 ; i <= n ; i ++ ) cin >> p [ i ] ;
1648	for i = 1 to n inclusive , read s [ i ]	N/A	N/A	for ( i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ;	for ( i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ;
1649	for i = 2 to n inclusive	N/A	N/A	for ( i = 2 ; i <= n ; i ++ )	for ( i = 2 ; i <= n ; i ++ )
1650	if s [ i ] = - 1 , continue the loop	N/A	N/A	if ( s [ i ] == - 1 ) continue ;	if ( s [ i ] == - 1 ) continue ;
1651	s [ p [ i ] ] = - 1	N/A	N/A	if ( s [ p [ i ] ] == - 1 )	s [ p [ i ] ] = - 1 ;
1652	set s [ p [ i ] ] = s [ i ]	N/A	N/A	s [ p [ i ] ] = s [ i ] ;	s [ p [ i ] ] = s [ 1 ] ;
1653	else	N/A	N/A	else	else
1654	s [ p [ i ] ] = min of s [ p [ i ] ] and s [ i ]	N/A	N/A	s [ p [ i ] ] = min ( s [ p [ i ] ] , s [ i ] ) ;	s [ p [ i ] ] = min ( s [ p ] ], s [ 1 ] ) ;
1655	DUMMY	0.0	0.0	}	DUMMY
1656	for i = 2 to n inclusive	N/A	N/A	for ( i = 2 ; i <= n ; i ++ )	for ( int i = 2 ; i <= n ; i ++ )
1657	if s [ i ] equal to - 1 , continue the loop	N/A	N/A	if ( s [ i ] == - 1 ) continue ;	if ( s [ i ] == - 1 ) continue ;
1658	if s [ p [ i ] ] greater than s [ i ]	N/A	N/A	if ( s [ p [ i ] ] > s [ i ] )	if ( s [ p [ i ] ] > s [ 1 ] )
1659	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
1660	DUMMY	0.0	0.0	return 0;	DUMMY
1661	DUMMY	0.0	0.0	}	DUMMY
1662	DUMMY	0.0	0.0	}	DUMMY
1663	set ans to s [ 1 ]	N/A	N/A	long long ans = s [ 1 ] ;	ans = s [ 1 ] ;
1664	for i = 2 to n inclusive	N/A	N/A	for ( i = 2 ; i <= n ; i ++ )	for ( int i = 2 ; i <= n ; i ++ )
1665	if s [ i ] equal to - 1 , continue the loop	N/A	N/A	if ( s [ i ] == - 1 ) continue ;	if ( s [ i ] == - 1 ) continue ;
1666	assign ans + s [ i ] - s [ p [ i ] ] to ans	N/A	N/A	ans += ( s [ i ] - s [ p [ i ] ] ) ;	ans = ans + s [ i ] - s [ p [ 1 ] ] ;
1667	DUMMY	0.0	0.0	}	DUMMY
1668	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
1669	DUMMY	0.0	0.0	return 0;	DUMMY
1670	DUMMY	0.0	0.0	}	DUMMY
1671	DUMMY	0.0	0.0	int main() {	DUMMY
1672	create integer n	N/A	N/A	int n ;	int n ;
1673	read n	N/A	N/A	cin >> n ;	cin >> n ;
1674	create long long integer arrays s , ms , p , v with s size n , ms size n , p size n , v size n	N/A	N/A	long long int s [ n ] , ms [ n ] , p [ n ] , v [ n ] ;	long long int s [ n ], ms [ n -- ], p [ n - 1 ], v [ n + 1 ] ;
1675	set p [ 0 ] to 0	N/A	N/A	p [ 0 ] = 0 ;	p [ 0 ] = 0 ;
1676	for i = 1 to n exclusive , decrementing p [ increment i ] , read p [ i ]	N/A	N/A	for ( int i = 1 ; i < n ; -- p [ i ++ ] ) cin >> p [ i ] ;	for ( int i = 1 ; i < n ; i ++ ) { cin >> p [ i ] ; }
1677	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
1678	read s [ i ]	N/A	N/A	cin >> s [ i ] ;	cin >> s [ i ] ;
1679	set ms [ i ] to s [ i ]	N/A	N/A	ms [ i ] = s [ i ] ;	ms [ i ] = s [ 1 ] ;
1680	DUMMY	0.0	0.0	}	DUMMY
1681	for i = n - 1 to 0 exclusive , decrementing i	N/A	N/A	for ( int i = n - 1 ; i > 0 ; -- i )	for ( int i = n - 1 ; i > 0 ; i -- )
1682	if ms [ i ] is less than 0 , break current loop iteration	N/A	N/A	if ( ms [ i ] < 0 ) continue ;	if ( ms [ i ] < 0 ) continue ;
1683	if s [ p [ i ] ] is less than 0 and ( ms [ p [ i ] ] is less than 0 or ms [ p [ i ] ] is greater than ms [ i ] ) , set ms [ p [ i ] ] to ms [ i ]	N/A	N/A	if ( s [ p [ i ] ] < 0 && ( ms [ p [ i ] ] < 0 || ms [ p [ i ] ] > ms [ i ] ) ) ms [ p [ i ] ] = ms [ i ] ;	if ( ( s [ p [ i ] ] < 0 && ( ms [ s [ 1 ] ] > 0 || ms [ p ] i ] > ms [ i + 1 ] ) ) ms [ 0 ] = ms [ 2 ] ;
1684	DUMMY	0.0	0.0	}	DUMMY
1685	if ms [ 0 ] is less than 0 , set ms [ 0 ] to 0	N/A	N/A	if ( ms [ 0 ] < 0 ) ms [ 0 ] = 0 ;	if ( ms [ 0 ] < 0 ) ms [ 1 ] = 0 ;
1686	create long long integer sum with sum = ms [ 0 ]	N/A	N/A	long long int sum = ms [ 0 ] ;	long long int sum = ms [ 0 ] ;
1687	for i = 1 to n exclusive	N/A	N/A	for ( int i = 1 ; i < n ; ++ i )	for ( int i = 1 ; i < n ; i ++ )
1688	if ms [ i ] is less than 0	N/A	N/A	if ( ms [ i ] < 0 )	if ( ms [ i ] < 0 )
1689	set ms [ i ] to mms [ p [ i ] ]	N/A	N/A	ms [ i ] = ms [ p [ i ] ] ;	ms [ i ] = mms [ p [ 1 ] ] ;
1690	else if ms [ i ] is less than ms [ p [ i ] ]	N/A	N/A	else if ( ms [ i ] < ms [ p [ i ] ] )	else if ( ms [ i ] < ms [ p [ 1 ] ] )
1691	print - 1 print newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
1692	DUMMY	0.0	0.0	return 0;	DUMMY
1693	else	N/A	N/A	else	else
1694	increment sum by ms [ i ] - ms [ p [ i ] ]	N/A	N/A	sum += ms [ i ] - ms [ p [ i ] ] ;	sum += ms [ i ] - ms [ p [ 1 ] ] ;
1695	DUMMY	0.0	0.0	}	DUMMY
1696	print sum print newline	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
1697	DUMMY	0.0	0.0	return 0;	DUMMY
1698	DUMMY	0.0	0.0	}	DUMMY
1699	let N be a constant integer with value N is equal to 100001	N/A	N/A	const int N = 100001 ;	const int N = 100001 ;
1700	g = array of vector integers of size N	N/A	N/A	vector < int > g [ N ] ;	vector < int > g [ N ] ;
1701	let n , val be integers with val = array of integers of length N	N/A	N/A	int n , val [ N ] ;	int n, val [ N ] ;
1702	sum = array of long integers of length N	N/A	N/A	long long sum [ N ] ;	long long sum [ N ] ;
1703	let depth first search of int u and int p be a boolean type	N/A	N/A	bool dfs ( int u , int p )	bool depth ( int u, int p )
1704	if length of g [ u ] is equal to 1 and p is not equal to - 1	N/A	N/A	if ( g [ u ] . size ( ) == 1 && p != - 1 )	if ( g [ u ]. size ( ) == 1 && p!= - 1 )
1705	if sum [ u ] is equal to - 1	N/A	N/A	if ( sum [ u ] == - 1 )	if ( sum [ u ] == - 1 )
1706	set val [ u ] to 0	N/A	N/A	val [ u ] = 0 ;	val [ u ] = 0 ;
1707	assign the value sum [ p ] to sum [ u ]	N/A	N/A	sum [ u ] = sum [ p ] ;	sum [ u ] = sum [ p ] ;
1708	else do the following	N/A	N/A	else	else
1709	assign the value of sum [ u ] - sum [ p ] to val [ u ]	N/A	N/A	val [ u ] = sum [ u ] - sum [ p ] ;	valfin = sum [ u ] - sum [ p ] ;
1710	return the value as true	N/A	N/A	return true ;	return true ;
1711	DUMMY	0.0	0.0	}	DUMMY
1712	if sum [ u ] is equal to - 1	N/A	N/A	if ( sum [ u ] == - 1 )	if ( sum [ u ] == - 1 )
1713	let mn be a long integer with mn = 1e9	N/A	N/A	long long mn = 1e9 ;	long long mn = 1e9 ;
1714	for i = 0 to length of g [ u ] exclusive	N/A	N/A	for ( int i = 0 ; i < g [ u ] . size ( ) ; ++ i )	for ( int i = 0 ; i < g [ u ]. size ( ) ; i ++ )
1715	let v be a integer with v = g [ u ] [ i ]	N/A	N/A	int v = g [ u ] [ i ] ;	int v = g [ u ] [ i ] ;
1716	if v is equal to p , proceed to next	N/A	N/A	if ( v == p ) continue ;	if ( v == p ) continue ;
1717	let diff be a long integer with diff = sum [ v ] - sum [ p ]	N/A	N/A	long long diff = sum [ v ] - sum [ p ] ;	long long diff = sum [ v ] - sum [ p ] ;
1718	if diff is less than 0 , return false	N/A	N/A	if ( diff < 0 ) return false ;	if ( diff < 0 ) return false ;
1719	mn = minimum of mn and diff	N/A	N/A	mn = min ( mn , diff ) ;	mn = min ( mn, diff ) ;
1720	DUMMY	0.0	0.0	}	DUMMY
1721	the uth element of val = mn	N/A	N/A	val [ u ] = mn ;	val ['uth'] = mn ;
1722	sum [ u ] is equal to sum [ p ] + val [ u ]	N/A	N/A	sum [ u ] = sum [ p ] + val [ u ] ;	sum ['u'] += val [ u ] ;
1723	else if ( p is not equal to - 1 )	N/A	N/A	else if ( p != - 1 )	else if ( p!= - 1 )
1724	the value of sum [ u ] - sum [ p ] is assigned to val [ u ]	N/A	N/A	val [ u ] = sum [ u ] - sum [ p ] ;	valfin = sum [ u ] - sum [ p ] ;
1725	let check is a boolean type with check = 1	N/A	N/A	bool check = 1 ;	bool check = 1 ;
1726	for i = 0 to length of g [ u ] exclusive ]	N/A	N/A	for ( int i = 0 ; i < g [ u ] . size ( ) ; ++ i )	for ( int i = 0 ; i < g [ u ]. length ( ) ; i ++ )
1727	let v be a integer with v = g [ u ] [ i ]	N/A	N/A	int v = g [ u ] [ i ] ;	int v = g [ u ] [ i ] ;
1728	if v is equal to p , proceed to next	N/A	N/A	if ( v == p ) continue ;	if ( v == p ) continue ;
1729	check = check and depth first search of v , u	N/A	N/A	check = check && dfs ( v , u ) ;	check = check, dfs ( v, u ) ;
1730	DUMMY	0.0	0.0	}	DUMMY
1731	return the value of check	N/A	N/A	return check ;	return check ;
1732	DUMMY	0.0	0.0	}	DUMMY
1733	DUMMY	0.0	0.0	int main() {	DUMMY
1734	read n	N/A	N/A	cin >> n ;	cin >> n ;
1735	for i = 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; ++ i )	for ( int i = 0 ; i < n - 1 ; i ++ )
1736	let p be a integer	N/A	N/A	int p ;	int p ;
1737	read p	N/A	N/A	cin >> p ;	cin >> p ;
1738	decrease p value by 1	N/A	N/A	-- p ;	p -- ;
1739	do g [ p ] . push_back ( i + 1 )	N/A	N/A	g [ p ] . push_back ( i + 1 ) ;	g [ p ]. push_back ( i + 1 ) ;
1740	do g [ i + 1 ] . push_back ( p )	N/A	N/A	g [ i + 1 ] . push_back ( p ) ;	g [ i + 1 ]. push_back ( p ) ;
1741	DUMMY	0.0	0.0	}	DUMMY
1742	for i = 0 to n exclusive , read sum [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; ++ i ) cin >> sum [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> sum [ i ] ; }
1743	let val [ 0 ] = sum [ 0 ]	N/A	N/A	val [ 0 ] = sum [ 0 ] ;	valfin [ 0 ] = sum [ 1 ] ;
1744	if not dfs of 0 and - 1	N/A	N/A	if ( ! dfs ( 0 , - 1 ) )	if (! dfs ( 0, - 1 ) )
1745	print - 1 and newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
1746	else do the following	N/A	N/A	else	else
1747	let long integer s = 0	N/A	N/A	long long s = 0 ;	long long s = 0 ;
1748	for i = 0 to n exclusive , increase s by val [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; ++ i ) s += val [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { s += val [ i ] ; }
1749	print s and newline	N/A	N/A	cout << s << endl ;	cout << s << endl ;
1750	DUMMY	0.0	0.0	}	DUMMY
1751	DUMMY	0.0	0.0	return 0;	DUMMY
1752	DUMMY	0.0	0.0	}	DUMMY
1753	create long long p with size 200000	N/A	N/A	long long p [ 200000 ] ;	long long p [ 200000 ] ;
1754	create long long s with size 200000	N/A	N/A	long long s [ 200000 ] ;	long long s [ 200000 ] ;
1755	DUMMY	0.0	0.0	int main() {	DUMMY
1756	create long long num with num = 0	N/A	N/A	long long num = 0 ;	long long num = 0 ;
1757	create long longs n , i , j	N/A	N/A	long long n , i , j ;	long long n, i, j ;
1758	read n	N/A	N/A	cin >> n ;	cin >> n ;
1759	for i = 2 to n inclusive , read p [ i ]	N/A	N/A	for ( i = 2 ; i <= n ; i ++ ) { cin >> p [ i ] ; }	for ( i = 2 ; i <= n ; i ++ ) cin >> p [ i ] ;
1760	for i = 1 to n inclusive	N/A	N/A	for ( i = 1 ; i <= n ; i ++ )	for ( i = 1 ; i <= n ; i ++ )
1761	read s [ i ]	N/A	N/A	cin >> s [ i ] ;	cin >> s [ i ] ;
1762	if s [ i ] is - 1 , set s [ i ] to 1e10	N/A	N/A	if ( s [ i ] == - 1 ) s [ i ] = 1e10 ;	if ( s [ i ] == - 1 ) s [ j ] = 1e10 ;
1763	DUMMY	0.0	0.0	}	DUMMY
1764	for i = 1 to n inclusive , set s [ p [ i ] ] to minimum of s [ p [ i ] ] and s [ i ]	N/A	N/A	for ( i = 1 ; i <= n ; i ++ ) s [ p [ i ] ] = min ( s [ p [ i ] ] , s [ i ] ) ;	for ( int i = 1 ; i <= n ; i ++ ) { s [ p [ i ] ] = min ( s [ 0 ] ], s [ 1 ] ) ; }
1765	for i = 1 to n inclusive	N/A	N/A	for ( i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
1766	if s [ p [ i ] ] is greater than s [ i ]	N/A	N/A	if ( s [ p [ i ] ] > s [ i ] )	if ( s [ p [ i ] ] > s [ 1 ] )
1767	print - 1 print newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
1768	DUMMY	0.0	0.0	return 0;	DUMMY
1769	DUMMY	0.0	0.0	}	DUMMY
1770	if s [ i ] is 1e10 , set s [ i ] to s [ p [ i ] ]	N/A	N/A	if ( s [ i ] == 1e10 ) s [ i ] = s [ p [ i ] ] ;	if ( s [ i ] == " 1e10 " ) { s [ j ] = s [ p [ 1 ] ] ; }
1771	increment num by s [ i ] - s [ p [ i ] ]	N/A	N/A	num += s [ i ] - s [ p [ i ] ] ;	num += ( s [ i ] - s [ p [ 1 ] ] ) ;
1772	DUMMY	0.0	0.0	}	DUMMY
1773	print num print newline	N/A	N/A	cout << num << endl ;	cout << num << endl ;
1774	DUMMY	0.0	0.0	return 0;	DUMMY
1775	DUMMY	0.0	0.0	}	DUMMY
1776	declare const int maxn = 1e5 + 5	N/A	N/A	const int maxn = 1e5 + 5 ;	const int maxn = 1e5 + 5 ;
1777	declare const long long inf = 0x3f3f3f3f	N/A	N/A	const long long inf = 0x3f3f3f3f ;	const long long inf = ( long long ) 0x3f3f0f3c3f ;
1778	declare an array of integer vectors G with size maxn	N/A	N/A	vector < int > G [ maxn ] ;	vector < int > G [ maxn ] ;
1779	create long long arrays sum and a with maxn elements	N/A	N/A	long long sum [ maxn ] , a [ maxn ] ;	long long sum [ maxn ], a [ maxN ] ;
1780	create integer array minson with maxn elements	N/A	N/A	int minson [ maxn ] ;	int minson [ maxn ] ;
1781	declare int variable n	N/A	N/A	int n ;	int n ;
1782	define function getson	N/A	N/A	int getson ( int v )	void getson ( )
1783	declare int minkey = inf	N/A	N/A	int minkey = inf ;	int minkey = inf ;
1784	for i = 0 to length of G [ v ] exclusive	N/A	N/A	for ( int i = 0 ; i < G [ v ] . size ( ) ; ++ i )	for ( int i = 0 ; i < G [ v ]. size ( ) ; i ++ )
1785	create int to = G [ v ] [ i ]	N/A	N/A	int to = G [ v ] [ i ] ;	int to = G [ v ] [ i ] ;
1786	if minkey is greater than getson ( to )	N/A	N/A	if ( minkey > getson ( to ) )	if ( minkey > getson ( to ) )
1787	set minkey to sum [ to ]	N/A	N/A	minkey = sum [ to ] ;	minkey = sum [ to ] ;
1788	change minson [ v ] to to	N/A	N/A	minson [ v ] = to ;	minson [ v ] = to ;
1789	DUMMY	0.0	0.0	}	DUMMY
1790	DUMMY	0.0	0.0	}	DUMMY
1791	return sum [ v ]	N/A	N/A	return sum [ v ] ;	return sum [ v ] ;
1792	DUMMY	0.0	0.0	}	DUMMY
1793	void function dfs with int arguments v and deep and long long argument fasum	N/A	N/A	void dfs ( int v , long long fasum , int deep )	void dfs ( int v, long long fasum )
1794	if deep & 1 is not 0	N/A	N/A	if ( deep & 1 )	if ( deep & 1 )
1795	assign sum [ v ] - fasum to a [ v ]	N/A	N/A	a [ v ] = sum [ v ] - fasum ;	a [ v ] -= fasum ;
1796	else if length of G [ v ] is not 0	N/A	N/A	else if ( ! G [ v ] . size ( ) )	else if ( G [ v ]. size ( )!= 0 )
1797	change a [ v ] to 0	N/A	N/A	a [ v ] = 0 ;	a [ v ] = 0 ;
1798	return	N/A	N/A	return ;	return ;
1799	else	N/A	N/A	else	else
1800	set a [ v ] to sum [ minson [ v ] ] - fasum	N/A	N/A	a [ v ] = sum [ minson [ v ] ] - fasum ;	a [ V ] = sum [ minson [ v ] ] - fasum ;
1801	for i = 0 to length of G [ v ] exclusive , call dfs ( G [ v ] [ i ] , fasum + a [ v ] , deep + 1 )	N/A	N/A	for ( int i = 0 ; i < G [ v ] . size ( ) ; ++ i ) dfs ( G [ v ] [ i ] , fasum + a [ v ] , deep + 1 ) ;	for ( int i = 0 ; i < G [ v ]. size ( ) ; i ++ ) { dfs ( G [ V ] [ i ], fasum + a [ v [, deep + 1 ) ; }
1802	DUMMY	0.0	0.0	}	DUMMY
1803	DUMMY	0.0	0.0	int main() {	DUMMY
1804	read n and loop further	N/A	N/A	while ( cin >> n )	while ( cin >> n )
1805	create int pa	N/A	N/A	int pa ;	int pa ;
1806	for i = 2 to n inclusive	N/A	N/A	for ( int i = 2 ; i <= n ; ++ i )	for ( int i = 2 ; i <= n ; i ++ )
1807	read pa	N/A	N/A	cin >> pa ;	cin >> pa ;
1808	push i to G [ pa ]	N/A	N/A	G [ pa ] . push_back ( i ) ;	G [ pa ]. push_back ( i ) ;
1809	DUMMY	0.0	0.0	}	DUMMY
1810	for integer i = 1 to n inclusive , read sum [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; ++ i ) cin >> sum [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> sum [ i ] ;
1811	call function getson with argument 1	N/A	N/A	getson ( 1 ) ;	getson ( 1 ) ;
1812	call function dfs with arguments 1 , 0 and 1	N/A	N/A	dfs ( 1 , 0 , 1 ) ;	dfs ( 1, 0, 1 ) ;
1813	create long long maxsum = 0	N/A	N/A	long long maxsum = 0 ;	long long maxsum = 0 ;
1814	create integer flag = 0	N/A	N/A	int flag = 0 ;	int flag = 0 ;
1815	for integer i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; ++ i )	for ( int i = 1 ; i <= n ; i ++ )
1816	if a [ i ] > = 0	N/A	N/A	if ( a [ i ] >= 0 )	if ( a [ i ] >= 0 )
1817	add a [ i ] to maxsum	N/A	N/A	maxsum += a [ i ] ;	maxsum += a [ i ] ;
1818	else	N/A	N/A	else	else
1819	set flag to 1	N/A	N/A	flag = 1 ;	flag = 1 ;
1820	DUMMY	0.0	0.0	}	DUMMY
1821	if flag is 0	N/A	N/A	if ( ! flag )	if ( flag == 0 )
1822	print maxsum	N/A	N/A	cout << maxsum << endl ;	cout << maxsum << endl ;
1823	else	N/A	N/A	else	else
1824	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
1825	for i = 0 to n inclusive , clear G [ i ]	N/A	N/A	for ( int i = 0 ; i <= n ; ++ i ) G [ i ] . clear ( ) ;	for ( int i = 0 ; i <= n ; i ++ ) G [ i ]. clear ( ) ;
1826	DUMMY	0.0	0.0	}	DUMMY
1827	DUMMY	0.0	0.0	return 0;	DUMMY
1828	DUMMY	0.0	0.0	}	DUMMY
1829	DUMMY	0.0	0.0	int main() {	DUMMY
1830	create string x	N/A	N/A	string x ;	string x ;
1831	read x	N/A	N/A	cin >> x ;	cin >> x ;
1832	create integers v and h = 0	N/A	N/A	int v = 0 , h = 0 ;	int v = 0, h = 0 ;
1833	for i = 0 to length of x exclusive	N/A	N/A	for ( int i = 0 ; i < x . size ( ) ; i ++ )	for ( int i = 0 ; i < x. length ( ) ; i ++ )
1834	if x [ i ] is ' 0 '	N/A	N/A	if ( x [ i ] == ' 0 ' )	if ( x [ i ] =='0')
1835	if v is 0	N/A	N/A	if ( ! v )	if ( v == 0 )
1836	print 1 , ' ' , 1 and a new line , then increment v	N/A	N/A	cout << 1 << ' ' << 1 << endl , v ++ ;	cout << 1 <<' '<< v << endl ;
1837	else	N/A	N/A	else	else
1838	print 3 , ' ' , 1 and a new line , then set v to 0	N/A	N/A	cout << 3 << ' ' << 1 << endl , v = 0 ;	cout << 3 <<' '<< 1 << endl ;
1839	else	N/A	N/A	else	else
1840	if h is 0	N/A	N/A	if ( ! h )	if ( h == 0 )
1841	print 4 , ' ' , 3 and a new line , then increment h	N/A	N/A	cout << 4 << ' ' << 3 << endl , h ++ ;	cout << 4 <<' '<< 3 << endl ;
1842	else	N/A	N/A	else	else
1843	print 4 , ' ' , 1 and a new line , then set h to 0	N/A	N/A	cout << 4 << ' ' << 1 << endl , h = 0 ;	cout << 4 <<' '<< 1 << endl ;
1844	DUMMY	0.0	0.0	}	DUMMY
1845	DUMMY	0.0	0.0	}	DUMMY
1846	DUMMY	0.0	0.0	return 0;	DUMMY
1847	DUMMY	0.0	0.0	}	DUMMY
1848	declare boolean variables l and r	N/A	N/A	bool l , r ;	bool l, r ;
1849	let s be string	N/A	N/A	string s ;	string s ;
1850	DUMMY	0.0	0.0	int main() {	DUMMY
1851	read s	N/A	N/A	cin >> s ;	cin >> s ;
1852	for i = 0 to length of s exclusive	N/A	N/A	for ( int i = 0 ; i < s . size ( ) ; i ++ )	for ( int i = 0 ; i < s. length ( ) ; i ++ )
1853	if s [ i ] = ' 0 ' & & l is true	N/A	N/A	if ( s [ i ] == ' 0 ' && l )	if ( s [ i ] =='0'&& l )
1854	print " 3 1 " and a new line	N/A	N/A	cout << " 3 1 " << endl ;	cout << " 31 " << endl ;
1855	set value of l to false	N/A	N/A	l = false ;	l = false ;
1856	else if s [ i ] = ' 0 '	N/A	N/A	else if ( s [ i ] == ' 0 ' )	else if ( s [ i ] =='0')
1857	print " 1 1 " and a new line	N/A	N/A	cout << " 1 1 " << endl ;	cout << " 1 1 " << endl ;
1858	l = true	N/A	N/A	l = true ;	l = true ;
1859	else if s [ i ] = ' 1 ' & & r is true	N/A	N/A	else if ( s [ i ] == ' 1 ' && r )	else if ( s [ i ] =='1'&& r )
1860	print " 4 1 " and a new line	N/A	N/A	cout << " 4 1 " << endl ;	cout << " 41 " << endl ;
1861	assign value of false to r	N/A	N/A	r = false ;	r = false ;
1862	else	N/A	N/A	else	else
1863	print " 4 3 " and a new line	N/A	N/A	cout << " 4 3 " << endl ;	cout << " 43 " << endl ;
1864	r = true	N/A	N/A	r = true ;	r = true ;
1865	DUMMY	0.0	0.0	}	DUMMY
1866	DUMMY	0.0	0.0	}	DUMMY
1867	DUMMY	0.0	0.0	return 0;	DUMMY
1868	DUMMY	0.0	0.0	}	DUMMY
1869	create constant integer MAXN with value 100000 + 5	N/A	N/A	const int MAXN = 100000 + 5 ;	const int MAXN = 100000 + 5 ;
1870	DUMMY	0.0	0.0	int main() {	DUMMY
1871	create string s	N/A	N/A	string s ;	string s ;
1872	read s	N/A	N/A	cin >> s ;	cin >> s ;
1873	let cnt1 and cnt2 be integers = 0	N/A	N/A	int cnt1 = 0 , cnt2 = 0 ;	int cnt1 = 0, cnt2 = 0 ;
1874	for integer i = 0 to length of s exclusive	N/A	N/A	for ( int i = 0 ; i < s . size ( ) ; i ++ )	for ( int i = 0 ; i < s. length ( ) ; i ++ )
1875	if s [ i ] = ' 0 '	N/A	N/A	if ( s [ i ] == ' 0 ' )	if ( s [ i ] =='0')
1876	if cnt1 is even	N/A	N/A	if ( cnt1 % 2 == 0 )	if ( cnt1 % 2 == 0 )
1877	print 1 , " " and 1	N/A	N/A	cout << 1 << " " << 1 ;	cout << 1 << " " << 1 ;
1878	else	N/A	N/A	else	else
1879	print 3 , " " and 1	N/A	N/A	cout << 3 << " " << 1 ;	cout << 3 << " " << 1 << endl ;
1880	increment cnt1	N/A	N/A	cnt1 ++ ;	cnt1 ++ ;
1881	else	N/A	N/A	else	else
1882	if cnt2 is even	N/A	N/A	if ( cnt2 % 2 == 0 )	if ( cnt2 % 2 == 0 )
1883	print 4 , " " and 3	N/A	N/A	cout << 4 << " " << 3 ;	cout << 4 << " " << 3 << endl ;
1884	else	N/A	N/A	else	else
1885	print 4 , " " and 1	N/A	N/A	cout << 4 << " " << 1 ;	cout << 4 << " " << 1 << endl ;
1886	increase cnt2	N/A	N/A	cnt2 ++ ;	cnt2 ++ ;
1887	DUMMY	0.0	0.0	}	DUMMY
1888	print " \ n "	N/A	N/A	cout << " \n " ;	cout << " \n " ;
1889	DUMMY	0.0	0.0	}	DUMMY
1890	DUMMY	0.0	0.0	return 0;	DUMMY
1891	DUMMY	0.0	0.0	}	DUMMY
1892	DUMMY	0.0	0.0	int main() {	DUMMY
1893	s is string	N/A	N/A	string s ;	string s ;
1894	read s	N/A	N/A	cin >> s ;	cin >> s ;
1895	l1 is integer = length of s	N/A	N/A	int l1 = s . length ( ) ;	int l1 = s. length ( ) ;
1896	create booleans vertikal and horizontal = 0	N/A	N/A	bool vertikal = 0 , horizontal = 0 ;	bool vertikal = 0, horizontal = 0 ;
1897	for integer i = 0 to l1 exclusive	N/A	N/A	for ( int i = 0 ; i < l1 ; i ++ )	for ( int i = 0 ; i < l1 ; i ++ )
1898	if s [ i ] = ' 0 '	N/A	N/A	if ( s [ i ] == ' 0 ' )	if ( s [ i ] =='0')
1899	if vertikal is not 0	N/A	N/A	if ( vertikal )	if ( vertikal!= 0 )
1900	assign value of 0 to vertikal	N/A	N/A	vertikal = 0 ;	vertikal = 0 ;
1901	print " 3 1 \ n "	N/A	N/A	cout << " 3 1\n " ;	cout << " 31\n " ;
1902	else	N/A	N/A	else	else
1903	assign value of 1 to vertikal	N/A	N/A	vertikal = 1 ;	vertikal = 1 ;
1904	print " 1 1 \ n "	N/A	N/A	cout << " 1 1\n " ;	cout << " 1 1\n " ;
1905	DUMMY	0.0	0.0	}	DUMMY
1906	else	N/A	N/A	else	else
1907	if horizontal is not 0	N/A	N/A	if ( horizontal )	if ( horizontal!= 0 )
1908	assign value of 0 to horizontal	N/A	N/A	horizontal = 0 ;	horizontal = 0 ;
1909	print " 4 1 \ n "	N/A	N/A	cout << " 4 1\n " ;	cout << " 41\n " ;
1910	else	N/A	N/A	else	else
1911	set value of horizontal to 1	N/A	N/A	horizontal = 1 ;	horizontal = 1 ;
1912	print " 4 3 \ n "	N/A	N/A	cout << " 4 3\n " ;	cout << " 43\n " ;
1913	DUMMY	0.0	0.0	}	DUMMY
1914	DUMMY	0.0	0.0	}	DUMMY
1915	DUMMY	0.0	0.0	}	DUMMY
1916	DUMMY	0.0	0.0	}	DUMMY
1917	DUMMY	0.0	0.0	int main() {	DUMMY
1918	create string s	N/A	N/A	string s ;	string s ;
1919	read s	N/A	N/A	cin >> s ;	cin >> s ;
1920	create integers o , z , with o = 0 , z = 0	N/A	N/A	int o = 0 , z = 0 ;	int o = 0, z = 0 ;
1921	for i = 0 to size of s exclusive	N/A	N/A	for ( int i = 0 ; i < s . size ( ) ; i ++ )	for ( int i = 0 ; i < s. size ( ) ; i ++ )
1922	if s [ i ] is ' 0 '	N/A	N/A	if ( s [ i ] == ' 0 ' )	if ( s [ i ] =='0')
1923	increment o	N/A	N/A	o ++ ;	o ++ ;
1924	if o % 2	N/A	N/A	if ( o % 2 )	if ( o % 2 )
1925	print 1 print " " print 1 print newline	N/A	N/A	cout << 1 << " " << 1 << endl ;	cout << 1 << " " << i << endl ;
1926	else	N/A	N/A	else	else
1927	print 3 print " " print 1 print newline	N/A	N/A	cout << 3 << " " << 1 << endl ;	cout << 3 << " " << 1 << endl ;
1928	else if s [ i ] is ' 1 '	N/A	N/A	else if ( s [ i ] == ' 1 ' )	else if ( s [ i ] =='1')
1929	increment z	N/A	N/A	z ++ ;	z ++ ;
1930	if z % 2	N/A	N/A	if ( z % 2 )	if ( z % 2 )
1931	print 4 print " " print 3 print newline	N/A	N/A	cout << 4 << " " << 3 << endl ;	cout << 4 << " " << 3 << endl ;
1932	else	N/A	N/A	else	else
1933	print 4 print " " print 1 print newline	N/A	N/A	cout << 4 << " " << 1 << endl ;	cout << 4 << " " << 1 << endl ;
1934	DUMMY	0.0	0.0	}	DUMMY
1935	DUMMY	0.0	0.0	}	DUMMY
1936	DUMMY	0.0	0.0	}	DUMMY
1937	DUMMY	0.0	0.0	int main() {	DUMMY
1938	create string str	N/A	N/A	string str ;	string str ;
1939	read str	N/A	N/A	cin >> str ;	cin >> str ;
1940	create integer len with len = length of str	N/A	N/A	int len = str . length ( ) ;	int len = str. length ( ) ;
1941	create integers a , c , with a = 0 , c = 0	N/A	N/A	int a = 0 , c = 0 ;	int a = 0, c = 0 ;
1942	for i = 0 to len exclusive	N/A	N/A	for ( int i = 0 ; i < len ; i ++ )	for ( int i = 0 ; i < len ; i ++ )
1943	if str [ i ] is ' 0 '	N/A	N/A	if ( str [ i ] == ' 0 ' )	if ( str [ i ] =='0')
1944	if a is 0	N/A	N/A	if ( a == 0 )	if ( a == 0 )
1945	set a to 1	N/A	N/A	a = 1 ;	a = 1 ;
1946	print " 1 1 "	N/A	N/A	puts ( " 1 1 " ) ;	cout << " 1 1 " << endl ;
1947	else	N/A	N/A	else	else
1948	set a to 0	N/A	N/A	a = 0 ;	a = 0 ;
1949	print " 3 1 "	N/A	N/A	puts ( " 3 1 " ) ;	cout << " 31 " << endl ;
1950	DUMMY	0.0	0.0	}	DUMMY
1951	DUMMY	0.0	0.0	}	DUMMY
1952	if str [ i ] is ' 1 '	N/A	N/A	if ( str [ i ] == ' 1 ' )	if ( str [ i ] =='1')
1953	if c is 0	N/A	N/A	if ( c == 0 )	if ( c == 0 )
1954	set c to 1	N/A	N/A	c = 1 ;	c = 1 ;
1955	print " 4 3 "	N/A	N/A	puts ( " 4 3 " ) ;	cout << " 43 " << endl ;
1956	else	N/A	N/A	else	else
1957	set c to 0	N/A	N/A	c = 0 ;	c = 0 ;
1958	print " 4 1 "	N/A	N/A	puts ( " 4 1 " ) ;	cout << " 41 " << endl ;
1959	DUMMY	0.0	0.0	}	DUMMY
1960	DUMMY	0.0	0.0	}	DUMMY
1961	DUMMY	0.0	0.0	}	DUMMY
1962	DUMMY	0.0	0.0	return 0;	DUMMY
1963	DUMMY	0.0	0.0	}	DUMMY
1964	assign value 200005 to constant integer N	N/A	N/A	const int N = 200005 ;	const int N = 200005 ;
1965	assign value 998244353 to constant integer MOD	N/A	N/A	const long long MOD = 998244353 ;	const int MOD = 998244353 ;
1966	define function solve	N/A	N/A	void solve ( )	void solve ( )
1967	create string s	N/A	N/A	string s ;	string s ;
1968	create boolean v = false	N/A	N/A	bool v = false ;	bool v = false ;
1969	create boolean g = false	N/A	N/A	bool g = false ;	bool g = false ;
1970	read s	N/A	N/A	cin >> s ;	cin >> s ;
1971	declare integer n = length of s	N/A	N/A	int n = s . length ( ) ;	int n = s. length ( ) ;
1972	for i = 0 to length of s exclusive	N/A	N/A	for ( int i = 0 ; i < ( s . length ( ) ) ; i ++ )	for ( int i = 0 ; i < s. length ( ) ; i ++ )
1973	if s [ i ] = ' 0 '	N/A	N/A	if ( s [ i ] == ' 0 ' )	if ( s [ i ] =='0')
1974	if v is true	N/A	N/A	if ( v )	if ( v )
1975	print 3 , " " , 1 and a new line	N/A	N/A	cout << 3 << " " << 1 << endl ;	cout << 3 << " " << 1 << endl ;
1976	set v to false	N/A	N/A	v = false ;	v = false ;
1977	else	N/A	N/A	else	else
1978	print " 1 1 " and a new line	N/A	N/A	cout << " 1 1 " << endl ;	cout << " 1 1 " << endl ;
1979	set v to true	N/A	N/A	v = true ;	v = true ;
1980	DUMMY	0.0	0.0	}	DUMMY
1981	else	N/A	N/A	else	else
1982	if g is true	N/A	N/A	if ( g )	if ( g )
1983	print 4 , " " , 1 and a new line	N/A	N/A	cout << 4 << " " << 1 << endl ;	cout << 4 << " " << 1 << endl ;
1984	set g to false	N/A	N/A	g = false ;	g = false ;
1985	else	N/A	N/A	else	else
1986	print 4 , " " , 3 and a new line	N/A	N/A	cout << 4 << " " << 3 << endl ;	cout << 4 << " " << 3 << endl ;
1987	set g to true	N/A	N/A	g = true ;	g = true ;
1988	DUMMY	0.0	0.0	}	DUMMY
1989	DUMMY	0.0	0.0	}	DUMMY
1990	DUMMY	0.0	0.0	}	DUMMY
1991	DUMMY	0.0	0.0	}	DUMMY
1992	DUMMY	0.0	0.0	int main() {	DUMMY
1993	declare integer variable t = 1	N/A	N/A	int t = 1 ;	int t = 1 ;
1994	while t is not 0 , decrement it and call solve	N/A	N/A	while ( t -- ) { solve ( ) ; }	while ( t -- ) solve ( ) ;
1995	DUMMY	0.0	0.0	}	DUMMY
1996	declare expo_fast with long long integers a , b as arguments , returning long long integer	N/A	N/A	long long int expo_fast ( long long int a , long long int b )	long long expo_fast ( long long a, long long b )
1997	set a to a	N/A	N/A	a = a ;	a = a ;
1998	create long long integer result with result = 1	N/A	N/A	long long int result = 1 ;	long long int result = 1 ;
1999	while b is true	N/A	N/A	while ( b )	while ( b )
2000	if b bitwise and 1 , set result to result * a	N/A	N/A	if ( b & 1 ) result = ( result * a ) ;	if ( b & 1 ) result *= a ;
2001	set b to b bitshift right 1	N/A	N/A	b >>= 1 ;	b >>= 1 ;
2002	set a to a * a	N/A	N/A	a = ( a * a ) ;	a = a * a ;
2003	DUMMY	0.0	0.0	}	DUMMY
2004	return result from function	N/A	N/A	return ( result ) ;	return result ;
2005	DUMMY	0.0	0.0	}	DUMMY
2006	declare take_in with long long integer vector pointer arr as argument returning void	N/A	N/A	void take_in ( vector < long long int > * arr )	void take_in ( vector < long long int > * arr )
2007	for i = 0 to result of run size from arr exclusive , read value of arr [ i ]	N/A	N/A	for ( int i = 0 ; i < arr -> size ( ) ; i ++ ) cin >> ( * ( arr ) ) [ i ] ;	for ( long long int i = 0 ; i < size ( ) ; i ++ ) cin >> arr [ i ] ;
2008	DUMMY	0.0	0.0	}	DUMMY
2009	declare disp_arr with long long integer vector pointer as argument , returning void	N/A	N/A	void disp_arr ( vector < long long int > * arr )	void disp_arr ( vector < long long int > & arr )
2010	for i = 0 to result of run size from arr exclusive , print value of arr [ i ] print " "	N/A	N/A	for ( int i = 0 ; i < arr -> size ( ) ; i ++ ) cout << ( * ( arr ) ) [ i ] << " " ;	for ( long long int i = 0 ; i < size. size ( ) ; i ++ ) cout << * arr [ i ] << " " ;
2011	DUMMY	0.0	0.0	}	DUMMY
2012	declare func with string s , integer n as arguments , returning string	N/A	N/A	string func ( string s , int n )	string func ( string s, int n )
2013	create string q	N/A	N/A	string q ;	string q ;
2014	resize q to size n	N/A	N/A	q . resize ( n ) ;	q. resize ( n ) ;
2015	set q [ 0 ] to s [ 0 ]	N/A	N/A	q [ 0 ] = s [ 0 ] ;	q [ 0 ] = s [ 1 ] ;
2016	set q [ 1 ] to s [ 1 ]	N/A	N/A	q [ 1 ] = s [ 1 ] ;	q [ 1 ] = s [ 0 ] ;
2017	set q [ 2 ] to s [ 2 ]	N/A	N/A	q [ 2 ] = s [ 2 ] ;	q [ 2 ] = s [ 1 ] ;
2018	for i = 3 to n exclusive	N/A	N/A	for ( int i = 3 ; i < n ; i ++ )	for ( int i = 3 ; i < n ; i ++ )
2019	if i % 3 is 0	N/A	N/A	if ( i % 3 == 0 )	if ( i % 3 == 0 )
2020	set q [ i ] to q [ 0 ]	N/A	N/A	q [ i ] = q [ 0 ] ;	q [ i ] = q [ 0 ] ;
2021	else if i % 3 is 1	N/A	N/A	else if ( i % 3 == 1 )	else if ( i % 3 == 1 )
2022	set q [ i ] to q [ 1 ]	N/A	N/A	q [ i ] = q [ 1 ] ;	q [ i ] = q [ 1 ] ;
2023	else	N/A	N/A	else	else
2024	set q [ i ] to q [ 2 ]	N/A	N/A	q [ i ] = q [ 2 ] ;	q [ i ] = q [ 2 ] ;
2025	DUMMY	0.0	0.0	}	DUMMY
2026	return q from function	N/A	N/A	return q ;	return q ;
2027	DUMMY	0.0	0.0	}	DUMMY
2028	DUMMY	0.0	0.0	int main() {	DUMMY
2029	create string s	N/A	N/A	string s ;	string s ;
2030	read s	N/A	N/A	cin >> s ;	cin >> s ;
2031	create character stack stk	N/A	N/A	stack < char > stk ;	stack < char > stk ;
2032	create long long integers ans with ans = 0	N/A	N/A	long long int ans = 0 ;	long long int ans = 0 ;
2033	create booleans cond1 , cond2 with cond1 = true , cond2 = true	N/A	N/A	bool cond1 = true , cond2 = true ;	bool cond1 = true, cond2 = true ;
2034	for i = 0 to length of s exclusive	N/A	N/A	for ( int i = 0 ; i < s . length ( ) ; i ++ )	for ( int i = 0 ; i < s. length ( ) ; i ++ )
2035	if s [ i ] is ' 0 '	N/A	N/A	if ( s [ i ] == ' 0 ' )	if ( s [ i ] =='0')
2036	if cond1 is true	N/A	N/A	if ( cond1 )	if ( cond1 )
2037	set cond1 to false	N/A	N/A	cond1 = false ;	cond1 = false ;
2038	print " 1 1 \ n "	N/A	N/A	cout << " 1 1\n " ;	cout << " 1 1\n " ;
2039	else	N/A	N/A	else	else
2040	set cond1 to true	N/A	N/A	cond1 = true ;	cond1 = true ;
2041	print " 3 1 \ n "	N/A	N/A	cout << " 3 1\n " ;	cout << " 31\n " ;
2042	DUMMY	0.0	0.0	}	DUMMY
2043	else	N/A	N/A	else	else
2044	if cond2 is true	N/A	N/A	if ( cond2 )	if ( cond2 )
2045	set cond2 to false	N/A	N/A	cond2 = false ;	cond2 = false ;
2046	print " 4 3 \ n "	N/A	N/A	cout << " 4 3\n " ;	cout << " 43\n " ;
2047	else	N/A	N/A	else	else
2048	set cond2 to true	N/A	N/A	cond2 = true ;	cond2 = true ;
2049	print " 4 1 \ n "	N/A	N/A	cout << " 4 1\n " ;	cout << " 41\n " ;
2050	DUMMY	0.0	0.0	}	DUMMY
2051	DUMMY	0.0	0.0	}	DUMMY
2052	DUMMY	0.0	0.0	}	DUMMY
2053	DUMMY	0.0	0.0	}	DUMMY
2054	create string s	N/A	N/A	string s ;	string s ;
2055	create integer array r with size 1001	N/A	N/A	int r [ 1001 ] ;	int r [ 1001 ] ;
2056	create integer array c with size 1001	N/A	N/A	int c [ 1001 ] ;	int c [ 1001 ] ;
2057	DUMMY	0.0	0.0	int main() {	DUMMY
2058	read s	N/A	N/A	cin >> s ;	cin >> s ;
2059	create integer n with n = length of s	N/A	N/A	int n = s . length ( ) ;	int n = s. length ( ) ;
2060	create boolean slot_0 with slot_0 = false	N/A	N/A	bool slot_0 = false ;	bool slot_0 = false ;
2061	create boolean slot_1 with slot_1 = false	N/A	N/A	bool slot_1 = false ;	bool slot_1 = false ;
2062	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
2063	if s [ i ] is ' 0 '	N/A	N/A	if ( s [ i ] == ' 0 ' )	if ( s [ i ] =='0')
2064	if not slot_0	N/A	N/A	if ( ! slot_0 )	if (! slot_0 )
2065	print " 1 1 \ n "	N/A	N/A	cout << " 1 1\n " ;	cout << " 1 1\n " ;
2066	set slot_0 to true	N/A	N/A	slot_0 = true ;	tot_0 = true ;
2067	else	N/A	N/A	else	else
2068	print " 3 1 \ n "	N/A	N/A	cout << " 3 1\n " ;	cout << " 31\n " ;
2069	set slot_0 to false	N/A	N/A	slot_0 = false ;	tot_0 = false ;
2070	DUMMY	0.0	0.0	}	DUMMY
2071	else	N/A	N/A	else	else
2072	if not slot_1	N/A	N/A	if ( ! slot_1 )	if (! slot_1 )
2073	print " 4 3 \ n "	N/A	N/A	cout << " 4 3\n " ;	cout << " 43\n " ;
2074	set slot_1 to true	N/A	N/A	slot_1 = true ;	tot_1 = true ;
2075	else	N/A	N/A	else	else
2076	print " 4 1 \ n "	N/A	N/A	cout << " 4 1\n " ;	cout << " 41\n " ;
2077	set slot_1 to false	N/A	N/A	slot_1 = false ;	tot_1 = false ;
2078	DUMMY	0.0	0.0	}	DUMMY
2079	DUMMY	0.0	0.0	}	DUMMY
2080	DUMMY	0.0	0.0	}	DUMMY
2081	DUMMY	0.0	0.0	}	DUMMY
2082	create llin with no arguments , returning long long integer	N/A	N/A	long long int llin ( )	long long int llin ( )
2083	create long long integer tmp	N/A	N/A	long long int tmp ;	long long int tmp ;
2084	read tmp	N/A	N/A	cin >> tmp ;	cin >> tmp ;
2085	return tmp from function	N/A	N/A	return tmp ;	return tmp ;
2086	DUMMY	0.0	0.0	}	DUMMY
2087	declare solve with no arguments , returning void	N/A	N/A	void solve ( )	void solve ( )
2088	create long long integer nsticks with nsticks = result of run llin	N/A	N/A	long long int nsticks = llin ( ) ;	long long int nsticks = llin ( n ) ;
2089	create long long integer array lengths with size nsticks	N/A	N/A	long long int lengths [ nsticks ] ;	long long int lengths [ nsticks ] ;
2090	create long long integer min with min = 101	N/A	N/A	long long int min = 101 ;	long long int min = 101 ;
2091	create long long integer max with max = 0	N/A	N/A	long long int max = 0 ;	long long int max = 0 ;
2092	for i = 0 to nsticks exclusive	N/A	N/A	for ( long long int i = 0 ; i < nsticks ; i ++ )	for ( long long int i = 0 ; i < nsticks ; i ++ )
2093	create long long integer tmp with tmp = result of run llin	N/A	N/A	long long int tmp = llin ( ) ;	long long int tmp = llin ( ) ;
2094	set lengths [ i ] to tmp	N/A	N/A	lengths [ i ] = tmp ;	lengths [ i ] = tmp ;
2095	if tmp is greater than max , set max to tmp	N/A	N/A	if ( tmp > max ) max = tmp ;	if ( tmp > max ) max = tmp ;
2096	if tmp is less than min , set min to tmp	N/A	N/A	if ( tmp < min ) min = tmp ;	if ( tmp < min ) min = tmp ;
2097	DUMMY	0.0	0.0	}	DUMMY
2098	create long long integer min_t with min_t to min	N/A	N/A	long long int min_t = min ;	long long int min_t = min ;
2099	create long long integer min_cost with min_cost = 1000005	N/A	N/A	long long int min_cost = 1000005 ;	long long int min_cost = 1000005 ;
2100	for t = min to max + 1 exclusive	N/A	N/A	for ( long long int t = min ; t < max + 1 ; t ++ )	for ( long long int t = min ; t < max + 1 ; t ++ )
2101	create long long integer tmp_cost with tmp_cost = 0	N/A	N/A	long long int tmp_cost = 0 ;	long long int tmp_cost = 0 ;
2102	for i = 0 to nsticks exclusive	N/A	N/A	for ( long long int i = 0 ; i < nsticks ; i ++ )	for ( long long int i = 0 ; i < nsticks ; i ++ )
2103	create long long integer tmp_length with tmp_length = lengths [ i ]	N/A	N/A	long long int tmp_length = lengths [ i ] ;	long long int tmp_length = lengths [ i ] ;
2104	if tmp_length is greater than t + 1	N/A	N/A	if ( tmp_length > t + 1 )	if ( tmp_length > t + 1 )
2105	increment tmp_cost by tmp_length - ( t + 1 )	N/A	N/A	tmp_cost += tmp_length - ( t + 1 ) ;	tmp_cost += tmp_length - ( t + 1 ) ;
2106	else if tmp_length is less than t - 1	N/A	N/A	else if ( tmp_length < t - 1 )	else if ( tmp_length < t - 1 )
2107	increment tmp_cost by t - 1 - tmp_length	N/A	N/A	tmp_cost += t - 1 - ( tmp_length ) ;	tmp_cost += t - 1 - tmp_length ;
2108	DUMMY	0.0	0.0	}	DUMMY
2109	if min_cost is greater than tmp_cost	N/A	N/A	if ( min_cost > tmp_cost )	if ( min_cost > tmp_cost )
2110	set min_t to t	N/A	N/A	min_t = t ;	min_t = t ;
2111	set min_cost to tmp_cost	N/A	N/A	min_cost = tmp_cost ;	min_cost = tmp_cost ;
2112	DUMMY	0.0	0.0	}	DUMMY
2113	DUMMY	0.0	0.0	}	DUMMY
2114	print min_t print " " print min_cost print ' \ n '	N/A	N/A	cout << min_t << " " << min_cost << ' \n ' ;	cout << min_t << " " << miniccost <<'\n';
2115	return from function	N/A	N/A	return ;	return ;
2116	DUMMY	0.0	0.0	}	DUMMY
2117	DUMMY	0.0	0.0	int main() {	DUMMY
2118	create integer TESTS with TESTS = 1	N/A	N/A	int TESTS = 1 ;	int TESTS = 1 ;
2119	while decrement TESTS is true , run solve	N/A	N/A	while ( TESTS -- ) { solve ( ) ; }	while ( TESTS -- ) solve ( ) ;
2120	DUMMY	0.0	0.0	return 0;	DUMMY
2121	DUMMY	0.0	0.0	}	DUMMY
2122	DUMMY	0.0	0.0	int main() {	DUMMY
2123	create integer n	N/A	N/A	int n ;	int n ;
2124	read n	N/A	N/A	cin >> n ;	cin >> n ;
2125	create integer a , b , i , cnt , max , set cnt = 0 , max = 0	N/A	N/A	int a , b , i , cnt = 0 , max = 0 ;	int a, b, i, cnt = 0, max = 0 ;
2126	for i = 0 to n execute	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
2127	print a , b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
2128	set cnt = cnt + b - a	N/A	N/A	cnt = cnt + b - a ;	cnt += b - a ;
2129	if cnt > max set max = cnt	N/A	N/A	if ( cnt > max ) max = cnt ;	if ( cnt > max ) max = cnt ;
2130	DUMMY	0.0	0.0	}	DUMMY
2131	print max	N/A	N/A	cout << max << endl ;	cout << max << endl ;
2132	DUMMY	0.0	0.0	return 0;	DUMMY
2133	DUMMY	0.0	0.0	}	DUMMY
2134	DUMMY	0.0	0.0	int main() {	DUMMY
2135	create integers x , y , c , m with c = 0 , m = 0	N/A	N/A	int x , y , c = 0 , m = 0 ;	int x, y, c = 0, m = 0 ;
2136	create integer n	N/A	N/A	int n ;	int n ;
2137	read n	N/A	N/A	cin >> n ;	cin >> n ;
2138	while decrement n is true	N/A	N/A	while ( n -- )	while ( n -- )
2139	read x read y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
2140	decrement c by x	N/A	N/A	c -= x ;	c -= x ;
2141	increment c by y	N/A	N/A	c += y ;	c += y ;
2142	if c is greater than m , set m to c	N/A	N/A	if ( c > m ) { m = c ; }	if ( c > m ) m = c ;
2143	DUMMY	0.0	0.0	}	DUMMY
2144	print m print newline	N/A	N/A	cout << m << endl ;	cout << m << endl ;
2145	DUMMY	0.0	0.0	return 0;	DUMMY
2146	DUMMY	0.0	0.0	}	DUMMY
2147	create string str	N/A	N/A	string str ;	string str ;
2148	let n , a , b , capacity , total be integers , set capacity = 0 , total = 0	N/A	N/A	int n , a , b , capacity = 0 , total = 0 ;	int n, a, b, capacity = 0, total = 0 ;
2149	DUMMY	0.0	0.0	int main() {	DUMMY
2150	read n	N/A	N/A	cin >> n ;	cin >> n ;
2151	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
2152	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
2153	total = total - a	N/A	N/A	total -= a ;	total -= a ;
2154	set total to total + b	N/A	N/A	total += b ;	total += b ;
2155	assign max of capacity and total to capacity	N/A	N/A	capacity = max ( capacity , total ) ;	capacity = max ( capacity, total ) ;
2156	DUMMY	0.0	0.0	}	DUMMY
2157	print capacity	N/A	N/A	cout << capacity << endl ;	cout << capacity << endl ;
2158	DUMMY	0.0	0.0	return 0;	DUMMY
2159	DUMMY	0.0	0.0	}	DUMMY
2160	DUMMY	0.0	0.0	int main() {	DUMMY
2161	create integer n	N/A	N/A	int n ;	int n ;
2162	read n	N/A	N/A	cin >> n ;	cin >> n ;
2163	create integers on , off , count , c with count = 0 , c = 0	N/A	N/A	int on , off , count = 0 , c = 0 ;	int on, off, count = 0, c = 0 ;
2164	while decrement n is true	N/A	N/A	while ( n -- )	while ( n -- )
2165	read off read on	N/A	N/A	cin >> off >> on ;	cin >> off >> on ;
2166	increment c by on - off	N/A	N/A	c += on - off ;	c += on - off ;
2167	if c is greater than count , set count to c	N/A	N/A	if ( c > count ) count = c ;	if ( c > count ) count = c ;
2168	DUMMY	0.0	0.0	}	DUMMY
2169	print count print newline	N/A	N/A	cout << count << endl ;	cout << count << endl ;
2170	DUMMY	0.0	0.0	return 0;	DUMMY
2171	DUMMY	0.0	0.0	}	DUMMY
2172	DUMMY	0.0	0.0	int main() {	DUMMY
2173	integers = n	N/A	N/A	int n ;	int n ;
2174	read n	N/A	N/A	cin >> n ;	cin >> n ;
2175	integers = max , a , b , c	N/A	N/A	int max , a , b , c ;	int max, a, b, c ;
2176	read a , b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
2177	set c to a + b	N/A	N/A	c = a + b ;	c = a + b ;
2178	set max to c	N/A	N/A	max = c ;	max = c ;
2179	for i = 1 to less than n do the following	N/A	N/A	for ( int i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
2180	read a , b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
2181	subtract a from c	N/A	N/A	c -= a ;	c -= a ;
2182	c equals c plus b	N/A	N/A	c += b ;	c += b ;
2183	if c is greater than max then do the following max = c	N/A	N/A	if ( c > max ) max = c ;	if ( c > max ) max = c ;
2184	DUMMY	0.0	0.0	}	DUMMY
2185	output max	N/A	N/A	cout << max << endl ;	cout << max << endl ;
2186	DUMMY	0.0	0.0	return 0;	DUMMY
2187	DUMMY	0.0	0.0	}	DUMMY
2188	DUMMY	0.0	0.0	int main() {	DUMMY
2189	n , i , j , k , max , cap = int	N/A	N/A	int n , i , j , k , max , cap ;	int n, i, j, k, max, cap ;
2190	set max to - 1	N/A	N/A	max = - 1 ;	max = - 1 ;
2191	set cap to 0	N/A	N/A	cap = 0 ;	cap = 0 ;
2192	read n	N/A	N/A	cin >> n ;	cin >> n ;
2193	for i = 0 to n	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
2194	rad j then k	N/A	N/A	cin >> j >> k ;	cin >> j >> k ;
2195	set cap to cap - j + k	N/A	N/A	cap = cap - j + k ;	cap -= j + k ;
2196	if cap is greater than max set max to cap	N/A	N/A	if ( cap > max ) max = cap ;	if ( cap > max ) max = cap ;
2197	DUMMY	0.0	0.0	}	DUMMY
2198	print max	N/A	N/A	cout << max << endl ;	cout << max << endl ;
2199	DUMMY	0.0	0.0	return 0;	DUMMY
2200	DUMMY	0.0	0.0	}	DUMMY
2201	DUMMY	0.0	0.0	int main() {	DUMMY
2202	let n be an integer	N/A	N/A	int n ;	int n ;
2203	read n	N/A	N/A	cin >> n ;	cin >> n ;
2204	max = int = 0	N/A	N/A	int max = 0 ;	int max = 0 ;
2205	cp = 0 = int	N/A	N/A	int cp = 0 ;	int cp = 0 ;
2206	for i = 0 to n	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
2207	let a , b be ints	N/A	N/A	int a , b ;	int a, b ;
2208	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
2209	increment cp by ( b - a )	N/A	N/A	cp += ( b - a ) ;	cp += ( b - a ) ;
2210	if cp > = max then set max to cp	N/A	N/A	if ( cp >= max ) max = cp ;	if ( cp >= max ) max = cp ;
2211	DUMMY	0.0	0.0	}	DUMMY
2212	print max	N/A	N/A	cout << max << endl ;	cout << max << endl ;
2213	DUMMY	0.0	0.0	}	DUMMY
2214	DUMMY	0.0	0.0	int main() {	DUMMY
2215	create integers n , a , b , c , m with c = 0 , m = 0	N/A	N/A	int n , a , b , c = 0 , m = 0 ;	int n, a, b, c = 0, m = 0 ;
2216	read n	N/A	N/A	cin >> n ;	cin >> n ;
2217	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
2218	read a read b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
2219	set c to c + b - a	N/A	N/A	c = c + b - a ;	c += b - a ;
2220	if m is less than c , set m to c	N/A	N/A	if ( m < c ) m = c ;	if ( m < c ) m = c ;
2221	DUMMY	0.0	0.0	}	DUMMY
2222	print m print newline	N/A	N/A	cout << m << endl ;	cout << m << endl ;
2223	DUMMY	0.0	0.0	return 0;	DUMMY
2224	DUMMY	0.0	0.0	}	DUMMY
2225	DUMMY	0.0	0.0	int main() {	DUMMY
2226	create int n	N/A	N/A	int n ;	int n ;
2227	read n	N/A	N/A	cin >> n ;	cin >> n ;
2228	ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
2229	temp = 0	N/A	N/A	int temp = 0 ;	int temp = 0 ;
2230	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
2231	create int a and b	N/A	N/A	int a , b ;	int a, b ;
2232	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
2233	set temp to temp - a	N/A	N/A	temp -= a ;	temp -= a ;
2234	assign temp + b to temp	N/A	N/A	temp += b ;	temp += b ;
2235	set ans = max of temp and ans	N/A	N/A	ans = max ( temp , ans ) ;	ans = max ( temp, ans ) ;
2236	DUMMY	0.0	0.0	}	DUMMY
2237	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
2238	DUMMY	0.0	0.0	}	DUMMY
2239	DUMMY	0.0	0.0	int main() {	DUMMY
2240	create long longs n , max , d , with max = 0 , d = 0	N/A	N/A	long long n , max = 0 , d = 0 ;	long long n, max = 0, d = 0 ;
2241	read n	N/A	N/A	cin >> n ;	cin >> n ;
2242	create long long arrays a , b , with a size 100000 , with b size 100000	N/A	N/A	long long a [ 100000 ] , b [ 100000 ] ;	long long a [ 100000 ], b [ 1000000 ] ;
2243	for i = 0 to n exclusive	N/A	N/A	for ( long long i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
2244	read a [ i ] read b [ i ]	N/A	N/A	cin >> a [ i ] >> b [ i ] ;	cin >> a [ 1 ] >> b [ i ] ;
2245	set d to d - a [ i ]	N/A	N/A	d = d - a [ i ] ;	d -= a [ i ] ;
2246	set d to d + b [ i ]	N/A	N/A	d = d + b [ i ] ;	d += b [ i ] ;
2247	if d is greater than max , set max to d	N/A	N/A	if ( d > max ) max = d ;	if ( d > max ) max = d ;
2248	DUMMY	0.0	0.0	}	DUMMY
2249	print max print newline	N/A	N/A	cout << max << endl ;	cout << max << endl ;
2250	DUMMY	0.0	0.0	return 0;	DUMMY
2251	DUMMY	0.0	0.0	}	DUMMY
2252	DUMMY	0.0	0.0	int main() {	DUMMY
2253	create integer n	N/A	N/A	int n ;	int n ;
2254	read n	N/A	N/A	cin >> n ;	cin >> n ;
2255	create integer arrays a , b with a size n , b size n	N/A	N/A	int a [ n ] , b [ n ] ;	int a [ n ], b [ n + 1 ] ;
2256	for i = 0 to n exclusive , read a [ i ] read b [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] >> b [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] >> b [ 1 ] ; }
2257	create integer curr with curr = 0	N/A	N/A	int curr = 0 ;	int curr = 0 ;
2258	create integer req with req = 0	N/A	N/A	int req = 0 ;	int req = 0 ;
2259	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
2260	decrement curr by a [ i ]	N/A	N/A	curr -= a [ i ] ;	curr -= a [ i ] ;
2261	increment cur by b [ i ]	N/A	N/A	curr += b [ i ] ;	cur += b [ i ] ;
2262	if curr is greater than req , set req to curr	N/A	N/A	if ( curr > req ) { req = curr ; }	if ( curr > req ) req = curr ;
2263	DUMMY	0.0	0.0	}	DUMMY
2264	print req print newline	N/A	N/A	cout << req << endl ;	cout << req << endl ;
2265	DUMMY	0.0	0.0	return 0;	DUMMY
2266	DUMMY	0.0	0.0	}	DUMMY
2267	DUMMY	0.0	0.0	int main() {	DUMMY
2268	create integer n	N/A	N/A	int n ;	int n ;
2269	create integer maxValue set maxValue = INT_MIN	N/A	N/A	int maxValue = INT_MIN ;	int maxValue = INT_MIN ;
2270	read n	N/A	N/A	cin >> n ;	cin >> n ;
2271	create Integer a , b	N/A	N/A	int a , b ;	int a, b ;
2272	create integer d set d = 0	N/A	N/A	int d = 0 ;	int d = 0 ;
2273	create integer c set c = 0	N/A	N/A	int c = 0 ;	int c = 0 ;
2274	for i = 0 to n execute	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
2275	print a , b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
2276	set c = c + a	N/A	N/A	c = c + a ;	c += a ;
2277	set d = d + b	N/A	N/A	d = d + b ;	d += b ;
2278	if maxValue is less than the absolute value of c - d set maxValue = abs ( c - d )	N/A	N/A	if ( maxValue < abs ( c - d ) ) maxValue = abs ( c - d ) ;	maxValue = abs ( c - d ) ;
2279	DUMMY	0.0	0.0	}	DUMMY
2280	print maxValue	N/A	N/A	cout << maxValue << endl ;	cout << maxValue << endl ;
2281	DUMMY	0.0	0.0	return 0;	DUMMY
2282	DUMMY	0.0	0.0	}	DUMMY
2283	DUMMY	0.0	0.0	int main() {	DUMMY
2284	create integer n	N/A	N/A	int n ;	int n ;
2285	while read n is true	N/A	N/A	while ( cin >> n )	while ( cin >> n )
2286	create integers ans , temp with ans = 0 , temp = 0	N/A	N/A	int ans = 0 , temp = 0 ;	int ans = 0, temp = 0 ;
2287	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
2288	create integers p , q	N/A	N/A	int p , q ;	int p, q ;
2289	read p read q	N/A	N/A	cin >> p >> q ;	cin >> p >> q ;
2290	increment temp by q	N/A	N/A	temp += q ;	temp += q ;
2291	decrement temp by p	N/A	N/A	temp -= p ;	temp -= p ;
2292	set ans to maximum of ans and temp	N/A	N/A	ans = max ( ans , temp ) ;	ans = max ( ans, temp ) ;
2293	DUMMY	0.0	0.0	}	DUMMY
2294	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
2295	DUMMY	0.0	0.0	}	DUMMY
2296	DUMMY	0.0	0.0	return 0;	DUMMY
2297	DUMMY	0.0	0.0	}	DUMMY
2298	DUMMY	0.0	0.0	int main() {	DUMMY
2299	n = int , Max and Count = 0	N/A	N/A	int n , Max = 0 , Count = 0 ;	int n, Max = 0, Count = 0 ;
2300	read n	N/A	N/A	cin >> n ;	cin >> n ;
2301	a and b = array of n int	N/A	N/A	int a [ n ] , b [ n ] ;	int b [ n ] ;
2302	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
2303	read a [ i ] , b [ i ]	N/A	N/A	cin >> a [ i ] >> b [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] >> b [ ++ i ] ; }
2304	subtract a [ i ] from Count	N/A	N/A	Count -= a [ i ] ;	Count -= a [ i ] ;
2305	add b [ i ] to Count	N/A	N/A	Count += b [ i ] ;	Count += b [ i ] ;
2306	if Count > Max Max = Count	N/A	N/A	if ( Count > Max ) { Max = Count ; }	if ( Count > Max ) Max = Count ;
2307	DUMMY	0.0	0.0	}	DUMMY
2308	print Max	N/A	N/A	cout << Max << endl ;	cout << Max << endl ;
2309	DUMMY	0.0	0.0	return 0;	DUMMY
2310	DUMMY	0.0	0.0	}	DUMMY
2311	DUMMY	0.0	0.0	int main() {	DUMMY
2312	a , b , i , j , c , n , p , q = int with j = 0 and c = 0 and p = 0 and q = 0	N/A	N/A	int a , b , i , j = 0 , c = 0 , n , p = 0 , q = 0 ;	int a, b, i, j = 0, c = 0 and n, p == 0, q = 0 ;
2313	read n	N/A	N/A	cin >> n ;	cin >> n ;
2314	for i = 1 to n inclusive	N/A	N/A	for ( i = 1 ; i <= n ; i ++ )	for ( i = 1 ; i <= n ; i ++ )
2315	read a then b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
2316	set p to p + a	N/A	N/A	p = p + a ;	p = p + a ;
2317	set q to q + b	N/A	N/A	q = q + b ;	q += b ;
2318	set c to q - p	N/A	N/A	c = q - p ;	c = q - p ;
2319	if c > j set j to c	N/A	N/A	if ( c > j ) { j = c ; }	if ( c > j ) j = c ;
2320	DUMMY	0.0	0.0	}	DUMMY
2321	print j	N/A	N/A	cout << j << endl ;	cout << j << endl ;
2322	DUMMY	0.0	0.0	return 0;	DUMMY
2323	DUMMY	0.0	0.0	}	DUMMY
2324	DUMMY	0.0	0.0	int main() {	DUMMY
2325	create character array s with size 10001	N/A	N/A	char s [ 10001 ] ;	char s [ 10001 ] ;
2326	create integer t	N/A	N/A	int t ;	int t ;
2327	while read t is true	N/A	N/A	while ( cin >> t )	while ( cin >> t )
2328	create integers ns , sm with ns = - 1 , sm = 0	N/A	N/A	int ns = - 1 , sm = 0 ;	int ns = - 1, sm = 0 ;
2329	while decrement t is true	N/A	N/A	while ( t -- )	while ( t -- )
2330	create integers doll , puppet	N/A	N/A	int doll , puppet ;	int doll, puppet ;
2331	read doll read puppet	N/A	N/A	cin >> doll >> puppet ;	cin >> doll >> puppet ;
2332	set sm to sm - doll + puppet	N/A	N/A	sm = sm - doll + puppet ;	sm -= doll + puppet ;
2333	set ns to maximum of ns and sm	N/A	N/A	ns = max ( ns , sm ) ;	ns = max ( ns, sm ) ;
2334	DUMMY	0.0	0.0	}	DUMMY
2335	print ns print newline	N/A	N/A	cout << ns << endl ;	cout << ns << endl ;
2336	DUMMY	0.0	0.0	}	DUMMY
2337	DUMMY	0.0	0.0	}	DUMMY
2338	DUMMY	0.0	0.0	int main() {	DUMMY
2339	n = integer	N/A	N/A	int n ;	int n ;
2340	while n can be read as a valid integer	N/A	N/A	while ( cin >> n )	while ( cin >> n )
2341	a , b , total , max = integers , k = integer = 0	N/A	N/A	int a , b , total , k = 0 , max ;	int a, b, total, max, k = 0 ;
2342	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
2343	read a , b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
2344	if k is 0	N/A	N/A	if ( k == 0 )	if ( k == 0 )
2345	total = b	N/A	N/A	total = b ;	total = b ;
2346	k = 1	N/A	N/A	k = 1 ;	k = 1 ;
2347	max = b	N/A	N/A	max = b ;	max = b ;
2348	else if k is 1	N/A	N/A	else if ( k == 1 )	else if ( k == 1 )
2349	total = total - a + b	N/A	N/A	total = total - a + b ;	total -= a + b ;
2350	if total > max , then max = total	N/A	N/A	if ( total > max ) max = total ;	if ( total > max ) max = total ;
2351	DUMMY	0.0	0.0	}	DUMMY
2352	DUMMY	0.0	0.0	}	DUMMY
2353	print max	N/A	N/A	cout << max << endl ;	cout << max << endl ;
2354	DUMMY	0.0	0.0	}	DUMMY
2355	DUMMY	0.0	0.0	return 0;	DUMMY
2356	DUMMY	0.0	0.0	}	DUMMY
2357	DUMMY	0.0	0.0	int main() {	DUMMY
2358	create integers a , b	N/A	N/A	int a , b ;	int a, b ;
2359	create integer counter with counter = 0	N/A	N/A	int counter = 0 ;	int counter = 0 ;
2360	create integer tranSize with tranSize = 0	N/A	N/A	int tranSize = 0 ;	int tranSize = 0 ;
2361	create integer rep	N/A	N/A	int rep ;	int rep ;
2362	read rep	N/A	N/A	cin >> rep ;	cin >> rep ;
2363	while decrement rep is true	N/A	N/A	while ( rep -- )	while ( rep -- )
2364	read a read b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
2365	decrement counter by a	N/A	N/A	counter -= a ;	counter -= a ;
2366	increment counter by b	N/A	N/A	counter += b ;	counter += b ;
2367	if counter is greater than tranSize , set tranSize to counter	N/A	N/A	if ( counter > tranSize ) { tranSize = counter ; }	if ( counter > tranSize ) tanSize = counter ;
2368	DUMMY	0.0	0.0	}	DUMMY
2369	print tranSize print newline	N/A	N/A	cout << tranSize << endl ;	cout << tranSize << endl ;
2370	DUMMY	0.0	0.0	return 0;	DUMMY
2371	DUMMY	0.0	0.0	}	DUMMY
2372	DUMMY	0.0	0.0	int main() {	DUMMY
2373	v = long long int vector	N/A	N/A	vector < long long int > v ;	vector < long long int > v ;
2374	n , out , in , sum = long long int with sum = 0	N/A	N/A	long long int n , out , in , sum = 0 ;	long long int n, out, in, sum = 0 ;
2375	read n	N/A	N/A	cin >> n ;	cin >> n ;
2376	loop n times	N/A	N/A	while ( n -- )	while ( n -- )
2377	read out then in	N/A	N/A	cin >> out >> in ;	cin >> out >> in ;
2378	set sum to sum - out + in	N/A	N/A	sum = sum - out + in ;	sum -= out + in ;
2379	append sum to v	N/A	N/A	v . push_back ( sum ) ;	v. push_back ( sum ) ;
2380	DUMMY	0.0	0.0	}	DUMMY
2381	sort v	N/A	N/A	sort ( v . begin ( ) , v . end ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
2382	reverse v	N/A	N/A	reverse ( v . begin ( ) , v . end ( ) ) ;	reverse ( v. begin ( ), v. end ( ) ) ;
2383	print v [ 0 ]	N/A	N/A	cout << v [ 0 ] << endl ;	cout << v [ 0 ] << endl ;
2384	DUMMY	0.0	0.0	return 0;	DUMMY
2385	DUMMY	0.0	0.0	}	DUMMY
2386	DUMMY	0.0	0.0	int main() {	DUMMY
2387	n , x , y , i , max , a = long long integer with max , a = 0	N/A	N/A	long long int n , x , y , i , max = 0 , a = 0 ;	long long int n, x, y, i, max = 0, a = 0 ;
2388	read n	N/A	N/A	cin >> n ;	cin >> n ;
2389	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
2390	read x , y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
2391	a = a - x + y	N/A	N/A	a = a - x + y ;	a -= x + y ;
2392	if max < a , max = a	N/A	N/A	if ( max < a ) { max = a ; }	if ( max < a ) max = a ;
2393	DUMMY	0.0	0.0	}	DUMMY
2394	print max	N/A	N/A	cout << max << " \n " ;	cout << max << endl ;
2395	DUMMY	0.0	0.0	}	DUMMY
2396	DUMMY	0.0	0.0	int main() {	DUMMY
2397	create integers minx , n , a , b and test with minx and test = 0	N/A	N/A	int minx = 0 , n , a , b , test = 0 ;	int minx = 0, n, a, b, test = 0 ;
2398	read variable n from the input	N/A	N/A	cin >> n ;	cin >> n ;
2399	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
2400	read standard input to a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
2401	change test to test - a	N/A	N/A	test -= a ;	test -= a ;
2402	change test to sum of test and b	N/A	N/A	test += b ;	test += b ;
2403	change minx to max of minx and test	N/A	N/A	minx = max ( minx , test ) ;	minx = max ( minx, test ) ;
2404	DUMMY	0.0	0.0	}	DUMMY
2405	print minx to the standard output	N/A	N/A	cout << minx << endl ;	cout << minx << endl ;
2406	DUMMY	0.0	0.0	return 0;	DUMMY
2407	DUMMY	0.0	0.0	}	DUMMY
2408	DUMMY	0.0	0.0	int main() {	DUMMY
2409	n = int	N/A	N/A	int n ;	int n ;
2410	read n	N/A	N/A	cin >> n ;	cin >> n ;
2411	a , b = int array of size n each	N/A	N/A	int a [ n ] , b [ n ] ;	int a [ n ] = { 0 }, b [ ( n ) = { 1 } ;
2412	cntr , ans = int with cntr = 0 and ans = 0	N/A	N/A	int cntr = 0 , ans = 0 ;	int cntr = 0, ans = 0 ;
2413	for i = 0 to n	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
2414	read a [ i ] then b [ i ]	N/A	N/A	cin >> a [ i ] >> b [ i ] ;	cin >> a [ 1 ] >> b [ i ] ;
2415	decrement cntr by a [ i ]	N/A	N/A	cntr -= a [ i ] ;	cntr -= a [ i ] ;
2416	increment cntr by b [ i ]	N/A	N/A	cntr += b [ i ] ;	cntr += b [ i ] ;
2417	set ans to max of ans and cntr	N/A	N/A	ans = max ( ans , cntr ) ;	ans = max ( ans, cntr ) ;
2418	DUMMY	0.0	0.0	}	DUMMY
2419	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
2420	DUMMY	0.0	0.0	}	DUMMY
2421	DUMMY	0.0	0.0	int main() {	DUMMY
2422	create integers n , a , b , s , t	N/A	N/A	int n , a , b , s , t ;	int n, a, b, s, t ;
2423	while read n is true	N/A	N/A	while ( cin >> n )	while ( cin >> n )
2424	set t to 0	N/A	N/A	t = 0 ;	t = 0 ;
2425	create integers r , z , with r = 0 , z = 0	N/A	N/A	int r = 0 , z = 0 ;	int r = 0, z = 0 ;
2426	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
2427	read a read b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
2428	increment r by a	N/A	N/A	r += a ;	r += a ;
2429	increment z by b	N/A	N/A	z += b ;	z += b ;
2430	set s to z - r	N/A	N/A	s = z - r ;	s = z - r ;
2431	set t to maximum of t ans s	N/A	N/A	t = max ( t , s ) ;	t = max ( t, s ) ;
2432	DUMMY	0.0	0.0	}	DUMMY
2433	print t print newline	N/A	N/A	cout << t << endl ;	cout << t << endl ;
2434	DUMMY	0.0	0.0	}	DUMMY
2435	DUMMY	0.0	0.0	return 0;	DUMMY
2436	DUMMY	0.0	0.0	}	DUMMY
2437	s = integer	N/A	N/A	int s ;	int s ;
2438	DUMMY	0.0	0.0	int main() {	DUMMY
2439	create integers x , a [ 10001 ] , b [ 10001 ] , maxs , set maxs to 0	N/A	N/A	int x , a [ 10001 ] , b [ 10001 ] , maxs = 0 ;	int x, a [ 100001 ], b [ 10001 ], maxs = 0 ;
2440	read x	N/A	N/A	cin >> x ;	cin >> x ;
2441	for i = 1 to x inclusive , read a [ i ] and b [ i ]	N/A	N/A	for ( int i = 1 ; i <= x ; i ++ ) cin >> a [ i ] >> b [ i ] ;	for ( int i = 1 ; i <= x ; i ++ ) { cin >> a [ i ] >> b [ 1 ] ; }
2442	for i = 1 to x inclusive	N/A	N/A	for ( int i = 1 ; i <= x ; i ++ )	for ( int i = 1 ; i <= x ; i ++ )
2443	set s to s - a [ i ]	N/A	N/A	s -= a [ i ] ;	s -= a [ i ] ;
2444	assign s + b [ i ] to s	N/A	N/A	s += b [ i ] ;	s += b [ i ] ;
2445	if s greater than maxs , set maxs to s	N/A	N/A	if ( s > maxs ) maxs = s ;	if ( s > maxs ) maxs = s ;
2446	DUMMY	0.0	0.0	}	DUMMY
2447	print maxs	N/A	N/A	cout << maxs << endl ;	cout << maxs << endl ;
2448	DUMMY	0.0	0.0	return 0;	DUMMY
2449	DUMMY	0.0	0.0	}	DUMMY
2450	DUMMY	0.0	0.0	int main() {	DUMMY
2451	create integers n , r , t , with r = 0 , t = 0	N/A	N/A	int n , r = 0 , t = 0 ;	int n, r = 0, t = 0 ;
2452	read n	N/A	N/A	cin >> n ;	cin >> n ;
2453	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
2454	create integers a , b	N/A	N/A	int a , b ;	int a, b ;
2455	read a read b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
2456	set t to t = a + b	N/A	N/A	t = t - a + b ;	t = a + b ;
2457	if t is greater than r , set r to t	N/A	N/A	if ( t > r ) r = t ;	if ( t > r ) r = t ;
2458	DUMMY	0.0	0.0	}	DUMMY
2459	print r print newline	N/A	N/A	cout << r << endl ;	cout << r << endl ;
2460	DUMMY	0.0	0.0	return 0;	DUMMY
2461	DUMMY	0.0	0.0	}	DUMMY
2462	bool function lucky with integer argument n	N/A	N/A	bool lucky ( int n )	bool lucky ( int n )
2463	while n ! = 0	N/A	N/A	while ( n != 0 )	while ( n )
2464	if n % 10 ! = 4 & & n % 10 ! = 7 return false	N/A	N/A	if ( n % 10 != 4 && n % 10 != 7 ) { return false ; }	if (! ( n % 10!= 4 && n % n!= 7 ) ) return false ;
2465	divide n by 10	N/A	N/A	n /= 10 ;	n /= 10 ;
2466	DUMMY	0.0	0.0	}	DUMMY
2467	return true	N/A	N/A	return true ;	return true ;
2468	DUMMY	0.0	0.0	}	DUMMY
2469	almost_lucky is a boolean function with integer argument n	N/A	N/A	bool almost_lucky ( int n )	bool almost_lucky ( int n )
2470	if lucky ( n ) is true , return true	N/A	N/A	if ( lucky ( n ) ) { return true ; }	if ( lucky ( n ) ) return true ;
2471	for i = 2 while i * i < = n	N/A	N/A	for ( int i = 2 ; i * i <= n ; ++ i )	for ( int i = 2 ; i * i <= n ; i ++ )
2472	if n % i = 0 & & ( lucky ( i ) or lucky ( n / i ) is true )	N/A	N/A	if ( n % i == 0 && ( lucky ( i ) || lucky ( n / i ) ) ) { return true ; }	if ( n % i == 0 && ( lucky ( i ) || lucky ( n / i ) )
2473	DUMMY	0.0	0.0	}	DUMMY
2474	return false	N/A	N/A	return false ;	return false ;
2475	DUMMY	0.0	0.0	}	DUMMY
2476	DUMMY	0.0	0.0	int main() {	DUMMY
2477	declare integer n	N/A	N/A	int n ;	int n ;
2478	read n	N/A	N/A	cin >> n ;	cin >> n ;
2479	if almost_lucky ( n ) is true	N/A	N/A	if ( almost_lucky ( n ) )	if ( almost_lucky ( n ) )
2480	print " YES "	N/A	N/A	cout << " YES " << endl ;	puts ( " YES " ) ;
2481	else	N/A	N/A	else	else
2482	print " NO "	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
2483	DUMMY	0.0	0.0	}	DUMMY
2484	DUMMY	0.0	0.0	return 0;	DUMMY
2485	DUMMY	0.0	0.0	}	DUMMY
2486	function str ( get int n , return string )	N/A	N/A	string str ( int n )	string str ( int n )
2487	ss = stringstream	N/A	N/A	stringstream ss ;	stringstream ss ;
2488	push n into ss	N/A	N/A	ss << n ;	ss. push ( n ) ;
2489	s = string	N/A	N/A	string s ;	string s ;
2490	s = ss	N/A	N/A	ss >> s ;	s = ss ;
2491	return s	N/A	N/A	return s ;	return s ;
2492	DUMMY	0.0	0.0	}	DUMMY
2493	sorte = array of 1001 int	N/A	N/A	int sorte [ 1001 ] ;	int sorte [ 1001 ] ;
2494	tam = 0	N/A	N/A	int tam = 0 ;	int tam = 0 ;
2495	function lucky	N/A	N/A	void lucky ( )	int lucky ( )
2496	for i = 0 to 1001 exclusive	N/A	N/A	for ( int i = 0 ; i < 1001 ; i ++ )	for ( int i = 0 ; i < 1001 ; i ++ )
2497	s string = str ( i )	N/A	N/A	string s = str ( i ) ;	string s = str ( i ) ;
2498	sorte2 = true	N/A	N/A	bool sorte2 = true ;	sorte2 = true ;
2499	for c = 0 to length of s exclusive	N/A	N/A	for ( int c = 0 ; c < s . length ( ) ; c ++ )	for ( int c = 0 ; c < s. length ( ) ; c ++ )
2500	if s [ c ] ! = ' 4 ' and ! = ' 7 '	N/A	N/A	if ( s [ c ] != ' 4 ' && s [ c ] != ' 7 ' )	if ( s [ c ]!='4'&& s [ C ] <='7')
2501	sorte2 = false	N/A	N/A	sorte2 = false ;	sorte2 = false ;
2502	break	N/A	N/A	break ;	break ;
2503	DUMMY	0.0	0.0	}	DUMMY
2504	DUMMY	0.0	0.0	}	DUMMY
2505	if sorte2	N/A	N/A	if ( sorte2 )	if ( sorte2 )
2506	sorte [ tam ] = i	N/A	N/A	sorte [ tam ] = i ;	sorte [ tam ] = i ;
2507	increment tam	N/A	N/A	tam ++ ;	tam ++ ;
2508	DUMMY	0.0	0.0	}	DUMMY
2509	DUMMY	0.0	0.0	}	DUMMY
2510	DUMMY	0.0	0.0	}	DUMMY
2511	DUMMY	0.0	0.0	int main() {	DUMMY
2512	call lucky ( )	N/A	N/A	lucky ( ) ;	lucky ( ) ;
2513	n = int	N/A	N/A	int n ;	int n ;
2514	read n	N/A	N/A	cin >> n ;	cin >> n ;
2515	pos = 0	N/A	N/A	int pos = 0 ;	int pos = 0 ;
2516	divide = false	N/A	N/A	bool divide = false ;	bool divide = false ;
2517	while sorte [ pos ] < = n and pos < tam	N/A	N/A	while ( sorte [ pos ] <= n && pos < tam )	while ( sorte [ pos ] <= n && pos < tam )
2518	if n modulo sorte [ pos ] is zero	N/A	N/A	if ( n % sorte [ pos ] == 0 )	if ( n % sorte [ pos ] == 0 )
2519	divide = true	N/A	N/A	divide = true ;	divide = true ;
2520	break	N/A	N/A	break ;	break ;
2521	DUMMY	0.0	0.0	}	DUMMY
2522	increment pos	N/A	N/A	pos ++ ;	pos ++ ;
2523	DUMMY	0.0	0.0	}	DUMMY
2524	if divide	N/A	N/A	if ( divide )	if ( divide )
2525	print " YES "	N/A	N/A	cout << " YES\n " ;	cout << " YES " << endl ;
2526	else	N/A	N/A	else	else
2527	print " NO "	N/A	N/A	cout << " NO\n " ;	cout << " NO\n " ;
2528	DUMMY	0.0	0.0	}	DUMMY
2529	DUMMY	0.0	0.0	return 0;	DUMMY
2530	DUMMY	0.0	0.0	}	DUMMY
2531	assign elements 4 , 7 , 44 , 77 , 47 , 74 , 444 , 447 , 474 , 477 , 777 , 744 , 747 , 774 to int array arr	N/A	N/A	int arr [ ] = { 4 , 7 , 44 , 77 , 47 , 74 , 444 , 447 , 474 , 477 , 777 , 744 , 747 , 774 } ;	int arr [ ] = { 4, 7, 44, 77, 47, 74, 444, 447, 474, 477, 777, 744, 747, 774 } ;
2532	set bool s to false	N/A	N/A	bool s = false ;	bool s = false ;
2533	DUMMY	0.0	0.0	int main() {	DUMMY
2534	create int n	N/A	N/A	int n ;	int n ;
2535	read n	N/A	N/A	cin >> n ;	cin >> n ;
2536	for i = 0 to 14 exclusive	N/A	N/A	for ( int i = 0 ; i < 14 ; ++ i )	for ( int i = 0 ; i < 14 ; i ++ )
2537	if n mod arr [ i ] = 0	N/A	N/A	if ( n % arr [ i ] == 0 )	if ( n % arr [ i ] == 0 )
2538	print YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
2539	s = true	N/A	N/A	s = true ;	bool s = true ;
2540	break	N/A	N/A	break ;	break ;
2541	else	N/A	N/A	else	else
2542	continue the loop	N/A	N/A	continue ;	continue ;
2543	DUMMY	0.0	0.0	}	DUMMY
2544	if s is false , print NO and a newline	N/A	N/A	if ( s == false ) cout << " NO " << endl ;	if ( s == false ) cout << " NO " << endl ;
2545	DUMMY	0.0	0.0	return 0;	DUMMY
2546	DUMMY	0.0	0.0	}	DUMMY
2547	DUMMY	0.0	0.0	int main() {	DUMMY
2548	create integers n , i , , a , j , h	N/A	N/A	int n , i , k , a , j , h ;	int n, i, a, j, h ;
2549	read n	N/A	N/A	cin >> n ;	cin >> n ;
2550	for i = 1 to n inclusive	N/A	N/A	for ( i = 1 ; i <= n ; i ++ )	for ( i = 1 ; i <= n ; i ++ )
2551	set k to i	N/A	N/A	k = i ;	int k = i ;
2552	if n % k is 0	N/A	N/A	if ( n % k == 0 )	if ( n % k == 0 )
2553	set j to h to 0	N/A	N/A	j = h = 0 ;	j = h = 0 ;
2554	while k is not 0	N/A	N/A	while ( k != 0 )	while ( k )
2555	set a to k % 10	N/A	N/A	a = k % 10 ;	a = k % 10 ;
2556	if a is 4 or a is 7 , increment h	N/A	N/A	if ( a == 4 || a == 7 ) { h ++ ; }	if ( a == 4 || a == 7 ) h ++ ;
2557	set k to k / 10	N/A	N/A	k = k / 10 ;	k /= 10 ;
2558	increment j	N/A	N/A	j ++ ;	j ++ ;
2559	DUMMY	0.0	0.0	}	DUMMY
2560	if h is j	N/A	N/A	if ( h == j )	if ( h == j )
2561	print " YES " print newline	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
2562	DUMMY	0.0	0.0	return 0;	DUMMY
2563	DUMMY	0.0	0.0	}	DUMMY
2564	DUMMY	0.0	0.0	}	DUMMY
2565	DUMMY	0.0	0.0	}	DUMMY
2566	print " NO " print newline	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
2567	DUMMY	0.0	0.0	}	DUMMY
2568	DUMMY	0.0	0.0	int main() {	DUMMY
2569	num = integer	N/A	N/A	int num ;	int num ;
2570	arr = integer array of 14 strings with arr = { 4 , 7 , 44 , 47 , 74 , 77 , 444 , 447 , 474 , 477 , 744 , 747 , 774 , 777 }	N/A	N/A	int arr [ 14 ] = { 4 , 7 , 44 , 47 , 74 , 77 , 444 , 447 , 474 , 477 , 744 , 747 , 774 , 777 } ;	string arr [ 14 ] = { 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777 } ;
2571	read num	N/A	N/A	cin >> num ;	cin >> num ;
2572	for i = 0 to 13	N/A	N/A	for ( int i = 0 ; i < 14 ; i ++ )	for ( int i = 0 ; i < 13 ; i ++ )
2573	if num modulo arr [ i ] is 0	N/A	N/A	if ( num % arr [ i ] == 0 )	if ( num % arr [ i ] == 0 )
2574	print YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
2575	DUMMY	0.0	0.0	return 0;	DUMMY
2576	DUMMY	0.0	0.0	}	DUMMY
2577	DUMMY	0.0	0.0	}	DUMMY
2578	print NO	N/A	N/A	cout << " NO " << endl ;	cout << " NO\n " ;
2579	DUMMY	0.0	0.0	return 0;	DUMMY
2580	DUMMY	0.0	0.0	}	DUMMY
2581	DUMMY	0.0	0.0	int main() {	DUMMY
2582	set int i , j , l , x , m , m1 , k to 0 , res = 0	N/A	N/A	int i , j , l , x , m , m1 , k = 0 , res = 0 ;	int i, j, l, x, m, m1, k = 0, res = 0 ;
2583	read x	N/A	N/A	cin >> x ;	cin >> x ;
2584	set int a as array of 1000 all to 0	N/A	N/A	int a [ 1000 ] = { 0 } ;	int a [ 1000 ] = { 0 } ;
2585	for = 4 to less than or equal to 1000 do the following	N/A	N/A	for ( j = 4 ; j <= 1000 ; j ++ )	for ( i = 4 ; i <= 1000 ; i ++ )
2586	set i to j	N/A	N/A	i = j ;	i = j ;
2587	set m to 0 , m1	N/A	N/A	m = 0 , m1 = 0 ;	m = 0, m1 = 0 ;
2588	if i is greater than 0 then do	N/A	N/A	while ( i > 0 )	if ( i > 0 )
2589	set l to i modulo 10	N/A	N/A	l = i % 10 ;	l = i % 10 ;
2590	if l is 4 or 7 then add one to m	N/A	N/A	if ( l == 4 || l == 7 ) m ++ ;	if ( l == 4 || l == 7 ) m ++ ;
2591	set i to i / 10	N/A	N/A	i = i / 10 ;	i = i / 10 ;
2592	add one to m1	N/A	N/A	m1 ++ ;	m1 ++ ;
2593	DUMMY	0.0	0.0	}	DUMMY
2594	if m is m1 then do the following	N/A	N/A	if ( m == m1 )	if ( m == m1 )
2595	set a [ k ] to j	N/A	N/A	a [ k ] = j ;	a [ k ] = j ;
2596	add one to k	N/A	N/A	k ++ ;	k ++ ;
2597	DUMMY	0.0	0.0	}	DUMMY
2598	DUMMY	0.0	0.0	}	DUMMY
2599	for = 0 to less than k do the following	N/A	N/A	for ( i = 0 ; i < k ; i ++ )	for ( i = 0 ; i < k ; i ++ )
2600	if x modulo a [ i ] is 0 then do	N/A	N/A	if ( x % a [ i ] == 0 )	if ( x % a [ i ] == 0 )
2601	set res to 5	N/A	N/A	res = 5 ;	res = 5 ;
2602	break	N/A	N/A	break ;	break ;
2603	DUMMY	0.0	0.0	}	DUMMY
2604	DUMMY	0.0	0.0	}	DUMMY
2605	if res is 5 then do the following commands	N/A	N/A	if ( res == 5 )	if ( res == 5 )
2606	output YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
2607	else	N/A	N/A	else	else
2608	output NO	N/A	N/A	cout << " NO " << endl ;	cout << " NO\n " ;
2609	DUMMY	0.0	0.0	return 0;	DUMMY
2610	DUMMY	0.0	0.0	}	DUMMY
2611	create integer n	N/A	N/A	int n ;	int n ;
2612	create integer array arr with arr = { 4 , 7 , 44 , 47 , 74 , 77 , 444 , 447 , 474 , 477 }	N/A	N/A	int arr [ ] = { 4 , 7 , 44 , 47 , 74 , 77 , 444 , 447 , 474 , 477 } ;	int arr [ ] = { 4, 7, 44, 47, 74, 77, 444, 447, 474, 477 } ;
2613	DUMMY	0.0	0.0	int main() {	DUMMY
2614	read n	N/A	N/A	cin >> n ;	cin >> n ;
2615	for i = 0 to size of arr / 4 exclusie	N/A	N/A	for ( int i = 0 ; i < sizeof ( arr ) / 4 ; i ++ )	for ( int i = 0 ; i < arr. size ( ) / 4 ; i ++ )
2616	if not ( n % arr [ i ] )	N/A	N/A	if ( ! ( n % arr [ i ] ) )	if (! ( n % arr [ i ] ) )
2617	print " YES \ n "	N/A	N/A	cout << " YES\n " ;	cout << " YES\n " ;
2618	exit from program with code 0	N/A	N/A	exit ( 0 ) ;	exit ( 0 ) ;
2619	DUMMY	0.0	0.0	}	DUMMY
2620	print " NO \ n "	N/A	N/A	cout << " NO\n " ;	cout << " NO\n " ;
2621	DUMMY	0.0	0.0	return 0;	DUMMY
2622	DUMMY	0.0	0.0	}	DUMMY
2623	int function getdigits with int argument n	N/A	N/A	int getdigits ( int n )	int getdigits ( int n )
2624	declare int variable c = 0	N/A	N/A	int c = 0 ;	int c = 0 ;
2625	while n is not 0	N/A	N/A	while ( n != 0 )	while ( n )
2626	divide n by 10	N/A	N/A	n /= 10 ;	n /= 10 ;
2627	increment c	N/A	N/A	c ++ ;	c ++ ;
2628	DUMMY	0.0	0.0	}	DUMMY
2629	return c	N/A	N/A	return c ;	return c ;
2630	DUMMY	0.0	0.0	}	DUMMY
2631	DUMMY	0.0	0.0	int main() {	DUMMY
2632	declare int variables n , d , i and flag where flag = 0	N/A	N/A	int n , d , i , flag = 0 ;	int n, d, i, flag = 0 ;
2633	DUMMY	0.0	0.0	;	DUMMY
2634	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
2635	assign result of etdigits ( n ) to d	N/A	N/A	d = getdigits ( n ) ;	d = etdigits ( n ) ;
2636	if n % 4 = 0	N/A	N/A	if ( n % 4 == 0 )	if ( n % 4 == 0 )
2637	set flag to 1	N/A	N/A	flag = 1 ;	flag = 1 ;
2638	else if n % 7 = 0	N/A	N/A	else if ( n % 7 == 0 )	else if ( n % 7 == 0 )
2639	assign 1 to flag	N/A	N/A	flag = 1 ;	flag = 1 ;
2640	else if n % 47 = 0	N/A	N/A	else if ( n % 47 == 0 )	else if ( n % 47 == 0 )
2641	assign 1 to flag	N/A	N/A	flag = 1 ;	flag = 1 ;
2642	else if n % 477 = 0	N/A	N/A	else if ( n % 477 == 0 )	else if ( n % 477 == 0 )
2643	change flag to 1	N/A	N/A	flag = 1 ;	flag = 1 ;
2644	else if n % 447 = 0	N/A	N/A	else if ( n % 447 == 0 )	else if ( n % 447 == 0 )
2645	assign 1 to flag	N/A	N/A	flag = 1 ;	flag = 1 ;
2646	else if n % 474 = 0	N/A	N/A	else if ( n % 474 == 0 )	else if ( n % 474 == 0 )
2647	set flag to 1	N/A	N/A	flag = 1 ;	flag = 1 ;
2648	else if n % 744 = 0	N/A	N/A	else if ( n % 744 == 0 )	else if ( n % 744 == 0 )
2649	assign 1 to flag	N/A	N/A	flag = 1 ;	flag = 1 ;
2650	else if n % 747 = 0	N/A	N/A	else if ( n % 747 == 0 )	else if ( n % 747 == 0 )
2651	set flag to 1	N/A	N/A	flag = 1 ;	flag = 1 ;
2652	else if n % 774 = 0	N/A	N/A	else if ( n % 774 == 0 )	else if ( n % 774 == 0 )
2653	set flag to 1	N/A	N/A	flag = 1 ;	flag = 1 ;
2654	DUMMY	0.0	0.0	}	DUMMY
2655	if flag is true	N/A	N/A	if ( flag )	if ( flag )
2656	print " YES "	N/A	N/A	cout << " YES "	cout << " YES " << endl ;
2657	print " \ n "	N/A	N/A	<< " \n " ;	<< " \n " ;
2658	else	N/A	N/A	else	else
2659	print " NO "	N/A	N/A	cout << " NO "	cout << " NO "
2660	print " \ n "	N/A	N/A	<< " \n " ;	<< " \n " ;
2661	DUMMY	0.0	0.0	return 0;	DUMMY
2662	DUMMY	0.0	0.0	}	DUMMY
2663	DUMMY	0.0	0.0	int main() {	DUMMY
2664	integers = a	N/A	N/A	int a ;	int a ;
2665	read a	N/A	N/A	cin >> a ;	cin >> a ;
2666	set int l to 0	N/A	N/A	int l = 0 ;	int l = 0 ;
2667	set int m to a	N/A	N/A	int m = a ;	int m = a ;
2668	for i = 0 to less than a do the following	N/A	N/A	for ( int i = 0 ; i < a ; i ++ )	for ( int i = 0 ; i < a ; i ++ )
2669	set m to m / 10	N/A	N/A	m = m / 10 ;	m /= 10 ;
2670	set l to l + 1	N/A	N/A	l = l + 1 ;	l = l + 1 ;
2671	if m is 0 then do break	N/A	N/A	if ( m == 0 ) { break ; }	if ( m == 0 ) break ;
2672	DUMMY	0.0	0.0	}	DUMMY
2673	for k = 1 to less than or equal to l do the following	N/A	N/A	for ( int k = 1 ; k <= l ; k ++ )	for ( int k = 1 ; k <= l ; k ++ )
2674	set int b [ k ] to	N/A	N/A	int b [ k ] = { } ;	int b [ k ] = ;
2675	for i = 1 to less than or equal to k do the following	N/A	N/A	for ( int i = 1 ; i <= k ; i ++ )	for ( int i = 1 ; i <= k ; i ++ )
2676	set int sum1 to 0	N/A	N/A	int sum1 = 0 ;	int sum1 = 0 ;
2677	set b [ k - i ] to 4	N/A	N/A	b [ k - i ] = 4 ;	b [ k - i ] = 4 ;
2678	for j = 0 to less than k then sum1 = 10 * sum1 + b [ j ]	N/A	N/A	for ( int j = 0 ; j < k ; j ++ ) { sum1 = 10 * sum1 + b [ j ] ; }	for ( int j = 0 ; j < k ; j ++ ) sum1 = 10 * sum1 + b [ j ] ;
2679	if a modulo sum1 is 0 then do	N/A	N/A	if ( a % sum1 == 0 )	if ( a % sum1 == 0 )
2680	output YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
2681	DUMMY	0.0	0.0	return 0;	DUMMY
2682	DUMMY	0.0	0.0	}	DUMMY
2683	DUMMY	0.0	0.0	}	DUMMY
2684	for i = 1 to less than or equal to k do the following	N/A	N/A	for ( int i = 1 ; i <= k ; i ++ )	for ( int i = 1 ; i <= k ; i ++ )
2685	set int sum1 to 0	N/A	N/A	int sum1 = 0 ;	int sum1 = 0 ;
2686	set b [ k - i ] to 7	N/A	N/A	b [ k - i ] = 7 ;	b [ k - i ] = 7 ;
2687	for j = 0 to less than k do the following	N/A	N/A	for ( int j = 0 ; j < k ; j ++ ) { sum1 = 10 * sum1 + b [ j ] ; }	for ( int j = 0 ; j < k ; j ++ )
2688	if a modulo sum1 is 0 then do	N/A	N/A	if ( a % sum1 == 0 )	if ( a % sum1 == 0 )
2689	output YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
2690	DUMMY	0.0	0.0	return 0;	DUMMY
2691	DUMMY	0.0	0.0	}	DUMMY
2692	DUMMY	0.0	0.0	}	DUMMY
2693	for j = 0 to less than k do b [ j ] = 0	N/A	N/A	for ( int j = 0 ; j < k ; j ++ ) { b [ j ] = 0 ; }	for ( int j = 0 ; j < k ; j ++ ) b [ j ] ='0';
2694	for i = 1 to less than or equal to k do the following	N/A	N/A	for ( int i = 1 ; i <= k ; i ++ )	for ( int i = 1 ; i <= k ; i ++ )
2695	set int sum1 to 0	N/A	N/A	int sum1 = 0 ;	int sum1 = 0 ;
2696	set b [ k - i ] to 7	N/A	N/A	b [ k - i ] = 7 ;	b [ k - i ] = 7 ;
2697	for j = 0 to less than k do the following	N/A	N/A	for ( int j = 0 ; j < k ; j ++ ) { sum1 = 10 * sum1 + b [ j ] ; }	for ( int j = 0 ; j < k ; j ++ )
2698	if a modulo sum1 is 0 then do	N/A	N/A	if ( a % sum1 == 0 )	if ( a % sum1 == 0 )
2699	output YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
2700	DUMMY	0.0	0.0	return 0;	DUMMY
2701	DUMMY	0.0	0.0	}	DUMMY
2702	DUMMY	0.0	0.0	}	DUMMY
2703	for i = 1 to less than or equal to k do the following	N/A	N/A	for ( int i = 1 ; i <= k ; i ++ )	for ( int i = 1 ; i <= k ; i ++ )
2704	set int sum1 to 0	N/A	N/A	int sum1 = 0 ;	int sum1 = 0 ;
2705	set b [ k - i ] to 4	N/A	N/A	b [ k - i ] = 4 ;	b [ k - i ] = 4 ;
2706	for j = 0 to less than k do the following	N/A	N/A	for ( int j = 0 ; j < k ; j ++ ) { sum1 = 10 * sum1 + b [ j ] ; }	for ( int j = 0 ; j < k ; j ++ )
2707	if a modulo sum1 is 0 then do	N/A	N/A	if ( a % sum1 == 0 )	if ( a % sum1 == 0 )
2708	output YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
2709	DUMMY	0.0	0.0	return 0;	DUMMY
2710	DUMMY	0.0	0.0	}	DUMMY
2711	DUMMY	0.0	0.0	}	DUMMY
2712	DUMMY	0.0	0.0	}	DUMMY
2713	output NO	N/A	N/A	cout << " NO " << endl ;	cout << " NO\n " ;
2714	DUMMY	0.0	0.0	}	DUMMY
2715	set int n , arr [ ] to 4 , 7 , 44 , 47 , 74 , 77 , 444 , 447 , 474 , 477 , 744 , 747 , 774 , 777	N/A	N/A	int n , arr [ ] = { 4 , 7 , 44 , 47 , 74 , 77 , 444 , 447 , 474 , 477 , 744 , 747 , 774 , 777 } ;	int n, arr [ ] = 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777 ;
2716	DUMMY	0.0	0.0	int main() {	DUMMY
2717	read n	N/A	N/A	cin >> n ;	cin >> n ;
2718	for i = 0 to less than 10 do the following	N/A	N/A	for ( int i = 0 ; i < 10 ; i ++ )	for ( int i = 0 ; i < 10 ; i ++ )
2719	if n / arr [ i ] has no remainder then do the following	N/A	N/A	if ( ! ( n % arr [ i ] ) )	if ( n % arr [ i ] == 0 )
2720	output YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
2721	DUMMY	0.0	0.0	return 0;	DUMMY
2722	DUMMY	0.0	0.0	}	DUMMY
2723	DUMMY	0.0	0.0	}	DUMMY
2724	output NO	N/A	N/A	cout << " NO " << endl ;	cout << " NO\n " ;
2725	DUMMY	0.0	0.0	return 0;	DUMMY
2726	DUMMY	0.0	0.0	}	DUMMY
2727	DUMMY	0.0	0.0	int main() {	DUMMY
2728	n , k = integer	N/A	N/A	int n , k ;	int n, k ;
2729	read n , k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
2730	x , y , x0 , y0 , total = double with total ( 0 . 0 )	N/A	N/A	double x , y , x0 , y0 , total ( 0.0 ) ;	double x, y, x0, y0, total = 0.0 ;
2731	read x0 , y0	N/A	N/A	cin >> x0 >> y0 ;	cin >> x0 >> y0 ;
2732	while decrement n	N/A	N/A	while ( -- n )	while ( n -- )
2733	read x , y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
2734	total = total + sqrt ( ( x - x0 ) * ( x - x0 ) + ( y - y0 ) * ( y - y0 ) )	N/A	N/A	total += sqrt ( ( x - x0 ) * ( x - x0 ) + ( y - y0 ) * ( y - y0 ) ) ;	total = total + sqrt ( ( x - x0 ) * ( x + x0) + ( y - y0) * ( y + y0 ) ) ;
2735	x0 = x	N/A	N/A	x0 = x ;	x0 = x ;
2736	y0 = y	N/A	N/A	y0 = y ;	y0 = y ;
2737	DUMMY	0.0	0.0	}	DUMMY
2738	print fixed , setprecision ( 6 ) , total * k / 50	N/A	N/A	cout << fixed << setprecision ( 6 ) << total * k / 50 << endl ;	cout << fixed << setprecision ( 6 ) << total * k / 50 << endl ;
2739	DUMMY	0.0	0.0	return 0;	DUMMY
2740	DUMMY	0.0	0.0	}	DUMMY
2741	DUMMY	0.0	0.0	int main() {	DUMMY
2742	n , k = int	N/A	N/A	int n , k ;	int n, k ;
2743	read n then k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
2744	x , y , x0 , y0 , total = double with total = 0 . 0	N/A	N/A	double x , y , x0 , y0 , total ( 0.0 ) ;	double x, y, x0, y0, total = 0.0 ;
2745	read x0 then y0	N/A	N/A	cin >> x0 >> y0 ;	cin >> x0 >> y0 ;
2746	loop n times	N/A	N/A	while ( -- n )	while ( n -- )
2747	read x then y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
2748	add sqrt ( ( x - x0 ) * ( x - x0 ) + ( y - y0 ) * ( y - y0 ) ) to total	N/A	N/A	total += sqrt ( ( x - x0 ) * ( x - x0 ) + ( y - y0 ) * ( y - y0 ) ) ;	total += sqrt ( ( x - x0 ) * ( x + x0) + ( y - y0) * ( y + y0 ) ) ;
2749	set x0 = x	N/A	N/A	x0 = x ;	x0 = x ;
2750	set y0 = y	N/A	N/A	y0 = y ;	y0 = y ;
2751	DUMMY	0.0	0.0	}	DUMMY
2752	print total * k / 50 with 6 decimal digits	N/A	N/A	cout << fixed << setprecision ( 6 ) << total * k / 50 << endl ;	cout << total * k / 50 << 6 << endl ;
2753	DUMMY	0.0	0.0	return 0;	DUMMY
2754	DUMMY	0.0	0.0	}	DUMMY
2755	DUMMY	0.0	0.0	int main() {	DUMMY
2756	create integers n , k	N/A	N/A	int n , k ;	int n, k ;
2757	read n read k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
2758	create doubles x , y , x0 , y0 , total with total initialized with 0 . 0	N/A	N/A	double x , y , x0 , y0 , total ( 0.0 ) ;	double x, y, x0, y0, total ( 0.0 ) ;
2759	read x0 read y0	N/A	N/A	cin >> x0 >> y0 ;	cin >> x0 >> y0 ;
2760	while decrement n is true	N/A	N/A	while ( -- n )	while ( n -- )
2761	read x read y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
2762	increment total by square root of ( ( x - x0 ) * ( x - x0 ) + ( y - y0 ) * ( y - y0 ) )	N/A	N/A	total += sqrt ( ( x - x0 ) * ( x - x0 ) + ( y - y0 ) * ( y - y0 ) ) ;	total += sqrt ( ( x - x0 ) * ( x + x0) + ( y - y0) * ( y + y0 ) ) ;
2763	set x0 to x	N/A	N/A	x0 = x ;	x0 = x ;
2764	set y0 to y	N/A	N/A	y0 = y ;	y0 = y ;
2765	DUMMY	0.0	0.0	}	DUMMY
2766	print fixed , set cout decimal precision to 6 , print total * k / 50 print newline	N/A	N/A	cout << fixed << setprecision ( 6 ) << total * k / 50 << endl ;	cout << fixed << setprecision ( 6 ), cout << total * k / 50 << endl ;
2767	DUMMY	0.0	0.0	return 0;	DUMMY
2768	DUMMY	0.0	0.0	}	DUMMY
2769	double function dist with integer arguments x1 , y1 , x2 and y2	N/A	N/A	double dist ( int x1 , int y1 , int x2 , int y2 )	double dist ( int x1, int y1, const double x2, const int y2 )
2770	return square root of ( pow ( ( x1 - x2 ) , 2 ) + pow ( ( y1 - y2 ) , 2 ) )	N/A	N/A	return sqrt ( pow ( ( x1 - x2 ) , 2 ) + pow ( ( y1 - y2 ) , 2 ) ) ;	return sqrt ( pow ( ( x1 - x2 ), 2 ) + pow ( () y1 - y2 ) + 2 ) ) ;
2771	DUMMY	0.0	0.0	}	DUMMY
2772	DUMMY	0.0	0.0	int main() {	DUMMY
2773	create integers n and k	N/A	N/A	int n , k ;	int n, k ;
2774	read n and k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
2775	declare boolean f = true	N/A	N/A	bool f = true ;	bool f = true ;
2776	create integers x1 , y1 , x2 and y2	N/A	N/A	int x1 , y1 , x2 , y2 ;	int x1, y1, x2, y2 ;
2777	create double totDist	N/A	N/A	double totDist ;	double totDist ;
2778	decrement n in a loop while n > 0	N/A	N/A	while ( n -- )	while ( n -- )
2779	if f is true	N/A	N/A	if ( f )	if ( f )
2780	read x1 and y1	N/A	N/A	cin >> x1 >> y1 ;	cin >> x1 >> y1 ;
2781	set f to false	N/A	N/A	f = false ;	f = false ;
2782	else	N/A	N/A	else	else
2783	read x2 and y2	N/A	N/A	cin >> x2 >> y2 ;	cin >> x2 >> y2 ;
2784	increase totDist by dist of ( x1 , y1 , x2 , y2 )	N/A	N/A	totDist += dist ( x1 , y1 , x2 , y2 ) ;	totDist += dist ( x1, y1, x2, y2 ) ;
2785	set x1 to x2	N/A	N/A	x1 = x2 ;	x1 = x2 ;
2786	assign value of y2 to y1	N/A	N/A	y1 = y2 ;	y1 = y2 ;
2787	DUMMY	0.0	0.0	}	DUMMY
2788	DUMMY	0.0	0.0	}	DUMMY
2789	create double r = totDist * k / 50 . 0	N/A	N/A	double r = totDist * k / 50.0 ;	double r = totDist * k / 50.0 ;
2790	print fixed and r	N/A	N/A	cout << fixed << r << endl ;	cout << fixed << r << endl ;
2791	DUMMY	0.0	0.0	return 0;	DUMMY
2792	DUMMY	0.0	0.0	}	DUMMY
2793	DUMMY	0.0	0.0	int main() {	DUMMY
2794	s = string	N/A	N/A	string s ;	string s ;
2795	read s	N/A	N/A	getline ( cin , s ) ;	cin >> s ;
2796	for i = 0 to s . length ( ) exclusive	N/A	N/A	for ( int i = 0 ; i < s . length ( ) ; i ++ )	for ( int i = 0 ; i < s. length ( ) ; i ++ )
2797	while ( s [ i - 1 ] is character ' ' and s [ i ] is character ' ' ) , erase ( s . begin ( ) + i - 1 ) from s	N/A	N/A	while ( s [ i - 1 ] == ' ' && s [ i ] == ' ' ) s . erase ( s . begin ( ) + i - 1 ) ;	while ( ( s [ i - 1 ] ==' ') &&! s [ 1 ] ) { s. erase ( s. begin ( ) + i + 1 ) ; }
2798	if ( ( s [ i ] is . or s [ i ] is ! or s [ i ] is , or s [ i ] is ? ) )	N/A	N/A	if ( ( s [ i ] == ' . ' || s [ i ] == ' ! ' || s [ i ] == ' , ' || s [ i ] == ' ? ' ) )	if ( ( ( s [ i ] == '.'|| s [ 1 ]!= '!'&& s [ 2 ] =='?') )
2799	if ( s [ i - 1 ] is character ' ' and s [ i + 1 ] is character ' ' )	N/A	N/A	if ( s [ i - 1 ] == ' ' && s [ i + 1 ] == ' ' )	if ( ( s [ i - 1 ] ==' ') && ( s. at ( i + 1 ) == '.') )
2800	erase ( s . begin ( ) + i - 1 ) from s	N/A	N/A	s . erase ( s . begin ( ) + i - 1 ) ;	s. erase ( s. begin ( ) + i - 1 ) ;
2801	else if ( s [ i + 1 ] is not character ' '	N/A	N/A	else if ( s [ i + 1 ] != ' ' )	else if ( s [ i + 1 ]!=' ')
2802	insert ( s . begin ( ) + i + 1 , character ' ' ) in s	N/A	N/A	s . insert ( s . begin ( ) + i + 1 , ' ' ) ;	s. insert ( s. begin ( ) + i + 1,' ') ;
2803	while ( s [ i - 1 ] is character ' ' ) erase ( s . begin ( ) + i - 1 ) from s	N/A	N/A	while ( s [ i - 1 ] == ' ' ) s . erase ( s . begin ( ) + i - 1 ) ;	while ( s [ i - 1 ] ==' ') s. erase ( s. begin ( ) + i - i ) ;
2804	DUMMY	0.0	0.0	}	DUMMY
2805	DUMMY	0.0	0.0	}	DUMMY
2806	print s	N/A	N/A	cout << s << " \n " ;	cout << s << endl ;
2807	DUMMY	0.0	0.0	return 0;	DUMMY
2808	DUMMY	0.0	0.0	}	DUMMY
2809	create const ints N = 1e5 + 5 and OO = 0x3f3f3f3f	N/A	N/A	const int N = 1e5 + 5 , OO = 0x3f3f3f3f ;	const int N = 1e5 + 5, OO = 0x3f3f2f ;
2810	DUMMY	0.0	0.0	int main() {	DUMMY
2811	declare string variable str	N/A	N/A	string str ;	string str ;
2812	read input into str	N/A	N/A	getline ( cin , str ) ;	getline ( cin, str ) ;
2813	loop i from 0 to length of str exclusive	N/A	N/A	for ( int i = 0 ; i < str . size ( ) ; i ++ )	for ( int i = 0 ; i < str. length ( ) ; i ++ )
2814	if str [ i ] is equal to ' ' and str [ i + 1 ] is equal to ' '	N/A	N/A	if ( str [ i ] == ' ' && str [ i + 1 ] == ' ' )	if ( ( str [ i ] ==' ') && ( ( s [ i + 1 ] == " " ) ) )
2815	remove element at position i from str	N/A	N/A	str . erase ( str . begin ( ) + i ) ;	str. erase ( i, 1 ) ;
2816	decrement i by one	N/A	N/A	i -- ;	i -- ;
2817	DUMMY	0.0	0.0	}	DUMMY
2818	if str [ i ] = ' , ' or str [ i ] = ' ! ' or str [ i ] = ' ? ' or str [ i ] = ' . '	N/A	N/A	if ( str [ i ] == ' , ' || str [ i ] == ' ! ' || str [ i ] == ' ? ' || str [ i ] == ' . ' )	if ( ( str [ i ] == ',') || ( ( s [ i - == '!') && ( ( st [ i + 1 ] == "?') ) || str [ u ]!= '.') { }
2819	if str [ i + 1 ] ! = ' ' and i < length of str - 1	N/A	N/A	if ( str [ i + 1 ] != ' ' && i < str . size ( ) - 1 )	if ( str [ i + 1 ]!=' '&& i < str. length ( ) - 1 )
2820	declare string a = " "	N/A	N/A	string a = " " ;	string a = " " ;
2821	insert a to position i + 1 of str	N/A	N/A	str . insert ( i + 1 , a ) ;	str. insert ( i + 1 ) ;
2822	DUMMY	0.0	0.0	}	DUMMY
2823	if str [ i - 1 ] is equal to ' '	N/A	N/A	if ( str [ i - 1 ] == ' ' )	if ( str [ i - 1 ] ==' ')
2824	remove element at position i - 1 from str	N/A	N/A	str . erase ( str . begin ( ) + ( i - 1 ) ) ;	str. erase ( i - 1 ) ;
2825	decrement i by one	N/A	N/A	i -- ;	i -- ;
2826	DUMMY	0.0	0.0	}	DUMMY
2827	DUMMY	0.0	0.0	}	DUMMY
2828	DUMMY	0.0	0.0	}	DUMMY
2829	print str	N/A	N/A	cout << str << endl ;	cout << str << endl ;
2830	DUMMY	0.0	0.0	}	DUMMY
2831	DUMMY	0.0	0.0	int main() {	DUMMY
2832	s = string array	N/A	N/A	string s ;	string s ;
2833	set int sp to 0 , p = 0	N/A	N/A	int sp = 0 , p = 0 ;	int sp = 0, p = 0 ;
2834	get the line as variable s	N/A	N/A	getline ( cin , s ) ;	cin >> s ;
2835	set string s2 to	N/A	N/A	string s2 = " " ;	string s2 = " " ;
2836	set int l to s . size ( )	N/A	N/A	int l = s . size ( ) ;	int l = s. size ( ) ;
2837	for i = 0 to less than l do the following	N/A	N/A	for ( int i = 0 ; i < l ; i ++ )	for ( int i = 0 ; i < l ; i ++ )
2838	if s [ i ] is then do	N/A	N/A	if ( s [ i ] == ' ' )	if ( s [ i ] =='a')
2839	add one to sp	N/A	N/A	sp ++ ;	sp ++ ;
2840	else if ( s [ i ] equals , . ? or ! then do the following	N/A	N/A	else if ( s [ i ] == ' , ' || s [ i ] == ' . ' || s [ i ] == ' ? ' || s [ i ] == ' ! ' )	else if ( s [ i ] == '..'||! )
2841	add one to p	N/A	N/A	p ++ ;	p ++ ;
2842	s2 equals s2 plus s [ i ]	N/A	N/A	s2 += s [ i ] ;	s2 += s [ i ] ;
2843	else	N/A	N/A	else	else
2844	if sp is 0 and p = 0 then do the following instructions	N/A	N/A	if ( sp == 0 && p == 0 )	if ( sp == 0 && p == 0 )
2845	s2 equals s2 plus s [ i ]	N/A	N/A	s2 += s [ i ] ;	s2 += s [ i ] ;
2846	else if sp and p = 0 the do the following	N/A	N/A	else if ( p == 0 && sp > 0 )	else if ( sp == 0 && p == 0 )
2847	s2 equals s2 plus space	N/A	N/A	s2 += ' ' ;	s2 += " " ;
2848	s2 equals s2 plus s [ i ]	N/A	N/A	s2 += s [ i ] ;	s2 += s [ i ] ;
2849	set sp to 0	N/A	N/A	sp = 0 ;	sp = 0 ;
2850	else	N/A	N/A	else	else
2851	s2 equals s2 plus space	N/A	N/A	s2 += ' ' ;	s2 += " " ;
2852	s2 equals s2 plus s [ i ]	N/A	N/A	s2 += s [ i ] ;	s2 += s [ i ] ;
2853	set p to 0	N/A	N/A	p = 0 ;	p = 0 ;
2854	set sp to 0	N/A	N/A	sp = 0 ;	sp = 0 ;
2855	DUMMY	0.0	0.0	}	DUMMY
2856	DUMMY	0.0	0.0	}	DUMMY
2857	DUMMY	0.0	0.0	}	DUMMY
2858	output s2	N/A	N/A	cout << s2 << endl ;	cout << s2 << endl ;
2859	DUMMY	0.0	0.0	return 0;	DUMMY
2860	DUMMY	0.0	0.0	}	DUMMY
2861	create character variable c with size of 10005	N/A	N/A	char c [ 10005 ] ;	char c [ 10005 ] ;
2862	s = string	N/A	N/A	string s ;	string s ;
2863	DUMMY	0.0	0.0	int main() {	DUMMY
2864	input line into array c of 10005 size	N/A	N/A	cin . getline ( c , 10005 ) ;	getline ( c [ 10005 ],'\n') ;
2865	set int i to 0	N/A	N/A	int i = 0 ;	int i = 0 ;
2866	set int lg to strlen ( c )	N/A	N/A	int lg = strlen ( c ) ;	int lg = strlen ( c ) ;
2867	set bool ok to 0	N/A	N/A	bool ok = 0 ;	bool ok = 0 ;
2868	if i is less than lg then do	N/A	N/A	while ( i < lg )	if ( i < lg )
2869	if isalpha is true	N/A	N/A	if ( isalpha ( c [ i ] ) )	if ( isalpha )
2870	if ok = 0 and i is not equal to 0 and not isalpha ( c [ i - 1 ] then add a space character to s	N/A	N/A	if ( ok == 0 && i != 0 && ! isalpha ( c [ i - 1 ] ) ) s += ' ' ;	if ( ok == 0 && i!= 0 &&! isalpha ( c [ i - 1 ] ) ) s +=' ';
2871	s equals s plus c [ i ]	N/A	N/A	s += c [ i ] ;	s += c [ i ] ;
2872	set ok to 0	N/A	N/A	ok = 0 ;	ok = 0 ;
2873	else	N/A	N/A	else	else
2874	set if ( c [ i ] = ? or c [ i ] = ! or c [ i ] = , or c [ i ] = . ) s + = c [ i ] then add a c [ i ] to s and add a space to s , and make ok = 1	N/A	N/A	if ( c [ i ] == ' ? ' || c [ i ] == ' ! ' || c [ i ] == ' , ' || c [ i ] == ' . ' ) s += c [ i ] , s += ' ' , ok = 1 ;	if ( ( c [ i ] == '?'|| c [ 1 ] == "!\n " && c [ 2 ] =='?':') ) s += c [ 0 ], ok = 1 ;
2875	DUMMY	0.0	0.0	}	DUMMY
2876	add one to i	N/A	N/A	++ i ;	i ++ ;
2877	DUMMY	0.0	0.0	}	DUMMY
2878	output s	N/A	N/A	cout << s << ' \n ' ;	cout << s << endl ;
2879	DUMMY	0.0	0.0	return 0;	DUMMY
2880	DUMMY	0.0	0.0	}	DUMMY
2881	in function File	N/A	N/A	void File ( )	void File ( )
2882	call freopen on " output . txt " , " w " and stdout	N/A	N/A	freopen ( " output.txt " , " w " , stdout ) ;	freopen ( " output.txt ", " w ", stdout ) ;
2883	call freopen on " input . txt " , " r " and stdin	N/A	N/A	freopen ( " input.txt " , " r " , stdin ) ;	freopen ( " input.txt ", " r ", stdin ) ;
2884	DUMMY	0.0	0.0	}	DUMMY
2885	define empty function fast	N/A	N/A	void fast ( ) { }	void fast ( ) { }
2886	pi = const double with pi = 2 * acos of 0 . 0	N/A	N/A	const double pi = 2 * acos ( 0.0 ) ;	const double pi = 2 * acos ( 0.0 ) ;
2887	nn = const int with nn = 1e5 + 4	N/A	N/A	const int nn = 1e5 + 4 ;	const int nn = 1e5 + 4 ;
2888	oo = const int with oo = 0x3f3f3f3f	N/A	N/A	const int oo = 0x3f3f3f3f ;	const int oo = ( 0x3f3f )3f ;
2889	in function nCr taking two long longs n and r and returning a long long	N/A	N/A	long long nCr ( long long n , long long r )	long long nCr ( long long n, long long r )
2890	if n is less than r then return 0	N/A	N/A	if ( n < r ) return 0 ;	if ( n < r ) return 0 ;
2891	if r is 0 then return 1	N/A	N/A	if ( r == 0 ) return 1 ;	if ( r == 0 ) return 1 ;
2892	return n * nCr of n - 1 and r - 1 / r	N/A	N/A	return n * nCr ( n - 1 , r - 1 ) / r ;	return n * nCr ( n - 1, r - 1 / r ) ;
2893	DUMMY	0.0	0.0	}	DUMMY
2894	in function gcd taking two long longs a and b and returning a long long	N/A	N/A	long long gcd ( long long a , long long b )	long long gcd ( long long a, long long b )
2895	if b is 0 return a	N/A	N/A	if ( b == 0 ) return a ;	if ( b == 0 ) return a ;
2896	return gcd of b and a mod b	N/A	N/A	return gcd ( b , a % b ) ;	return gcd ( b, a % b ) ;
2897	DUMMY	0.0	0.0	}	DUMMY
2898	DUMMY	0.0	0.0	int main() {	DUMMY
2899	call fast	N/A	N/A	fast ( ) ;	fast ( ) ;
2900	s = string	N/A	N/A	string s ;	string s ;
2901	call getline on cin and s	N/A	N/A	getline ( cin , s ) ;	getline ( cin, s ) ;
2902	arr = char vector	N/A	N/A	vector < char > arr ;	vector < char > arr ;
2903	if s [ 0 ] is a lower case letter then append s [ 0 ] to arr	N/A	N/A	if ( s [ 0 ] >= ' a ' && s [ 0 ] <= ' z ' ) arr . push_back ( s [ 0 ] ) ;	if ( s [ 0 ] >='a'&& s [ 1 ] <='z') { arr += s [ 2 ] ; }
2904	for i = 1 to size of s	N/A	N/A	for ( int i = 1 ; i < ( ( int ) ( ( s ) . size ( ) ) ) ; i ++ )	for ( int i = 1 ; i < s. size ( ) ; i ++ )
2905	if s [ i ] is a lower case letter	N/A	N/A	if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' )	if ( islower ( s [ i ] ) )
2906	if s [ i - 1 ] is a lower case letter	N/A	N/A	if ( s [ i - 1 ] >= ' a ' && s [ i - 1 ] <= ' z ' )	if ( islower ( s [ i - 1 ] ) )
2907	append s [ i ] to arr	N/A	N/A	arr . push_back ( s [ i ] ) ;	arr. push_back ( s [ i ] ) ;
2908	else	N/A	N/A	else	else
2909	append ' ' then s [ i ] to arr	N/A	N/A	arr . push_back ( ' ' ) , arr . push_back ( s [ i ] ) ;	arr +=' '<< s [ i ] ;
2910	else if s [ i ] is ' '	N/A	N/A	else if ( s [ i ] == ' ' )	else if ( s [ i ] ==' ')
2911	continue loop	N/A	N/A	continue ;	continue ;
2912	else	N/A	N/A	else	else
2913	append s [ i ] to arr	N/A	N/A	arr . push_back ( s [ i ] ) ;	arr += s [ i ] ;
2914	DUMMY	0.0	0.0	}	DUMMY
2915	print all values of arr	N/A	N/A	for ( int i = 0 ; i < ( ( int ) ( ( arr ) . size ( ) ) ) ; i ++ ) cout << arr [ i ] ;	for ( int i = 0 ; i < arr. size ( ) ; i ++ ) cout << arr [ i ] << endl ;
2916	print newline	N/A	N/A	cout << endl ;	cout << endl ;
2917	DUMMY	0.0	0.0	return 0;	DUMMY
2918	DUMMY	0.0	0.0	}	DUMMY
2919	s = string	N/A	N/A	string s ;	string s ;
2920	ans = string array of size 111111	N/A	N/A	string ans [ 111111 ] ;	string ans [ 111111 ] ;
2921	DUMMY	0.0	0.0	int main() {	DUMMY
2922	call getline of cin and s	N/A	N/A	getline ( cin , s ) ;	getline ( cin, s ) ;
2923	n , p = int with n = size of s and p = 0	N/A	N/A	int n = s . size ( ) , p = 0 ;	int n = s. size ( ), p = 0 ;
2924	for i = 0 to n	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
2925	if s [ i ] equals ' , ' or ' . ' or ' ! ' or ' ? '	N/A	N/A	if ( s [ i ] == ' , ' || s [ i ] == ' . ' || s [ i ] == ' ! ' || s [ i ] == ' ? ' )	if ( s [ i ] == ','|| s [ ++ i ]!= '.'|| S [ i + 1 ] == "!'|| p == '?')
2926	set ans [ p ] to " " then increment p	N/A	N/A	ans [ p ++ ] = " " ;	ans [ p ++ ] = " " ;
2927	set ans [ p - 1 ] [ 0 ] to s [ i ]	N/A	N/A	ans [ p - 1 ] [ 0 ] = s [ i ] ;	ans [ p - 1 ] [ 0 ] = s [ i ] ;
2928	else if s [ i ] is a lowercase character	N/A	N/A	else if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' )	else if ( islower ( s [ i ] ) )
2929	j = int with j = i	N/A	N/A	int j = i ;	int j = i ;
2930	loop while s [ j ] is a lowercase character and j is less than n increment j	N/A	N/A	for ( ; s [ j ] >= ' a ' && s [ j ] <= ' z ' && j < n ; ) { j ++ ; }	while ( s [ j ] >='a'&& j < n ) j ++ ;
2931	set ans [ p ] to result of s . substr of i and j - i then increment p	N/A	N/A	ans [ p ++ ] = s . substr ( i , j - i ) ;	ans [ p ++ ] = s. substr ( i, j - i ) ;
2932	set i to j - 1	N/A	N/A	i = j - 1 ;	i = j - 1 ;
2933	DUMMY	0.0	0.0	}	DUMMY
2934	DUMMY	0.0	0.0	}	DUMMY
2935	l = int with l = 0	N/A	N/A	int l = 0 ;	int l = 0 ;
2936	for i = 0 to p	N/A	N/A	for ( int i = 0 ; i < p ; i ++ )	for ( int i = 0 ; i < p ; i ++ )
2937	if ans [ i ] [ 0 ] is greater or equal to ' a '	N/A	N/A	if ( ans [ i ] [ 0 ] >= ' a ' )	if ( ans [ i ] [ 0 ] >='a')
2938	if l equals 1 print ' '	N/A	N/A	if ( l == 1 ) { cout << ' ' ; }	if ( l == 1 ) cout <<' ';
2939	print ans [ i ]	N/A	N/A	cout << ans [ i ] ;	cout << ans [ i ] << endl ;
2940	set l to 1	N/A	N/A	l = 1 ;	l = 1 ;
2941	else	N/A	N/A	else	else
2942	print ans [ i ] and ' '	N/A	N/A	cout << ans [ i ] << ' ' ;	cout << ans [ i ] <<' ';
2943	set l to 0	N/A	N/A	l = 0 ;	l = 0 ;
2944	DUMMY	0.0	0.0	}	DUMMY
2945	DUMMY	0.0	0.0	}	DUMMY
2946	print newline	N/A	N/A	cout << endl ;	cout << endl ;
2947	DUMMY	0.0	0.0	return 0;	DUMMY
2948	DUMMY	0.0	0.0	}	DUMMY
2949	create string in	N/A	N/A	string in ;	string in ;
2950	declare string n = " "	N/A	N/A	string n = " " ;	string n = " " ;
2951	DUMMY	0.0	0.0	int main() {	DUMMY
2952	read line and store it into in	N/A	N/A	getline ( cin , in ) ;	getline ( cin, in ) ;
2953	declare int m = length of in	N/A	N/A	int m = in . size ( ) ;	int m = in. length ( ) ;
2954	declare boolean se = false	N/A	N/A	bool se = false ;	bool se = false ;
2955	for i from 0 to m exclusive	N/A	N/A	for ( int i = 0 ; i < m ; i ++ )	for ( int i = 0 ; i < m ; i ++ )
2956	if in [ i ] > = ' a ' and in [ i ] < = ' z '	N/A	N/A	if ( in [ i ] >= ' a ' && in [ i ] <= ' z ' )	if ( in [ i ] >='a'&& in [ 1 ] <='z')
2957	append n to in [ i ]	N/A	N/A	n += in [ i ] ;	in [ i ]. push_back ( n ) ;
2958	else if in [ i ] = ' '	N/A	N/A	else if ( in [ i ] == ' ' )	else if ( in [ i ] ==' ')
2959	if n is equal to " " continue the loop from the start	N/A	N/A	if ( n == " " ) { continue ; }	if ( n == " " ) continue ;
2960	print n	N/A	N/A	cout << n ;	cout << n << endl ;
2961	assign ' ' to n	N/A	N/A	n = ' ' ;	n =' ';
2962	change se to true	N/A	N/A	se = true ;	se = true ;
2963	continue the loop from the start	N/A	N/A	continue ;	continue ;
2964	else	N/A	N/A	else	else
2965	if se is true and n = " "	N/A	N/A	if ( se && n == " " )	if ( se == true && n == " " )
2966	print in [ i ]	N/A	N/A	cout << in [ i ] ;	cout << in [ i ] << endl ;
2967	set n to ' '	N/A	N/A	n = ' ' ;	n =' ';
2968	set se to false	N/A	N/A	se = false ;	se = false ;
2969	go to the start of the loop	N/A	N/A	continue ;	continue ;
2970	DUMMY	0.0	0.0	}	DUMMY
2971	print n and in [ i ]	N/A	N/A	cout << n << in [ i ] ;	cout << n << in [ i ] ;
2972	change n to ' '	N/A	N/A	n = ' ' ;	n =' ';
2973	DUMMY	0.0	0.0	}	DUMMY
2974	DUMMY	0.0	0.0	}	DUMMY
2975	print n if if n ! = " "	N/A	N/A	if ( n != " " ) { cout << n ; }	if ( n!= " " ) cout << n << endl ;
2976	print a new line	N/A	N/A	cout << endl ;	cout << endl ;
2977	DUMMY	0.0	0.0	return 0;	DUMMY
2978	DUMMY	0.0	0.0	}	DUMMY
2979	DUMMY	0.0	0.0	int main() {	DUMMY
2980	declare string variable s	N/A	N/A	string s ;	string s ;
2981	loop when read data from input into s	N/A	N/A	while ( getline ( cin , s ) )	while ( gets ( s ) )
2982	declare string n = " "	N/A	N/A	string n = " " ;	string n = " " ;
2983	declare integer d = length of s	N/A	N/A	int d = s . length ( ) ;	int d = s. length ( ) ;
2984	for i = 0 to d exclusive incrementing i	N/A	N/A	for ( int i = 0 ; i < d ; i ++ )	for ( int i = 0 ; i < d ; i ++ )
2985	if s [ i ] is equal to ' '	N/A	N/A	if ( s [ i ] == ' ' )	if ( s [ i ] ==' ')
2986	if n [ n . length ( ) - 1 ] is not ' ' , incremen n by s [ i ]	N/A	N/A	if ( n [ n . length ( ) - 1 ] != ' ' ) { n = n + s [ i ] ; }	if ( n [ n. length ( ) - 1 ]!=' ') n += s [ i ] ;
2987	else if s [ i ] = ' . ' | | s [ i ] = ' , ' | | s [ i ] = ' ! ' | | s [ i ] = ' ? '	N/A	N/A	else if ( s [ i ] == ' . ' || s [ i ] == ' , ' || s [ i ] == ' ! ' || s [ i ] == ' ? ' )	else if ( ( s [ i ] == '.') || s [ 1 ] == ",') | s [ 2 ] = '! '| s [ 3 ] = "?')
2988	if n [ n . length ( ) - 1 ] is not ' '	N/A	N/A	if ( n [ n . length ( ) - 1 ] != ' ' )	if ( n [ n. length ( ) - 1 ]!=' ')
2989	append s [ i ] + ' ' to n	N/A	N/A	n = n + s [ i ] + ' ' ;	n += s [ i ] +' ';
2990	else	N/A	N/A	else	else
2991	remove n . length ( ) - 1 elements from n	N/A	N/A	n . erase ( n . length ( ) - 1 ) ;	n. erase ( n. length ( ) - 1 ) ;
2992	append s [ i ] + ' ' to n	N/A	N/A	n = n + s [ i ] + ' ' ;	n += s [ i ] +' ';
2993	DUMMY	0.0	0.0	}	DUMMY
2994	else	N/A	N/A	else	else
2995	append s [ i ] to n	N/A	N/A	n = n + s [ i ] ;	n += s [ i ] ;
2996	DUMMY	0.0	0.0	}	DUMMY
2997	DUMMY	0.0	0.0	}	DUMMY
2998	print all elements of n sequentially	N/A	N/A	for ( int i = 0 ; i < n . length ( ) ; i ++ ) cout << n [ i ] ;	for ( int i = 0 ; i < n. size ( ) ; i ++ ) cout << n [ i ] << endl ;
2999	print a new line	N/A	N/A	cout << endl ;	cout << endl ;
3000	DUMMY	0.0	0.0	}	DUMMY
3001	DUMMY	0.0	0.0	return 0;	DUMMY
3002	DUMMY	0.0	0.0	}	DUMMY
3003	declare isp with character c as argument , returning boolean	N/A	N/A	bool isp ( char c )	bool isp ( char c )
3004	if c is ' . ' or c is ' , ' or c is ' ! ' or c is ' ? ' , return true from function	N/A	N/A	if ( c == ' . ' or c == ' , ' or c == ' ! ' or c == ' ? ' ) return true ;	if ( ( c == '.') || ( c!= ',') or ( c? '!': '?') ) return true ;
3005	return false from function	N/A	N/A	return false ;	return false ;
3006	DUMMY	0.0	0.0	}	DUMMY
3007	DUMMY	0.0	0.0	int main() {	DUMMY
3008	create string s	N/A	N/A	string s ;	string s ;
3009	read line from cin to s	N/A	N/A	getline ( cin , s ) ;	getline ( cin, s ) ;
3010	create integer len with len = size of s	N/A	N/A	int len = s . size ( ) ;	int len = s. size ( ) ;
3011	create string s2	N/A	N/A	string s2 ;	string s2 ;
3012	create integer lenn with lenn = len - 1	N/A	N/A	int lenn = len - 1 ;	int lenn = len - 1 ;
3013	for i = 0 to lenn exclusive	N/A	N/A	for ( int i = 0 ; i < lenn ; i ++ )	for ( int i = 0 ; i < lenn ; i ++ )
3014	if s [ i ] is ' ' and ( s [ i + 1 ] is ' ' or result of run isp with s [ i + 1 ] as argument is true ) , break current loop iteration	N/A	N/A	if ( s [ i ] == ' ' and ( s [ i + 1 ] == ' ' or isp ( s [ i + 1 ] ) ) ) continue ;	if ( s [ i ] ==' '&& s [ ( i + 1 ] ) =='' ) || isp ( s ( i ) + 1 ) ) { continue ; }
3015	increment s2 by s [ i ]	N/A	N/A	s2 += s [ i ] ;	s2 += s [ i ] ;
3016	if result of run isp with s [ i ] as argument is true and s [ i + 1 ] is not ' ' , increment s2 by ' '	N/A	N/A	if ( isp ( s [ i ] ) and s [ i + 1 ] != ' ' ) s2 += ' ' ;	if ( isp ( s [ i ] ) == true && s [ j + 1 ]!=' ') { s2 +='0'; }
3017	DUMMY	0.0	0.0	}	DUMMY
3018	increment s2 by s [ len - 1 ]	N/A	N/A	s2 += s [ len - 1 ] ;	s2 += s [ len - 1 ] ;
3019	print s2 print newline	N/A	N/A	cout << s2 << endl ;	cout << s2 << endl ;
3020	DUMMY	0.0	0.0	}	DUMMY
3021	s = string	N/A	N/A	string s ;	string s ;
3022	p = integer	N/A	N/A	int p ;	int p ;
3023	ans = character array of size 111111	N/A	N/A	char ans [ 111111 ] ;	char ans [ 111111 ] ;
3024	DUMMY	0.0	0.0	int main() {	DUMMY
3025	read s	N/A	N/A	getline ( cin , s ) ;	cin >> s ;
3026	n = integer with n = s . size ( )	N/A	N/A	int n = s . size ( ) ;	int n = s. size ( ) ;
3027	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3028	if s [ i ] > = a and s [ i ] < = z	N/A	N/A	if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' )	if ( s [ i ] >='a'&& s [ 1 ] <='z')
3029	ans [ increment p ] = s [ i ]	N/A	N/A	ans [ p ++ ] = s [ i ] ;	ans [ p ++ ] = s [ i ] ;
3030	else if s [ i ] is , or s [ i ] is . or s [ i ] is ? or s [ i ] is !	N/A	N/A	else if ( s [ i ] == ' , ' || s [ i ] == ' . ' || s [ i ] == ' ? ' || s [ i ] == ' ! ' )	else if ( s [ i ] ==' '|| s [ 1 ]!= '.'|| S [ i + == '?')
3031	for p and ans [ p - 1 ] is character ' ' , decrement p	N/A	N/A	for ( ; p && ans [ p - 1 ] == ' ' ; ) { p -- ; }	if ( p && ans [ p - 1 ] ==' ') p -- ;
3032	ans [ increment p ] = s [ i ]	N/A	N/A	ans [ p ++ ] = s [ i ] ;	ans [ p ++ ] = s [ i ] ;
3033	ans [ increment p ] = character ' '	N/A	N/A	ans [ p ++ ] = ' ' ;	ans [ p ++ ] =' ';
3034	else if ( s [ i ] is character ' '	N/A	N/A	else if ( s [ i ] == ' ' )	else if ( s [ i ] ==' ')
3035	if ans [ p - 1 ] is not character ' ' , ans [ increment p ] = s [ i ]	N/A	N/A	if ( ans [ p - 1 ] != ' ' ) { ans [ p ++ ] = s [ i ] ; }	if ( ans [ p - 1 ]!=' ') ans [ ++ p ] = s [ i ] ;
3036	DUMMY	0.0	0.0	}	DUMMY
3037	DUMMY	0.0	0.0	}	DUMMY
3038	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
3039	DUMMY	0.0	0.0	return 0;	DUMMY
3040	DUMMY	0.0	0.0	}	DUMMY
3041	create const double PI = 3 . 1415926535897932384626433832795	N/A	N/A	const double PI = 3.1415926535897932384626433832795 ;	const double PI = 3.1415926535897932384626433832795 ;
3042	declare long long mod = 1e9 + 7	N/A	N/A	long long mod = 1e9 + 7 ;	long long mod = 1e9 + 7 ;
3043	function isp with char argument c that returns bool	N/A	N/A	bool isp ( char c )	bool isp ( char c )
3044	return true if c = ' . ' | | c = ' , ' | | c = ' ? ' | | c = ' ! ' and false otherwise	N/A	N/A	return ( c == ' . ' || c == ' , ' || c == ' ? ' || c == ' ! ' ) ;	return ( ( c == '.'|| c!= ',') || ( c? '?': '!') ) ;
3045	DUMMY	0.0	0.0	}	DUMMY
3046	DUMMY	0.0	0.0	int main() {	DUMMY
3047	change output decimal precision to 12	N/A	N/A	cout . precision ( 12 ) ;	cout. precision ( 12 ) ;
3048	change output decimal format to fixed	N/A	N/A	cout << fixed ;	cout << fixed ;
3049	let s and ans be strings where ans = " "	N/A	N/A	string s , ans = " " ;	string s, ans = " " ;
3050	read s and loop further	N/A	N/A	while ( cin >> s )	while ( cin >> s )
3051	if length of s = 1 and isp of s [ 0 ] return true and size of ans > 0	N/A	N/A	if ( s . size ( ) == 1 && isp ( s [ 0 ] ) && ans . size ( ) )	if ( s. length ( ) == 1 && isp ( s [ 0 ] ) && ans. size ( ) > 0 )
3052	assign s [ 0 ] to ans [ ans . size ( ) - 1 ] and append " " to ans	N/A	N/A	ans [ ans . size ( ) - 1 ] = s [ 0 ] , ans += " " ;	ans [ ans. size ( ) - 1 ] += " " ;
3053	else	N/A	N/A	else	else
3054	change ans to ans + s + " "	N/A	N/A	ans = ans + s + " " ;	ans += s + " " ;
3055	DUMMY	0.0	0.0	}	DUMMY
3056	create int sz = length of ans	N/A	N/A	int sz = ans . size ( ) ;	int sz = ans. size ( ) ;
3057	create integers last and i = 0	N/A	N/A	int last = 0 , i = 0 ;	int last = 0, i = 0 ;
3058	for i = 0 , last = 0 to sz - 1 exclusive	N/A	N/A	for ( i = 0 , last = 0 ; i < sz - 1 ; ++ i )	for ( i = 0, last = 0 ; last < sz - 1 ; last ++ )
3059	if ans [ i ] = ' ' and isp ( ans [ i + 1 ] ) is true	N/A	N/A	if ( ans [ i ] == ' ' && isp ( ans [ i + 1 ] ) )	if ( ans [ i ] ==' '&& isp ( ans [] i + 1 ] ) )
3060	print ( substring of ans from position last to position i - last ) + ans [ i + 1 ] + " " , set value of last to i + 2 and increment i	N/A	N/A	cout << ans . substr ( last , i - last ) + ans [ i + 1 ] + " " , last = i + 2 , i ++ ;	cout << ans. substr ( last, i - last ) + ans [ i + 1 ] + " ", last = i + 2, i ++ ;
3061	else if ans [ i ] = ' '	N/A	N/A	else if ( ans [ i ] == ' ' )	else if ( ans [ i ] ==' ')
3062	print substring of ans from position last with length of i - last + 1 , then change last to i + 1	N/A	N/A	cout << ans . substr ( last , i - last + 1 ) , last = i + 1 ;	cout << ans. substr ( last, i - last + 1 ) << endl, last = i + 1 ;
3063	else if isp ( ans [ i ] ) is true	N/A	N/A	else if ( isp ( ans [ i ] ) )	else if ( isp ( ans [ i ] ) )
3064	if ans [ i + 1 ] ! = ' '	N/A	N/A	if ( ans [ i + 1 ] != ' ' )	if ( ans [ i + 1 ]!=' ')
3065	print substring of ans from position last with length of i - last + 1 and " " , then change last to i + 1	N/A	N/A	cout << ans . substr ( last , i - last + 1 ) + " " , last = i + 1 ;	cout << ans. substr ( last, i - last + 1 ) << " ", last = i + 1 ;
3066	else	N/A	N/A	else	else
3067	print substring of ans from position last with length of i - last + 1 and " " , then change last to i + 1	N/A	N/A	cout << ans . substr ( last , i - last + 1 ) , last = i + 1 ;	cout << ans. substr ( last, i - last + 1 ) << " ", last = i + 1 ;
3068	DUMMY	0.0	0.0	}	DUMMY
3069	print substring of ans from position last to i and ' \ n '	N/A	N/A	cout << ans . substr ( last , i - last ) << ' \n ' ;	cout << ans. substr ( last, i ) <<'\n';
3070	DUMMY	0.0	0.0	return 0;	DUMMY
3071	DUMMY	0.0	0.0	}	DUMMY
3072	DUMMY	0.0	0.0	int main() {	DUMMY
3073	create integers n , dx	N/A	N/A	int n , dx ;	int n, dx ;
3074	read n read dx	N/A	N/A	cin >> n >> dx ;	cin >> n >> dx ;
3075	create string arrays a , b , c , d , with a size 1001 , b size 1001 , c size 1001 , d size 1001	N/A	N/A	string a [ 1001 ] , b [ 1001 ] , c [ 1001 ] , d [ 1001 ] ;	string a [ 1001 ], b [ 1002 ], c [ 1007 ], d [ 100 1 ] ;
3076	create integer array t with size 1001	N/A	N/A	int t [ 1001 ] ;	int t [ 1001 ] ;
3077	create integer sum with sum = 0	N/A	N/A	int sum = 0 ;	int sum = 0 ;
3078	for i = 0 to n exclusive , read a [ i ] read b [ i ] read t [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] >> b [ i ] >> t [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] >> b [ 1 ] >> t [ i + 1 ] ; }
3079	or i = 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
3080	for j = i + 1 to n exclusive	N/A	N/A	for ( int j = i + 1 ; j < n ; j ++ )	for ( int j = i + 1 ; j < n ; j ++ )
3081	if t [ j ] - t [ i ] is greater than 0 and t [ j ] - t [ i ] is less than or equal to dx	N/A	N/A	if ( t [ j ] - t [ i ] > 0 && t [ j ] - t [ i ] <= dx )	if ( ( t [ j ] - t [ i ] ) > 0 &&! ( ( int ) t [ k ] ) && ( ( n - i ] <= dx ) ) )
3082	if a [ i ] is b [ j ] and b [ i ] is a [ j ]	N/A	N/A	if ( a [ i ] == b [ j ] && b [ i ] == a [ j ] )	if ( ( a [ i ] == b [ j ] ) && ( b [ 1 ] == a [ 2 ] ) )
3083	create integer flat with flat = 0	N/A	N/A	int flat = 0 ;	int flat = 0 ;
3084	for k = 0 to sum exclusive	N/A	N/A	for ( int k = 0 ; k < sum ; k ++ )	for ( int k = 0 ; k < sum ; k ++ )
3085	if a [ i ] is c [ k ] and b [ i ] is d [ k ] or a [ i ] is d [ k ] and b [ i ] is c [ k ]	N/A	N/A	if ( a [ i ] == c [ k ] && b [ i ] == d [ k ] || a [ i ] == d [ k ] && b [ i ] == c [ k ] )	if ( ( a [ i ] == c [ k ] ) && ( b [ j ] == d [ k - 1 ) || ( ( ( i ]!= d [ l ] ) ) && b [ i ) == c [] ) )
3086	set flat to 1	N/A	N/A	flat = 1 ;	flat = 1 ;
3087	break loop	N/A	N/A	break ;	break ;
3088	DUMMY	0.0	0.0	}	DUMMY
3089	if not flag	N/A	N/A	if ( ! flat )	if (! flag )
3090	set c [ sum ] to a [ i ]	N/A	N/A	c [ sum ] = a [ i ] ;	c [ sum ] = a [ i ] ;
3091	set d [ sum ] to b [ i ]	N/A	N/A	d [ sum ] = b [ i ] ;	d [ sum ] = b [ i ] ;
3092	increment sum	N/A	N/A	sum ++ ;	sum ++ ;
3093	DUMMY	0.0	0.0	}	DUMMY
3094	DUMMY	0.0	0.0	}	DUMMY
3095	print sum print newline	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
3096	for i = 0 to sum exclusive , print c [ i ] print " " print d [ i ] print newline	N/A	N/A	for ( int i = 0 ; i < sum ; i ++ ) { cout << c [ i ] << " " << d [ i ] << endl ; }	for ( int i = 0 ; i < sum ; i ++ ) { cout << c [ i ] << " " << d [ 1 ] << endl ; }
3097	DUMMY	0.0	0.0	}	DUMMY
3098	let x and y be arrays of double of size 100000	N/A	N/A	double x [ 100000 ] , y [ 100000 ] ;	double x [ 100000 ], y [ 1000000 ] ;
3099	n and t = integers	N/A	N/A	int n , t ;	int n, t ;
3100	define function sorty	N/A	N/A	void sorty ( )	void sorty ( )
3101	let i and k be integers	N/A	N/A	int i , k ;	int i, k ;
3102	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
3103	create integer min with value x [ i ]	N/A	N/A	int min = x [ i ] ;	int min = x [ i ] ;
3104	set integer pos to i	N/A	N/A	int pos = i ;	int pos = i ;
3105	for k = i + 1 to n exclusive	N/A	N/A	for ( k = i + 1 ; k < n ; k ++ )	for ( k = i + 1 ; k < n ; k ++ )
3106	if x [ k ] is less than min	N/A	N/A	if ( x [ k ] < min )	if ( x [ k ] < min )
3107	set value of min to x [ k ]	N/A	N/A	min = x [ k ] ;	min = x [ k ] ;
3108	set value of pos to k	N/A	N/A	pos = k ;	pos = k ;
3109	DUMMY	0.0	0.0	}	DUMMY
3110	DUMMY	0.0	0.0	}	DUMMY
3111	invoke function swap with arguments x [ i ] and x [ pos ]	N/A	N/A	swap ( x [ i ] , x [ pos ] ) ;	swap ( x [ i ], x [ pos ] ) ;
3112	invoke function swap with arguments y [ i ] and y [ pos ]	N/A	N/A	swap ( y [ i ] , y [ pos ] ) ;	swap ( y [ i ], y [ pos ] ) ;
3113	DUMMY	0.0	0.0	}	DUMMY
3114	DUMMY	0.0	0.0	}	DUMMY
3115	DUMMY	0.0	0.0	int main() {	DUMMY
3116	read n and t	N/A	N/A	cin >> n >> t ;	cin >> n >> t ;
3117	let i be integer	N/A	N/A	int i ;	int i ;
3118	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
3119	a and b = doubles	N/A	N/A	double a , b ;	double a, b ;
3120	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
3121	x [ i ] = ( a - ( b / 2 . 0 ) )	N/A	N/A	x [ i ] = ( a - ( b / 2.0 ) ) ;	x [ i ] = ( a - ( b / 2.0 ) ) ;
3122	y [ i ] = ( a + ( b / 2 . 0 ) )	N/A	N/A	y [ i ] = ( a + ( b / 2.0 ) ) ;	y [ i ] = ( a + ( b / 2.0 ) ) ;
3123	DUMMY	0.0	0.0	}	DUMMY
3124	call sorty	N/A	N/A	sorty ( ) ;	sorty ( ) ;
3125	create integer ct with value 2	N/A	N/A	int ct = 2 ;	int ct = 2 ;
3126	for i = 0 to n - 1 exclusive	N/A	N/A	for ( i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
3127	create double h with value y [ i ] + t	N/A	N/A	double h = y [ i ] + t ;	double h = y [ i ] + t ;
3128	if x [ i + 1 ] > = h increment ct	N/A	N/A	if ( x [ i + 1 ] >= h ) { ct ++ ; }	if ( x [ i + 1 ] >= h ) ct ++ ;
3129	h = x [ i + 1 ] - t	N/A	N/A	h = x [ i + 1 ] - t ;	h = x [ i + 1 ] - t ;
3130	if y [ i ] is less than h increment ct	N/A	N/A	if ( y [ i ] < h ) { ct ++ ; }	if ( y [ i ] < h ) ct ++ ;
3131	DUMMY	0.0	0.0	}	DUMMY
3132	print ct and a new line	N/A	N/A	cout << ct << endl ;	cout << ct << endl ;
3133	DUMMY	0.0	0.0	}	DUMMY
3134	let a be an array of integers of length 10005	N/A	N/A	int a [ 10005 ] ;	int a [ 10005 ] ;
3135	DUMMY	0.0	0.0	int main() {	DUMMY
3136	create integers n and t	N/A	N/A	int n , t ;	int n, t ;
3137	read n and t	N/A	N/A	cin >> n >> t ;	cin >> n >> t ;
3138	multiply t by 2	N/A	N/A	t *= 2 ;	t *= 2 ;
3139	mi and mx are integers with mi = 5000 and mx = 0	N/A	N/A	int mi = 5000 , mx = 0 ;	int mi = 5000, mx = 0 ;
3140	invoke function memset with arguments a , 0 and size of a	N/A	N/A	memset ( a , 0 , sizeof ( a ) ) ;	memset ( a, 0, sizeof ( a ) ) ;
3141	while n - -	N/A	N/A	while ( n -- )	while ( n -- )
3142	let x and aa be integers	N/A	N/A	int x , aa ;	int x, aa ;
3143	read x and aa	N/A	N/A	cin >> x >> aa ;	cin >> x >> aa ;
3144	set integer ll to x * 2 + 4000 - aa ;	N/A	N/A	int ll = x * 2 + 4000 - aa ;	int ll = x * 2 + 4000 - aa ;
3145	set integer rr to x * 2 + 4000 + aa	N/A	N/A	int rr = x * 2 + 4000 + aa ;	int rr = x * 2 + 4000 + aa ;
3146	for i = ll to rr inclusive	N/A	N/A	for ( int i = ll ; i <= rr ; ++ i )	for ( int i = ll ; i <= rr ; i ++ )
3147	increase a [ i ]	N/A	N/A	a [ i ] ++ ;	a [ i ] ++ ;
3148	set mx to max of mx , i	N/A	N/A	mx = max ( mx , i ) ;	mx = max ( mx, i ) ;
3149	set value of mi to min of mi , i	N/A	N/A	mi = min ( mi , i ) ;	mi = min ( mi, i ) ;
3150	DUMMY	0.0	0.0	}	DUMMY
3151	DUMMY	0.0	0.0	}	DUMMY
3152	len and ans are integers with len = 0 and ans = 2	N/A	N/A	int len = 0 , ans = 2 ;	int len = 0, ans = 2 ;
3153	for integer i = mi to mx inclusive	N/A	N/A	for ( int i = mi ; i <= mx ; ++ i )	for ( int i = mi ; i <= mx ; i ++ )
3154	increase len	N/A	N/A	len ++ ;	len ++ ;
3155	if a [ i ] is true	N/A	N/A	if ( a [ i ] )	if ( a [ i ] )
3156	if len is greater than t	N/A	N/A	if ( len > t )	if ( len > t )
3157	increase ans by 2	N/A	N/A	ans += 2 ;	ans += 2 ;
3158	else if len is equal to t	N/A	N/A	else if ( len == t )	else if ( len == t )
3159	increase ans by one	N/A	N/A	ans ++ ;	ans ++ ;
3160	len = 0	N/A	N/A	len = 0 ;	len = 0 ;
3161	DUMMY	0.0	0.0	}	DUMMY
3162	DUMMY	0.0	0.0	}	DUMMY
3163	if len is greater than t	N/A	N/A	if ( len > t )	if ( len > t )
3164	increase ans by 2	N/A	N/A	ans += 2 ;	ans += 2 ;
3165	else if len is equal to t	N/A	N/A	else if ( len == t )	else if ( len == t )
3166	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
3167	print ans and a new line	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
3168	DUMMY	0.0	0.0	return 0;	DUMMY
3169	DUMMY	0.0	0.0	}	DUMMY
3170	double constant PI is acos ( - 1 . 0 )	N/A	N/A	const double Pi = acos ( - 1.0 ) ;	const double PI = acos ( - 1.0 ) ;
3171	DUMMY	0.0	0.0	int main() {	DUMMY
3172	let n and s be integers	N/A	N/A	int n , s ;	int n, s ;
3173	read n and s	N/A	N/A	cin >> n >> s ;	cin >> n >> s ;
3174	create integers x and size	N/A	N/A	int x , size ;	int x, size ;
3175	create arrays of doubles start and end with size 1005	N/A	N/A	double start [ 1005 ] , end [ 1005 ] ;	double start [ 100005 ], end [ 1005 ] ;
3176	call memset with arguments start , 0 and sizeof ( start )	N/A	N/A	memset ( start , 0 , sizeof ( start ) ) ;	memset ( start, 0, sizeof ( start ) ) ;
3177	call memset with arguments end , 0 and sizeof ( end )	N/A	N/A	memset ( end , 0 , sizeof ( end ) ) ;	memset ( end, 0, sizeof ( end ) ) ;
3178	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3179	read x and size	N/A	N/A	cin >> x >> size ;	cin >> x >> size ;
3180	start [ i ] = x - size / 2 . 0	N/A	N/A	start [ i ] = x - size / 2.0 ;	start [ i ] = x - size / 2.0 ;
3181	end [ i ] = x + size / 2 . 0	N/A	N/A	end [ i ] = x + size / 2.0 ;	end [ i ] = x + size / 2.0 ;
3182	DUMMY	0.0	0.0	}	DUMMY
3183	sort n elements of array start	N/A	N/A	sort ( start , start + n ) ;	sort ( start, start + n ) ;
3184	sort n elements of array end	N/A	N/A	sort ( end , end + n ) ;	sort ( end, end + n ) ;
3185	res is integer = 2	N/A	N/A	int res = 2 ;	int res = 2 ;
3186	for integer i = 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
3187	set double gap to start [ i + 1 ] - end [ i ]	N/A	N/A	double gap = start [ i + 1 ] - end [ i ] ;	double gap = start [ i + 1 ] - end [ i ] ;
3188	if s is less than gap increase res by 2	N/A	N/A	if ( s < gap ) { res += 2 ; }	if ( s < gap ) res += 2 ;
3189	if s = gap increase res by 1	N/A	N/A	if ( s == gap ) { res ++ ; }	if ( s == gap ) res ++ ;
3190	DUMMY	0.0	0.0	}	DUMMY
3191	print res and " \ n "	N/A	N/A	cout << res << " \n " ;	cout << res << " \n " ;
3192	DUMMY	0.0	0.0	return 0;	DUMMY
3193	DUMMY	0.0	0.0	}	DUMMY
3194	DUMMY	0.0	0.0	int main() {	DUMMY
3195	let n , i and sum be integers with sum = 2	N/A	N/A	int n , i , sum = 2 ;	int n, i, sum = 2 ;
3196	let x , y and t be doubles	N/A	N/A	double x , y , t ;	double x, y, t ;
3197	a = array of doubles of length 2005	N/A	N/A	double a [ 2005 ] ;	double a [ 2005 ] ;
3198	read n and t	N/A	N/A	cin >> n >> t ;	cin >> n >> t ;
3199	for i = 0 to n + n exclusive looping by steps of 2	N/A	N/A	for ( i = 0 ; i < n + n ; i = i + 2 )	for ( i = 0 ; i < n + n ; i += 2 )
3200	read x and y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
3201	a [ i ] = x - y * 0 . 5	N/A	N/A	a [ i ] = x - y * 0.5 ;	a [ i ] = x - y * 0.5 ;
3202	a [ i + 1 ] = x + y * 0 . 5	N/A	N/A	a [ i + 1 ] = x + y * 0.5 ;	a [ i + 1 ] = x + y * 0.5 ;
3203	DUMMY	0.0	0.0	}	DUMMY
3204	sort a from the start to n + n	N/A	N/A	sort ( a , a + n + n ) ;	sort ( a, a + n + n ) ;
3205	b = array of doubles of length 2005	N/A	N/A	double b [ 2005 ] ;	double b [ 2005 ] ;
3206	for i = 1 to n exclusive	N/A	N/A	for ( i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
3207	b [ i ] = a [ i * 2 ] - a [ i * 2 - 1 ]	N/A	N/A	b [ i ] = a [ i * 2 ] - a [ i * 2 - 1 ] ;	b [ i ] -= a [ i * 2 - 1 ] ;
3208	if b [ i ] is equal to t	N/A	N/A	if ( b [ i ] == t )	if ( b [ i ] == t )
3209	sum = sum + 1	N/A	N/A	sum = sum + 1 ;	sum += 1 ;
3210	else if b [ i ] is greater than t	N/A	N/A	else if ( b [ i ] > t )	else if ( b [ i ] > t )
3211	sum = sum + 2	N/A	N/A	sum = sum + 2 ;	sum += 2 ;
3212	DUMMY	0.0	0.0	}	DUMMY
3213	print sum and a new line	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
3214	DUMMY	0.0	0.0	return 0;	DUMMY
3215	DUMMY	0.0	0.0	}	DUMMY
3216	DUMMY	0.0	0.0	int main() {	DUMMY
3217	let x , d and c be doubles	N/A	N/A	double x , d , c ;	double x, d, c ;
3218	assign value 0 , n , t to the integer cnt	N/A	N/A	int cnt = 0 , n , t ;	int cnt = 0, n, t ;
3219	arr is an array of double double pairs	N/A	N/A	pair < double , double > arr [ 1500 ] ;	pair < double, double > arr [ 105 ] ;
3220	read n and t	N/A	N/A	cin >> n >> t ;	cin >> n >> t ;
3221	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3222	read x and d	N/A	N/A	cin >> x >> d ;	cin >> x >> d ;
3223	divide d by 2	N/A	N/A	d /= 2 ;	d /= 2 ;
3224	arr [ i ] = make_pair ( x - d , x + d )	N/A	N/A	arr [ i ] = make_pair ( x - d , x + d ) ;	arr [ i ] = make_pair ( x - d, x + d ) ;
3225	DUMMY	0.0	0.0	}	DUMMY
3226	sort arr	N/A	N/A	sort ( arr , arr + n ) ;	sort ( arr, arr + n ) ;
3227	for integer i = 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
3228	c = first element of arr [ i + 1 ] - second element	N/A	N/A	c = arr [ i + 1 ] . first - arr [ i ] . second ;	c = arr [ i + 1 ]. front ( ) ;
3229	decrease c by t	N/A	N/A	c -= t ;	c -= t ;
3230	if c = 0	N/A	N/A	if ( c == 0 )	if ( c == 0 )
3231	increase cnt	N/A	N/A	cnt ++ ;	cnt ++ ;
3232	else if c is greater than 0	N/A	N/A	else if ( c > 0 )	else if ( c > 0 )
3233	increase cnt by 2	N/A	N/A	cnt += 2 ;	cnt += 2 ;
3234	DUMMY	0.0	0.0	}	DUMMY
3235	print cnt + 2 and a new line	N/A	N/A	cout << cnt + 2 << endl ;	cout << cnt + 2 << endl ;
3236	DUMMY	0.0	0.0	return 0;	DUMMY
3237	DUMMY	0.0	0.0	}	DUMMY
3238	create map mp from long long to long long	N/A	N/A	map < long long , long long > mp ;	map < long long, long long > mp ;
3239	DUMMY	0.0	0.0	int main() {	DUMMY
3240	create integers n , t , c with c = 2	N/A	N/A	int n , t , c = 2 ;	int n, t, c = 2 ;
3241	read n read t	N/A	N/A	cin >> n >> t ;	cin >> n >> t ;
3242	create doubles x , y	N/A	N/A	double x , y ;	double x, y ;
3243	create pair array p with double , double , size n	N/A	N/A	pair < double , double > p [ n ] ;	pair < double, double > p [ n ] ;
3244	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3245	read x read y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
3246	if x is greater than or equal to 0	N/A	N/A	if ( x >= 0 )	if ( x >= 0 )
3247	set first element of p [ i ] to x - ( y / 2 )	N/A	N/A	p [ i ] . first = x - ( y / 2 ) ;	p [ i ]. first = x - ( y / 2 ) ;
3248	set second element of p [ i ] to x + ( y / 2 )	N/A	N/A	p [ i ] . second = x + ( y / 2 ) ;	p [ i ]. second = x + ( y / 2 ) ;
3249	else	N/A	N/A	else	else
3250	set first element of p [ i ] to x - ( y / 2 )	N/A	N/A	p [ i ] . first = x - ( y / 2 ) ;	p [ i ]. first = x - ( y / 2 ) ;
3251	set second element of p [ i ] to x + ( y / 2 )	N/A	N/A	p [ i ] . second = x + ( y / 2 ) ;	p [ i ]. second = x + ( y / 2 ) ;
3252	DUMMY	0.0	0.0	}	DUMMY
3253	DUMMY	0.0	0.0	}	DUMMY
3254	sort elements from p to p + n	N/A	N/A	sort ( p , p + n ) ;	sort ( p, p + n ) ;
3255	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3256	set x to first element of p [ i ] - second element of p [ i - 1 ]	N/A	N/A	x = p [ i ] . first - p [ i - 1 ] . second ;	x = p [ i ]. first - p [ 1 ]. second ;
3257	if x is t	N/A	N/A	if ( x == t )	if ( x == t )
3258	increment c	N/A	N/A	c ++ ;	c ++ ;
3259	else if x is greater than t	N/A	N/A	else if ( x > t )	else if ( x > t )
3260	increment c by 2	N/A	N/A	c += 2 ;	c += 2 ;
3261	DUMMY	0.0	0.0	}	DUMMY
3262	print c print newline	N/A	N/A	cout << c << endl ;	cout << c << endl ;
3263	DUMMY	0.0	0.0	return 0;	DUMMY
3264	DUMMY	0.0	0.0	}	DUMMY
3265	let mp be a map from long long to long long	N/A	N/A	map < long long , long long > mp ;	map < long long, long long > mp ;
3266	DUMMY	0.0	0.0	int main() {	DUMMY
3267	integers n , t and c with c = 2	N/A	N/A	int n , t , c = 2 ;	int n, t, c = 2 ;
3268	read n and t	N/A	N/A	cin >> n >> t ;	cin >> n >> t ;
3269	declare doubles called x and y	N/A	N/A	double x , y ;	double x, y ;
3270	p is array of pairs of double , double with size n	N/A	N/A	pair < double , double > p [ n ] ;	pair < double, double > p [ n ] ;
3271	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3272	read x and y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
3273	if x > = 0	N/A	N/A	if ( x >= 0 )	if ( x >= 0 )
3274	p [ i ] . first = x - ( y / 2 )	N/A	N/A	p [ i ] . first = x - ( y / 2 ) ;	p [ i ]. first = x - ( y / 2 ) ;
3275	p [ i ] . second = x + ( y / 2 )	N/A	N/A	p [ i ] . second = x + ( y / 2 ) ;	p [ i ]. second = x + ( y / 2 ) ;
3276	else	N/A	N/A	else	else
3277	p [ i ] . first = x - ( y / 2 )	N/A	N/A	p [ i ] . first = x - ( y / 2 ) ;	p [ i ]. first = x - ( y / 2 ) ;
3278	p [ i ] . second = x + ( y / 2 )	N/A	N/A	p [ i ] . second = x + ( y / 2 ) ;	p [ i ]. second = x + ( y / 2 ) ;
3279	DUMMY	0.0	0.0	}	DUMMY
3280	DUMMY	0.0	0.0	}	DUMMY
3281	sort array p	N/A	N/A	sort ( p , p + n ) ;	sort ( p, p + y ) ;
3282	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3283	x = p [ i ] . first - p [ i - 1 ] . second	N/A	N/A	x = p [ i ] . first - p [ i - 1 ] . second ;	x = p [ i ]. first - p [ 1 ]. second ;
3284	if x is equal to t	N/A	N/A	if ( x == t )	if ( x == t )
3285	increase c	N/A	N/A	c ++ ;	c ++ ;
3286	else if x is greater than t	N/A	N/A	else if ( x > t )	else if ( x > t )
3287	increase c by 2	N/A	N/A	c += 2 ;	c += 2 ;
3288	DUMMY	0.0	0.0	}	DUMMY
3289	print c and a new line	N/A	N/A	cout << c << endl ;	cout << c << endl ;
3290	DUMMY	0.0	0.0	return 0;	DUMMY
3291	DUMMY	0.0	0.0	}	DUMMY
3292	create integers n , t	N/A	N/A	int n , t ;	int n, t ;
3293	create double vector coord	N/A	N/A	vector < double > coord ;	vector < double > coord ;
3294	DUMMY	0.0	0.0	int main() {	DUMMY
3295	read n read t	N/A	N/A	cin >> n >> t ;	cin >> n >> t ;
3296	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
3297	create integers x , a	N/A	N/A	int x , a ;	int x, a ;
3298	read x read	N/A	N/A	cin >> x >> a ;	cin >> x >> y ;
3299	add element 1 . 0 * x - 1 . 0 * a / 2 to end of coord	N/A	N/A	coord . push_back ( 1.0 * x - 1.0 * a / 2 ) ;	coord. push_back ( 1.0 * x - 1. 0 * a / 2 ) ;
3300	add element 1 . 0 * x + 1 . 0 * a / 2 to end of coord	N/A	N/A	coord . push_back ( 1.0 * x + 1.0 * a / 2 ) ;	coord. push_back ( 1.0 * x + 1. 0 * a / 2 ) ;
3301	DUMMY	0.0	0.0	}	DUMMY
3302	sort elements from beginning of coord to end of coord	N/A	N/A	sort ( coord . begin ( ) , coord . end ( ) ) ;	sort ( coord. begin ( ), coord. end ( ) ) ;
3303	create integer ans with ans = 2	N/A	N/A	int ans = 2 ;	int ans = 2 ;
3304	for i = 1 to size of coord - 1 exclusive , incrementing i by 2	N/A	N/A	for ( int i = 1 ; i < coord . size ( ) - 1 ; i += 2 )	for ( int i = 1 ; i < coord. size ( ) - 1 ; ++ i )
3305	create double x1 , x2 with x1 = coord [ i ] , x2 = coord [ i + 1 ]	N/A	N/A	double x1 = coord [ i ] , x2 = coord [ i + 1 ] ;	double x1 = coord [ i ], x2 = coord ( i + 1 ] ) ;
3306	if x2 - x1 is less than t	N/A	N/A	if ( x2 - x1 < t )	if ( x2 - x1 < t )
3307	break current loop iteration	N/A	N/A	continue ;	continue ;
3308	else if x2 - x1 is t	N/A	N/A	else if ( x2 - x1 == t )	else if ( x2 - x1 == t )
3309	increment ans by 1	N/A	N/A	ans += 1 ;	ans += 1 ;
3310	else	N/A	N/A	else	else
3311	increment ans by 2	N/A	N/A	ans += 2 ;	ans += 2 ;
3312	DUMMY	0.0	0.0	}	DUMMY
3313	print ans print " \ n "	N/A	N/A	cout << ans << " \n " ;	cout << ans << " \n " ;
3314	DUMMY	0.0	0.0	}	DUMMY
3315	create integers n and t	N/A	N/A	int n , t ;	int n, t ;
3316	coord = vector of doubles	N/A	N/A	vector < double > coord ;	vector < double > coord ;
3317	DUMMY	0.0	0.0	int main() {	DUMMY
3318	read n and t	N/A	N/A	cin >> n >> t ;	cin >> n >> t ;
3319	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
3320	declare integers called x and a	N/A	N/A	int x , a ;	int x, a ;
3321	read x and a	N/A	N/A	cin >> x >> a ;	cin >> x >> a ;
3322	push 1 . 0 * x - 1 . 0 * a / 2 into coord	N/A	N/A	coord . push_back ( 1.0 * x - 1.0 * a / 2 ) ;	coord. push_back ( 1.0 * x - 1. 0 * a / 2 ) ;
3323	push 1 . 0 * x + 1 . 0 * a / 2 into coord	N/A	N/A	coord . push_back ( 1.0 * x + 1.0 * a / 2 ) ;	coord. push_back ( 1.0 * x + 1. 0 * a / 2 ) ;
3324	DUMMY	0.0	0.0	}	DUMMY
3325	sort coord	N/A	N/A	sort ( coord . begin ( ) , coord . end ( ) ) ;	sort ( coord. begin ( ), coord. end ( ) ) ;
3326	create integer ans with value 2	N/A	N/A	int ans = 2 ;	int ans = 2 ;
3327	for i = 1 to the length of coord - 1 exclusive with increments of 2	N/A	N/A	for ( int i = 1 ; i < coord . size ( ) - 1 ; i += 2 )	for ( int i = 1 ; i < coord. size ( ) - 1 ; ++ i, -- ans )
3328	let double x1 = coord [ i ] and double x2 = coord [ i + 1 ]	N/A	N/A	double x1 = coord [ i ] , x2 = coord [ i + 1 ] ;	double x1 = coord [ i ], x2 = coord. at ( i + 1 ) ;
3329	if x2 - x1 is less than t	N/A	N/A	if ( x2 - x1 < t )	if ( x2 - x1 < t )
3330	go to the start of the loop	N/A	N/A	continue ;	continue ;
3331	else if x2 - x1 is equal to t	N/A	N/A	else if ( x2 - x1 == t )	else if ( x2 - x1 == t )
3332	increase ans by 1	N/A	N/A	ans += 1 ;	ans ++ ;
3333	else	N/A	N/A	else	else
3334	increase ans by 2	N/A	N/A	ans += 2 ;	ans += 2 ;
3335	DUMMY	0.0	0.0	}	DUMMY
3336	print ans and " \ n "	N/A	N/A	cout << ans << " \n " ;	cout << ans << " \n " ;
3337	DUMMY	0.0	0.0	}	DUMMY
3338	mod = int with mod = 1e9 + 7	N/A	N/A	int mod = ( 1e9 ) + 7 ;	int mod = 1e9 + 7 ;
3339	n = int	N/A	N/A	int n ;	int n ;
3340	N = const int with N = 50	N/A	N/A	const int N = 50 ;	const int N = 50 ;
3341	p , t = int array of size N each	N/A	N/A	int p [ N ] , t [ N ] ;	int * p = new int [ N ], t [ N N ] ;
3342	in function compare taking int a , int b and returning bool	N/A	N/A	bool compare ( int a , int b )	bool compare ( int a, int b )
3343	if p [ a ] > p [ b ] return 1	N/A	N/A	if ( p [ a ] > p [ b ] ) return 1 ;	if ( p [ a ] > p [ b ] ) return 1 ;
3344	if p [ a ] is p [ b ] and t [ a ] < = t [ b ] return 1	N/A	N/A	if ( p [ a ] == p [ b ] && t [ a ] <= t [ b ] ) return 1 ;	if ( ( p [ a ] == p [ b ] ) && ( t [ p ] <= t [ b - 1 ] ) ) return 1 ;
3345	DUMMY	0.0	0.0	return 0;	DUMMY
3346	DUMMY	0.0	0.0	}	DUMMY
3347	in function eq taking int a , int b and returning bool	N/A	N/A	bool eq ( int a , int b )	bool eq ( int a, int b )
3348	if p [ a ] is p [ b ] and t [ a ] is t [ b ] return 1	N/A	N/A	if ( p [ a ] == p [ b ] && t [ a ] == t [ b ] ) return 1 ;	if ( ( p [ a ] == p [ b ] ) && ( ( t [ a - 1 ] == t [ b + 1 ] ) ) return 1 ) ;
3349	DUMMY	0.0	0.0	return 0;	DUMMY
3350	DUMMY	0.0	0.0	}	DUMMY
3351	DUMMY	0.0	0.0	int main() {	DUMMY
3352	k = int	N/A	N/A	int k ;	int k ;
3353	read n then k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
3354	a = int array of size n	N/A	N/A	int a [ n ] ;	int a [ n ] ;
3355	for i = 0 to n	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3356	read p [ i ] then t [ i ]	N/A	N/A	cin >> p [ i ] >> t [ i ] ;	cin >> p [ i ] >> t [ 1 ] ;
3357	set a [ i ] to i	N/A	N/A	a [ i ] = i ;	a [ i ] = i ;
3358	DUMMY	0.0	0.0	}	DUMMY
3359	call stable_sort on a , a + n , compare	N/A	N/A	stable_sort ( a , a + n , compare ) ;	stable_sort ( a, a + n, compare ) ;
3360	c = int with c = 1	N/A	N/A	int c = 1 ;	int c = 1 ;
3361	i = int with i = k - 2	N/A	N/A	int i = k - 2 ;	int i = k - 2 ;
3362	loop while i > = 0 and eq of a [ k - 1 ] , a [ i ]	N/A	N/A	while ( i >= 0 && eq ( a [ k - 1 ] , a [ i ] ) )	while ( i >= 0 && eq ( a [ k - 1 ], a [ i ] ) )
3363	increment c	N/A	N/A	c ++ ;	c ++ ;
3364	decrement i	N/A	N/A	i -- ;	i -- ;
3365	DUMMY	0.0	0.0	}	DUMMY
3366	set to k	N/A	N/A	i = k ;	k = 0 ;
3367	loop while i < n and eq of a [ k - 1 ] , a [ i ]	N/A	N/A	while ( i < n && eq ( a [ k - 1 ] , a [ i ] ) )	while ( i < n && eq ( a [ k - 1 ], a [ i ] ) )
3368	increment c	N/A	N/A	c ++ ;	c ++ ;
3369	increment i	N/A	N/A	i ++ ;	i ++ ;
3370	DUMMY	0.0	0.0	}	DUMMY
3371	print c	N/A	N/A	cout << c << endl ;	cout << c << endl ;
3372	DUMMY	0.0	0.0	}	DUMMY
3373	create ints n , i , p , t , and k and int array a of size 111111	N/A	N/A	int n , i , a [ 111111 ] , p , t , k ;	int n, i, p, t, k, a [ 111111 ] ;
3374	DUMMY	0.0	0.0	int main() {	DUMMY
3375	read n and k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
3376	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
3377	read p and t	N/A	N/A	cin >> p >> t ;	cin >> p >> t ;
3378	increment a [ p * 50 - t ]	N/A	N/A	a [ p * 50 - t ] ++ ;	a [ p * 50 - t ] ++ ;
3379	DUMMY	0.0	0.0	}	DUMMY
3380	set t to 10000	N/A	N/A	t = 10000 ;	t = 10000 ;
3381	while a [ t ] is less than k , set k to k - a [ t - - ]	N/A	N/A	while ( a [ t ] < k ) k -= a [ t -- ] ;	while ( a [ t ] < k ) { k = k - a [ ++ t -- ] ; }
3382	print a [ t ]	N/A	N/A	cout << a [ t ] << endl ;	cout << a [ t ] << endl ;
3383	DUMMY	0.0	0.0	return 0;	DUMMY
3384	DUMMY	0.0	0.0	}	DUMMY
3385	DUMMY	0.0	0.0	int main() {	DUMMY
3386	i , j , n , a , k = int	N/A	N/A	int i , j , n , a , k ;	int i, j, n, a, k ;
3387	arr = two dimensional int array of sizes 55 and 2	N/A	N/A	int arr [ 55 ] [ 2 ] ;	int arr [ 55 ] [ 2 ] ;
3388	read n then k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
3389	for i = 0 to n	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
3390	for j = 0 to 2 read arr [ i ] [ j ]	N/A	N/A	for ( j = 0 ; j < 2 ; j ++ ) { cin >> arr [ i ] [ j ] ; }	for ( j = 0 ; j < 2 ; j ++ ) { cin >> arr [ i ] [ j ] ; }
3391	DUMMY	0.0	0.0	}	DUMMY
3392	for i = 0 to n	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
3393	for j = 0 to n	N/A	N/A	for ( j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
3394	if arr [ i ] [ 0 ] > arr [ j ] [ 0 ]	N/A	N/A	if ( arr [ i ] [ 0 ] > arr [ j ] [ 0 ] )	if ( arr [ i ] [ 0 ] > arr [ j ] [ 1 ] )
3395	tmp = int with tmp = arr [ i ] [ 0 ]	N/A	N/A	int tmp = arr [ i ] [ 0 ] ;	int tmp = arr [ i ] [ 0 ] ;
3396	set arr [ i ] [ 0 ] to arr [ j ] [ 0 ]	N/A	N/A	arr [ i ] [ 0 ] = arr [ j ] [ 0 ] ;	arr [ i ] [ 0 ] = arr [ j ] [ 1 ] ;
3397	set arr [ j ] [ 0 ] to tmp	N/A	N/A	arr [ j ] [ 0 ] = tmp ;	arr [ j ] [ 0 ] = tmp ;
3398	set tmp to arr [ i ] [ 1 ]	N/A	N/A	tmp = arr [ i ] [ 1 ] ;	tmp = arr [ i ] [ 1 ] ;
3399	set arr [ i ] [ 1 ] to arr [ j ] [ 1 ]	N/A	N/A	arr [ i ] [ 1 ] = arr [ j ] [ 1 ] ;	arr [ i ] [ 0 ] = arr [ j ] [ 1 ] ;
3400	set arr [ j ] [ 1 ] to tmp	N/A	N/A	arr [ j ] [ 1 ] = tmp ;	arr [ j ] [ 1 ] = tmp ;
3401	DUMMY	0.0	0.0	}	DUMMY
3402	DUMMY	0.0	0.0	}	DUMMY
3403	DUMMY	0.0	0.0	}	DUMMY
3404	for i = 0 to n	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3405	for j = 0 to n	N/A	N/A	for ( j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
3406	if arr [ i ] [ 0 ] is arr [ j ] [ 0 ]	N/A	N/A	if ( arr [ i ] [ 0 ] == arr [ j ] [ 0 ] )	if ( arr [ i ] [ 0 ] == arr [ j ] [ 1 ] )
3407	if arr [ i ] [ 1 ] < arr [ j ] [ 1 ]	N/A	N/A	if ( arr [ i ] [ 1 ] < arr [ j ] [ 1 ] )	if ( arr [ i ] [ 0 ] < arr [ j ] [ 1 ] )
3408	tmp = int with tmp = arr [ i ] [ 1 ]	N/A	N/A	int tmp = arr [ i ] [ 1 ] ;	int tmp = arr [ i ] [ 1 ] ;
3409	set arr [ i ] [ 1 ] to arr [ j ] [ 1 ]	N/A	N/A	arr [ i ] [ 1 ] = arr [ j ] [ 1 ] ;	arr [ i ] [ 0 ] = arr [ j ] [ 1 ] ;
3410	set arr [ j ] [ 1 ] to tmp	N/A	N/A	arr [ j ] [ 1 ] = tmp ;	arr [ j ] [ 1 ] = tmp ;
3411	DUMMY	0.0	0.0	}	DUMMY
3412	DUMMY	0.0	0.0	}	DUMMY
3413	DUMMY	0.0	0.0	}	DUMMY
3414	DUMMY	0.0	0.0	}	DUMMY
3415	p = int with p = 0 and frr = int array of size 55	N/A	N/A	int frr [ 55 ] , p = 0 ;	int frr [ 55 ], p = 0 ;
3416	for i = 0 to n set frr [ i ] to 0	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { frr [ i ] = 0 ; }	for ( int i = 0 ; i < n ; i ++ ) { frr [ i ] = 1 ; }
3417	for i = 0 to n	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3418	for j = 0 to n	N/A	N/A	for ( j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
3419	if arr [ i ] [ 0 ] is arr [ j ] [ 0 ] and arr [ i ] [ 1 ] is arr [ j ] [ 1 ] increment frr [ p ]	N/A	N/A	if ( arr [ i ] [ 0 ] == arr [ j ] [ 0 ] && arr [ i ] [ 1 ] == arr [ j ] [ 1 ] ) { frr [ p ] ++ ; }	if ( ( arr [ i ] [ 0 ] == arr [ j ] [ 1 ] ) &&! arr [ 2 ] [ 3 ] &&! ( arr ] [ j - 1 ] == ar [ j + 1 ] ] ) ) { frr [ p ] ++ ; }
3420	DUMMY	0.0	0.0	}	DUMMY
3421	increment p	N/A	N/A	p ++ ;	p ++ ;
3422	DUMMY	0.0	0.0	}	DUMMY
3423	print frr [ k - 1 ]	N/A	N/A	cout << frr [ k - 1 ] << endl ;	cout << frr [ k - 1 ] << endl ;
3424	DUMMY	0.0	0.0	return 0;	DUMMY
3425	DUMMY	0.0	0.0	}	DUMMY
3426	DUMMY	0.0	0.0	int main() {	DUMMY
3427	create new integers n and k	N/A	N/A	int n , k ;	int n, k ;
3428	read n and k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
3429	create an array of int int pairs A witn n + 1 element	N/A	N/A	pair < int , int > A [ n + 1 ] ;	pair < int, int > A [ n + 1 ] ;
3430	for integer i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
3431	read input to A [ i ] . first and A [ i ] . second	N/A	N/A	cin >> A [ i ] . first >> A [ i ] . second ;	cin >> A [ i ]. first >> A. second ;
3432	invert the sign of A [ i ] . first	N/A	N/A	A [ i ] . first *= - 1 ;	A [ i ]. first = - 1 ;
3433	DUMMY	0.0	0.0	}	DUMMY
3434	sort A from position 1 to n + 1	N/A	N/A	sort ( A + 1 , A + n + 1 ) ;	sort ( A + 1, A + n + 1 ) ;
3435	create integer ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
3436	for i = 1 to n inclusive incrementing i	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
3437	if A [ i ] = A [ k ] , increment ans by one	N/A	N/A	if ( A [ i ] == A [ k ] ) ans ++ ;	if ( A [ i ] == A [ k ] ) ans ++ ;
3438	print ans and ' \ n '	N/A	N/A	cout << ans << ' \n ' ;	cout << ans <<'\n';
3439	DUMMY	0.0	0.0	return 0;	DUMMY
3440	DUMMY	0.0	0.0	}	DUMMY
3441	DUMMY	0.0	0.0	int main() {	DUMMY
3442	i , j , n , a , k = int	N/A	N/A	int i , j , n , a , k ;	int i, j, n, a, k ;
3443	arr = two dimensional int array of sizes 55 and 2	N/A	N/A	int arr [ 55 ] [ 2 ] ;	int arr [ 55 ] [ 2 ] ;
3444	read n then k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
3445	for i = 0 to n	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
3446	for j = 0 to 2 read arr [ i ] [ j ]	N/A	N/A	for ( j = 0 ; j < 2 ; j ++ ) { cin >> arr [ i ] [ j ] ; }	for ( j = 0 ; j < 2 ; j ++ ) { cin >> arr [ i ] [ j ] ; }
3447	DUMMY	0.0	0.0	}	DUMMY
3448	for i = 0 to n	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
3449	for j = 0 to n	N/A	N/A	for ( j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
3450	if arr [ i ] [ 0 ] is arr [ j ] [ 0 ]	N/A	N/A	if ( arr [ i ] [ 0 ] > arr [ j ] [ 0 ] )	if ( arr [ i ] [ 0 ] == arr [ j ] [ 1 ] )
3451	tmp = int with tmp = arr [ i ] [ 0 ]	N/A	N/A	int tmp = arr [ i ] [ 0 ] ;	int tmp = arr [ i ] [ 0 ] ;
3452	set arr [ i ] [ 0 ] to arr [ j ] [ 0 ]	N/A	N/A	arr [ i ] [ 0 ] = arr [ j ] [ 0 ] ;	arr [ i ] [ 0 ] = arr [ j ] [ 1 ] ;
3453	set arr [ j ] [ 0 ] to tmp	N/A	N/A	arr [ j ] [ 0 ] = tmp ;	arr [ j ] [ 0 ] = tmp ;
3454	set tmp to arr [ i ] [ 1 ]	N/A	N/A	tmp = arr [ i ] [ 1 ] ;	tmp = arr [ i ] [ 1 ] ;
3455	set arr [ i ] [ 1 ] to arr [ j ] [ 1 ]	N/A	N/A	arr [ i ] [ 1 ] = arr [ j ] [ 1 ] ;	arr [ i ] [ 0 ] = arr [ j ] [ 1 ] ;
3456	set arr [ j ] [ 1 ] to tmp	N/A	N/A	arr [ j ] [ 1 ] = tmp ;	arr [ j ] [ 1 ] = tmp ;
3457	DUMMY	0.0	0.0	}	DUMMY
3458	DUMMY	0.0	0.0	}	DUMMY
3459	DUMMY	0.0	0.0	}	DUMMY
3460	for i = 0 to n	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3461	for j = 0 to n	N/A	N/A	for ( j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
3462	if arr [ i ] [ 0 ] is arr [ j ] [ 0 ]	N/A	N/A	if ( arr [ i ] [ 0 ] == arr [ j ] [ 0 ] )	if ( arr [ i ] [ 0 ] == arr [ j ] [ 1 ] )
3463	if arr [ i ] [ 1 ] < arr [ j ] [ 1 ]	N/A	N/A	if ( arr [ i ] [ 1 ] < arr [ j ] [ 1 ] )	if ( arr [ i ] [ 0 ] < arr [ j ] [ 1 ] )
3464	tmp = int with tmp = arr [ i ] [ 1 ]	N/A	N/A	int tmp = arr [ i ] [ 1 ] ;	int tmp = arr [ i ] [ 1 ] ;
3465	set arr [ i ] [ 1 ] to arr [ j ] [ 1 ]	N/A	N/A	arr [ i ] [ 1 ] = arr [ j ] [ 1 ] ;	arr [ i ] [ 0 ] = arr [ j ] [ 1 ] ;
3466	set arr [ j ] [ 1 ] to tmp	N/A	N/A	arr [ j ] [ 1 ] = tmp ;	arr [ j ] [ 1 ] = tmp ;
3467	DUMMY	0.0	0.0	}	DUMMY
3468	DUMMY	0.0	0.0	}	DUMMY
3469	DUMMY	0.0	0.0	}	DUMMY
3470	DUMMY	0.0	0.0	}	DUMMY
3471	p = int with p = 0 and frr = int array of size 55	N/A	N/A	int frr [ 55 ] , p = 0 ;	int frr [ 55 ], p = 0 ;
3472	for i = 0 to n set frr [ i ] to 0	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { frr [ i ] = 0 ; }	for ( int i = 0 ; i < n ; i ++ ) { frr [ i ] = 1 ; }
3473	for i = 0 to n	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3474	for j = 0 to n	N/A	N/A	for ( j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
3475	if arr [ i ] [ 0 ] is arr [ j ] [ 0 ] and arr [ i ] [ 1 ] is arr [ j ] [ 1 ] incrment frr [ p ]	N/A	N/A	if ( arr [ i ] [ 0 ] == arr [ j ] [ 0 ] && arr [ i ] [ 1 ] == arr [ j ] [ 1 ] ) { frr [ p ] ++ ; }	if ( ( arr [ i ] [ 0 ] == arr [ j ] [ 1 ] ) &&! arr [ u ] [ 2 ] &&! strcmp ( frr [ p ], p ] ) ) { ++ p ] ; }
3476	DUMMY	0.0	0.0	}	DUMMY
3477	increment p	N/A	N/A	p ++ ;	p ++ ;
3478	DUMMY	0.0	0.0	}	DUMMY
3479	print frr [ k - 1 ]	N/A	N/A	cout << frr [ k - 1 ] << endl ;	cout << frr [ k - 1 ] << endl ;
3480	DUMMY	0.0	0.0	}	DUMMY
3481	DUMMY	0.0	0.0	int main() {	DUMMY
3482	create ints i , j , n , k , ans1 , ans2 , and c and int arrays a of size 10000 and b of size 10000	N/A	N/A	int a [ 10000 ] , b [ 10000 ] , i , j , n , k , ans1 , ans2 , c ;	int i, j, n, k, ans1, ans2, c, a [ 10000 ] = { 0 }, b [ 1000 ] ;
3483	read n and k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
3484	Enter integers for every index of arrays a and b	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] >> b [ i ] ;	for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] >> b [ j ] ; }
3485	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
3486	for j = n - 1 to i exclusive	N/A	N/A	for ( j = n - 1 ; j > i ; j -- )	for ( j = n - 1 ; j > i ; j -- )
3487	if a [ j ] is greater than a [ j - 1 ]	N/A	N/A	if ( a [ j ] > a [ j - 1 ] )	if ( a [ j ] > b [ j - 1 ] )
3488	swap the values of a [ j ] and a [ j - 1 ]	N/A	N/A	swap ( a [ j ] , a [ j - 1 ] ) ;	swap ( a [ j ], b [ j - 1 ] ) ;
3489	swap the values of b [ j ] and b [ j - 1 ]	N/A	N/A	swap ( b [ j ] , b [ j - 1 ] ) ;	swap ( a [ j ], b [ j - 1 ] ) ;
3490	DUMMY	0.0	0.0	}	DUMMY
3491	if a [ j ] is equal to a [ j - 1 ] and b [ j ] is less than a [ j - 1 ] , swap the values of b [ j ] and b [ j - 1 ]	N/A	N/A	if ( a [ j ] == a [ j - 1 ] && b [ j ] < b [ j - 1 ] ) swap ( b [ j ] , b [ j - 1 ] ) ;	if ( ( a [ j ] == a [ i - 1 ] ) && ( b [ k ] < a [ long long ) 1 ) swap ( b ( j ], b [ j - i ] ) ) ;
3492	DUMMY	0.0	0.0	}	DUMMY
3493	DUMMY	0.0	0.0	}	DUMMY
3494	set ans1 to a [ k - 1 ]	N/A	N/A	ans1 = a [ k - 1 ] ;	ans1 = a [ k - 1 ] ;
3495	set ans2 to b [ k - 1 ]	N/A	N/A	ans2 = b [ k - 1 ] ;	ans2 = b [ k - 1 ] ;
3496	for i = 0 and c = 0 to n exclusive	N/A	N/A	for ( i = 0 , c = 0 ; i < n ; i ++ )	for ( int i = 0, c = 0 ; i < n ; i ++ )
3497	if ans1 is equal to a [ i ] and ans2 is equal to b [ i ] , increment c + +	N/A	N/A	if ( ans1 == a [ i ] && ans2 == b [ i ] ) c ++ ;	if ( ( ans1 == a [ i ] ) && ( ans2 == b [ j ] ) ) c ++ ;
3498	DUMMY	0.0	0.0	}	DUMMY
3499	print c	N/A	N/A	cout << c << endl ;	cout << c << endl ;
3500	DUMMY	0.0	0.0	}	DUMMY
3501	declare const int N = 50 + 5	N/A	N/A	const int N = 50 + 5 ;	const int N = 50 + 5 ;
3502	create integers n , k and res	N/A	N/A	int n , k , res ;	int n, k, res ;
3503	create an array of int - int pairs a with size N	N/A	N/A	pair < int , int > a [ N ] ;	pair < int, int > a [ N ] ;
3504	declare boolean function cmp that takes pairs of int - int a and b as an arguments	N/A	N/A	bool cmp ( pair < int , int > a , pair < int , int > b )	bool cmp ( pairs < int, int > a, pair < int > b )
3505	if a . first is greater than b . first	N/A	N/A	if ( a . first > b . first )	if ( a. first > b. first )
3506	return true	N/A	N/A	return true ;	return true ;
3507	else if a . first is equal to b . first	N/A	N/A	else if ( a . first == b . first )	else if ( a. first == b. first )
3508	if a . second is less than b . second , return true	N/A	N/A	if ( a . second < b . second ) return true ;	if ( a. second < b. second ) return true ;
3509	return false	N/A	N/A	return false ;	return false ;
3510	else	N/A	N/A	else	else
3511	return false	N/A	N/A	return false ;	return false ;
3512	DUMMY	0.0	0.0	}	DUMMY
3513	define function Input	N/A	N/A	void Input ( )	void Input ( )
3514	read n and k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
3515	for i from 1 to n inclusive , read input to a [ i ] . first and a [ i ] . second	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] . first >> a [ i ] . second ;	for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ]. first >> b [ k ]. second ; }
3516	sort a from position 1 to n + 1 using cmp as a comparator method	N/A	N/A	sort ( a + 1 , a + n + 1 , cmp ) ;	sort ( a + 1, a + ( n + 1 ), cmp ) ;
3517	DUMMY	0.0	0.0	}	DUMMY
3518	function Solve	N/A	N/A	void Solve ( )	void Solve ( )
3519	declare int problems = a [ k ] . first and penalty = a [ k ] . second	N/A	N/A	int problems = a [ k ] . first , penalty = a [ k ] . second ;	int problems = ( a [ k ]. first ), penalty = ( ( k ). second ) ;
3520	for i from 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
3521	if a [ i ] . first = problems and a [ i ] . second is equal to penalty , increment res	N/A	N/A	if ( a [ i ] . first == problems && a [ i ] . second == penalty ) res ++ ;	if ( ( a [ i ]. first == problems ) && ( ( int ) a [ 1 ]. second == penalty ) ) res ++ ;
3522	DUMMY	0.0	0.0	}	DUMMY
3523	print res and ' \ n '	N/A	N/A	cout << res << ' \n ' ;	cout << res <<'\n';
3524	DUMMY	0.0	0.0	}	DUMMY
3525	DUMMY	0.0	0.0	int main() {	DUMMY
3526	call Input ( )	N/A	N/A	Input ( ) ;	Input ( ) ;
3527	call Solve ( )	N/A	N/A	Solve ( ) ;	Solve ( ) ;
3528	DUMMY	0.0	0.0	return 0;	DUMMY
3529	DUMMY	0.0	0.0	}	DUMMY
3530	create int array a of size 100 containing array of size 100	N/A	N/A	int a [ 100 ] [ 100 ] ;	int a [ 100 ] [ 100 + 1 ] ;
3531	declare margesort taking in ints l and r and int arrays p and t	N/A	N/A	void margesort ( int p [ ] , int t [ ] , int l , int r ) ;	void margesort ( int p [ ], int t [ ] )
3532	declare marge taking in int l , m , and r and int arrays p and t	N/A	N/A	void marge ( int p [ ] , int t [ ] , int l , int m , int r ) ;	void marge ( int l, int m, int r )
3533	DUMMY	0.0	0.0	int main() {	DUMMY
3534	let ints n and k and int arrays p of size 100 and t of size 100	N/A	N/A	int n , k , p [ 100 ] , t [ 100 ] ;	int n, k, p [ 100 ], t [ 10 ] ;
3535	read n and k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
3536	for i - 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3537	read p [ i ] and t [ i ]	N/A	N/A	cin >> p [ i ] >> t [ i ] ;	cin >> p [ i ] >> t [ k ] ;
3538	increment a [ p [ i ] ] [ t [ i ] ]	N/A	N/A	a [ p [ i ] ] [ t [ i ] ] ++ ;	++ a [ p [ i ] ] [ t [ 1 ] ] ;
3539	DUMMY	0.0	0.0	}	DUMMY
3540	call margesort with arguments p , t , 0 , and n - 1	N/A	N/A	margesort ( p , t , 0 , n - 1 ) ;	margesort ( p, t, 0, n - 1 ) ;
3541	print a [ p [ k - 1 ] ] [ t [ k - 1 ] ]	N/A	N/A	cout << a [ p [ k - 1 ] ] [ t [ k - 1 ] ] << endl ;	cout << a [ p [ k - 1 ] ] [ t [ k -- ] ] << endl ;
3542	DUMMY	0.0	0.0	return 0;	DUMMY
3543	DUMMY	0.0	0.0	}	DUMMY
3544	decalre margesort taking in ints l and r and int arrays p and t	N/A	N/A	void margesort ( int p [ ] , int t [ ] , int l , int r )	void margesort ( int l, int r )
3545	if l is less than r	N/A	N/A	if ( l < r )	if ( l < r )
3546	let int m = ( l + r - 1 ) / 2	N/A	N/A	int m = ( l + r - 1 ) / 2 ;	int m = ( l + r - 1 ) / 2 ;
3547	call margesort ( p , t , l , m )	N/A	N/A	margesort ( p , t , l , m ) ;	margesort ( p, t, l, m ) ;
3548	call margesort ( p , t , m + 1 , r )	N/A	N/A	margesort ( p , t , m + 1 , r ) ;	margesort ( p, t, m + 1, r ) ;
3549	call margesort with arguments p , t , l , m , and r	N/A	N/A	marge ( p , t , l , m , r ) ;	margesort ( p, t, l, m, r ) ;
3550	DUMMY	0.0	0.0	}	DUMMY
3551	DUMMY	0.0	0.0	}	DUMMY
3552	declare marge taking in ints l , m , and r and int arrays p and t	N/A	N/A	void marge ( int p [ ] , int t [ ] , int l , int m , int r )	int marge ( int l, int m, int r )
3553	let ints i , j , and k	N/A	N/A	int i , j , k ;	int i, j, k ;
3554	create integer n1 = m - l + 1	N/A	N/A	int n1 = m - l + 1 ;	int n1 = m - l + 1 ;
3555	let integer n2 = r - m	N/A	N/A	int n2 = r - m ;	int n2 = r - m ;
3556	create int arrays L of size n1 , R of size n2 , ll of size n1 , and rr of size n2	N/A	N/A	int L [ n1 ] , R [ n2 ] , ll [ n1 ] , rr [ n2 ] ;	int L [ n1 ], R [ n2 ], ll [ ( n1 ) ], rr [ r2 ] ;
3557	for i = 0 to n1 exclusive	N/A	N/A	for ( i = 0 ; i < n1 ; i ++ )	for ( i = 0 ; i < n1 ; i ++ )
3558	set L [ i ] to p [ l + i ]	N/A	N/A	L [ i ] = p [ l + i ] ;	L [ i ] = p [ l + i ] ;
3559	set ll [ i ] to t [ l + i ]	N/A	N/A	ll [ i ] = t [ l + i ] ;	l [ i ] = t [ l + i ] ;
3560	DUMMY	0.0	0.0	}	DUMMY
3561	for j = 0 to n2 exclusive	N/A	N/A	for ( j = 0 ; j < n2 ; j ++ )	for ( int j = 0 ; j < n2 ; j ++ )
3562	set R [ j ] to p [ m + 1 + j ]	N/A	N/A	R [ j ] = p [ m + 1 + j ] ;	R [ j ] = p [ m + 1 + j ] ;
3563	set rr [ j ] to t [ m + 1 + j ]	N/A	N/A	rr [ j ] = t [ m + 1 + j ] ;	rr [ j ] = t [ m + 1 + j ] ;
3564	DUMMY	0.0	0.0	}	DUMMY
3565	set i to 0	N/A	N/A	i = 0 ;	i = 0 ;
3566	set j to 0	N/A	N/A	j = 0 ;	j = 0 ;
3567	set k to l	N/A	N/A	k = l ;	k = l ;
3568	while i is less than n1 and j is less than n2	N/A	N/A	while ( i < n1 && j < n2 )	while ( i < n1 && j < n2 )
3569	if L [ i ] is greater than R [ j ]	N/A	N/A	if ( L [ i ] > R [ j ] )	if ( L [ i ] > R [ j ] )
3570	set p [ k ] to L [ i ]	N/A	N/A	p [ k ] = L [ i ] ;	p [ k ] = L [ i ] ;
3571	set t [ k ] to ll [ i ]	N/A	N/A	t [ k ] = ll [ i ] ;	t [ k ] = ll [ i ] ;
3572	increase i by 1	N/A	N/A	i ++ ;	i ++ ;
3573	else if L [ i ] is equal to R [ j ] and ll [ i ] is less than or equal to rr [ j ]	N/A	N/A	else if ( L [ i ] == R [ j ] && ll [ i ] <= rr [ j ] )	else if ( L [ i ] == R [ j ] && ll [ i - 1 <= rr [ j - 1 ] )
3574	set p [ k ] to L [ i ]	N/A	N/A	p [ k ] = L [ i ] ;	p [ k ] = L [ i ] ;
3575	set t [ k ] to ll [ i ]	N/A	N/A	t [ k ] = ll [ i ] ;	t [ k ] = ll [ i ] ;
3576	increment i	N/A	N/A	i ++ ;	i ++ ;
3577	else	N/A	N/A	else	else
3578	set p [ k ] to R [ j ]	N/A	N/A	p [ k ] = R [ j ] ;	p [ k ] = R [ j ] ;
3579	set t [ k ] to rr [ j ]	N/A	N/A	t [ k ] = rr [ j ] ;	t [ k ] = rr [ j ] ;
3580	increment j	N/A	N/A	j ++ ;	j ++ ;
3581	DUMMY	0.0	0.0	}	DUMMY
3582	increase k by 1	N/A	N/A	k ++ ;	k ++ ;
3583	DUMMY	0.0	0.0	}	DUMMY
3584	while i is less than n1	N/A	N/A	while ( i < n1 )	while ( i < n1 )
3585	set p [ k ] to L [ i ]	N/A	N/A	p [ k ] = L [ i ] ;	p [ k ] = L [ i ] ;
3586	set t [ k ] to ll [ i ]	N/A	N/A	t [ k ] = ll [ i ] ;	t [ k ] = ll [ i ] ;
3587	increment i	N/A	N/A	i ++ ;	i ++ ;
3588	increment k	N/A	N/A	k ++ ;	k ++ ;
3589	DUMMY	0.0	0.0	}	DUMMY
3590	while j is less than n2	N/A	N/A	while ( j < n2 )	while ( j < n2 )
3591	set p [ k ] to R [ j ]	N/A	N/A	p [ k ] = R [ j ] ;	p [ k ] = R [ j ] ;
3592	set t [ k ] to rr [ j ]	N/A	N/A	t [ k ] = rr [ j ] ;	t [ k ] = rr [ j ] ;
3593	increment j	N/A	N/A	j ++ ;	j ++ ;
3594	add 1 to k	N/A	N/A	k ++ ;	k ++ ;
3595	DUMMY	0.0	0.0	}	DUMMY
3596	DUMMY	0.0	0.0	}	DUMMY
3597	DUMMY	0.0	0.0	int main() {	DUMMY
3598	declare integers n , k	N/A	N/A	int n , k ;	int n, k ;
3599	read n read k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
3600	declare pair of integer , integer array a size 50	N/A	N/A	pair < int , int > a [ 50 ] ;	pair < int, int > a [ 50 ] ;
3601	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3602	read first element for a [ i ] , second element of a [ i ]	N/A	N/A	cin >> a [ i ] . first >> a [ i ] . second ;	cin >> a [ i ]. front ( ) >> b [ a [ 1 ]. second ;
3603	let first element of a [ i ] be first element of a [ i ] * - 1	N/A	N/A	a [ i ] . first *= - 1 ;	a [ i ]. first *= - 1 ;
3604	DUMMY	0.0	0.0	}	DUMMY
3605	sort elements from a to a + n	N/A	N/A	sort ( a , a + n ) ;	sort ( a, a + n ) ;
3606	print result of run count with a , a + n , a [ k - 1 ] as arguments , newline	N/A	N/A	cout << count ( a , a + n , a [ k - 1 ] ) << endl ;	cout << count ( a, a + n, a [ k - 1 ] ) << endl ;
3607	return 0 from function	N/A	N/A	return ( 0 ) ;	return 0 ;
3608	DUMMY	0.0	0.0	}	DUMMY
3609	n , i , p , t , k = int and a = int array of size 111111	N/A	N/A	int n , i , a [ 111111 ] , p , t , k ;	int n, i, p, t, k, a [ 111111 ] ;
3610	DUMMY	0.0	0.0	int main() {	DUMMY
3611	read n then k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
3612	for i = 0 to n	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
3613	read p then t	N/A	N/A	cin >> p >> t ;	cin >> p >> t ;
3614	increment a [ p * 50 - t ]	N/A	N/A	a [ p * 50 - t ] ++ ;	a [ p * 50 - t ] ++ ;
3615	DUMMY	0.0	0.0	}	DUMMY
3616	set t to 2500	N/A	N/A	t = 2500 ;	t = 2500 ;
3617	loop while a [ t ] is less than k decrement k by a [ t ] then decrement t	N/A	N/A	while ( a [ t ] < k ) k -= a [ t -- ] ;	while ( a [ t ] < k ) { k -= a [ ++ t ], t -- ; }
3618	print a [ t ]	N/A	N/A	cout << a [ t ] << endl ;	cout << a [ t ] << endl ;
3619	DUMMY	0.0	0.0	return 0;	DUMMY
3620	DUMMY	0.0	0.0	}	DUMMY
3621	DUMMY	0.0	0.0	int main() {	DUMMY
3622	create integers n , m , i , j , k , a , b , create integer array x with size 51	N/A	N/A	int n , m , x [ 51 ] , i , j , k , a , b ;	int n, m, i, j, k, a, b, x [ 51 ] ;
3623	while read n read m	N/A	N/A	while ( cin >> n >> m )	while ( cin >> n >> m )
3624	set j to 0	N/A	N/A	j = 0 ;	j = 0 ;
3625	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
3626	read a read b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
3627	set x [ i ] to a * 50 - b	N/A	N/A	x [ i ] = a * 50 - b ;	x [ i ] = a * 50 - b ;
3628	DUMMY	0.0	0.0	}	DUMMY
3629	sort elements from x to x + n	N/A	N/A	sort ( x , x + n ) ;	sort ( x, x + n ) ;
3630	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3631	if x [ i ] is x [ n - m ] , increment j	N/A	N/A	if ( x [ i ] == x [ n - m ] ) { j ++ ; }	if ( x [ i ] == x [ n - m ] ) j ++ ;
3632	DUMMY	0.0	0.0	}	DUMMY
3633	print j print newline	N/A	N/A	cout << j << endl ;	cout << j << endl ;
3634	DUMMY	0.0	0.0	}	DUMMY
3635	DUMMY	0.0	0.0	return 0;	DUMMY
3636	DUMMY	0.0	0.0	}	DUMMY
3637	DUMMY	0.0	0.0	int main() {	DUMMY
3638	declare int variables n and d	N/A	N/A	int n , d ;	int n, d ;
3639	declare double variable a	N/A	N/A	double a ;	double a ;
3640	read n , a and d	N/A	N/A	cin >> n >> a >> d ;	cin >> n >> a >> d ;
3641	create an arrays of long longs t and v with n elements	N/A	N/A	long long t [ n ] , v [ n ] ;	long long t [ n ] = { 0 }, v [ ( n ] } ;
3642	loop i from 0 to n exclusive , read t [ i ] and v [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> t [ i ] >> v [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> t [ i ] >> v [ 1 ] ; }
3643	declare long double T = 0	N/A	N/A	long double T = 0 ;	long double T = 0 ;
3644	loop i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3645	if v [ i ] * v [ i ] > = 2 * a * d	N/A	N/A	if ( v [ i ] * v [ i ] >= 2 * a * d )	if ( v [ i ] * v [ 1 ] >= 2 * a * d )
3646	T = max of t [ i ] + sqrt ( ( 2 . 0 * d ) / a and T	N/A	N/A	T = max ( ( long double ) t [ i ] + sqrt ( ( 2.0 * d ) / a ) , T ) ;	T = max ( t [ i ] + sqrt ( ( 2.0 * d ) / a, T ) ;
3647	else	N/A	N/A	else	else
3648	create long double t1 = v [ i ] / a	N/A	N/A	long double t1 = v [ i ] / a ;	long double t1 = v [ i ] / a ;
3649	create long double s = ( v [ i ] * v [ i ] ) / ( 2 * a )	N/A	N/A	long double s = ( v [ i ] * v [ i ] ) / ( 2 * a ) ;	long double s = ( v [ i ] * v [ 1 ] ) / ( 2 * a ) ;
3650	T = max of T and t [ i ] + t1 + ( ( d - s ) / v [ i ] )	N/A	N/A	T = max ( T , ( long double ) t [ i ] + t1 + ( ( d - s ) / v [ i ] ) ) ;	T = max ( T, t [ i ] + t1 ) + ( ( d - s ) / v [ 1 ] ) ;
3651	DUMMY	0.0	0.0	}	DUMMY
3652	set output decimal precision to 12 and print T	N/A	N/A	cout << setprecision ( 12 ) << T << endl ;	cout. precision ( 12 ) << T << endl ;
3653	DUMMY	0.0	0.0	}	DUMMY
3654	DUMMY	0.0	0.0	}	DUMMY
3655	maxn = const int with maxn = 2e5 + 10	N/A	N/A	const int maxn = 2e5 + 10 ;	const int maxn = 2e5 + 10 ;
3656	n , a , b = int and arr = int array of size maxn	N/A	N/A	int arr [ maxn ] , n , a , b ;	int n, arr [ maxn ], a, b ;
3657	DUMMY	0.0	0.0	int main() {	DUMMY
3658	read n then a then b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3659	read n values into arr	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;
3660	sort arr	N/A	N/A	sort ( arr , arr + n ) ;	sort ( arr, arr + n ) ;
3661	print arr [ b ] - arr [ b - 1 ]	N/A	N/A	cout << arr [ b ] - arr [ b - 1 ] << endl ;	cout << arr [ b ] - arr [ c - 1 ] << endl ;
3662	DUMMY	0.0	0.0	}	DUMMY
3663	DUMMY	0.0	0.0	int main() {	DUMMY
3664	n = integer with 0	N/A	N/A	int n = 0 ;	int n = 0 ;
3665	a = integer with 0	N/A	N/A	int a = 0 ;	int a = 0 ;
3666	b = integer with 0	N/A	N/A	int b = 0 ;	int b = 0 ;
3667	Read n	N/A	N/A	cin >> n ;	cin >> n ;
3668	Read a	N/A	N/A	cin >> a ;	cin >> a ;
3669	Read b	N/A	N/A	cin >> b ;	cin >> b ;
3670	h = array of 2000 integers	N/A	N/A	int h [ 2000 ] ;	int h [ 2000 ] ;
3671	Read n values into array h	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> h [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> h [ i ] ; }
3672	sort array elements of h in ascending order	N/A	N/A	sort ( h , h + n ) ;	sort ( h, h + n ) ;
3673	print h [ b ] - h [ b - 1 ] and a new line	N/A	N/A	cout << h [ b ] - h [ b - 1 ] << endl ;	cout << h [ b ] - h [ c - 1 ] << endl ;
3674	DUMMY	0.0	0.0	return 0;	DUMMY
3675	DUMMY	0.0	0.0	}	DUMMY
3676	create integer array arr of length 2005	N/A	N/A	int arr [ 2005 ] ;	int arr [ 2005 ] ;
3677	DUMMY	0.0	0.0	int main() {	DUMMY
3678	create integers a , b , and c	N/A	N/A	int a , b , c ;	int a, b, c ;
3679	read a , b , and c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
3680	for i = 0 to a exclusive , read arr [ i ]	N/A	N/A	for ( int i = 0 ; i < a ; i ++ ) { cin >> arr [ i ] ; }	for ( int i = 0 ; i < a ; i ++ ) { cin >> arr [ i ] ; }
3681	sort array arr	N/A	N/A	sort ( arr , arr + a ) ;	sort ( arr, arr + b ) ;
3682	create integer mn = arr [ c - 1 ]	N/A	N/A	int mn = arr [ c - 1 ] ;	int mn = arr [ c - 1 ] ;
3683	create integer mx = arr [ c ] - 1	N/A	N/A	int mx = arr [ c ] - 1 ;	int mx = arr [ c ] - 1 ;
3684	print the max of 0 and mx - mn + 1	N/A	N/A	cout << max ( 0 , mx - mn + 1 ) << endl ;	cout << max ( 0, mx - mn + 1 ) << endl ;
3685	DUMMY	0.0	0.0	}	DUMMY
3686	DUMMY	0.0	0.0	int main() {	DUMMY
3687	n , a , b , i = long long int	N/A	N/A	long long int n , a , b , i ;	long long int n, a, b, i ;
3688	read n then a then b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3689	p = long long int array of size n	N/A	N/A	long long int p [ n ] ;	long long int p [ n ] ;
3690	read n values into p	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) cin >> p [ i ] ;	for ( i = 0 ; i < n ; i ++ ) cin >> p [ i ] ;
3691	sort p	N/A	N/A	sort ( p , p + n ) ;	sort ( p, p + n ) ;
3692	x = long long int with x = p [ n - a ] - p [ b - 1 ]	N/A	N/A	long long int x = p [ n - a ] - p [ b - 1 ] ;	long long int x = p [ n - a ] - p [ b - 1 ] ;
3693	print x	N/A	N/A	cout << x << endl ;	cout << x << endl ;
3694	DUMMY	0.0	0.0	}	DUMMY
3695	create ints n , a and b	N/A	N/A	int n , a , b ;	int n, a, b ;
3696	declare integer array x with 2005 elements	N/A	N/A	int x [ 2005 ] ;	int x [ 2005 ] ;
3697	DUMMY	0.0	0.0	int main() {	DUMMY
3698	read n , a and b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3699	for i from 0 to n exclusive , read input to x [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> x [ i ] ; }
3700	sort x	N/A	N/A	sort ( x , x + n ) ;	sort ( x, x + n ) ;
3701	print x [ b ] - x [ b - 1 ] and ' \ n '	N/A	N/A	cout << x [ b ] - x [ b - 1 ] << ' \n ' ;	cout << x [ b ] - x [ a - 1 ] <<'\n';
3702	DUMMY	0.0	0.0	}	DUMMY
3703	DUMMY	0.0	0.0	int main() {	DUMMY
3704	create integers n , a , b	N/A	N/A	int n , a , b ;	int n, a, b ;
3705	read n read a read b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3706	create integer array p with size n	N/A	N/A	int p [ n ] ;	int p [ n ] ;
3707	for i = 0 to n exclusive , read p [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] ;
3708	sort elements from p to p + n	N/A	N/A	sort ( p , p + n ) ;	sort ( p, p + n ) ;
3709	create long long count with count = 0	N/A	N/A	long long count = 0 ;	long long count = 0 ;
3710	if p [ b - 1 ] is not p [ b ]	N/A	N/A	if ( p [ b - 1 ] != p [ b ] )	if ( p [ b - 1 ]!= p [ c ] )
3711	increment count by p [ b ] - p [ b - 1 ]	N/A	N/A	count += p [ b ] - p [ b - 1 ] ;	count += p [ b ] - p [ n - 1 ] ;
3712	print count print newline	N/A	N/A	cout << count << endl ;	cout << count << endl ;
3713	else	N/A	N/A	else	else
3714	print " 0 " print newline	N/A	N/A	cout << " 0 " << endl ;	cout << " 0 " << endl ;
3715	DUMMY	0.0	0.0	}	DUMMY
3716	DUMMY	0.0	0.0	return 0;	DUMMY
3717	DUMMY	0.0	0.0	}	DUMMY
3718	create string T	N/A	N/A	string T ;	string T ;
3719	create long long N , K , M , A , B , C [ 2005 ] , D , sum	N/A	N/A	long long N , K , M , A , B , C [ 2005 ] , D , sum ;	long long N, K, M, A, B, C [ 2005 ], D, sum ;
3720	DUMMY	0.0	0.0	int main() {	DUMMY
3721	read N , A and B	N/A	N/A	cin >> N >> A >> B ;	cin >> N >> A >> B ;
3722	for i = 1 to N inclusive , read C [ i ]	N/A	N/A	for ( int i = 1 ; i <= N ; i ++ ) { cin >> C [ i ] ; }	for ( int i = 1 ; i <= N ; i ++ ) cin >> C [ i ] ;
3723	sort elements between C + 1 and C + N + 1	N/A	N/A	sort ( C + 1 , C + N + 1 ) ;	sort ( C + 1, C + N + 1 ) ;
3724	print C [ B + 1 ] - C [ B ] and a newline	N/A	N/A	cout << C [ B + 1 ] - C [ B ] << ' \n ' ;	cout << C [ B + 1 ] - C [ N ] <<'\n';
3725	DUMMY	0.0	0.0	}	DUMMY
3726	DUMMY	0.0	0.0	int main() {	DUMMY
3727	create ints n , a , b and way	N/A	N/A	int n , a , b , way ;	int n, a, b, way ;
3728	read n , a and b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3729	create int pointer * chore to the new array of int with n elements	N/A	N/A	int * chore = new int [ n ] ;	int * chore = new int [ n ] ;
3730	loop i from 0 to n exclusive , read chore [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> chore [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> chore [ i ] ; }
3731	sort chore	N/A	N/A	sort ( chore , chore + n ) ;	sort ( chore, chore + n ) ;
3732	declare int j = n - 1	N/A	N/A	int j = n - 1 ;	int j = n - 1 ;
3733	decrement j while j > n - a	N/A	N/A	while ( j > n - a ) { j -- ; }	while ( j > n - a ) j -- ;
3734	if chore [ j ] = chore [ j - 1 ]	N/A	N/A	if ( chore [ j ] == chore [ j - 1 ] )	if ( chore [ j ] == chore [ j - 1 ] )
3735	print 0 and " \ n "	N/A	N/A	cout << 0 << " \n " ;	cout << 0 << " \n " ;
3736	else	N/A	N/A	else	else
3737	print chore [ j ] - chore [ j - 1 ] and " \ n "	N/A	N/A	cout << chore [ j ] - chore [ j - 1 ] << " \n " ;	cout << chore [ 0 ] - chore [ j - 1 ] << " \n " ;
3738	DUMMY	0.0	0.0	return 0;	DUMMY
3739	DUMMY	0.0	0.0	}	DUMMY
3740	define int constant maxn , set to 5e3 + 5	N/A	N/A	const int maxn = 5e3 + 5 ;	const int maxn = 5e3 + 5 ;
3741	define unsigned integer constant base , set to 311	N/A	N/A	const unsigned long long base = 311 ;	const unsigned int base = 311 ;
3742	define unsigned integer array A to be of maxn elements	N/A	N/A	unsigned long long A [ maxn ] ;	unsigned int A [ maxn ] ;
3743	DUMMY	0.0	0.0	int main() {	DUMMY
3744	define integer N	N/A	N/A	int N ;	int N ;
3745	read N	N/A	N/A	cin >> N ;	cin >> N ;
3746	define integers a and b	N/A	N/A	int a , b ;	int a, b ;
3747	read a , b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
3748	for int i from 1 to N by 1 , read A [ i ]	N/A	N/A	for ( int i = ( 1 ) ; i <= ( N ) ; i += ( 1 ) ) cin >> A [ i ] ;	for ( int i = 1 ; i <= N ; i ++ ) cin >> A [ i ] ;
3749	sort ( A + 1 , A + N + 1 )	N/A	N/A	sort ( A + 1 , A + N + 1 ) ;	sort ( A + 1, A + N + 1 ) ;
3750	print A [ b + 1 ] - A [ b ] and a newline	N/A	N/A	cout << A [ b + 1 ] - A [ b ] << " \n " ;	cout << A [ b + 1 ] - A [ n ] <<'\n';
3751	DUMMY	0.0	0.0	return 0;	DUMMY
3752	DUMMY	0.0	0.0	}	DUMMY
3753	DUMMY	0.0	0.0	int main() {	DUMMY
3754	create int a , b , n , i , au , nx	N/A	N/A	int a , b , n , i , au , nx ;	int a, b, n, i, au, nx ;
3755	read n	N/A	N/A	cin >> n ;	cin >> n ;
3756	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
3757	create vector int c	N/A	N/A	vector < int > c ;	vector < int > c ;
3758	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
3759	read au	N/A	N/A	cin >> au ;	cin >> au ;
3760	put au at the end of c	N/A	N/A	c . push_back ( au ) ;	c. push_back ( au ) ;
3761	DUMMY	0.0	0.0	}	DUMMY
3762	sort c	N/A	N/A	sort ( c . begin ( ) , c . end ( ) ) ;	sort ( c. begin ( ), c. end ( ) ) ;
3763	set nx to c [ b ] - c [ b - 1 ]	N/A	N/A	nx = c [ b ] - c [ b - 1 ] ;	int nx = c [ b ] - c [ c - 1 ] ;
3764	print nx and a newline	N/A	N/A	cout << nx << " \n " ;	cout << nx <<'\n';
3765	DUMMY	0.0	0.0	return 0;	DUMMY
3766	DUMMY	0.0	0.0	}	DUMMY
3767	DUMMY	0.0	0.0	int main() {	DUMMY
3768	n , a , b , i , ans = int	N/A	N/A	int n , a , b , i , ans ;	int n, a, b, i, ans ;
3769	read n then a then b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3770	f = int vector of size n	N/A	N/A	vector < int > f ( n ) ;	vector < int > f ( n ) ;
3771	read n values into f	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) cin >> f [ i ] ;	for ( i = 0 ; i < n ; i ++ ) cin >> f [ i ] ;
3772	sort f from rbegin to rend	N/A	N/A	sort ( f . rbegin ( ) , f . rend ( ) ) ;	sort ( f. begin ( ), f. rend ( ) ) ;
3773	set ans to n , a , b , i , ans	N/A	N/A	ans = - ( f [ a ] - f [ a - 1 ] ) ;	ans = n >> a >> b >> i ;
3774	print ans	N/A	N/A	cout << ans << " \n " ;	cout << ans << endl ;
3775	DUMMY	0.0	0.0	return 0;	DUMMY
3776	DUMMY	0.0	0.0	}	DUMMY
3777	DUMMY	0.0	0.0	int main() {	DUMMY
3778	n , a , b = int	N/A	N/A	int n , a , b ;	int n, a, b ;
3779	read n then a then b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3780	V = int vector of size n	N/A	N/A	vector < int > V ( n ) ;	vector < int > V ( n ) ;
3781	read n values into V	N/A	N/A	for ( int i = 0 ; i < n ; ++ i ) cin >> V [ i ] ;	for ( i = 0 ; i < n ; i ++ ) cin >> V [ i ] ;
3782	sort V	N/A	N/A	sort ( V . begin ( ) , V . end ( ) ) ;	sort ( V. begin ( ), V. end ( ) ) ;
3783	print V [ b ] - V [ b - 1 ]	N/A	N/A	cout << V [ b ] - V [ b - 1 ] << " \n " ;	cout << V [ b ] - V [ c - 1 ] << endl ;
3784	DUMMY	0.0	0.0	return 0;	DUMMY
3785	DUMMY	0.0	0.0	}	DUMMY
3786	N = 1000055	N/A	N/A	const int N = 1e6 + 55 ;	const int N = 1000055 ;
3787	M = 1000000007	N/A	N/A	const int M = 1e9 + 7 ;	const int M = 1000000007 ;
3788	n , a , b = int	N/A	N/A	int n , a , b ;	int n, a, b ;
3789	v = vector of int	N/A	N/A	vector < int > v ;	vector < int > v ;
3790	DUMMY	0.0	0.0	int main() {	DUMMY
3791	read n , a , b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3792	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; ++ i )	for ( int i = 1 ; i <= n ; i ++ )
3793	q = int	N/A	N/A	int q ;	int q ;
3794	read q	N/A	N/A	cin >> q ;	cin >> q ;
3795	add q to end of v	N/A	N/A	v . push_back ( q ) ;	v. push_back ( q ) ;
3796	DUMMY	0.0	0.0	}	DUMMY
3797	sort v	N/A	N/A	sort ( v . begin ( ) , v . end ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
3798	q = v [ n - 1 ] - v [ n - a - 1 ]	N/A	N/A	int q = v [ n - a ] - v [ n - a - 1 ] ;	q = v [ n - 1 ] - v [ ( n - a - 1 ) ] ;
3799	if q < = 0	N/A	N/A	if ( q <= 0 )	if ( q <= 0 )
3800	print 0	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
3801	exit	N/A	N/A	exit ( 0 ) ;	exit ( 0 ) ;
3802	DUMMY	0.0	0.0	}	DUMMY
3803	print q	N/A	N/A	cout << q << endl ;	cout << q << endl ;
3804	DUMMY	0.0	0.0	return 0;	DUMMY
3805	DUMMY	0.0	0.0	}	DUMMY
3806	DUMMY	0.0	0.0	int main() {	DUMMY
3807	n = int	N/A	N/A	int n ;	int n ;
3808	a = int	N/A	N/A	int a ;	int a ;
3809	b = int	N/A	N/A	int b ;	int b ;
3810	complexity = int vector	N/A	N/A	vector < int > complexity ;	vector < int > complexity ;
3811	read n then a then b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3812	i = int with i = 0	N/A	N/A	int i = 0 ;	int i = 0 ;
3813	loop while i is less than n incrementing i each time	N/A	N/A	for ( ; i < n ; i ++ )	for ( ; i < n ; i ++ )
3814	tmp = int	N/A	N/A	int tmp ;	int tmp ;
3815	read tmp	N/A	N/A	cin >> tmp ;	cin >> tmp ;
3816	append tmp to complexity	N/A	N/A	complexity . push_back ( tmp ) ;	complexity. push_back ( tmp ) ;
3817	DUMMY	0.0	0.0	}	DUMMY
3818	sort complexity	N/A	N/A	sort ( complexity . begin ( ) , complexity . end ( ) ) ;	sort ( complexity. begin ( ), complexity. end ( ) ) ;
3819	cnt = int with cnt = 0	N/A	N/A	int cnt = 0 ;	int cnt = 0 ;
3820	for i = complexity [ b - 1 ] to complexity [ b ] increment cnt	N/A	N/A	for ( i = complexity [ b - 1 ] ; i < complexity [ b ] ; i ++ ) { cnt ++ ; }	for ( int i = complexity [ b - 1 ] ; i <= complexity [ cnt ] ; ++ i ) cnt ++ ;
3821	print cnt	N/A	N/A	cout << cnt << endl ;	cout << cnt << endl ;
3822	DUMMY	0.0	0.0	}	DUMMY
3823	DUMMY	0.0	0.0	int main() {	DUMMY
3824	let n , a , b , i be long integers	N/A	N/A	long long n , a , b , i ;	long long n, a, b, i ;
3825	read n , a , b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3826	let c [ n ] be long integer	N/A	N/A	long long c [ n ] ;	long long c [ n ] ;
3827	for i = 0 to n exclusive , read ith element of c	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { cin >> c [ i ] ; }	for ( i = 0 ; i < n ; i ++ ) cin >> c [ i ] ;
3828	sort the values of c and c + n	N/A	N/A	sort ( c , c + n ) ;	sort ( c, c + n ) ;
3829	print c [ b ] - c [ b - 1 ] and newline	N/A	N/A	cout << c [ b ] - c [ b - 1 ] << endl ;	cout << c [ b ] - c [ c - 1 ] << endl ;
3830	DUMMY	0.0	0.0	return 0;	DUMMY
3831	DUMMY	0.0	0.0	}	DUMMY
3832	DUMMY	0.0	0.0	int main() {	DUMMY
3833	create integers n , a , b	N/A	N/A	int n , a , b ;	int n, a, b ;
3834	create integer vector h	N/A	N/A	vector < int > h ;	vector < int > h ;
3835	read n read a read b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3836	resize vector to size n	N/A	N/A	h . resize ( n ) ;	v. resize ( n ) ;
3837	for i = 0 to n exclusive , read h [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> h [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> h [ i ] ;
3838	sort elements from beginning of h to end of h using integer greater function to compare	N/A	N/A	sort ( h . begin ( ) , h . end ( ) , greater < int > ( ) ) ;	sort ( h. begin ( ), h. end ( ) + greater < int > ( ) ) ;
3839	create integer min_petya with min_petya = h [ a - 1 ]	N/A	N/A	int min_petya = h [ a - 1 ] ;	int min_petya = h [ a - 1 ] ;
3840	create max_vasya with max_vasya = h [ a ]	N/A	N/A	int max_vasya = h [ a ] ;	int max_vasya = h [ a ] ;
3841	if min_petya is max_vasya	N/A	N/A	if ( min_petya == max_vasya )	if ( min_petya == max_vasya )
3842	print 0 print newline	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
3843	else	N/A	N/A	else	else
3844	print min_petya - max_vasya print newline	N/A	N/A	cout << min_petya - max_vasya << endl ;	cout << min_petya - max_vasya << endl ;
3845	DUMMY	0.0	0.0	}	DUMMY
3846	DUMMY	0.0	0.0	return 0;	DUMMY
3847	DUMMY	0.0	0.0	}	DUMMY
3848	N = const long long with N = 1e9 + 3	N/A	N/A	const long long N = 1e9 + 3 ;	const long long N = 1e9 + 3 ;
3849	MN = const long long with MN = 1e9 + 7	N/A	N/A	const long long MN = 1e9 + 7 ;	const long long MN = 1e9 + 7 ;
3850	MX = const long long with MX = - 1e9 - 7	N/A	N/A	const long long MX = - 1e9 - 7 ;	const long long MX = - 1e9 - 7 ;
3851	n , a , b , x , c1 , c2 , cnt = long long	N/A	N/A	long long n , a , b , x , c1 , c2 , cnt ;	long long n, a, b, x, c1, c2, cnt ;
3852	s , s1 = string	N/A	N/A	string s , s1 ;	string s, s1 ;
3853	bl = bool with bl = false	N/A	N/A	bool bl = false ;	bool bl = false ;
3854	c = long long	N/A	N/A	long long c ;	long long c ;
3855	pr = pair of long long and long long	N/A	N/A	pair < long long , long long > pr ;	pair < long long, long long > pr ;
3856	v = vector of long long	N/A	N/A	vector < long long > v ;	vector < long long > v ;
3857	mp = map from long long to long long	N/A	N/A	map < long long , long long > mp ;	map < long long, long long > mp ;
3858	st = set of long long	N/A	N/A	set < long long > st ;	set < long long > st ;
3859	iterator it = set of long long	N/A	N/A	set < long long > :: iterator it ;	set < long long > :: iterator it ;
3860	DUMMY	0.0	0.0	int main() {	DUMMY
3861	read n , a , b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3862	for i = 0 to n exclusive	N/A	N/A	for ( long long i = 0 ; i < n ; i ++ )	for ( long long i = 0 ; i < n ; i ++ )
3863	read x	N/A	N/A	cin >> x ;	cin >> x ;
3864	append x in v	N/A	N/A	v . push_back ( x ) ;	v. push_back ( x ) ;
3865	DUMMY	0.0	0.0	}	DUMMY
3866	sort v . begin ( ) and v . end ( )	N/A	N/A	sort ( v . begin ( ) , v . end ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
3867	if v [ b - 1 ] is v [ b ]	N/A	N/A	if ( v [ b - 1 ] == v [ b ] )	if ( v [ b - 1 ] == v [ c ] )
3868	print 0	N/A	N/A	cout << 0 ;	cout << 0 << endl ;
3869	else	N/A	N/A	else	else
3870	print v [ b ] - v [ b - 1 ]	N/A	N/A	cout << v [ b ] - v [ b - 1 ] ;	cout << v [ b ] - v [ c - 1 ] << endl ;
3871	DUMMY	0.0	0.0	}	DUMMY
3872	print new line	N/A	N/A	cout << " \n " ;	cout << endl ;
3873	DUMMY	0.0	0.0	return 0;	DUMMY
3874	DUMMY	0.0	0.0	}	DUMMY
3875	DUMMY	0.0	0.0	int main() {	DUMMY
3876	create integer vector h	N/A	N/A	vector < int > h ;	vector < int > h ;
3877	create integers a , b , n , num	N/A	N/A	int a , b , n , num ;	int a, b, n, num ;
3878	read n read a read b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3879	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
3880	read num	N/A	N/A	cin >> num ;	cin >> num ;
3881	add element num to end of h	N/A	N/A	h . push_back ( num ) ;	h. push_back ( num ) ;
3882	DUMMY	0.0	0.0	}	DUMMY
3883	sort elements from beginning of h to end of h	N/A	N/A	sort ( h . begin ( ) , h . end ( ) ) ;	sort ( h. begin ( ), h. end ( ) ) ;
3884	if h [ b - 1 ] is h [ b ]	N/A	N/A	if ( h [ b - 1 ] == h [ b ] )	if ( h [ b - 1 ] == h [ c ] )
3885	print 0 print newline	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
3886	else	N/A	N/A	else	else
3887	print h [ b ] - h [ b - 1 ] print newline	N/A	N/A	cout << h [ b ] - h [ b - 1 ] << endl ;	cout << h [ b ] - h [ c - 1 ] << endl ;
3888	DUMMY	0.0	0.0	return 0;	DUMMY
3889	DUMMY	0.0	0.0	}	DUMMY
3890	DUMMY	0.0	0.0	int main() {	DUMMY
3891	create long long int n , a , b , kount , x , set kount = 0	N/A	N/A	long long int n , a , b , kount = 0 , x ;	long long int n, a, b, kount = 0, x ;
3892	create vector long long int h	N/A	N/A	vector < long long int > h ;	vector < long long int > h ;
3893	read n , a and b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3894	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( long long int i = 0 ; i < n ; i ++ )
3895	read x	N/A	N/A	cin >> x ;	cin >> x ;
3896	add x to end of h	N/A	N/A	h . push_back ( x ) ;	h. push_back ( x ) ;
3897	DUMMY	0.0	0.0	}	DUMMY
3898	sort h	N/A	N/A	sort ( h . begin ( ) , h . end ( ) ) ;	sort ( h. begin ( ), h. end ( ) ) ;
3899	if h [ b - 1 ] different from h [ b ] , set kount to h [ b ] - h [ b - 1 ]	N/A	N/A	if ( h [ b - 1 ] != h [ b ] ) { kount = h [ b ] - h [ b - 1 ] ; }	if ( h [ b - 1 ]!= h [ 1 ] ) { kount = ( long long ) h [ 0 ] - ( long double ) h. at ( 1 ) ; }
3900	print kount	N/A	N/A	cout << kount << endl ;	cout << kount << endl ;
3901	DUMMY	0.0	0.0	return 0;	DUMMY
3902	DUMMY	0.0	0.0	}	DUMMY
3903	DUMMY	0.0	0.0	int main() {	DUMMY
3904	create int n , a and b	N/A	N/A	int n , a , b ;	int n, a, b ;
3905	read n , a and b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3906	create vector int h ( n )	N/A	N/A	vector < int > h ( n ) ;	vector < int > h ( n ) ;
3907	for i = 0 to n exclusive , read h [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> h [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> h [ i ] ;
3908	sort vector h	N/A	N/A	sort ( h . begin ( ) , h . end ( ) ) ;	sort ( h. begin ( ), h. end ( ) ) ;
3909	print h [ b ] - h [ b - 1 ] and a newline	N/A	N/A	cout << h [ b ] - h [ b - 1 ] << " \n " ;	cout << h [ b ] - h [ c - 1 ] <<'\n';
3910	DUMMY	0.0	0.0	return 0;	DUMMY
3911	DUMMY	0.0	0.0	}	DUMMY
3912	integer function selsort with an array of long long argument arr and int argument n	N/A	N/A	int selsort ( long long arr [ ] , int n )	int selsort ( long long arr [ ], int n )
3913	loop i from 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
3914	declare integer min = i	N/A	N/A	int min = i ;	int min = i ;
3915	for j = to n exclusive	N/A	N/A	for ( int j = i + 1 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
3916	if arr [ j ] is less than arr [ min ] , set min to j	N/A	N/A	if ( arr [ j ] < arr [ min ] ) { min = j ; }	if ( arr [ j ] < arr [ min ] ) min = j ;
3917	DUMMY	0.0	0.0	}	DUMMY
3918	create long long t with value arr [ i ]	N/A	N/A	long long t = arr [ i ] ;	long long t = arr [ i ] ;
3919	set arr [ i ] to arr [ min ]	N/A	N/A	arr [ i ] = arr [ min ] ;	arr [ i ] = arr [ min ] ;
3920	assign t to arr [ min ]	N/A	N/A	arr [ min ] = t ;	arr [ min ] = t ;
3921	DUMMY	0.0	0.0	}	DUMMY
3922	DUMMY	0.0	0.0	}	DUMMY
3923	DUMMY	0.0	0.0	int main() {	DUMMY
3924	declare integers n , a and b	N/A	N/A	int n , a , b ;	int n, a, b ;
3925	read n , a and b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3926	let arr be long long array with size n	N/A	N/A	long long arr [ n ] ;	long long arr [ n ] ;
3927	loop i from 0 to n exclusive , read input to arr [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }
3928	call selsort ( arr , n )	N/A	N/A	selsort ( arr , n ) ;	selsort ( arr, n ) ;
3929	print arr [ n - a ] - arr [ n - a - 1 ] and " \ n "	N/A	N/A	cout << arr [ n - a ] - arr [ n - a - 1 ] << " \n " ;	cout << arr [ n - a ] - arr [ N - a - 1 ] << " \n " ;
3930	DUMMY	0.0	0.0	}	DUMMY
3931	create integer array h with size 2000	N/A	N/A	int h [ 2000 ] ;	int h [ 2000 ] ;
3932	DUMMY	0.0	0.0	int main() {	DUMMY
3933	create integers n , a , b	N/A	N/A	int n , a , b ;	int n, a, b ;
3934	read n read a read b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3935	for i = 0 to n exclusive , read h [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> h [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> h [ i ] ;
3936	sort elements from h to h + n	N/A	N/A	sort ( h , h + n ) ;	sort ( h, h + n ) ;
3937	create integer ans with ans = h [ b ] - h [ b - 1 ]	N/A	N/A	int ans = h [ b ] - h [ b - 1 ] ;	int ans = h [ b ] - h [ c - 1 ] ;
3938	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
3939	DUMMY	0.0	0.0	return 0;	DUMMY
3940	DUMMY	0.0	0.0	}	DUMMY
3941	DUMMY	0.0	0.0	int main() {	DUMMY
3942	a , b , n , i = integers	N/A	N/A	int a , b , n , i ;	int a, b, n, i ;
3943	Read a , b , n	N/A	N/A	cin >> n >> a >> b ;	cin >> a >> b >> n ;
3944	C = array of n integers	N/A	N/A	int C [ n ] ;	int C [ n ] ;
3945	Read n values into array C	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) cin >> C [ i ] ;	for ( i = 0 ; i < n ; i ++ ) cin >> C [ i ] ;
3946	sort array elements of C in ascending order	N/A	N/A	sort ( C , C + n ) ;	sort ( C, C + n ) ;
3947	print C [ b ] - C [ b - 1 ] and a new line	N/A	N/A	cout << C [ b ] - C [ b - 1 ] << endl ;	cout << C [ b ] - C [ n - 1 ] << endl ;
3948	DUMMY	0.0	0.0	}	DUMMY
3949	create integers n , a , and b	N/A	N/A	int n , a , b ;	int n, a, b ;
3950	let chores be an array of integers of length 2000	N/A	N/A	int chores [ 2000 ] ;	int chores [ 2000 ] ;
3951	DUMMY	0.0	0.0	int main() {	DUMMY
3952	read n , a , and b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3953	for i to n exclusive , read chores [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> chores [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> chores [ i ] ;
3954	sort arrary chores	N/A	N/A	sort ( chores , chores + n ) ;	sort ( chores, chores + n ) ;
3955	output chores [ b ] - chores [ b - 1 ] and new line	N/A	N/A	cout << chores [ b ] - chores [ b - 1 ] << ' \n ' ;	cout << chores [ 0 ] - chores [ b - 1 ] << endl ;
3956	DUMMY	0.0	0.0	}	DUMMY
3957	DUMMY	0.0	0.0	int main() {	DUMMY
3958	n , a , b , m = integers and c = array of 2555 integers	N/A	N/A	long long int n , a , b , c [ 2555 ] , m ;	int n, a, b, c [ 2555 ], m ;
3959	Read n , a , b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
3960	Read n values into array c	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> c [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> c [ i ] ;
3961	sort array elements of c in ascending order	N/A	N/A	sort ( c , c + n ) ;	sort ( c, c + n ) ;
3962	set m to c [ b ] - c [ b - 1 ]	N/A	N/A	m = c [ b ] - c [ b - 1 ] ;	m = c [ b ] - c [ c - 1 ] ;
3963	print m and a new line	N/A	N/A	cout << m << endl ;	cout << m << endl ;
3964	DUMMY	0.0	0.0	}	DUMMY
3965	DUMMY	0.0	0.0	int main() {	DUMMY
3966	n and b = integers	N/A	N/A	int n , b ;	int n, b ;
3967	read n and b	N/A	N/A	cin >> n >> b ;	cin >> n >> b ;
3968	create vector of integers V with n elements	N/A	N/A	vector < int > V ( n ) ;	vector < int > V ( n ) ;
3969	read n elements into V	N/A	N/A	for ( int i = 0 ; i < n ; ++ i ) cin >> V [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> V [ i ] ;
3970	assign value b to the integer total	N/A	N/A	int total = b ;	int total = b ;
3971	for integer i = 0 to n exclusive , add V [ i ] to the total	N/A	N/A	for ( int i = 0 ; i < n ; ++ i ) total += V [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { total += V [ i ] ; }
3972	double t = total / n	N/A	N/A	double t = ( double ) total / n ;	double t = total / n ;
3973	create vector of doubles ans with n elements	N/A	N/A	vector < double > ans ( n ) ;	vector < double > ans ( n ) ;
3974	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
3975	if V [ i ] is greater than t	N/A	N/A	if ( V [ i ] > t )	if ( V [ i ] > t )
3976	print " - 1 \ n "	N/A	N/A	cout << " -1\n " ;	cout << " -1\n " ;
3977	DUMMY	0.0	0.0	return 0;	DUMMY
3978	DUMMY	0.0	0.0	}	DUMMY
3979	assign value of t - V [ i ] to the ans [ i ]	N/A	N/A	ans [ i ] = t - V [ i ] ;	ans [ i ] = t - V [ 1 ] ;
3980	DUMMY	0.0	0.0	}	DUMMY
3981	print fixed and set decimal precision to 10	N/A	N/A	cout << fixed << setprecision ( 10 ) ;	cout << fixed << setprecision ( 10 ) ;
3982	for integer i = 0 to n exclusive print ans [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; ++ i ) cout << ans [ i ] << " \n " ;	for ( int i = 0 ; i < n ; i ++ ) cout << ans [ i ] << endl ;
3983	DUMMY	0.0	0.0	return 0;	DUMMY
3984	DUMMY	0.0	0.0	}	DUMMY
3985	create integer arrays p of size 101 within an array of size 101 , ai of size 1000 , bi of size 1000	N/A	N/A	int p [ 101 ] [ 101 ] , ai [ 1000 ] , bi [ 1000 ] ;	int p [ 101 ] = { 0 }, ai [ 1000 ], bi [ 100 ] ;
3986	create unsigned integer array ci of size 1000	N/A	N/A	unsigned int ci [ 1000 ] ;	unsigned int ci [ 1000 ] ;
3987	DUMMY	0.0	0.0	int main() {	DUMMY
3988	created unsigned integers n , m , and k	N/A	N/A	unsigned int n , m , k ;	unsigned int n, m, k ;
3989	read n , m , and k	N/A	N/A	cin >> n >> m >> k ;	cin >> n >> m >> k ;
3990	create string u	N/A	N/A	string u ;	string u ;
3991	create unsigned integer o = 0	N/A	N/A	unsigned int o = 0 ;	unsigned int o = 0 ;
3992	for i = 0 to n exclusive	N/A	N/A	for ( unsigned int i = 0 ; i < n ; ++ i )	for ( unsigned int i = 0 ; i < n ; i ++ )
3993	read u	N/A	N/A	cin >> u ;	cin >> u ;
3994	for j = 0 to m exclusive	N/A	N/A	for ( unsigned int j = 0 ; j < m ; ++ j )	for ( int j = 0 ; j < m ; j ++ )
3995	create unsigned integer ix = o + j	N/A	N/A	unsigned int ix = o + j ;	unsigned int ix = o + j ;
3996	read ai [ ix ] , bi [ ix ] , ci [ ix ]	N/A	N/A	cin >> ai [ ix ] >> bi [ ix ] >> ci [ ix ] ;	for ( int i = 0 ; i < m ; i ++ ) { cin >> ai [ ix ] >> bi [ i ] >> ci [ iix ] ; }
3997	DUMMY	0.0	0.0	}	DUMMY
3998	set o to the result of o + m	N/A	N/A	o += m ;	o += m ;
3999	DUMMY	0.0	0.0	}	DUMMY
4000	created unsigned integer e = n * m	N/A	N/A	unsigned int e = n * m ;	unsigned int e = n * m ;
4001	create integer ma = 0	N/A	N/A	int ma = 0 ;	int ma = 0 ;
4002	for u = 0 to e exclusive in increments of m	N/A	N/A	for ( unsigned int u = 0 ; u < e ; u += m )	for ( unsigned int u = 0 ; u < e ; u += m )
4003	for v = 0 to e exclusive in increments of m	N/A	N/A	for ( unsigned int v = 0 ; v < e ; v += m )	for ( int v = 0 ; v < e ; v ++ )
4004	if u is equal to v , continue to next loop iteration	N/A	N/A	if ( u == v ) continue ;	if ( u == v ) continue ;
4005	for i = 1 to m inclusive	N/A	N/A	for ( unsigned int i = 1 ; i <= m ; ++ i )	for ( unsigned int i = 1 ; i <= m ; i ++ )
4006	created unsigned integer ix = u + i - 1	N/A	N/A	unsigned int ix = u + i - 1 ;	unsigned int ix = u + i - 1 ;
4007	for j = 1 to k inclusive	N/A	N/A	for ( unsigned int j = 1 ; j <= k ; ++ j )	for ( int j = 1 ; j <= k ; j ++ )
4008	create integer mx = p [ j ] [ i - 1 ]	N/A	N/A	int mx = p [ j ] [ i - 1 ] ;	int mx = p [ j ] [ i - 1 ] ;
4009	for x = 1 to ci [ ix ] inclusive and j inclusive	N/A	N/A	for ( unsigned int x = 1 ; x <= ci [ ix ] && x <= j ; ++ x )	for ( int x = 1 ; x <= ci [ ix ] && j ; x ++ )
4010	create integer mm = p [ j - x ] [ i - 1 ] + ( bi [ v + i - 1 ] - ai [ ix ] ) * x	N/A	N/A	int mm = p [ j - x ] [ i - 1 ] + ( bi [ v + i - 1 ] - ai [ ix ] ) * x ;	int mm = p [ j - x ] [ i - 1 ] + ( bi [ v + i - i ] - ai [ ix ] ) * x ;
4011	if mm is greater than mx , set mx to mm	N/A	N/A	if ( mm > mx ) mx = mm ;	if ( mm > mx ) mx = mm ;
4012	DUMMY	0.0	0.0	}	DUMMY
4013	set p [ j ] [ i ] to mx	N/A	N/A	p [ j ] [ i ] = mx ;	p [ j ] [ i ] = mx ;
4014	DUMMY	0.0	0.0	}	DUMMY
4015	DUMMY	0.0	0.0	}	DUMMY
4016	if p [ k ] [ m ] is greater than ma , set ma to p [ k ] [ m ]	N/A	N/A	if ( p [ k ] [ m ] > ma ) ma = p [ k ] [ m ] ;	if ( p [ k ] [ m ] > ma ) ma = p [ i ] [ j ] ;
4017	DUMMY	0.0	0.0	}	DUMMY
4018	DUMMY	0.0	0.0	}	DUMMY
4019	print ma	N/A	N/A	cout << ma << endl ;	cout << ma << endl ;
4020	DUMMY	0.0	0.0	return 0;	DUMMY
4021	DUMMY	0.0	0.0	}	DUMMY
4022	create 2d array of integers a with size 15 by 105	N/A	N/A	int a [ 15 ] [ 105 ] ;	int a [ 15 ] [ 105 ] ;
4023	create 2d array of integers b with size 15 by 105	N/A	N/A	int b [ 15 ] [ 105 ] ;	int b [ 15 ] [ 105 ] ;
4024	create 2d array of integers c with size 15 by 105	N/A	N/A	int c [ 15 ] [ 105 ] ;	int c [ 15 ] [ 105 ] ;
4025	declare boolean array vis with 105 elements	N/A	N/A	bool vis [ 105 ] ;	bool vis [ 105 ] ;
4026	declare ints n , m and k	N/A	N/A	int n , m , k ;	int n, m, k ;
4027	function Cal with int arguments x and y that returns int	N/A	N/A	int Cal ( int x , int y )	int Cal ( int x, int y )
4028	set first sizeof vis bytes at the pointer vis to 0	N/A	N/A	memset ( vis , 0 , sizeof vis ) ;	memset ( vis, 0, sizeof vis ) ;
4029	if x = y , return - 1	N/A	N/A	if ( x == y ) return - 1 ;	if ( x == y ) return - 1 ;
4030	declare int variable cost = k	N/A	N/A	int cost = k ;	int cost = k ;
4031	create int ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
4032	while cost ! = 0	N/A	N/A	while ( cost )	while ( cost!= 0 )
4033	create integer flag	N/A	N/A	int flag ;	int flag ;
4034	declare integer maxgas = 0	N/A	N/A	int maxgas = 0 ;	int maxgas = 0 ;
4035	declare integer variable dp = 1	N/A	N/A	int dp = 1 ;	int dp = 1 ;
4036	for integer i = 1 to m inclusive	N/A	N/A	for ( int i = 1 ; i <= m ; i ++ )	for ( int i = 1 ; i <= m ; i ++ )
4037	if vis [ i ] is true , skip the rest of the loop	N/A	N/A	if ( vis [ i ] ) continue ;	if ( vis [ i ] ) continue ;
4038	if b [ y ] [ i ] - a [ x ] [ i ] is greater than maxgas	N/A	N/A	if ( b [ y ] [ i ] - a [ x ] [ i ] > maxgas )	if ( b [ y ] [ i ] - a [ x ] [ 1 ] > maxgas )
4039	assign 0 to dp	N/A	N/A	dp = 0 ;	dp = 0 ;
4040	assign b [ y ] [ i ] - a [ x ] [ i ] to maxgas	N/A	N/A	maxgas = b [ y ] [ i ] - a [ x ] [ i ] ;	maxgas = b [ y ] [ i ] - a [ x ] [ 1 ] ;
4041	change flag to i	N/A	N/A	flag = i ;	flag = i ;
4042	DUMMY	0.0	0.0	}	DUMMY
4043	DUMMY	0.0	0.0	}	DUMMY
4044	if dp is true , break the loop	N/A	N/A	if ( dp ) break ;	if ( dp ) break ;
4045	set vis [ flag ] to 1	N/A	N/A	vis [ flag ] = 1 ;	vis [ flag ] = 1 ;
4046	add min of cost and c [ x ] [ flag ] * maxgas to ans	N/A	N/A	ans += min ( cost , c [ x ] [ flag ] ) * maxgas ;	ans += min ( cost, c [ x ] [ flag ] * maxgas ) ;
4047	decrease cost by min of cost and c [ x ] [ flag ]	N/A	N/A	cost -= min ( cost , c [ x ] [ flag ] ) ;	cost -= min ( cost, c [ x ] [ flag ] ) ;
4048	DUMMY	0.0	0.0	}	DUMMY
4049	return ans	N/A	N/A	return ans ;	return ans ;
4050	DUMMY	0.0	0.0	}	DUMMY
4051	DUMMY	0.0	0.0	int main() {	DUMMY
4052	set first sizeof vis bytes at the pointer vis to 0	N/A	N/A	memset ( vis , 0 , sizeof vis ) ;	memset ( vis, 0, sizeof vis ) ;
4053	read n , m and k	N/A	N/A	cin >> n >> m >> k ;	cin >> n >> m >> k ;
4054	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
4055	create string s	N/A	N/A	string s ;	string s ;
4056	read input to s	N/A	N/A	cin >> s ;	cin >> s ;
4057	for j from 1 to m inclusive , read a [ i ] [ j ] , b [ i ] [ j ] and c [ i ] [ j ]	N/A	N/A	for ( int j = 1 ; j <= m ; j ++ ) { cin >> a [ i ] [ j ] >> b [ i ] [ j ] >> c [ i ] [ j ] ; }	for ( int j = 1 ; j <= m ; j ++ ) { cin >> a [ i ] [ j ] >> b [ i -- ] [ k ] >> c [ i - j ] ; }
4058	DUMMY	0.0	0.0	}	DUMMY
4059	declare int variable ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
4060	change i from 1 to n inclusive in a loop	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
4061	change j from 1 to n inclusive in a loop , setting ans to max of ans and Cal ( i , j )	N/A	N/A	for ( int j = 1 ; j <= n ; j ++ ) { ans = max ( ans , Cal ( i , j ) ) ; }	for ( int j = 1 ; j <= n ; j ++ ) ans = max ( ans, Cal ( i, j ) ) ;
4062	DUMMY	0.0	0.0	}	DUMMY
4063	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
4064	DUMMY	0.0	0.0	}	DUMMY
4065	n , m , k = int	N/A	N/A	int n , m , k ;	int n, m, k ;
4066	a , b , c = array of 11 by 111 int	N/A	N/A	int a [ 11 ] [ 111 ] , b [ 11 ] [ 111 ] , c [ 11 ] [ 111 ] ;	int a [ 11 ], b [ 111 ], c [ 110 ] ;
4067	f = array of 111 int	N/A	N/A	int f [ 111 ] ;	int f [ 111 ] ;
4068	DUMMY	0.0	0.0	int main() {	DUMMY
4069	read n , m , k	N/A	N/A	cin >> n >> m >> k ;	cin >> n >> m >> k ;
4070	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
4071	name = string	N/A	N/A	string name ;	string name ;
4072	read name	N/A	N/A	cin >> name ;	cin >> name ;
4073	for j = 0 to m exclusive read a [ i ] [ j ] , b [ i ] [ j ] , c [ i ] [ j ]	N/A	N/A	for ( int j = 0 ; j < m ; ++ j ) { cin >> a [ i ] [ j ] >> b [ i ] [ j ] >> c [ i ] [ j ] ; }	for ( int j = 0 ; j < m ; j ++ ) { cin >> a [ i ] [ j ] >> b [ i - j ] ; }
4074	DUMMY	0.0	0.0	}	DUMMY
4075	ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
4076	for st = 0 to n exclusive	N/A	N/A	for ( int st = 0 ; st < n ; ++ st )	for ( int st = 0 ; st < n ; st ++ )
4077	for fn = 0 to n exclusive	N/A	N/A	for ( int fn = 0 ; fn < n ; ++ fn )	for ( int fn = 0 ; fn < n ; fn ++ )
4078	if st is not fn	N/A	N/A	if ( st != fn )	if ( st!= fn )
4079	cst and num = array of 111 int	N/A	N/A	int cst [ 111 ] , num [ 111 ] ;	int cst [ 111 ] = { }, num [ 110 ] ={ } ;
4080	for j = 0 to m exclusive	N/A	N/A	for ( int j = 0 ; j < m ; ++ j )	for ( int j = 0 ; j < m ; j ++ )
4081	cst [ j ] = b [ fn ] [ j ] - a [ st ] [ j ]	N/A	N/A	cst [ j ] = b [ fn ] [ j ] - a [ st ] [ j ] ;	cst [ j ] = b [ fn ] [ k ] - a [ st ] [ i ] ;
4082	num [ j ] = c [ st ] [ j ]	N/A	N/A	num [ j ] = c [ st ] [ j ] ;	num [ j ] = c [ st ] [ j - 1 ] ;
4083	DUMMY	0.0	0.0	}	DUMMY
4084	fill f with - 1	N/A	N/A	memset ( f , - 1 , sizeof ( f ) ) ;	memset ( f, - 1, sizeof ( f ) ) ;
4085	f [ 0 ] = 0	N/A	N/A	f [ 0 ] = 0 ;	f [ 0 ] = 0 ;
4086	for j = 0 to m exclusive	N/A	N/A	for ( int j = 0 ; j < m ; ++ j )	for ( int j = 0 ; j < m ; j ++ )
4087	for cnt = 0 to num [ j ] exclusive	N/A	N/A	for ( int cnt = 0 ; cnt < num [ j ] ; ++ cnt )	for ( int cnt = 0 ; cnt < num [ j ] ; ++ cnt )
4088	for pos = k - 1 down to 0 inclusive	N/A	N/A	for ( int pos = k - 1 ; pos >= 0 ; -- pos )	for ( int pos = k - 1 ; pos >= 0 ; pos -- )
4089	if f [ pos ] > = 0 f [ pos + 1 ] = max ( f [ pos + 1 ] , f [ pos ] + cst [ j ] )	N/A	N/A	if ( f [ pos ] >= 0 ) f [ pos + 1 ] = max ( f [ pos + 1 ] , f [ pos ] + cst [ j ] ) ;	if ( f [ pos ] >= 0 ) F [ pos + 1 ] = max ( f ( pos + i ], f [ p ] + cst [ j ] ) ;
4090	ans = max ( ans , element pointed by max_element ( f , f + k + 1 ) )	N/A	N/A	ans = max ( ans , * max_element ( f , f + k + 1 ) ) ;	ans = max ( ans, * max_element ( f, f + k + 1 ) ) ;
4091	DUMMY	0.0	0.0	}	DUMMY
4092	pritn ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
4093	DUMMY	0.0	0.0	}	DUMMY
4094	let a , b , c be int matrices of size 11x101 , and d , e int arrays of length 101	N/A	N/A	int a [ 11 ] [ 101 ] , b [ 11 ] [ 101 ] , c [ 11 ] [ 101 ] , d [ 101 ] , e [ 101 ] ;	int a [ 11 ], b [ 101 ], d [ 100 ], e [ 101 + 1 ], c [ 101 - 1 ] ;
4095	let x , y be ints	N/A	N/A	int x , y ;	int x, y ;
4096	let n , m , kkk , maxn be ints	N/A	N/A	int n , m , kkk , maxn ;	int n, m, kkk, maxn ;
4097	in boolean function cmp that takes int x , int y	N/A	N/A	bool cmp ( int x , int y )	bool cmp ( int x, int y )
4098	return d [ x ] > d [ y ]	N/A	N/A	return d [ x ] > d [ y ] ;	return d [ x ] > d [ y ] ;
4099	DUMMY	0.0	0.0	}	DUMMY
4100	DUMMY	0.0	0.0	int main() {	DUMMY
4101	read n , m , kkk	N/A	N/A	cin >> n >> m >> kkk ;	cin >> n >> m >> kkk ;
4102	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
4103	cc = string	N/A	N/A	string cc ;	string cc ;
4104	read cc	N/A	N/A	cin >> cc ;	cin >> cc ;
4105	for j = 0 to m exclusive , read a [ i ] [ j ] , b [ i ] [ j ] , c [ i ] [ j ]	N/A	N/A	for ( int j = 0 ; j < m ; j ++ ) cin >> a [ i ] [ j ] >> b [ i ] [ j ] >> c [ i ] [ j ] ;	for ( int j = 0 ; j < m ; j ++ ) { cin >> a [ i ] [ j ] >> b [ i - j ] ; }
4106	DUMMY	0.0	0.0	}	DUMMY
4107	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
4108	let ans be an int	N/A	N/A	int ans ;	int ans ;
4109	for j = 0 to n exclusive	N/A	N/A	for ( int j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
4110	set ans to 0	N/A	N/A	ans = 0 ;	ans = 0 ;
4111	if i is different from j	N/A	N/A	if ( i != j )	if ( i!= j )
4112	reset d to all 0	N/A	N/A	memset ( d , 0 , sizeof ( d ) ) ;	memset ( d, 0, sizeof ( d ) ) ;
4113	for k = 0 to m exclusive set e [ k ] to k	N/A	N/A	for ( int k = 0 ; k < m ; k ++ ) e [ k ] = k ;	for ( int k = 0 ; k < m ; k ++ ) e [ k ] = k ;
4114	for k = 0 to m exclusive , set d [ k ] to b [ j ] [ k ] - a [ i ] [ k ]	N/A	N/A	for ( int k = 0 ; k < m ; k ++ ) { d [ k ] = b [ j ] [ k ] - a [ i ] [ k ] ; }	for ( int k = 0 ; k < m ; k ++ ) { d [ k ] = b [ j ] [ ++ k ] - a [ i ] [ -- k ] ; }
4115	sort the first m elements of e using cmp	N/A	N/A	sort ( e , e + m , cmp ) ;	sort ( e, e + m, cmp ) ;
4116	let kk = kkk be an int	N/A	N/A	int kk = kkk ;	int kk = kkk ;
4117	let p be an integer	N/A	N/A	int p ;	int p ;
4118	set p = 0	N/A	N/A	p = 0 ;	p = 0 ;
4119	while p < m and kk is positive	N/A	N/A	while ( ( p < m ) && ( kk > 0 ) )	while ( p < m && kk > 0 )
4120	if d [ e [ p ] ] is negative or zero	N/A	N/A	if ( d [ e [ p ] ] <= 0 )	if ( d [ e [ p ] ] < 0 )
4121	set kk to 0	N/A	N/A	kk = 0 ;	kk = 0 ;
4122	exit loop	N/A	N/A	break ;	break ;
4123	DUMMY	0.0	0.0	}	DUMMY
4124	if c [ i ] [ e [ p ] ] < = kk	N/A	N/A	if ( c [ i ] [ e [ p ] ] <= kk )	if ( c [ i ] [ e [ p ] ] <= kk )
4125	increment ans by c [ i ] [ e [ p ] ] * d [ e [ p ] ]	N/A	N/A	ans = ans + c [ i ] [ e [ p ] ] * d [ e [ p ] ] ;	ans += c [ i ] [ e [ p ] ] * d [ ep ] ] ;
4126	decrement kk by c [ i ] [ e [ p ] ]	N/A	N/A	kk = kk - c [ i ] [ e [ p ] ] ;	kk -= c [ i ] [ e [ p ] ] ;
4127	increment p	N/A	N/A	p = p + 1 ;	p ++ ;
4128	else	N/A	N/A	else	else
4129	increment ans by kk * d [ e [ p ] ]	N/A	N/A	ans = ans + kk * d [ e [ p ] ] ;	ans += kk * d [ e [ p ] ] ;
4130	set kk to 0	N/A	N/A	kk = 0 ;	kk = 0 ;
4131	DUMMY	0.0	0.0	}	DUMMY
4132	DUMMY	0.0	0.0	}	DUMMY
4133	if ans > maxn	N/A	N/A	if ( ans > maxn )	if ( ans > maxn )
4134	set maxn to ans	N/A	N/A	maxn = ans ;	maxn = ans ;
4135	set x = i	N/A	N/A	x = i ;	x = i ;
4136	set y = j	N/A	N/A	y = j ;	y = j ;
4137	DUMMY	0.0	0.0	}	DUMMY
4138	DUMMY	0.0	0.0	}	DUMMY
4139	DUMMY	0.0	0.0	}	DUMMY
4140	DUMMY	0.0	0.0	}	DUMMY
4141	print maxn	N/A	N/A	cout << maxn << endl ;	cout << maxn << endl ;
4142	DUMMY	0.0	0.0	}	DUMMY
4143	declare const int MOD = 1e9 + 7	N/A	N/A	const int MOD = 1e9 + 7 ;	const int MOD = 1e9 + 7 ;
4144	create integers n , m and k	N/A	N/A	int n , m , k ;	int n, m, k ;
4145	create 2d arrays of integers a , b and c with size 10 by 100	N/A	N/A	int a [ 10 ] [ 100 ] , b [ 10 ] [ 100 ] , c [ 10 ] [ 100 ] ;	int a [ 10 ], b [ 100 ], c [ 101 ] [ 110 ] ;
4146	integer function solve with int arguments u and v	N/A	N/A	int solve ( int u , int v )	int solve ( int u, int v )
4147	create vector of integers profits	N/A	N/A	vector < int > profits ;	vector < int > profits ;
4148	for i = 0 to m exclusive	N/A	N/A	for ( int i = 0 ; i < m ; ++ i )	for ( int i = 0 ; i < m ; i ++ )
4149	loop j from 0 to c [ u ] [ i ] exclusive , push max of 0 and b [ v ] [ i ] - a [ u ] [ i ] into profits	N/A	N/A	for ( int j = 0 ; j < c [ u ] [ i ] ; ++ j ) profits . push_back ( max ( 0 , b [ v ] [ i ] - a [ u ] [ i ] ) ) ;	for ( int j = 0 ; j < c [ u ] [ i ] ; j ++ ) { profits. push_back ( max ( 0, b [ v ] [ 1 ] - a [ u - i ] ) ) ; }
4150	sort profits	N/A	N/A	sort ( profits . rbegin ( ) , profits . rend ( ) ) ;	sort ( profits. begin ( ), profits. end ( ) ) ;
4151	declare integer variable ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
4152	for i = 0 to min of k and length of profits exclusive , increase ans by profits [ i ]	N/A	N/A	for ( int i = 0 ; i < min ( k , ( int ) profits . size ( ) ) ; ++ i ) ans += profits [ i ] ;	for ( int i = 0 ; i < min ( k, profits. size ( ) ) ; i ++ ) { ans += profits [ i ] ; }
4153	return ans	N/A	N/A	return ans ;	return ans ;
4154	DUMMY	0.0	0.0	}	DUMMY
4155	DUMMY	0.0	0.0	int main() {	DUMMY
4156	read n , m and k	N/A	N/A	cin >> n >> m >> k ;	cin >> n >> m >> k ;
4157	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
4158	declare string variable name	N/A	N/A	string name ;	string name ;
4159	read name	N/A	N/A	cin >> name ;	cin >> name ;
4160	loop j from 0 to m exclusive , read a [ i ] [ j ] , b [ i ] [ j ] and c [ i ] [ j ]	N/A	N/A	for ( int j = 0 ; j < m ; ++ j ) cin >> a [ i ] [ j ] >> b [ i ] [ j ] >> c [ i ] [ j ] ;	for ( int j = 0 ; j < m ; j ++ ) { cin >> a [ i ] [ j ] >> b [ i - j ] ; }
4161	DUMMY	0.0	0.0	}	DUMMY
4162	create integer ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
4163	for i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
4164	for j from 0 to n exclusive , assign max of ans and solve ( i , j ) to ans	N/A	N/A	for ( int j = 0 ; j < n ; ++ j ) ans = max ( ans , solve ( i , j ) ) ;	for ( int j = 0 ; j < n ; j ++ ) ans = max ( ans, solve ( i, j ) ) ;
4165	print ans and ' \ n '	N/A	N/A	cout << ans << ' \n ' ;	cout << ans <<'\n';
4166	DUMMY	0.0	0.0	}	DUMMY
4167	declare arrays of integers a , b and c with size 105 by 105 and integer variables n , m and k	N/A	N/A	int a [ 105 ] [ 105 ] , b [ 105 ] [ 105 ] , c [ 105 ] [ 105 ] , n , m , k ;	int n, m, k, c [ 105 ] [ 105 + 105 ], a, b, c ;
4168	function buy with int arguments x and y that returns int	N/A	N/A	int buy ( int x , int y )	int buy ( int x, int y )
4169	create an array of integers v with size 105	N/A	N/A	int v [ 105 ] = { 0 } ;	int v [ 105 ] ;
4170	let ans and i be integers with ans = 0	N/A	N/A	int ans = 0 , i ;	int ans = 0, i ;
4171	declare integer variable last = k	N/A	N/A	int last = k ;	int last = k ;
4172	while last is not 0	N/A	N/A	while ( last )	while ( last )
4173	declare integer variable maxn = 0	N/A	N/A	int maxn = 0 ;	int maxn = 0 ;
4174	declare int maxi	N/A	N/A	int maxi ;	int maxi ;
4175	declare integer variable num	N/A	N/A	int num ;	int num ;
4176	for i from 1 to m inclusive	N/A	N/A	for ( i = 1 ; i <= m ; i ++ )	for ( int i = 1 ; i <= m ; i ++ )
4177	if v [ i ] is true , skip the rest of the loop	N/A	N/A	if ( v [ i ] ) continue ;	if ( v [ i ] ) continue ;
4178	if b [ y ] [ i ] - a [ x ] [ i ] is greater than maxn	N/A	N/A	if ( b [ y ] [ i ] - a [ x ] [ i ] > maxn )	if ( b [ y ] [ i ] - a [ x ] [ 1 ] > maxn )
4179	assign i to maxi	N/A	N/A	maxi = i ;	maxi = i ;
4180	set maxn to b [ y ] [ i ] - a [ x ] [ i ]	N/A	N/A	maxn = b [ y ] [ i ] - a [ x ] [ i ] ;	maxn = b [ y ] [ i ] - a [ x ] [ 1 ] ;
4181	DUMMY	0.0	0.0	}	DUMMY
4182	DUMMY	0.0	0.0	}	DUMMY
4183	if maxn = 0 , stop the loop	N/A	N/A	if ( maxn == 0 ) break ;	if ( maxn == 0 ) break ;
4184	change num to min of last and c [ x ] [ maxi ]	N/A	N/A	num = min ( last , c [ x ] [ maxi ] ) ;	num = min ( last, c [ x ] [ maxi ] ) ;
4185	add num * maxn to ans	N/A	N/A	ans += num * maxn ;	ans += num * maxn ;
4186	assign 1 to v [ maxi ]	N/A	N/A	v [ maxi ] = 1 ;	v [ maxi ] = 1 ;
4187	decrease last by num	N/A	N/A	last -= num ;	last -= num ;
4188	DUMMY	0.0	0.0	}	DUMMY
4189	return ans	N/A	N/A	return ans ;	return ans ;
4190	DUMMY	0.0	0.0	}	DUMMY
4191	DUMMY	0.0	0.0	int main() {	DUMMY
4192	declare ints i and j	N/A	N/A	int i , j ;	int i, j ;
4193	declare string variable s	N/A	N/A	string s ;	string s ;
4194	read n , m and k	N/A	N/A	cin >> n >> m >> k ;	cin >> n >> m >> k ;
4195	loop i from 1 to n inclusive	N/A	N/A	for ( i = 1 ; i <= n ; i ++ )	for ( i = 1 ; i <= n ; i ++ )
4196	read input to s	N/A	N/A	cin >> s ;	cin >> s ;
4197	read a [ i ] [ j ] , b [ i ] [ j ] and c [ i ] [ j ] m times	N/A	N/A	for ( j = 1 ; j <= m ; j ++ ) { cin >> a [ i ] [ j ] >> b [ i ] [ j ] >> c [ i ] [ j ] ; }	for ( i = 0 ; i < m ; i ++ ) { cin >> a [ i ] [ j ] >> b [ i - j ] [ k ] >> c [ i + j ] ; }
4198	DUMMY	0.0	0.0	}	DUMMY
4199	create int ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
4200	for i = 1 to n inclusive	N/A	N/A	for ( i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
4201	loop j from 1 to n inclusive , change ans to max of ans and buy ( i , j )	N/A	N/A	for ( j = 1 ; j <= n ; j ++ ) { ans = max ( ans , buy ( i , j ) ) ; }	for ( int j = 1 ; j <= n ; j ++ ) ans = max ( ans, buy ( i, j ) ) ;
4202	DUMMY	0.0	0.0	}	DUMMY
4203	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
4204	DUMMY	0.0	0.0	return 0;	DUMMY
4205	DUMMY	0.0	0.0	}	DUMMY
4206	create constant integers Maxn , Maxm with Maxn = 15 , Maxm = 100 + 5	N/A	N/A	const int Maxn = 15 , Maxm = 100 + 5 ;	const int Maxn = 15, Maxm = 100 + 5 ;
4207	create integers n , m , k , ans create 2d integer arrays a , b , c , with a size Maxn by Maxm , b size Maxn by Maxm , c size Maxn by Maxm	N/A	N/A	int n , m , k , a [ Maxn ] [ Maxm ] , b [ Maxn ] [ Maxm ] , c [ Maxn ] [ Maxm ] , ans ;	int n, m, k, ans, a [ Maxn ] [ Maxm ], b [ MaxN ] [Maxm ] ;
4208	DUMMY	0.0	0.0	int main() {	DUMMY
4209	read n read m read k	N/A	N/A	cin >> n >> m >> k ;	cin >> n >> m >> k ;
4210	create string s	N/A	N/A	string s ;	string s ;
4211	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
4212	read s	N/A	N/A	cin >> s ;	cin >> s ;
4213	for j = 0 to m exclusive , read a [ i ] [ j ] read b [ i ] [ j ] read c [ i ] [ j ]	N/A	N/A	for ( int j = 0 ; j < m ; j ++ ) cin >> a [ i ] [ j ] >> b [ i ] [ j ] >> c [ i ] [ j ] ;	for ( int j = 0 ; j < m ; j ++ ) { cin >> a [ i ] [ j ] >> b [ i -- ] [ k ] >> c [ i - j ] ; }
4214	DUMMY	0.0	0.0	}	DUMMY
4215	create pair of integer , integer array d with size Maxm	N/A	N/A	pair < int , int > d [ Maxm ] ;	pair < int, int > d [ Maxm ] ;
4216	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
4217	for j = 0 to n exclusive	N/A	N/A	for ( int j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
4218	for l = 0 to m exclusive , set d [ l ] to make pair from ( b [ j ] [ l ] - a [ i ] [ l ] and c [ i ] [ l ] )	N/A	N/A	for ( int l = 0 ; l < m ; l ++ ) d [ l ] = make_pair ( b [ j ] [ l ] - a [ i ] [ l ] , c [ i ] [ l ] ) ;	for ( int l = 0 ; l < m ; l ++ ) { d [ l ] = make_pair ( b [ j ] [ k ] - a [ i ] [ 1 ], c [ i - l ] ) ; }
4219	sort elements from d to d + m	N/A	N/A	sort ( d , d + m ) ;	sort ( d, d + m ) ;
4220	reverse sort elements from d to d + m	N/A	N/A	reverse ( d , d + m ) ;	reverse ( d, d + m ) ;
4221	create integers num , p , cnt with num = 0 , p = 0 , cnt = 0	N/A	N/A	int num = 0 , p = 0 , cnt = 0 ;	int num == 0, p = 0, cnt = 0 ;
4222	while p is less than m and cnt + second element of d [ p ] is less than or equal to k	N/A	N/A	while ( p < m && cnt + d [ p ] . second <= k )	while ( p < m && cnt + d [ p ]. second <= k )
4223	if first element of d [ p ] is less than 0 , break loop	N/A	N/A	if ( d [ p ] . first < 0 ) break ;	if ( d [ p ]. first < 0 ) break ;
4224	increment cnt by second element of d [ p ]	N/A	N/A	cnt += d [ p ] . second ;	cnt += d [ p ]. second ;
4225	increment num by first element of d [ p ] * second eleement of d [ p ]	N/A	N/A	num += d [ p ] . first * d [ p ] . second ;	num += d [ p ]. substr ( 0, p ) ;
4226	increment p	N/A	N/A	p ++ ;	p ++ ;
4227	DUMMY	0.0	0.0	}	DUMMY
4228	if first element of d [ p ] is greater than 0 , increment num by first element of d [ p ] * ( k - cnt )	N/A	N/A	if ( d [ p ] . first > 0 ) num += d [ p ] . first * ( k - cnt ) ;	if ( d [ p ]. first > 0 ) num += d [ 1 ]. second * ( k - cnt ) ;
4229	set ans to maximum of ans and num	N/A	N/A	ans = max ( ans , num ) ;	ans = max ( ans, num ) ;
4230	DUMMY	0.0	0.0	}	DUMMY
4231	DUMMY	0.0	0.0	}	DUMMY
4232	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
4233	DUMMY	0.0	0.0	return 0;	DUMMY
4234	DUMMY	0.0	0.0	}	DUMMY
4235	create 2d long long array a with size 11 by 105	N/A	N/A	long long a [ 11 ] [ 105 ] ;	long long a [ 11 ] [ 105 ] ;
4236	create 2d long long array b with size 11 by 105	N/A	N/A	long long b [ 11 ] [ 105 ] ;	long long b [ 11 ] [ 105 ] ;
4237	create 2d long long array c with size 11 by 105	N/A	N/A	long long c [ 11 ] [ 105 ] ;	long long c [ 11 ] [ 105 ] ;
4238	declare boolean array vis with 105 elements	N/A	N/A	bool vis [ 105 ] ;	bool vis [ 105 ] ;
4239	declare long longs n , m and k	N/A	N/A	long long n , m , k ;	long long n, m, k ;
4240	cal is a long long function with int arguments x and y	N/A	N/A	long long cal ( int x , int y )	long long cal ( int x, int y )
4241	create long long last = k	N/A	N/A	long long last = k ;	long long last = k ;
4242	create long long ans = 0	N/A	N/A	long long ans = 0 ;	long long ans = 0 ;
4243	set sizeof ( vis ) bytes at the pointer vis to 0	N/A	N/A	memset ( vis , 0 , sizeof ( vis ) ) ;	memset ( vis, 0, sizeof ( vis ) ) ;
4244	while last ! = 0	N/A	N/A	while ( last )	while ( last!= 0 )
4245	declare long long v = 0	N/A	N/A	long long v = 0 ;	long long v = 0 ;
4246	declare long long p	N/A	N/A	long long p ;	long long p ;
4247	declare long long flag = 0	N/A	N/A	long long flag = 0 ;	long long flag = 0 ;
4248	for integer i = 1 to m inclusive	N/A	N/A	for ( int i = 1 ; i <= m ; i ++ )	for ( int i = 1 ; i <= m ; i ++ )
4249	if vis [ i ] is false	N/A	N/A	if ( ! vis [ i ] )	if (! vis [ i ] )
4250	if b [ y ] [ i ] - a [ x ] [ i ] is greater than v	N/A	N/A	if ( b [ y ] [ i ] - a [ x ] [ i ] > v )	if ( b [ y ] [ i ] - a [ x ] [ 1 ] > v )
4251	assign b [ y ] [ i ] - a [ x ] [ i ] to v	N/A	N/A	v = b [ y ] [ i ] - a [ x ] [ i ] ;	v = b [ y ] [ i ] - a [ x ] [ 1 ] ;
4252	set p to i	N/A	N/A	p = i ;	p = i ;
4253	assign 1 to flag	N/A	N/A	flag = 1 ;	flag = 1 ;
4254	DUMMY	0.0	0.0	}	DUMMY
4255	DUMMY	0.0	0.0	}	DUMMY
4256	DUMMY	0.0	0.0	}	DUMMY
4257	if flag = 0 , break	N/A	N/A	if ( flag == 0 ) break ;	if ( flag == 0 ) break ;
4258	set vis [ p ] to 1	N/A	N/A	vis [ p ] = 1 ;	vis [ p ] = 1 ;
4259	if last > = c [ x ] [ p ]	N/A	N/A	if ( last >= c [ x ] [ p ] )	if ( last >= c [ x ] [ p ] )
4260	increase ans by c [ x ] [ p ] * v	N/A	N/A	ans += c [ x ] [ p ] * v ;	ans += c [ x ] [ p ] * v ;
4261	decrease last by c [ x ] [ p ]	N/A	N/A	last -= c [ x ] [ p ] ;	last -= c [ x ] [ p ] ;
4262	else	N/A	N/A	else	else
4263	increase ans by last * v	N/A	N/A	ans += last * v ;	ans += last * v ;
4264	change last to 0	N/A	N/A	last = 0 ;	last = 0 ;
4265	DUMMY	0.0	0.0	}	DUMMY
4266	DUMMY	0.0	0.0	}	DUMMY
4267	return ans	N/A	N/A	return ans ;	return ans ;
4268	DUMMY	0.0	0.0	}	DUMMY
4269	DUMMY	0.0	0.0	int main() {	DUMMY
4270	read n , m and k	N/A	N/A	cin >> n >> m >> k ;	cin >> n >> m >> k ;
4271	for i from 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
4272	declare string s	N/A	N/A	string s ;	string s ;
4273	read input to s	N/A	N/A	cin >> s ;	cin >> s ;
4274	for j from 1 to m inclusive , read input to a [ i ] [ j ] , b [ i ] [ j ] and c [ i ] [ j ]	N/A	N/A	for ( int j = 1 ; j <= m ; j ++ ) cin >> a [ i ] [ j ] >> b [ i ] [ j ] >> c [ i ] [ j ] ;	for ( int j = 1 ; j <= m ; j ++ ) { cin >> a [ i ] [ j ] >> b [ 1 ] [ k ] >> c [ i - j ] ; }
4275	DUMMY	0.0	0.0	}	DUMMY
4276	declare long long variable ans = 0	N/A	N/A	long long ans = 0 ;	long long ans = 0 ;
4277	loop i from 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( long long i = 1 ; i <= n ; i ++ )
4278	for int j = 1 to n inclusive , change ans to max of ans and cal ( i , j )	N/A	N/A	for ( int j = 1 ; j <= n ; j ++ ) { ans = max ( ans , cal ( i , j ) ) ; }	for ( int j = 1 ; j <= n ; j ++ ) ans = max ( ans, cal ( i, j ) ) ;
4279	print ans and " \ n "	N/A	N/A	cout << ans << " \n " ;	cout << ans << " \n " ;
4280	DUMMY	0.0	0.0	}	DUMMY
4281	DUMMY	0.0	0.0	int main() {	DUMMY
4282	declare n as long long , a as long long array with size 100100	N/A	N/A	long long n , a [ 100100 ] ;	long long n, a [ 100100 ] ;
4283	read n	N/A	N/A	cin >> n ;	cin >> n ;
4284	for i = 0 to n exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; ++ i ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
4285	declare s as long long = 0	N/A	N/A	long long s = 0 ;	long long s = 0 ;
4286	for k = 0 to n - 1 exclusive	N/A	N/A	for ( int k = 0 ; k < n - 1 ; ++ k )	for ( int k = 0 ; k < n - 1 ; k ++ )
4287	declare integer t = 0	N/A	N/A	int t = 0 ;	int t = 0 ;
4288	while k + ( 1 bitshift left t + 1 ) is less than n , increment i	N/A	N/A	while ( k + ( 1 << t + 1 ) < n ) ++ t ;	while ( k + ( 1 << t + 1 ) < n ) i ++ ;
4289	increment s by a [ k ] , a [ k + ( 1 < < t ) ] by a [ k ]	N/A	N/A	s += a [ k ] , a [ k + ( 1 << t ) ] += a [ k ] ;	s = s + a [ k ], a [ ( k + ( 1 << t ) ] += a [ i ] ) ;
4290	print s , newline	N/A	N/A	cout << s << endl ;	cout << s << endl ;
4291	DUMMY	0.0	0.0	}	DUMMY
4292	DUMMY	0.0	0.0	return 0;	DUMMY
4293	DUMMY	0.0	0.0	}	DUMMY
4294	MaxN = const int with MaxN = 1E5 + 10	N/A	N/A	const int MaxN = 1E5 + 10 ;	const int MaxN = 1E5 + 10 ;
4295	a = int array of size MaxN	N/A	N/A	int a [ MaxN ] ;	int a [ MaxN ] ;
4296	DUMMY	0.0	0.0	int main() {	DUMMY
4297	n = int	N/A	N/A	int n ;	int n ;
4298	read n	N/A	N/A	cin >> n ;	cin >> n ;
4299	read n values into a	N/A	N/A	for ( int i = 0 ; i < n ; ++ i ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
4300	ans = int with ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
4301	for i = 0 to n - 1	N/A	N/A	for ( int i = 0 ; i < n - 1 ; ++ i )	for ( int i = 0 ; i < n - 1 ; i ++ )
4302	lg = int with lg = log2 of n - i - 1	N/A	N/A	int lg = log2 ( n - i - 1 ) ;	int lg = log2 ( n - i - 1 ) ;
4303	increment ans by a [ i ]	N/A	N/A	ans += a [ i ] ;	ans += a [ i ] ;
4304	increment a [ i + ( 1 bitshift left by lg ) ] by a [ i ]	N/A	N/A	a [ i + ( 1 << lg ) ] += a [ i ] ;	a [ i + ( 1 << lg ) ] += a [ i ] ;
4305	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
4306	DUMMY	0.0	0.0	}	DUMMY
4307	DUMMY	0.0	0.0	}	DUMMY
4308	n , i , a , ans , d = integers with ans = 0 , a , d = integer array of size 1111111	N/A	N/A	int n , i , a [ 1111111 ] , ans = 0 , d [ 1111111 ] ;	int n, i, a [ 1111111 ], ans = 0, d [ 1101111 ] ;
4309	DUMMY	0.0	0.0	int main() {	DUMMY
4310	read n	N/A	N/A	cin >> n ;	cin >> n ;
4311	for i = 0 to n exclusive , read a [ i ]	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;	for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
4312	d [ 1 ] = 1	N/A	N/A	d [ 1 ] = 1 ;	d [ 1 ] = 1 ;
4313	for i = 2 to n exclusive , d [ i ] = d [ i / 2 ] * 2	N/A	N/A	for ( i = 2 ; i < n ; i ++ ) d [ i ] = d [ i / 2 ] * 2 ;	for ( i = 2 ; i < n ; i ++ ) { d [ i ] = ( i / 2 ) * 2 ; }
4314	for i = 0 to i + 1 < n	N/A	N/A	for ( i = 0 ; i + 1 < n ; i ++ )	for ( i = 0 ; i + 1 < n ; i ++ )
4315	a [ i + d [ n - i - 1 ] ] = a [ i + d [ n - i - 1 ] ] + a [ i ]	N/A	N/A	a [ i + d [ n - i - 1 ] ] += a [ i ] ;	a [ i + d [ n - i - 1 ] ] += a [ i ] ;
4316	ans = ans + a [ i ]	N/A	N/A	ans += a [ i ] ;	ans += a [ i ] ;
4317	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
4318	DUMMY	0.0	0.0	}	DUMMY
4319	DUMMY	0.0	0.0	return 0;	DUMMY
4320	DUMMY	0.0	0.0	}	DUMMY
4321	DUMMY	0.0	0.0	int main() {	DUMMY
4322	create int n	N/A	N/A	int n ;	int n ;
4323	read n	N/A	N/A	cin >> n ;	cin >> n ;
4324	create long long int array arr [ n ]	N/A	N/A	long long arr [ n ] ;	long long int arr [ n ] ;
4325	read every index of arr	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }
4326	create long long N = 0	N/A	N/A	long long N = 0 ;	long long N = 0 ;
4327	for i = 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
4328	let integer t = floor ( log2 ( n - i - 1 ) )	N/A	N/A	int t = floor ( log2 ( n - i - 1 ) ) ;	int t = floor ( log2 ( n - i - 1 ) ) ;
4329	set N to N + arr [ i ]	N/A	N/A	N = N + arr [ i ] ;	N += arr [ i ] ;
4330	create int j = i + pow ( 2 , t )	N/A	N/A	int j = i + pow ( 2 , t ) ;	int j = i + pow ( 2, t ) ;
4331	set arr [ j ] to arr [ j ] + arr [ i ]	N/A	N/A	arr [ j ] += arr [ i ] ;	arr [ j ] += arr [ i ] ;
4332	set arr [ i ] to 0	N/A	N/A	arr [ i ] = 0 ;	arr [ i ] = 0 ;
4333	print N	N/A	N/A	cout << N << endl ;	cout << N << endl ;
4334	DUMMY	0.0	0.0	}	DUMMY
4335	DUMMY	0.0	0.0	return 0;	DUMMY
4336	DUMMY	0.0	0.0	}	DUMMY
4337	a = integer array of size 100001	N/A	N/A	int a [ 100001 ] ;	int a [ 100001 ] ;
4338	DUMMY	0.0	0.0	int main() {	DUMMY
4339	n = integer	N/A	N/A	int n ;	int n ;
4340	read n	N/A	N/A	cin >> n ;	cin >> n ;
4341	for i = 1 to n + 1 exclusive , read a [ i ]	N/A	N/A	for ( int i = 1 ; i < n + 1 ; i ++ ) cin >> a [ i ] ;	for ( int i = 1 ; i < n + 1 ; ++ i ) cin >> a [ i ] ;
4342	res = long long with res = 0	N/A	N/A	long long res = 0 ;	long long res = 0 ;
4343	t = integer	N/A	N/A	int t ;	int t ;
4344	for i = 1 to n exclusive	N/A	N/A	for ( int i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
4345	for t = 1 , i + t < = n , t = t * 2	N/A	N/A	for ( t = 1 ; i + t <= n ; t *= 2 )	for ( t = 1 ; i + t <= n ; t *= 2 )
4346	;	N/A	N/A	;	;
4347	t = right shift t 1 place	N/A	N/A	t >>= 1 ;	t >>= 1 ;
4348	res = res + a [ i ]	N/A	N/A	res += a [ i ] ;	res += a [ i ] ;
4349	a [ i + t ] = a [ i + t ] + a [ i ]	N/A	N/A	a [ i + t ] += a [ i ] ;	a [ i + t ] += a [ i ] ;
4350	print res	N/A	N/A	cout << res << endl ;	cout << res << endl ;
4351	DUMMY	0.0	0.0	}	DUMMY
4352	DUMMY	0.0	0.0	return 0;	DUMMY
4353	DUMMY	0.0	0.0	}	DUMMY
4354	DUMMY	0.0	0.0	int main() {	DUMMY
4355	create long long int n	N/A	N/A	long long int n ;	long long int n ;
4356	read n	N/A	N/A	cin >> n ;	cin >> n ;
4357	create long long int a [ n + 5 ]	N/A	N/A	long long int a [ n + 5 ] ;	long long int a [ n + 5 ] ;
4358	for i = 0 to n inclusive , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;	for ( long long int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;
4359	set c to 0	N/A	N/A	long long int c = 0 ;	long long int c = 0 ;
4360	for i = 0 to n exclusive	N/A	N/A	for ( int i = 1 ; i < n ; i ++ )	for ( long long int i = 0 ; i < n ; i ++ )
4361	set c to c + a [ i ]	N/A	N/A	c += a [ i ] ;	c += a [ i ] ;
4362	print c and a newline	N/A	N/A	cout << c << " \n " ;	cout << c <<'\n';
4363	j = 1	N/A	N/A	long long int j = 1 ;	j = 1 ;
4364	while ( - 1 + j * 2 < n , set j to j * 2	N/A	N/A	while ( ( i - 1 ) + j * 2 < n ) j *= 2 ;	while ( ( - 1 + j * 2 ) < n ) j *= 2 ;
4365	set a [ i + j ] to a [ i + j ] + a [ i ]	N/A	N/A	a [ i + j ] += a [ i ] ;	a [ i + j ] += a [ i ] ;
4366	DUMMY	0.0	0.0	}	DUMMY
4367	DUMMY	0.0	0.0	}	DUMMY
4368	power2 is a long long function with long long arguments pow and mod	N/A	N/A	long long power2 ( long long pow , long long mod )	long long power2 ( long long pow, long long mod )
4369	declare long longs res = 1ll and x = 2ll	N/A	N/A	long long res = 1ll , x = 2ll ;	long long res = 1ll, x = 2ll ;
4370	while pow > 0	N/A	N/A	while ( pow > 0 )	while ( pow > 0 )
4371	if pow & 1 is true , set res to ( res * x ) modulo mod	N/A	N/A	if ( pow & 1 ) res = ( res * x ) % mod ;	if ( pow & 1 ) res = ( res * x ) % mod ;
4372	pow > > = 1	N/A	N/A	pow >>= 1 ;	pow >>= 1 ;
4373	assign ( x * x ) modulo mod to x	N/A	N/A	x = ( x * x ) % mod ;	x = ( x * x ) % mod ;
4374	DUMMY	0.0	0.0	}	DUMMY
4375	return res	N/A	N/A	return res ;	return res ;
4376	DUMMY	0.0	0.0	}	DUMMY
4377	DUMMY	0.0	0.0	int main() {	DUMMY
4378	create long long n	N/A	N/A	long long n ;	long long n ;
4379	read n	N/A	N/A	cin >> n ;	cin >> n ;
4380	if n is true	N/A	N/A	if ( n )	if ( n )
4381	declare long long M = 1 * 1000 * 1000 * 1000 + 7	N/A	N/A	long long M = 1 * 1000 * 1000 * 1000 + 7 ;	long long M = 1.000 * 1000 * 1000 + 7 ;
4382	declare long long variable sol	N/A	N/A	long long sol ;	long long sol ;
4383	assign power2 ( 2 * n - 1 , M ) to sol	N/A	N/A	sol = power2 ( 2 * n - 1 , M ) ;	sol = power2 ( 2 * n - 1, M ) ;
4384	increase sol by power2 ( n - 1 , M )	N/A	N/A	sol += power2 ( n - 1 , M ) ;	sol += power2 ( n - 1, M ) ;
4385	sol = sol modulo M	N/A	N/A	sol %= M ;	sol %= M ;
4386	print sol	N/A	N/A	cout << sol << endl ;	cout << sol << endl ;
4387	else	N/A	N/A	else	else
4388	print 1	N/A	N/A	cout << 1 << endl ;	cout << 1 << endl ;
4389	DUMMY	0.0	0.0	}	DUMMY
4390	DUMMY	0.0	0.0	return 0;	DUMMY
4391	DUMMY	0.0	0.0	}	DUMMY
4392	declare int variables a , n and p where p = 1000000007	N/A	N/A	int a , n , p = 1000000007 ;	int a, n, p = 1000000007 ;
4393	long long function fastmod with long long arguments a and n	N/A	N/A	long long fastmod ( long long a , long long n )	long long fastmod ( long long a, long long n )
4394	if n is equal to 1 , return a	N/A	N/A	if ( n == 1 ) { return a ; }	if ( n == 1 ) return a ;
4395	declare long long variable ans = fastmod ( a , n / 2 ) modulo p	N/A	N/A	long long ans = fastmod ( a , n / 2 ) % p ;	long long ans = fastmod ( a, n / 2 ) % p ;
4396	if n is even	N/A	N/A	if ( n % 2 == 0 )	if ( n % 2 == 0 )
4397	return ans % p * ans % p	N/A	N/A	return ans % p * ans % p ;	return ans % ( p * ans ) % p ;
4398	else {	N/A	N/A	else	else
4399	return ans % p * ans % p * a % p	N/A	N/A	return ans % p * ans % p * a % p ;	return ans % ( p * ans ) % p * a % p ;
4400	DUMMY	0.0	0.0	}	DUMMY
4401	DUMMY	0.0	0.0	}	DUMMY
4402	DUMMY	0.0	0.0	int main() {	DUMMY
4403	declare long long variable k	N/A	N/A	long long k ;	long long k ;
4404	read k	N/A	N/A	cin >> k ;	cin >> k ;
4405	if k > = 2	N/A	N/A	if ( k >= 2 )	if ( k >= 2 )
4406	declare long long variable t = fastmod ( 2 , k - 1 )	N/A	N/A	long long t = fastmod ( 2 , k - 1 ) ;	long long t = fastmod ( 2, k - 1 ) ;
4407	print ( t + 2 * t * t % p ) % p	N/A	N/A	cout << ( t + 2 * t * t % p ) % p << endl ;	cout << ( t + 2 * t * t % p ) % p << endl ;
4408	else if k = 1	N/A	N/A	else if ( k == 1 )	else if ( k == 1 )
4409	print 3	N/A	N/A	cout << 3 << endl ;	cout << 3 << endl ;
4410	else	N/A	N/A	else	else
4411	print 1	N/A	N/A	cout << 1 << endl ;	cout << 1 << endl ;
4412	DUMMY	0.0	0.0	}	DUMMY
4413	DUMMY	0.0	0.0	return 0;	DUMMY
4414	DUMMY	0.0	0.0	}	DUMMY
4415	mod = constant long long with value of 1e9 + 7	N/A	N/A	const long long mod = 1e9 + 7 ;	const long long mod = 1e9 + 7 ;
4416	in function qpow2 that returns a long long and takes argument p = long long	N/A	N/A	long long qpow2 ( long long p )	long long qpow2 ( long long p )
4417	a = long long with value of 2	N/A	N/A	long long a = 2 ;	long long a = 2 ;
4418	res = long long with value of 1	N/A	N/A	long long res = 1 ;	long long res = 1 ;
4419	while p	N/A	N/A	while ( p )	while ( p )
4420	if p bitwise and 1	N/A	N/A	if ( p & 1 )	if ( p & 1 )
4421	set res to res * a	N/A	N/A	res *= a ;	res *= a ;
4422	set res to res modulo mod	N/A	N/A	res %= mod ;	res %= mod ;
4423	DUMMY	0.0	0.0	}	DUMMY
4424	set a to a * a	N/A	N/A	a *= a ;	a = a * a ;
4425	set a to a modulo mod	N/A	N/A	a %= mod ;	a %= mod ;
4426	set p to right shift p by 1	N/A	N/A	p >>= 1 ;	p >>= 1 ;
4427	DUMMY	0.0	0.0	}	DUMMY
4428	return res	N/A	N/A	return res ;	return res ;
4429	DUMMY	0.0	0.0	}	DUMMY
4430	DUMMY	0.0	0.0	int main() {	DUMMY
4431	n = long long	N/A	N/A	long long n ;	long long n ;
4432	read n	N/A	N/A	cin >> n ;	cin >> n ;
4433	if n equals 0	N/A	N/A	if ( n == 0 )	if ( n == 0 )
4434	print 1	N/A	N/A	cout << 1 << endl ;	cout << 1 << endl ;
4435	else	N/A	N/A	else	else
4436	print ( call qpow2 with argument n - 1 plus call qpow2 with argument 2 * n - 1 ) modulo mod	N/A	N/A	cout << ( qpow2 ( n - 1 ) + qpow2 ( 2 * n - 1 ) ) % mod << endl ;	cout << ( qpow2 ( n - 1, 2 * n - i ) ) % mod << endl ;
4437	DUMMY	0.0	0.0	}	DUMMY
4438	DUMMY	0.0	0.0	return 0;	DUMMY
4439	DUMMY	0.0	0.0	}	DUMMY
4440	oo = 1000000000 , MD = 1000000007	N/A	N/A	const int oo = 1e9 , MD = 1e9 + 7 ;	int oo = 1000000000, MD = 1000000007 ;
4441	function fastExp ( get long long b and e , return long long )	N/A	N/A	long long fastExp ( long long b , long long e )	long long fastExp ( long long b, long long e )
4442	ans = 1	N/A	N/A	long long ans = 1 ;	long long ans = 1 ;
4443	while e > 0	N/A	N/A	while ( e > 0 )	while ( e > 0 )
4444	if e and 1 ans = ( ans * b ) modulo MD	N/A	N/A	if ( e & 1 ) ans = ( ans * b ) % MD ;	if ( e & 1 ) ans = ( ans * b ) % MD ;
4445	b = ( b * b ) modulo MD	N/A	N/A	b = ( b * b ) % MD ;	b = ( b * b ) % MD ;
4446	right shift e	N/A	N/A	e >>= 1 ;	e >>= 1 ;
4447	DUMMY	0.0	0.0	}	DUMMY
4448	return ans	N/A	N/A	return ans ;	return ans ;
4449	DUMMY	0.0	0.0	}	DUMMY
4450	DUMMY	0.0	0.0	int main() {	DUMMY
4451	n = long long	N/A	N/A	long long n ;	long long n ;
4452	read n	N/A	N/A	cin >> n ;	cin >> n ;
4453	ans = ( fastExp ( 4 , n ) + fastExp ( 2 , n ) ) modulo MD	N/A	N/A	long long ans = ( fastExp ( 4 , n ) + fastExp ( 2 , n ) ) % MD ;	long long ans = ( fastExp ( 4, n ) + fastexp ( 2, n ) ) % MD ;
4454	ans = ( ans * fastExp ( 2 , MD - 2 ) ) modulo MD	N/A	N/A	ans = ( ans * fastExp ( 2 , MD - 2 ) ) % MD ;	ans = ( ans * fastExp ( 2, MD - 2 ) ) % MD ;
4455	print ans	N/A	N/A	cout << ans << ' \n ' ;	cout << ans << endl ;
4456	DUMMY	0.0	0.0	return 0;	DUMMY
4457	DUMMY	0.0	0.0	}	DUMMY
4458	mul is a long long function with long long arguments x and p	N/A	N/A	long long mul ( long long x , long long p )	long long mul ( long long x, long long p )
4459	declare long long ans = 1	N/A	N/A	long long ans = 1 ;	long long ans = 1 ;
4460	while p is not 0	N/A	N/A	while ( p )	while ( p )
4461	if p & 1 ! = 0 , assign ans * x % 1000000007 to ans	N/A	N/A	if ( p & 1 ) ans = ans * x % 1000000007 ;	if ( p & 1 ) ans = ans * x % 1000000007 ;
4462	set x to x * x % 1000000007	N/A	N/A	x = x * x % 1000000007 ;	x = x * x % 1000000007 ;
4463	assign p > > 1 to p	N/A	N/A	p = p >> 1 ;	p = p >> 1 ;
4464	DUMMY	0.0	0.0	}	DUMMY
4465	return ans	N/A	N/A	return ans ;	return ans ;
4466	DUMMY	0.0	0.0	}	DUMMY
4467	DUMMY	0.0	0.0	int main() {	DUMMY
4468	declare long long variable n	N/A	N/A	long long n ;	long long n ;
4469	read n	N/A	N/A	cin >> n ;	cin >> n ;
4470	if n is equal to 0	N/A	N/A	if ( n == 0 )	if ( n == 0 )
4471	print 1	N/A	N/A	cout << 1 << endl ;	cout << 1 << endl ;
4472	else	N/A	N/A	else	else
4473	declare long long variable w = mul ( 2 , n - 1 ) % 1000000007	N/A	N/A	long long w = mul ( 2 , n - 1 ) % 1000000007 ;	long long w = mul ( 2, n - 1 ) % 1000000007 ;
4474	print ( w + w * w % 1000000007 * 2 % 1000000007 ) % 1000000007	N/A	N/A	cout << ( w + w * w % 1000000007 * 2 % 1000000007 ) % 1000000007 << endl ;	cout << ( w + w * w % 1000000007 * 2 % 10000000007 ) % 100000000007 << endl ;
4475	DUMMY	0.0	0.0	}	DUMMY
4476	DUMMY	0.0	0.0	return 0;	DUMMY
4477	DUMMY	0.0	0.0	}	DUMMY
4478	MOD = 1000000007	N/A	N/A	long long MOD = 1e9 + 7 ;	const long long MOD = 1000000007 ;
4479	mod = 1000000007	N/A	N/A	long long mod = 1e9 + 7 ;	mod = 1000000007 ;
4480	N = 100005	N/A	N/A	const int N = 100005 ;	const int N = 1e5 + 5 ;
4481	inv = array of 100005 long long	N/A	N/A	long long inv [ 100005 ] ;	long long inv [ 100005 ] ;
4482	function powmod ( get long long a and b , return long long )	N/A	N/A	long long powmod ( long long a , long long b )	long long powmod ( long long a, long long b )
4483	res = 1	N/A	N/A	long long res = 1 ;	long long res = 1 ;
4484	a = a modulo mod	N/A	N/A	a %= mod ;	a %= mod ;
4485	while b = b > > 1	N/A	N/A	for ( ; b ; b >>= 1 )	while ( b == b >> 1 )
4486	if b and 1 multiply res by a modulo mod	N/A	N/A	if ( b & 1 ) res = res * a % mod ;	if ( b & 1 ) res = res * a % mod ;
4487	multiply a by a modulo mod	N/A	N/A	a = a * a % mod ;	a = a % mod ;
4488	DUMMY	0.0	0.0	}	DUMMY
4489	return res	N/A	N/A	return res ;	return res ;
4490	DUMMY	0.0	0.0	}	DUMMY
4491	DUMMY	0.0	0.0	int main() {	DUMMY
4492	n = long long	N/A	N/A	long long n ;	long long n ;
4493	read n	N/A	N/A	cin >> n ;	cin >> n ;
4494	inv [ 1 ] = 1	N/A	N/A	inv [ 1 ] = 1 ;	inv [ 1 ] = 1 ;
4495	for i = 2 to N exclusive inv [ i ] = ( MOD - MOD / i ) * inv [ MOD modulo i ] modulo MOD	N/A	N/A	for ( int i = 2 ; i < N ; i ++ ) { inv [ i ] = ( MOD - MOD / i ) * inv [ MOD % i ] % MOD ; }	for ( long long i = 2 ; i < N ; i ++ ) inv [ i ] = ( MOD - MOD / i ) * inv [ MOD % i ] % MOD ;
4496	d = powmod ( 2 , n )	N/A	N/A	long long d = powmod ( 2 , n ) ;	long long d = powmod ( 2, n ) ;
4497	ans = d * ( d + 1 ) modulo mod * inv [ 2 ] modulo mod	N/A	N/A	long long ans = d * ( d + 1 ) % mod * inv [ 2 ] % mod ;	long long ans = d * ( d + 1 ) % mod * inv [ 2 ] % mod ;
4498	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
4499	DUMMY	0.0	0.0	}	DUMMY
4500	create constant long long INF with INF = ( 1ll bitshift left 62 ) - 1	N/A	N/A	const long long INF = ( 1ll << 62 ) - 1 ;	const long long INF = ( 1ll << 62 ) - 1 ;
4501	create constant long long M with M = 1e9 + 7	N/A	N/A	const long long M = 1e9 + 7 ;	const long long M = 1e9 + 7 ;
4502	declare modularExponentiation with long longs x , y as arguments , returning long long	N/A	N/A	long long modularExponentiation ( long long x , long long y )	long long modularExponentiation ( long long x, long long y )
4503	create integer res with res = 1	N/A	N/A	int res = 1 ;	int res = 1 ;
4504	while y is greater than 0	N/A	N/A	while ( y > 0 )	while ( y > 0 )
4505	if y bitwise and 1 , set res to ( res * x ) % M	N/A	N/A	if ( y & 1 ) res = ( res * x ) % M ;	if ( y & 1 ) res = ( res * x ) % M ;
4506	set y to y bitshift right 1	N/A	N/A	y = y >> 1 ;	y >>= 1 ;
4507	set x to ( x * x ) % M	N/A	N/A	x = ( x * x ) % M ;	x = ( x * x ) % M ;
4508	DUMMY	0.0	0.0	}	DUMMY
4509	return res from function	N/A	N/A	return res ;	return res ;
4510	DUMMY	0.0	0.0	}	DUMMY
4511	DUMMY	0.0	0.0	int main() {	DUMMY
4512	create long long n	N/A	N/A	long long n ;	long long n ;
4513	read n	N/A	N/A	cin >> n ;	cin >> n ;
4514	create long long ans with ans = result of run modularExponentiation with 2 , n as arguments	N/A	N/A	long long ans = modularExponentiation ( 2 , n ) ;	long long ans = modularExponentiation ( 2, n ) ;
4515	set ans to ( ans + ( ans * ans ) ) / 2	N/A	N/A	ans = ( ans + ( ans * ans ) ) / 2 ;	ans = ( ans + ( ans * ans ) ) / 2 ;
4516	print ans % M print newline	N/A	N/A	cout << ans % M << endl ;	cout << ans % M << endl ;
4517	DUMMY	0.0	0.0	}	DUMMY
4518	DUMMY	0.0	0.0	int main() {	DUMMY
4519	n , a , b , c = int	N/A	N/A	int n , a , b , c ;	int n, a, b, c ;
4520	read n then a then b then c	N/A	N/A	cin >> n >> a >> b >> c ;	cin >> n >> a >> b >> c ;
4521	ans = int with ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
4522	for i = 0 to 4000 inclusive	N/A	N/A	for ( int i = 0 ; i <= 4000 ; i ++ )	for ( int i = 0 ; i <= 4000 ; i ++ )
4523	for k = 0 to 4000 inclusive	N/A	N/A	for ( int k = 0 ; k <= 4000 ; k ++ )	for ( int k = 0 ; k <= 4000 ; k ++ )
4524	sum = int with sum = a * i + b * k	N/A	N/A	int sum = a * i + b * k ;	int sum = a * i + b * k ;
4525	if sum is greater than n then continue inner loop	N/A	N/A	if ( sum > n ) continue ;	if ( sum > n ) continue ;
4526	if ( n - sum ) mod c equals 0 then set ans to max of ans and ( i + k + ( n - sum ) / c )	N/A	N/A	if ( ( n - sum ) % c == 0 ) { ans = max ( ans , ( i + k + ( n - sum ) / c ) ) ; }	if ( ( n - sum ) % c == 0 ) { ans = max ( ans, ( i + k + ( n / sum ) / c ) ) ; }
4527	DUMMY	0.0	0.0	}	DUMMY
4528	DUMMY	0.0	0.0	}	DUMMY
4529	print ans	N/A	N/A	cout << ans << ' \n ' ;	cout << ans << endl ;
4530	DUMMY	0.0	0.0	}	DUMMY
4531	a = int array of size 3 with all values set to 0	N/A	N/A	int a [ 3 ] = { 0 } ;	int a [ 3 ] = { 0 } ;
4532	dp = int array of size 10000	N/A	N/A	int dp [ 10000 ] ;	int dp [ 10000 ] ;
4533	DUMMY	0.0	0.0	int main() {	DUMMY
4534	n = int	N/A	N/A	int n ;	int n ;
4535	read n then a [ 0 ] then a [ 1 ] then a [ 2 ]	N/A	N/A	cin >> n >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ;	cin >> n >> a [ 0 ] >> a1 ] >> dp [ 2 ] ;
4536	set all values of dp to - 100	N/A	N/A	memset ( dp , - 100 , sizeof ( dp ) ) ;	memset ( dp, - 100, sizeof dp ) ;
4537	set dp [ 0 ] to 0	N/A	N/A	dp [ 0 ] = 0 ;	dp [ 0 ] = 0 ;
4538	for i = 0 to 3	N/A	N/A	for ( int i = 0 ; i < 3 ; i ++ )	for ( int i = 0 ; i < 3 ; i ++ )
4539	for j = a [ i ] to n inclusive set dp [ j ] to max of dp [ j ] and dp [ j - a [ i ] ] + 1	N/A	N/A	for ( int j = a [ i ] ; j <= n ; j ++ ) { dp [ j ] = max ( dp [ j ] , dp [ j - a [ i ] ] + 1 ) ; }	for ( int j = a [ i ] ; j <= n ; j ++ ) { dp [ j ] = max ( dp. begin ( ), dp. end ( ) + i ) ; }
4540	DUMMY	0.0	0.0	}	DUMMY
4541	print dp [ n ]	N/A	N/A	cout << dp [ n ] << endl ;	cout << dp [ n ] << endl ;
4542	DUMMY	0.0	0.0	return 0;	DUMMY
4543	DUMMY	0.0	0.0	}	DUMMY
4544	create ints n , a , b and c	N/A	N/A	int n , a , b , c ;	int n, a, b, c ;
4545	DUMMY	0.0	0.0	int main() {	DUMMY
4546	read n	N/A	N/A	cin >> n ;	cin >> n ;
4547	declare integer array w with size 5	N/A	N/A	int w [ 5 ] ;	int w [ 5 ] ;
4548	loop i from 1 to 3 inclusive , read input to w [ i ]	N/A	N/A	for ( int i = 1 ; i <= 3 ; i ++ ) cin >> w [ i ] ;	for ( int i = 1 ; i <= 3 ; i ++ ) cin >> w [ i ] ;
4549	let e be int array with size 5000	N/A	N/A	int e [ 5000 ] ;	int e [ 5000 ] ;
4550	set sizeof ( e ) bytes at the pointer e to - 40	N/A	N/A	memset ( e , - 40 , sizeof ( e ) ) ;	memset ( e, 0, sizeof ( e ) ) ;
4551	assign 0 to e [ 0 ]	N/A	N/A	e [ 0 ] = 0 ;	e [ 0 ] = 0 ;
4552	loop i from 1 to 3 inclusive	N/A	N/A	for ( int i = 1 ; i <= 3 ; i ++ )	for ( int i = 1 ; i <= 3 ; i ++ )
4553	for j = w [ i ] to n inclusive , assign max of e [ j - w [ i ] ] + 1 and e [ j ] to e [ j ]	N/A	N/A	for ( int j = w [ i ] ; j <= n ; j ++ ) { e [ j ] = max ( e [ j - w [ i ] ] + 1 , e [ j ] ) ; }	for ( int j = w [ i ] ; j <= n ; j ++ ) { e [ j ] = max ( e ( j - w [ 1 ] ] + 1 ), e [ ++ j ] ) ; }
4554	DUMMY	0.0	0.0	}	DUMMY
4555	print e [ n ]	N/A	N/A	cout << e [ n ] << endl ;	cout << e [ n ] << endl ;
4556	DUMMY	0.0	0.0	}	DUMMY
4557	integers = a array that is size 4	N/A	N/A	int a [ 4 ] ;	int a [ 4 ] ;
4558	integers = dp array size 4001	N/A	N/A	int dp [ 4001 ] ;	int dp [ 4001 ] ;
4559	DUMMY	0.0	0.0	int main() {	DUMMY
4560	integers = n	N/A	N/A	int n ;	int n ;
4561	read n , a [ 1 ] , a [ 2 ] , a [ 3 ]	N/A	N/A	cin >> n >> a [ 1 ] >> a [ 2 ] >> a [ 3 ] ;	cin >> n >> a [ 1 ] >> b [ 2 ] >> c [ 3 ] ;
4562	create memset dp with a size of dp	N/A	N/A	memset ( dp , - 42 , sizeof ( dp ) ) ;	memset ( dp, a, sizeof dp ) ;
4563	set dp [ 0 ] to 0	N/A	N/A	dp [ 0 ] = 0 ;	dp [ 0 ] = 0 ;
4564	for i = 1 to less than or equal to 3 do the following	N/A	N/A	for ( int i = 1 ; i <= 3 ; i ++ )	for ( int i = 1 ; i <= 3 ; i ++ )
4565	for j = a [ i ] to less than or equal to n then dp [ j ] = the maximum out of dp [ j ] and dp [ j - a [ i ] + 1	N/A	N/A	for ( int j = a [ i ] ; j <= n ; j ++ ) { dp [ j ] = max ( dp [ j ] , dp [ j - a [ i ] ] + 1 ) ; }	for ( int j = a [ i ] ; j <= n ; j ++ ) { dp [ j ] = max ( dp. c_str ( ) [ j - a [ 1 ] + 1 ] ) ; }
4566	DUMMY	0.0	0.0	}	DUMMY
4567	output dp [ n ]	N/A	N/A	cout << dp [ n ] << endl ;	cout << dp [ n ] << endl ;
4568	DUMMY	0.0	0.0	}	DUMMY
4569	let a be int array with size 3 fileld with 0	N/A	N/A	int a [ 3 ] = { 0 } ;	int a [ 3 ] = { 0 } ;
4570	declare integer array dp with size 10000	N/A	N/A	int dp [ 10000 ] ;	int dp [ 10000 ] ;
4571	DUMMY	0.0	0.0	int main() {	DUMMY
4572	declare integer variable n	N/A	N/A	int n ;	int n ;
4573	read input to n , a [ 0 ] , a [ 1 ] and a [ 2 ]	N/A	N/A	cin >> n >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ;	cin >> n >> a [ 0 ] >> ( a [ 1 ] + a [ 2 ] ) ;
4574	set sizeof ( dp ) bytes at the pointer dp to - 9999	N/A	N/A	memset ( dp , - 9999 , sizeof ( dp ) ) ;	memset ( dp, - 9999, sizeof dp ) ;
4575	set dp [ 0 ] to 0	N/A	N/A	dp [ 0 ] = 0 ;	dp [ 0 ] = 0 ;
4576	loop i from 0 to 3 exclusive	N/A	N/A	for ( int i = 0 ; i < 3 ; i ++ )	for ( int i = 0 ; i < 3 ; i ++ )
4577	loop j from a [ i ] to n inclusive incrementing j , change dp [ j ] to max of dp [ j ] and dp [ j - a [ i ] ] + 1	N/A	N/A	for ( int j = a [ i ] ; j <= n ; j ++ ) { dp [ j ] = max ( dp [ j ] , dp [ j - a [ i ] ] + 1 ) ; }	for ( int j = a [ i ] ; j <= n ; j ++ ) { dp [ j ] = max ( dp. j ], dp ( j - a [ 1 ] ] + 1 ) ; }
4578	DUMMY	0.0	0.0	}	DUMMY
4579	print dp [ n ]	N/A	N/A	cout << dp [ n ] << endl ;	cout << dp [ n ] << endl ;
4580	DUMMY	0.0	0.0	return 0;	DUMMY
4581	DUMMY	0.0	0.0	}	DUMMY
4582	DUMMY	0.0	0.0	int main() {	DUMMY
4583	n , a , b , c = integers	N/A	N/A	int n , a , b , c ;	int n, a, b, c ;
4584	read n , a , b , c	N/A	N/A	cin >> n >> a >> b >> c ;	cin >> n >> a >> b >> c ;
4585	mx = integer with mx = - 1	N/A	N/A	int mx = - 1 ;	int mx = - 1 ;
4586	for i = n / a down to 0	N/A	N/A	for ( int i = n / a ; i >= 0 ; -- i )	for ( int i = n / a ; i >= 0 ; i -- )
4587	for j = n / b down to 0	N/A	N/A	for ( int j = n / b ; j >= 0 ; -- j )	for ( int j = n / b ; j >= 0 ; j -- )
4588	x = integer with x = n - ( i * a + j * b )	N/A	N/A	int x = n - ( i * a + j * b ) ;	int x = n - ( i * a + j * b ) ;
4589	if x modulo c is 0 and x > = 0 , mx = max of mx and i + j + x / c	N/A	N/A	if ( x % c == 0 and x >= 0 ) { mx = max ( mx , i + j + x / c ) ; }	if ( x % c == 0 && x >= 0 ) mx = max ( mx, i + j + x / c ) ;
4590	DUMMY	0.0	0.0	}	DUMMY
4591	DUMMY	0.0	0.0	}	DUMMY
4592	print mx	N/A	N/A	cout << mx << endl ;	cout << mx << endl ;
4593	DUMMY	0.0	0.0	}	DUMMY
4594	DUMMY	0.0	0.0	int main() {	DUMMY
4595	n , a , b , c = integers	N/A	N/A	int n , a , b , c ;	int n, a, b, c ;
4596	Read n , a , b , c	N/A	N/A	cin >> n >> a >> b >> c ;	cin >> n >> a >> b >> c ;
4597	res = integer with 0	N/A	N/A	int res = 0 ;	int res = 0 ;
4598	for i = 0 to n / a exclusive	N/A	N/A	for ( int i = 0 ; i <= n / a ; i ++ )	for ( int i = 0 ; i < n / a ; i ++ )
4599	for i = 0 to n / b exclusive	N/A	N/A	for ( int j = 0 ; j <= n / b ; j ++ )	for ( int i = 0 ; i < n / b ; i ++ )
4600	set k to n - i * a - j * b	N/A	N/A	int k = n - i * a - j * b ;	int k = n - i * a - j * b ;
4601	if k is greater than 0 and k modulo c is 0 , then set res to maximum value of res and i + j + k / c	N/A	N/A	if ( k >= 0 && k % c == 0 ) res = max ( res , i + j + k / c ) ;	if ( k > 0 && k % c == 0 ) res = max ( res, i + j + k / c ) ;
4602	DUMMY	0.0	0.0	}	DUMMY
4603	DUMMY	0.0	0.0	}	DUMMY
4604	print res and a new line	N/A	N/A	cout << res << " \n " ;	cout << res << endl ;
4605	DUMMY	0.0	0.0	}	DUMMY
4606	DUMMY	0.0	0.0	int main() {	DUMMY
4607	create integers n , a , b , c , max with max = 0	N/A	N/A	int n , a , b , c , max = 0 ;	int n, a, b, c, max = 0 ;
4608	read n read a read b read c	N/A	N/A	cin >> n >> a >> b >> c ;	cin >> n >> a >> b >> c ;
4609	for x = 0 to a * x is less than or equal to n , incrementing x	N/A	N/A	for ( int x = 0 ; a * x <= n ; x ++ )	for ( int x = 0 ; a * x <= n ; x ++ )
4610	for y = 0 to ( y * b ) + ( a * x ) is less than or equal to n , incrementing y	N/A	N/A	for ( int y = 0 ; ( y * b ) + ( a * x ) <= n ; y ++ )	for ( int y = 0 ; ( y * b ) + ( a * x ) <= n ; y ++ )
4611	create integer z with z = ( n - a * x - b * y ) / c	N/A	N/A	int z = ( n - a * x - b * y ) / c ;	int z = ( n - a * x - b * y ) / c ;
4612	if a * x + b * y + z * c is n	N/A	N/A	if ( a * x + b * y + z * c == n )	if ( a * x + b * y + z * c == n )
4613	if x + y + z is greater than max , set max to x + y + z	N/A	N/A	if ( x + y + z > max ) max = x + y + z ;	if ( ( x + y ) + z > max ) max = x + ( y + z ) ;
4614	DUMMY	0.0	0.0	}	DUMMY
4615	DUMMY	0.0	0.0	}	DUMMY
4616	DUMMY	0.0	0.0	}	DUMMY
4617	print max print newline	N/A	N/A	cout << max << endl ;	cout << max << endl ;
4618	DUMMY	0.0	0.0	return 0;	DUMMY
4619	DUMMY	0.0	0.0	}	DUMMY
4620	DUMMY	0.0	0.0	int main() {	DUMMY
4621	let n , a , b , c be integers	N/A	N/A	int n , a , b , c ;	int n, a, b, c ;
4622	read n , a , b , c	N/A	N/A	cin >> n >> a >> b >> c ;	cin >> n >> a >> b >> c ;
4623	let x , y , z , p , i be integers with p = 0	N/A	N/A	int x , y , z , p = 0 , i ;	int x, y, z, p = 0, i ;
4624	i is equal to minimum of a , minimum of b and c	N/A	N/A	i = min ( a , min ( b , c ) ) ;	i = min ( a, min ( b, c ) ) ;
4625	i is equal to n / i	N/A	N/A	i = n / i ;	i = n / i ;
4626	for x is equal to i , x > = 0 , decrease x by 1	N/A	N/A	for ( x = i ; x >= 0 ; x -- )	for ( x = i ; x >= 0 ; x -- )
4627	for y = 0 to i inclusive	N/A	N/A	for ( y = 0 ; y <= i ; y ++ )	for ( y = 0 ; y <= i ; y ++ )
4628	z is equal to absolute value of ( n - ( a * x + b * y ) ) / c	N/A	N/A	z = abs ( ( n - ( a * x + b * y ) ) / c ) ;	z = abs ( n - ( a * x + b * y ) ) / c ;
4629	if a * x + b * y + c * z is equal to n , p = maximum of p and x + y + z	N/A	N/A	if ( ( a * x + b * y + c * z ) == n ) { p = max ( p , x + y + z ) ; }	if ( a * x + b * y + c * z == n ) p = max ( p, x + y + z ) ;
4630	DUMMY	0.0	0.0	}	DUMMY
4631	DUMMY	0.0	0.0	}	DUMMY
4632	print p and newline	N/A	N/A	cout << p << endl ;	cout << p << endl ;
4633	DUMMY	0.0	0.0	}	DUMMY
4634	arr = integer array of size 5 , n = integer	N/A	N/A	int arr [ 5 ] , n ;	int arr [ 5 ], n ;
4635	dp = integer array of size 4004 , mn = integer	N/A	N/A	int dp [ 4004 ] , mn ;	int dp [ 4004 ], mn ;
4636	in the function fun that takes integer rem and returns integer	N/A	N/A	int fun ( int rem )	int fun ( int rem )
4637	if rem is 0 , return 0	N/A	N/A	if ( rem == 0 ) return 0 ;	if ( rem == 0 ) return 0 ;
4638	if rem < mn , return - 11111111	N/A	N/A	if ( rem < mn ) return - 11111111 ;	if ( rem < mn ) return - 11111111 ;
4639	if dp [ rem ] is not - 1 , return dp [ rem ]	N/A	N/A	if ( dp [ rem ] != - 1 ) return dp [ rem ] ;	if ( dp [ rem ]!= - 1 ) { return dp. c_str ( ) ; }
4640	ret = integer with ret = - 11111111	N/A	N/A	int ret = - 11111111 ;	int ret = - 11111111 ;
4641	for i = 0 to 3 , ret = max ( ret , 1 + fun ( rem - arr [ i ] ) )	N/A	N/A	for ( int i = 0 ; i < 3 ; i ++ ) { ret = max ( ret , 1 + fun ( rem - arr [ i ] ) ) ; }	for ( int i = 0 ; i < 3 ; i ++ ) ret = max ( ret, 1 + fun ( rem - arr [ i ] ) ) ;
4642	return dp [ rem ] = ret	N/A	N/A	return dp [ rem ] = ret ;	return dp [ rem ] == ret ;
4643	DUMMY	0.0	0.0	}	DUMMY
4644	DUMMY	0.0	0.0	int main() {	DUMMY
4645	set all contents of dp to - 1	N/A	N/A	memset ( dp , - 1 , sizeof dp ) ;	memset ( dp, - 1, sizeof dp ) ;
4646	read n	N/A	N/A	cin >> n ;	cin >> n ;
4647	mn = 100000000	N/A	N/A	mn = 100000000 ;	const int mn = 100000000 ;
4648	for i = 0 to 2	N/A	N/A	for ( int i = 0 ; i < 3 ; i ++ )	for ( int i = 0 ; i < 3 ; i ++ )
4649	read arr [ i ]	N/A	N/A	cin >> arr [ i ] ;	cin >> arr [ i ] ;
4650	mn = min of arr [ i ] and mn	N/A	N/A	mn = min ( arr [ i ] , mn ) ;	mn = min ( arr [ i ], mn ) ;
4651	DUMMY	0.0	0.0	}	DUMMY
4652	print fun ( n )	N/A	N/A	cout << fun ( n ) << endl ;	cout << fun ( n ) << endl ;
4653	DUMMY	0.0	0.0	}	DUMMY
4654	create long longs n , a , b and c	N/A	N/A	long long n , a , b , c ;	long long n, a, b, c ;
4655	let dp be 2d long long array with size 5006 by 5005	N/A	N/A	long long dp [ 5006 ] [ 5005 ] ;	long long dp [ 5006 ] [ 5005 ] ;
4656	long long function result with long long arguments total and cnt	N/A	N/A	long long result ( long long total , long long cnt )	long long result ( long long total, long long cnt )
4657	if total = 0 return cnt	N/A	N/A	if ( total == 0 ) return cnt ;	if ( total == 0 ) return cnt ;
4658	declare long long variables d , e and f = 0	N/A	N/A	long long d = 0 , e = 0 , f = 0 ;	long long d, e, f = 0 ;
4659	if dp [ total ] [ cnt ] is not - 1m return dp [ total ] [ cnt ]	N/A	N/A	if ( dp [ total ] [ cnt ] != - 1 ) return dp [ total ] [ cnt ] ;	if ( dp [ total ] [ cnt ]!= - 1 ) { return dp. c_str ( ) ; }
4660	if a < = total , assign result ( total - a , cnt + 1 ) to d	N/A	N/A	if ( a <= total ) d = result ( total - a , cnt + 1 ) ;	if ( a <= total ) d = result ( total - a, cnt + 1 ) ;
4661	if b < = total , assign result ( total - b , cnt + 1 ) to e	N/A	N/A	if ( b <= total ) e = result ( total - b , cnt + 1 ) ;	if ( b <= total ) e = result ( total - b, cnt + 1 ) ;
4662	if c < = total , assign result ( total - c , cnt + 1 ) to f	N/A	N/A	if ( c <= total ) f = result ( total - c , cnt + 1 ) ;	if ( c <= total ) f = result ( total - c, cnt + 1 ) ;
4663	return dp [ total ] [ cnt ] = max of d and max ( e , f )	N/A	N/A	return dp [ total ] [ cnt ] = max ( d , max ( e , f ) ) ;	return dp [ total ] [ cnt ] = max ( d, max ( e, f ) ) ;
4664	DUMMY	0.0	0.0	}	DUMMY
4665	DUMMY	0.0	0.0	int main() {	DUMMY
4666	set value of sizeofdp bytes at the pointer dp to - 1	N/A	N/A	memset ( dp , - 1 , sizeof dp ) ;	memset ( dp, - 1, sizeof dp ) ;
4667	read input to n , a , b and c	N/A	N/A	cin >> n >> a >> b >> c ;	cin >> n >> a >> b >> c ;
4668	declare long long variable ans = result ( n , 0 )	N/A	N/A	long long ans = result ( n , 0 ) ;	long long ans = result ( n, 0 ) ;
4669	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
4670	DUMMY	0.0	0.0	}	DUMMY
4671	DUMMY	0.0	0.0	int main() {	DUMMY
4672	create integer n , create integer array a with size 3	N/A	N/A	int n , a [ 3 ] ;	int n, a [ 3 ] ;
4673	read n read a [ 0 ] read a [ 1 ] read a [ 2 ]	N/A	N/A	cin >> n >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> n >> a [ 0 ] >> b [ i ] >> c [ ++ i ] ; }
4674	sort elements from a to a + 3	N/A	N/A	sort ( a , a + 3 ) ;	sort ( a, a + 3 ) ;
4675	create integers i , j , k , ans with i = 0 , j = 0 , k = 0 , ans = - 1	N/A	N/A	int i = 0 , j = 0 , k = 0 , ans = - 1 ;	int i = 0, j = 1, k = - 1, ans = - 2 ;
4676	for i = 0 to a * a [ 2 ] is less than n + 1 , incrementing i	N/A	N/A	for ( i = 0 ; i * a [ 2 ] < n + 1 ; i ++ )	for ( i = 0 ; a * a [ 2 ] < n + 1 ; i ++ )
4677	for j = 0 to i * a [ 2 ] + j * a [ 1 ] is less than n + 1 , incrementing j	N/A	N/A	for ( j = 0 ; i * a [ 2 ] + j * a [ 1 ] < n + 1 ; j ++ )	for ( j = ( 0 ) ; ( i * a [ 2 ] + j * ( a [ 1 ] ) < n + 1 ) ; j ++ )
4678	if ( n - i * a [ 2 ] - j * a [ 1 ] ) % a [ 0 ] is 0 , set ans to maximum of ans and i + j + ( n - i * a [ 2 ] - j * a [ 1 ] ) / a [ 0 ] )	N/A	N/A	if ( ( n - i * a [ 2 ] - j * a [ 1 ] ) % a [ 0 ] == 0 ) { ans = max ( ans , i + j + ( n - i * a [ 2 ] - j * a [ 1 ] ) / a [ 0 ] ) ; }	if ( ( n - i * a [ 2 ] - j * ( a [ 1 ] ) % a [ 0 ] == 0 ) { ans = max ( ans, i + j ) % ( n -= i * ( i * 3 ] ) - j - a [ i ] ) / a ['0') ; }
4679	DUMMY	0.0	0.0	}	DUMMY
4680	DUMMY	0.0	0.0	}	DUMMY
4681	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
4682	DUMMY	0.0	0.0	}	DUMMY
4683	declare const int N = 4005	N/A	N/A	const int N = 4005 ;	const int N = 4005 ;
4684	declare const int inf = 1e9	N/A	N/A	const int inf = 1e9 ;	const int inf = 1e9 ;
4685	create const long long INF = 1e18	N/A	N/A	const long long INF = 1e18 ;	const long long INF = 1e18 ;
4686	declare const double PI = acos ( - 1 . 0 )	N/A	N/A	const double PI = acos ( - 1.0 ) ;	const double PI = acos ( - 1.0 ) ;
4687	declare const double EPS = 1e - 8	N/A	N/A	const double EPS = 1e-8 ;	const double EPS = 1e-8 ;
4688	create const int MOD = 1000000007	N/A	N/A	const int MOD = 1000000007 ;	const int MOD = 1000000007 ;
4689	declare integer variables n , a , b and c	N/A	N/A	int n , a , b , c ;	int n, a, b, c ;
4690	declare int array dp with size N	N/A	N/A	int dp [ N ] ;	int dp [ N ] ;
4691	DUMMY	0.0	0.0	int main() {	DUMMY
4692	read n , a , b and c	N/A	N/A	cin >> n >> a >> b >> c ;	cin >> n >> a >> b >> c ;
4693	loop i from 0 to n inclusive , assign - inf to dp [ i ]	N/A	N/A	for ( int i = 0 ; i <= n ; i ++ ) dp [ i ] = - inf ;	for ( int i = 0 ; i <= n ; i ++ ) dp [ i ] = - inf ;
4694	assign 0 to dp [ 0 ]	N/A	N/A	dp [ 0 ] = 0 ;	dp [ 0 ] = 0 ;
4695	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
4696	if a < = i , set dp [ i ] to max of dp [ i ] and dp [ i - a ] + 1	N/A	N/A	if ( a <= i ) dp [ i ] = max ( dp [ i ] , dp [ i - a ] + 1 ) ;	if ( a <= i ) { dp [ i ] = max ( dp. c_str ( ), dp. i - a ] + 1 ) ; }
4697	if b < = i , assign max of dp [ i ] and dp [ i - b ] + 1 to dp [ i ]	N/A	N/A	if ( b <= i ) dp [ i ] = max ( dp [ i ] , dp [ i - b ] + 1 ) ;	if ( b <= i ) { dp [ i ] = max ( dp. at ( i ), dp ( i - b ] + 1 ) ; }
4698	if c < = i , change dp [ i ] to max of dp [ i ] and dp [ i - c ] + 1	N/A	N/A	if ( c <= i ) dp [ i ] = max ( dp [ i ] , dp [ i - c ] + 1 ) ;	if ( c <= i ) dp [ i ] = max ( dp. at ( i - c ] ) + 1 ;
4699	DUMMY	0.0	0.0	}	DUMMY
4700	print dp [ n ] and " \ n "	N/A	N/A	cout << dp [ n ] << " \n " ;	cout << dp [ n ] << " \n " ;
4701	DUMMY	0.0	0.0	return 0;	DUMMY
4702	DUMMY	0.0	0.0	}	DUMMY
4703	N = constant integer with N = 1e5 + 7	N/A	N/A	const int N = 1e5 + 7 ;	const int N = 1e5 + 7 ;
4704	arr = array of size N	N/A	N/A	int arr [ N ] ;	int arr [ N ] ;
4705	DUMMY	0.0	0.0	int main() {	DUMMY
4706	n , a , b , c = integers	N/A	N/A	int n , a , b , c ;	int n, a, b, c ;
4707	read n , a , b , c	N/A	N/A	cin >> n >> a >> b >> c ;	cin >> n >> a >> b >> c ;
4708	set all contents of arr to 0 after casting to integer	N/A	N/A	memset ( arr , ( int ) ( 0 ) , sizeof ( arr ) ) ;	memset ( arr, 0, sizeof ( arr ) ) ;
4709	arr [ a ] = arr [ b ] = arr [ c ] = 1	N/A	N/A	arr [ a ] = arr [ b ] = arr [ c ] = 1 ;	arr [ a ] += arr [ b ] = arr [ c ] = 1 ;
4710	for i = ( cast to integer ) ( 1 ) to ( cast to integer ) ( n )	N/A	N/A	for ( int i = ( int ) ( 1 ) ; i <= ( int ) ( n ) ; i ++ )	for ( int i = ( int ) ( 1 ) ; i <= int ( n ) ; ++ i )
4711	if i > = a and arr [ i - a ] , arr [ i ] = max ( arr [ i ] , arr [ i - a ] + 1 )	N/A	N/A	if ( i >= a and arr [ i - a ] ) arr [ i ] = max ( arr [ i ] , arr [ i - a ] + 1 ) ;	if ( i >= a && arr [ i - a ] ) { arr [ 0 ] = max ( arr [ 1 ], arr [ 2 -'a'] + 1 ) ; }
4712	if i > = b and arr [ i - b ] , arr [ i ] = max ( arr [ i ] , arr [ i - b ] + 1 )	N/A	N/A	if ( i >= b and arr [ i - b ] ) arr [ i ] = max ( arr [ i ] , arr [ i - b ] + 1 ) ;	if ( ( i >= b ) && ( arr [ i - b ] ) ) { arr [ 1 ] = max (arr [ i ], arr [ j - c ] + 1 ) ; }
4713	if i > = c and arr [ i - c ] , arr [ i ] = max ( arr [ i ] , arr [ i - c ] + 1 )	N/A	N/A	if ( i >= c and arr [ i - c ] ) arr [ i ] = max ( arr [ i ] , arr [ i - c ] + 1 ) ;	if ( ( i >= c ) && ( arr [ i - c ] ) ) { arr [ 1 ] = max (arr [ i ], arr [ ( i - 1 ] + 1 ) ) ; }
4714	DUMMY	0.0	0.0	}	DUMMY
4715	print arr [ n ]	N/A	N/A	cout << arr [ n ] << endl ;	cout << arr [ n ] << endl ;
4716	DUMMY	0.0	0.0	}	DUMMY
4717	p = array of 3 integers	N/A	N/A	int p [ 3 ] ;	int p [ 3 ] ;
4718	dp = 2d array of size [ 4010 ] [ 4010 ]	N/A	N/A	bool dp [ 4000 + 10 ] [ 4000 + 10 ] ;	dp [ 4010 ] [ 4000 ] ;
4719	DUMMY	0.0	0.0	int main() {	DUMMY
4720	n = integer	N/A	N/A	int n ;	int n ;
4721	read n	N/A	N/A	cin >> n ;	cin >> n ;
4722	for i = 0 to 2 , read p [ i ]	N/A	N/A	for ( int i = 0 ; i < 3 ; i ++ ) cin >> p [ i ] ;	for ( int i = 0 ; i < 3 ; i ++ ) cin >> p [ i ] ;
4723	minp , maxp = integers with minp = min ( min ( p [ 0 ] , p [ 1 ] ) , p [ 2 ] ) , maxp = max ( max ( p [ 0 ] , p [ 1 ] ) , p [ 2 ] )	N/A	N/A	int minp = min ( min ( p [ 0 ] , p [ 1 ] ) , p [ 2 ] ) , maxp = max ( max ( p [ 0 ] , p [ 1 ] ) , p [ 2 ] ) ;	int minp = min ( min ( p [ 0 ], p [ 1 ] ), pp 2 ] ) ;
4724	dp [ 0 ] [ 0 ] = true	N/A	N/A	dp [ 0 ] [ 0 ] = true ;	dp [ 0 ] ['0'] = true ;
4725	for i = minp to n	N/A	N/A	for ( int i = minp ; i <= n ; i ++ )	for ( int i = minp ; i <= n ; i ++ )
4726	for k = 1 to i / minp	N/A	N/A	for ( int k = 1 ; k <= i / minp ; k ++ )	for ( int k = 1 ; k <= i / minp ; k ++ )
4727	for j = 0 to 2	N/A	N/A	for ( int j = 0 ; j < 3 ; j ++ )	for ( int j = 0 ; j < 3 ; j ++ )
4728	if i > = p [ j ] , dp [ i ] [ k ] = dp [ i ] [ k ] binary or dp [ i - p [ j ] ] [ k - 1 ]	N/A	N/A	if ( i >= p [ j ] ) dp [ i ] [ k ] |= dp [ i - p [ j ] ] [ k - 1 ] ;	if ( i >= p [ j ] ) { dp [ i ] [ k ] |= p [ i - p [ 1 ] + k - 1 ] ; }
4729	for i = n / minp down to 1	N/A	N/A	for ( int i = n / minp ; i >= 1 ; i -- )	for ( int i = n / minp ; i >= 1 ; i -- )
4730	if dp [ n ] [ i ]	N/A	N/A	if ( dp [ n ] [ i ] )	if ( dp [ n ] [ i ] )
4731	print i	N/A	N/A	cout << i << endl ;	cout << i << endl ;
4732	break loop	N/A	N/A	break ;	break ;
4733	DUMMY	0.0	0.0	}	DUMMY
4734	DUMMY	0.0	0.0	}	DUMMY
4735	create integers a , b and c	N/A	N/A	int a , b , c ;	int a, b, c ;
4736	declare int array memo with size 4001	N/A	N/A	int memo [ 4001 ] ;	int memo [ 4001 ] ;
4737	function solve with int argument i that returns integer	N/A	N/A	int solve ( int i )	int solve ( int i )
4738	if i = 0 , return 0	N/A	N/A	if ( i == 0 ) return 0 ;	if ( i == 0 ) return 0 ;
4739	if memo [ i ] ! = - 1 , return memo [ i ]	N/A	N/A	if ( memo [ i ] != - 1 ) return memo [ i ] ;	if ( memo [ i ]!= - 1 ) return memo [ 1 ] ;
4740	create integers opt1 , opt2 and opt3 = - 1e9	N/A	N/A	int opt1 = - 1e9 , opt2 = - 1e9 , opt3 = - 1e9 ;	int opt1, opt2, opt3 = - 1e9 ;
4741	if i > = a , change opt1 to solve ( i - a ) + 1	N/A	N/A	if ( i >= a ) { opt1 = solve ( i - a ) + 1 ; }	if ( i >= a ) { opt1 = solve ( i - a ) + 1 ; }
4742	if i > = b , change opt2 to solve ( i - b ) + 1	N/A	N/A	if ( i >= b ) { opt2 = solve ( i - b ) + 1 ; }	if ( i >= b ) { opt2 = solve ( i - b ) + 1 ; }
4743	if i > = c , change opt3 to solve ( i - c ) + 1	N/A	N/A	if ( i >= c ) { opt3 = solve ( i - c ) + 1 ; }	if ( i >= c ) { opt3 = solve ( i - c ) + 1 ; }
4744	return memo [ i ] = max of opt1 and ( max of opt2 and opt3 )	N/A	N/A	return memo [ i ] = max ( opt1 , max ( opt2 , opt3 ) ) ;	return memo [ i ] = max ( opt1, opt2 ) ;
4745	DUMMY	0.0	0.0	}	DUMMY
4746	DUMMY	0.0	0.0	int main() {	DUMMY
4747	set first sizeof memo bytes at the pointer memo to - 1	N/A	N/A	memset ( memo , - 1 , sizeof memo ) ;	memset ( memo, - 1, sizeof memo ) ;
4748	declare integer variable n	N/A	N/A	int n ;	int n ;
4749	read n , a , b and c	N/A	N/A	cin >> n >> a >> b >> c ;	cin >> n >> a >> b >> c ;
4750	print result of solve ( n )	N/A	N/A	cout << solve ( n ) << endl ;	cout << solve ( n ) << endl ;
4751	DUMMY	0.0	0.0	return 0;	DUMMY
4752	DUMMY	0.0	0.0	}	DUMMY
4753	declare cut_ribbon with integers n , a , b , c as arguments	N/A	N/A	int cut_ribbon ( int n , int a , int b , int c )	void cut_ribbon ( int n, int a, int b, int c )
4754	create integer array arr with size n + 1	N/A	N/A	int arr [ n + 1 ] ;	int arr [ n + 1 ] ;
4755	set bytes from arr to size of arr to value 0	N/A	N/A	memset ( arr , 0 , sizeof ( arr ) ) ;	memset ( arr, 0, sizeof ( arr ) ) ;
4756	if a is less than or equal to n , set arr [ a ] to 1	N/A	N/A	if ( a <= n ) { arr [ a ] = 1 ; }	if ( a <= n ) { arr [ a ] = 1 ; }
4757	if b is less than or equal to n , set arr [ b ] to 1	N/A	N/A	if ( b <= n ) { arr [ b ] = 1 ; }	if ( b <= n ) { arr [ b ] = 1 ; }
4758	if c is less than or equal to n , set arr [ c ] to 1	N/A	N/A	if ( c <= n ) { arr [ c ] = 1 ; }	if ( c <= n ) { arr [ c ] = 1 ; }
4759	for i = 0 to n inclusive	N/A	N/A	for ( int i = 0 ; i <= n ; i ++ )	for ( int i = 0 ; i <= n ; i ++ )
4760	if i is greater than a and arr [ i - a ] is not 0 , set arr [ i ] to maximum of arr [ i ] and arr [ i - a ] + 1	N/A	N/A	if ( i > a && arr [ i - a ] != 0 ) { arr [ i ] = max ( arr [ i ] , arr [ i - a ] + 1 ) ; }	if ( i > a && arr [ i - a ]!= 0 ) { arr [ j ] = max ( arr [ 1 ], arr [ ( i -'a'] + 1 ) ) ; }
4761	if i is greater than b and arr [ i - b ] is not 0 , set arr [ i ] to maximum of arr [ i ] and arr [ i - b ] + 1	N/A	N/A	if ( i > b && arr [ i - b ] != 0 ) { arr [ i ] = max ( arr [ i ] , arr [ i - b ] + 1 ) ; }	if ( i > b && arr [ i - b ]!= 0 ) { arr [ j ] = max ( arr [ 1 ], arr [ ( i - c ] + 1 ) ) ; }
4762	if i is greater than c and arr [ i - c ] is not 0 , set arr [ i ] to maximum of arr [ i ] and arr [ i - c ] + 1	N/A	N/A	if ( i > c && arr [ i - c ] != 0 ) { arr [ i ] = max ( arr [ i ] , arr [ i - c ] + 1 ) ; }	if ( i > c && arr [ i - c ]!= 0 ) { arr [ j ] = max ( arr [ 1 ], arr [ 2 - c - 1 ) ; }
4763	DUMMY	0.0	0.0	}	DUMMY
4764	return arr [ n ] from function	N/A	N/A	return arr [ n ] ;	return arr [ n ] ;
4765	DUMMY	0.0	0.0	}	DUMMY
4766	DUMMY	0.0	0.0	int main() {	DUMMY
4767	create integers n , a , b , c	N/A	N/A	int n , a , b , c ;	int n, a, b, c ;
4768	read n read a read b read c	N/A	N/A	cin >> n >> a >> b >> c ;	cin >> n >> a >> b >> c ;
4769	print result of run cut_ribbon with n , a , b , c as arguments , print newline	N/A	N/A	cout << cut_ribbon ( n , a , b , c ) << endl ;	cout << cut_ribbon ( n, a, b, c ) << endl ;
4770	DUMMY	0.0	0.0	return 0;	DUMMY
4771	DUMMY	0.0	0.0	}	DUMMY
4772	DUMMY	0.0	0.0	int main() {	DUMMY
4773	x , y , r , ans = integers	N/A	N/A	int x , y , r , ans ;	int x, y, r, ans ;
4774	read x , y , r	N/A	N/A	cin >> x >> y >> r ;	cin >> x >> y >> r ;
4775	if 2 * r > min ( x , y )	N/A	N/A	if ( 2 * r > min ( x , y ) )	if ( 2 * r > min ( x, y ) )
4776	print Second	N/A	N/A	cout << " Second " << endl ;	cout << " Second "
4777	else	N/A	N/A	else	else
4778	print First	N/A	N/A	cout << " First " << endl ;	cout << " First\n " ;
4779	DUMMY	0.0	0.0	return 0;	DUMMY
4780	DUMMY	0.0	0.0	}	DUMMY
4781	DUMMY	0.0	0.0	int main() {	DUMMY
4782	l , b , r = integers	N/A	N/A	int l , b , r ;	int l, b, r ;
4783	read l , b , r	N/A	N/A	cin >> l >> b >> r ;	cin >> l >> b >> r ;
4784	d , plates = integers with d = 2 * r , plates = 0	N/A	N/A	int d = 2 * r , plates = 0 ;	int d = 2 * r, plates = 0 ;
4785	if min ( l , b ) < d	N/A	N/A	if ( min ( l , b ) < d )	if ( min ( l, b ) < d )
4786	print Second	N/A	N/A	cout << " Second " << endl ;	cout << " Second\n " ;
4787	else	N/A	N/A	else	else
4788	print First	N/A	N/A	cout << " First " << endl ;	cout << " First\n " ;
4789	DUMMY	0.0	0.0	}	DUMMY
4790	DUMMY	0.0	0.0	int main() {	DUMMY
4791	a , b , c = int	N/A	N/A	int a , b , c ;	int a, b, c ;
4792	read a then b then c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
4793	if a and b are both greater or equal to 2 * c	N/A	N/A	if ( a >= 2 * c && b >= 2 * c )	if ( a >= 2 * c && b >= 2 )
4794	print " First "	N/A	N/A	cout << " First " ;	cout << " First\n " ;
4795	else	N/A	N/A	else	else
4796	print " Second "	N/A	N/A	cout << " Second " ;	cout << " Second " << endl ;
4797	print newline	N/A	N/A	cout << endl ;	cout << endl ;
4798	DUMMY	0.0	0.0	return 0;	DUMMY
4799	DUMMY	0.0	0.0	}	DUMMY
4800	create constant integer MAXN with MAXN = 100000 + 7	N/A	N/A	const int MAXN = 100000 + 7 ;	const int MAXN = 100000 + 7 ;
4801	create constant integer mod with mod = 23333333	N/A	N/A	const int mod = 23333333 ;	const int mod = 23333333 ;
4802	create integers a , b , r	N/A	N/A	int a , b , r ;	int a, b, r ;
4803	DUMMY	0.0	0.0	int main() {	DUMMY
4804	read a read b read r	N/A	N/A	cin >> a >> b >> r ;	cin >> a >> b >> r ;
4805	if a is less than 2 * r or b is less than 2 * r	N/A	N/A	if ( a < 2 * r || b < 2 * r )	if ( a < 2 * r || b < 2 + r )
4806	print " Second " print newline	N/A	N/A	cout << " Second " << endl ;	cout << " Second " << endl ;
4807	else	N/A	N/A	else	else
4808	print " First " print newline	N/A	N/A	cout << " First " << endl ;	cout << " First " << endl ;
4809	DUMMY	0.0	0.0	return 0;	DUMMY
4810	DUMMY	0.0	0.0	}	DUMMY
4811	str = array of 30100 strings	N/A	N/A	string str [ 30100 ] ;	string str [ 30100 ] ;
4812	a , b , r = int	N/A	N/A	int a , b , r ;	int a, b, r ;
4813	DUMMY	0.0	0.0	int main() {	DUMMY
4814	read a , b , r	N/A	N/A	cin >> a >> b >> r ;	cin >> a >> b >> r ;
4815	multiply r by 2	N/A	N/A	r *= 2 ;	r *= 2 ;
4816	if r < = a and r < = b	N/A	N/A	if ( r <= a && r <= b )	if ( r <= a && r <= b )
4817	print " First "	N/A	N/A	puts ( " First " ) ;	puts ( " First " ) ;
4818	else	N/A	N/A	else	else
4819	print " Second "	N/A	N/A	puts ( " Second " ) ;	cout << " Second " << endl ;
4820	DUMMY	0.0	0.0	}	DUMMY
4821	integers = t integer pi = 3 . 14	N/A	N/A	const int pi = 3.14 ;	const int pi = 3.14 ;
4822	DUMMY	0.0	0.0	int main() {	DUMMY
4823	integers = a , b , r	N/A	N/A	int a , b , r ;	int a, b, r ;
4824	read a , b , r	N/A	N/A	cin >> a >> b >> r ;	cin >> a >> b >> r ;
4825	if 2 * r is greater than min ( a , b then do the following	N/A	N/A	if ( 2 * r > min ( a , b ) )	if ( 2 * r > min ( a, b ) )
4826	output Second	N/A	N/A	cout << " Second " << endl ;	cout << " Second\n " ;
4827	else	N/A	N/A	else	else
4828	integers = cnt = 0	N/A	N/A	int cnt = 0 ;	int cnt = 0 ;
4829	integers = ans = max ( a , b )	N/A	N/A	int ans = max ( a , b ) ;	int ans = max ( a, b ) ;
4830	integers = res = min ( a , b )	N/A	N/A	int res = min ( a , b ) ;	int res = min ( a, b ) ;
4831	if 1 is true do the following	N/A	N/A	while ( 1 )	while ( 1 )
4832	set ans to maximum of ans and res	N/A	N/A	ans = max ( ans , res ) ;	ans = max ( ans, res ) ;
4833	set res to minimum and ans and res	N/A	N/A	res = min ( ans , res ) ;	res = min ( ans, res ) ;
4834	cnt equals cnt plus res / ( 2 * r )	N/A	N/A	cnt += res / ( 2 * r ) ;	cnt += res / ( 2 * r ) ;
4835	subtract ( res / ( 2 * r ) ) * 2 * r from ans	N/A	N/A	ans -= ( res / ( 2 * r ) ) * 2 * r ;	ans -= ( res / ( 2 * r ) ) * 2 * * r ;
4836	integers = minn = minimum of ans or res	N/A	N/A	int minn = min ( ans , res ) ;	int minn = min ( ans, res ) ;
4837	if minn is less than 2 * r then do the following break	N/A	N/A	if ( minn < 2 * r ) break ;	if ( minn < 2 * r ) break ;
4838	DUMMY	0.0	0.0	}	DUMMY
4839	if cnt is greater than or equal to 1 then do the following	N/A	N/A	if ( cnt >= 1 )	if ( cnt >= 1 )
4840	output First	N/A	N/A	cout << " First " << endl ;	cout << " First " << endl ;
4841	else	N/A	N/A	else	else
4842	output Second	N/A	N/A	cout << " Second " << endl ;	cout << " Second\n " ;
4843	DUMMY	0.0	0.0	}	DUMMY
4844	DUMMY	0.0	0.0	return 0;	DUMMY
4845	DUMMY	0.0	0.0	}	DUMMY
4846	DUMMY	0.0	0.0	int main() {	DUMMY
4847	n , k , l = long long integers	N/A	N/A	long long int n , k , l ;	long long int n, k, l ;
4848	input n , k , l	N/A	N/A	cin >> n >> k >> l ;	cin >> n >> k >> l ;
4849	if 2 * l is less than or equal to minimum of n and k then do the following	N/A	N/A	if ( 2 * l <= min ( n , k ) )	if ( 2 * l <= min ( n, k ) )
4850	output First	N/A	N/A	cout << " First " << endl ;	cout << " First\n " ;
4851	else	N/A	N/A	else	else
4852	output Second	N/A	N/A	cout << " Second " << endl ;	cout << " Second\n " ;
4853	DUMMY	0.0	0.0	return 0;	DUMMY
4854	DUMMY	0.0	0.0	}	DUMMY
4855	a , b , r = integers	N/A	N/A	int a , b , r ;	int a, b, r ;
4856	DUMMY	0.0	0.0	int main() {	DUMMY
4857	Read a , b , r	N/A	N/A	cin >> a >> b >> r ;	cin >> a >> b >> r ;
4858	if a is less than 2 * r OR b is less than 2 * r	N/A	N/A	if ( a < 2 * r || b < 2 * r )	if ( ( a < 2 * r ) || ( b < 2 + r ) )
4859	print Second and a new line	N/A	N/A	cout << " Second\n " ;	cout << " Second\n " ;
4860	else do the following	N/A	N/A	else	else
4861	print First and a new line	N/A	N/A	cout << " First\n " ;	cout << " First\n " ;
4862	DUMMY	0.0	0.0	return 0;	DUMMY
4863	DUMMY	0.0	0.0	}	DUMMY
4864	DUMMY	0.0	0.0	int main() {	DUMMY
4865	create integers n1 , n2 , r	N/A	N/A	int n1 , n2 , r ;	int n1, n2, r ;
4866	read n1 read n2 read r	N/A	N/A	cin >> n1 >> n2 >> r ;	cin >> n1 >> n2 >> r ;
4867	create integer r2 with r2 = r + r	N/A	N/A	int r2 = r + r ;	int r2 = r + r ;
4868	if n1 is greater than or equal to r2 and n2 is greater than or equal to r2	N/A	N/A	if ( n1 >= r2 && n2 >= r2 )	if ( n1 >= r2 && n2 >= r3 )
4869	print " First \ n "	N/A	N/A	cout << " First\n " ;	cout << " First\n " ;
4870	else	N/A	N/A	else	else
4871	print " Second \ n "	N/A	N/A	cout << " Second\n " ;	cout << " Second\n " ;
4872	DUMMY	0.0	0.0	return 0;	DUMMY
4873	DUMMY	0.0	0.0	}	DUMMY
4874	DUMMY	0.0	0.0	int main() {	DUMMY
4875	a , b , r = int	N/A	N/A	int a , b , r ;	int a, b, r ;
4876	read a then b then r	N/A	N/A	cin >> a >> b >> r ;	cin >> a >> b >> r ;
4877	set r to r * 2	N/A	N/A	r *= 2 ;	r *= 2 ;
4878	if a or b is less than r	N/A	N/A	if ( a < r || b < r )	if ( a < r || b < r )
4879	print " Second "	N/A	N/A	cout << " Second " << endl ;	cout << " Second\n " ;
4880	else	N/A	N/A	else	else
4881	print " First "	N/A	N/A	cout << " First " << endl ;	puts ( " First " ) ;
4882	DUMMY	0.0	0.0	}	DUMMY
4883	DUMMY	0.0	0.0	return 0;	DUMMY
4884	DUMMY	0.0	0.0	}	DUMMY
4885	DUMMY	0.0	0.0	int main() {	DUMMY
4886	create integers a , b , r , m	N/A	N/A	int a , b , r , m ;	int a, b, r, m ;
4887	read a read b read r	N/A	N/A	cin >> a >> b >> r ;	cin >> a >> b >> r ;
4888	if a is greater than b	N/A	N/A	if ( a > b )	if ( a > b )
4889	set m to b	N/A	N/A	m = b ;	m = b ;
4890	else	N/A	N/A	else	else
4891	set m to a	N/A	N/A	m = a ;	m = a ;
4892	if m is greater than or equal to 2 * r	N/A	N/A	if ( m >= 2 * r )	if ( m >= 2 * r )
4893	print " First " print newline	N/A	N/A	cout << " First " << endl ;	cout << " First " << endl ;
4894	else	N/A	N/A	else	else
4895	print " Second " print newline	N/A	N/A	cout << " Second " << endl ;	cout << " Second " << endl ;
4896	DUMMY	0.0	0.0	return 0;	DUMMY
4897	DUMMY	0.0	0.0	}	DUMMY
4898	DUMMY	0.0	0.0	int main() {	DUMMY
4899	a , b , r = integers	N/A	N/A	int a , b , r ;	int a, b, r ;
4900	Read a , b , r	N/A	N/A	cin >> a >> b >> r ;	cin >> a >> b >> r ;
4901	if minimum value of a and b is greater than or equal to 2 * r	N/A	N/A	if ( min ( a , b ) >= 2 * r )	if ( min ( a, b ) >= 2 * r )
4902	print First and a new line	N/A	N/A	cout << " First " << endl ;	cout << " First\n " ;
4903	else do the following	N/A	N/A	else	else
4904	print Second and a new line	N/A	N/A	cout << " Second " << endl ;	cout << " Second\n " ;
4905	DUMMY	0.0	0.0	return 0;	DUMMY
4906	DUMMY	0.0	0.0	}	DUMMY
4907	DUMMY	0.0	0.0	int main() {	DUMMY
4908	create int min , height , width , radius	N/A	N/A	int min , height , width , radius ;	int min, height, width, radius ;
4909	while read height , width , radius	N/A	N/A	while ( cin >> height >> width >> radius )	while ( cin >> height >> width >> radius )
4910	if heigth less than width	N/A	N/A	if ( height < width )	if ( heigth < width )
4911	set min to height	N/A	N/A	min = height ;	min = height ;
4912	else	N/A	N/A	else	else
4913	min = width	N/A	N/A	min = width ;	min = width ;
4914	assign radius * 2 to radius	N/A	N/A	radius = radius * 2 ;	radius *= 2 ;
4915	if min > = radius	N/A	N/A	if ( min >= radius )	if ( min >= radius )
4916	print First	N/A	N/A	cout << " First " << endl ;	cout << " First\n " ;
4917	else	N/A	N/A	else	else
4918	print Second	N/A	N/A	cout << " Second " << endl ;	cout << " Second\n " ;
4919	DUMMY	0.0	0.0	}	DUMMY
4920	DUMMY	0.0	0.0	return 0;	DUMMY
4921	DUMMY	0.0	0.0	}	DUMMY
4922	DUMMY	0.0	0.0	int main() {	DUMMY
4923	define ints a , b , and r	N/A	N/A	int a , b , r ;	int a, b, r ;
4924	read a , b , r	N/A	N/A	cin >> a >> b >> r ;	cin >> a >> b >> r ;
4925	if 2 r < = a and 2 r < = b	N/A	N/A	if ( 2 * r <= a && 2 * r <= b )	if ( ( 2 r <= a ) && ( 2r <= b ) )
4926	print First and newline	N/A	N/A	cout << " First\n " ;	cout << " First " << endl ;
4927	else . . .	N/A	N/A	else	else
4928	print Second followed by newline	N/A	N/A	cout << " Second\n " ;	cout << " Second " << endl ;
4929	DUMMY	0.0	0.0	return 0;	DUMMY
4930	DUMMY	0.0	0.0	}	DUMMY
4931	DUMMY	0.0	0.0	int main() {	DUMMY
4932	integers = a , b , r	N/A	N/A	int a , b , r ;	int a, b, r ;
4933	read a , b , r	N/A	N/A	cin >> a >> b >> r ;	cin >> a >> b >> r ;
4934	multiply r by 2	N/A	N/A	r *= 2 ;	r *= 2 ;
4935	if r is greater than minimum of a or b then proceed with the following	N/A	N/A	if ( r > min ( a , b ) )	if ( r > min ( a, b ) )
4936	output Second	N/A	N/A	cout << " Second " << ' \n ' ;	cout << " Second\n " ;
4937	else	N/A	N/A	else	else
4938	output First	N/A	N/A	cout << " First " << ' \n ' ;	cout << " First\n " ;
4939	DUMMY	0.0	0.0	}	DUMMY
4940	DUMMY	0.0	0.0	int main() {	DUMMY
4941	define ints n , a , b , c	N/A	N/A	int n , a , b , c ;	int n, a, b, c ;
4942	read a , b , c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
4943	if a < c * 2 or b < c * 2	N/A	N/A	if ( a < c * 2 || b < c * 2 )	if ( a < c * 2 || b < c + 2 )
4944	print " Second " and newline	N/A	N/A	cout << " Second " << endl ;	cout << " Second " << endl ;
4945	otherwise	N/A	N/A	else	else
4946	print " First " and a newline	N/A	N/A	cout << " First " << endl ;	cout << " First " <<'\n';
4947	DUMMY	0.0	0.0	}	DUMMY
4948	DUMMY	0.0	0.0	int main() {	DUMMY
4949	n , m , r = integers	N/A	N/A	int n , m , r ;	int n, m, r ;
4950	while read n , m , r	N/A	N/A	while ( cin >> n >> m >> r )	while ( cin >> n >> m >> r )
4951	if r * 2 < = n and r * 2 < = m	N/A	N/A	if ( r * 2 <= n && r * 2 <= m )	if ( r * 2 <= n && r * 1 <= m )
4952	print First	N/A	N/A	cout << " First " << endl ;	cout << " First\n " ;
4953	else	N/A	N/A	else	else
4954	print Second	N/A	N/A	cout << " Second " << endl ;	cout << " Second " << endl ;
4955	DUMMY	0.0	0.0	}	DUMMY
4956	DUMMY	0.0	0.0	}	DUMMY
4957	a , b , r = integers	N/A	N/A	int a , b , r ;	int a, b, r ;
4958	DUMMY	0.0	0.0	int main() {	DUMMY
4959	Read a , b , r	N/A	N/A	cin >> a >> b >> r ;	cin >> a >> b >> r ;
4960	if a is less than r * 2 OR b is less than r * 2	N/A	N/A	if ( a < r * 2 || b < r * 2 )	if ( a < r * 2 || b < r + 2 )
4961	print Second and a new line	N/A	N/A	cout << " Second " << endl ;	cout << " Second " << endl ;
4962	else do the following	N/A	N/A	else	else
4963	print First and a new line	N/A	N/A	cout << " First " << endl ;	cout << " First\n " ;
4964	DUMMY	0.0	0.0	return 0;	DUMMY
4965	DUMMY	0.0	0.0	}	DUMMY
4966	DUMMY	0.0	0.0	int main() {	DUMMY
4967	create integers a , b , r	N/A	N/A	int a , b , r ;	int a, b, r ;
4968	read a read b read r	N/A	N/A	cin >> a >> b >> r ;	cin >> a >> b >> r ;
4969	if a is greater than or equal to b	N/A	N/A	if ( a >= b )	if ( a >= b )
4970	if ( 2 * r is less than or equal to b )	N/A	N/A	if ( 2 * r <= b )	if ( 2 * r <= b )
4971	print " First \ n "	N/A	N/A	cout << " First\n " ;	cout << " First\n " ;
4972	else	N/A	N/A	else	else
4973	print " Second \ n "	N/A	N/A	cout << " Second\n " ;	cout << " Second\n " ;
4974	else	N/A	N/A	else	else
4975	if ( 2 * r is less than or equal to a )	N/A	N/A	if ( 2 * r <= a )	if ( 2 * r <= a )
4976	print " First \ n "	N/A	N/A	cout << " First\n " ;	cout << " First\n " ;
4977	else	N/A	N/A	else	else
4978	print " Second \ n "	N/A	N/A	cout << " Second\n " ;	cout << " Second\n " ;
4979	DUMMY	0.0	0.0	}	DUMMY
4980	DUMMY	0.0	0.0	return 0;	DUMMY
4981	DUMMY	0.0	0.0	}	DUMMY
4982	DUMMY	0.0	0.0	int main() {	DUMMY
4983	x , y , r = integers	N/A	N/A	int x , y , r ;	int x, y, r ;
4984	read x , y , r	N/A	N/A	cin >> x >> y >> r ;	cin >> x >> y >> r ;
4985	if x < r * 2 or y < r * 2	N/A	N/A	if ( x < r * 2 || y < r * 2 )	if ( x < r * 2 || y < r + 2 )
4986	print Second	N/A	N/A	cout << " Second\n " ;	cout << " Second\n " ;
4987	else	N/A	N/A	else	else
4988	print First	N/A	N/A	cout << " First\n " ;	cout << " First " << endl ;
4989	DUMMY	0.0	0.0	return 0;	DUMMY
4990	DUMMY	0.0	0.0	}	DUMMY
4991	create long long int mod = 1000000007	N/A	N/A	long long int mod = 1000000007 ;	long long int mod = 1000000007 ;
4992	DUMMY	0.0	0.0	int main() {	DUMMY
4993	let a , b and r be integers	N/A	N/A	int a , b , r ;	int a, b, r ;
4994	read a , b and r	N/A	N/A	cin >> a >> b >> r ;	cin >> a >> b >> r ;
4995	if 2 * r is greater than min ( a , b )	N/A	N/A	if ( 2 * r > min ( a , b ) )	if ( 2 * r > min ( a, b ) )
4996	print Second	N/A	N/A	cout << " Second " << endl ;	cout << " Second " << endl ;
4997	else	N/A	N/A	else	else
4998	print First	N/A	N/A	cout << " First " << endl ;	cout << " First " << endl ;
4999	DUMMY	0.0	0.0	}	DUMMY
5000	DUMMY	0.0	0.0	return 0;	DUMMY
5001	DUMMY	0.0	0.0	}	DUMMY
5002	DUMMY	0.0	0.0	int main() {	DUMMY
5003	a , b , r = integers	N/A	N/A	int a , b , r ;	int a, b, r ;
5004	read a , b , r	N/A	N/A	cin >> a >> b >> r ;	cin >> a >> b >> r ;
5005	if 2 * r < = min ( a , b )	N/A	N/A	if ( 2 * r <= min ( a , b ) )	if ( 2 * r <= min ( a, b ) )
5006	print First	N/A	N/A	cout << " First " << endl ;	cout << " First " << endl ;
5007	else	N/A	N/A	else	else
5008	print Second	N/A	N/A	cout << " Second " << endl ;	cout << " Second " << endl ;
5009	DUMMY	0.0	0.0	return 0;	DUMMY
5010	DUMMY	0.0	0.0	}	DUMMY
5011	DUMMY	0.0	0.0	int main() {	DUMMY
5012	let k , b , n , t be long integers	N/A	N/A	long long k , b , n , t ;	long long k, b, n, t ;
5013	read k , b , n , t	N/A	N/A	cin >> k >> b >> n >> t ;	cin >> k >> b >> n >> t ;
5014	let the value of long integer z is equal to k + b	N/A	N/A	long long z = k + b ;	long long z = k + b ;
5015	let g be a integer with value g is equal to n	N/A	N/A	int g = n ;	int g = n ;
5016	while ( z is less than t and g is greater than 0 )	N/A	N/A	while ( z < t && g > 0 )	while ( z < t && g > 0 )
5017	decrease g by 1	N/A	N/A	g -- ;	g -- ;
5018	let the value of z is equal to z * k + b	N/A	N/A	z = z * k + b ;	z = z * k + b ;
5019	DUMMY	0.0	0.0	}	DUMMY
5020	if ( z is equal to t ) , decrease g by 1	N/A	N/A	if ( z == t ) { g -- ; }	if ( z == t ) g -- ;
5021	print g and newline	N/A	N/A	cout << g << endl ;	cout << g << endl ;
5022	DUMMY	0.0	0.0	}	DUMMY
5023	DUMMY	0.0	0.0	int main() {	DUMMY
5024	create long long u = 1	N/A	N/A	long long u = 1 ;	long long u = 1 ;
5025	create long long k , b , n and t	N/A	N/A	long long k , b , n , t ;	long long k, b, n, t ;
5026	read k , b , n and t	N/A	N/A	cin >> k >> b >> n >> t ;	cin >> k >> b >> n >> t ;
5027	if k = 1	N/A	N/A	if ( k == 1 )	if ( k == 1 )
5028	create long long x = 1	N/A	N/A	long long x = 1 ;	long long x = 1 ;
5029	for i = 1 to n inclusive	N/A	N/A	for ( long long i = 1 ; i <= n ; i ++ ) x += b ;	for ( long long i = 1 ; i <= n ; i ++ )
5030	create long long variable r = t	N/A	N/A	long long r = t ;	long long r = t ;
5031	create long long variable ans = 0	N/A	N/A	long long ans = 0 ;	long long ans = 0 ;
5032	while r is less than x	N/A	N/A	while ( r < x )	while ( r < x )
5033	increase ans by one	N/A	N/A	ans ++ ;	ans ++ ;
5034	increase r by b	N/A	N/A	r += b ;	r += b ;
5035	DUMMY	0.0	0.0	}	DUMMY
5036	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
5037	DUMMY	0.0	0.0	return 0;	DUMMY
5038	DUMMY	0.0	0.0	}	DUMMY
5039	create long long r = 0	N/A	N/A	long long r = 0 ;	long long r = 0 ;
5040	while u * ( k - 1 + b ) < = ( k * t - t + b )	N/A	N/A	while ( u * ( k - 1 + b ) <= ( k * t - t + b ) )	while ( u * ( k - 1 + b ) <= ( k * t - t + b) )
5041	multiply u by k	N/A	N/A	u *= k ;	u *= k ;
5042	increase r by one	N/A	N/A	r ++ ;	r ++ ;
5043	DUMMY	0.0	0.0	}	DUMMY
5044	print max of n - r + 1 and 0LL	N/A	N/A	cout << max ( n - r + 1 , 0LL ) << endl ;	cout << max ( n - r + 1, 0LL ) << endl ;
5045	DUMMY	0.0	0.0	}	DUMMY
5046	DUMMY	0.0	0.0	int main() {	DUMMY
5047	l , b , n , t = long long	N/A	N/A	long long k , b , n , t ;	long long l, b, n, t ;
5048	read k , b , n , t	N/A	N/A	cin >> k >> b >> n >> t ;	cin >> k >> b >> n >> t ;
5049	set x = 1 and cnt = - 1	N/A	N/A	long long x = 1 , cnt = - 1 ;	long long x = 1, cnt = - 1 ;
5050	for i = 1 to n inclusive	N/A	N/A	for ( long long i = 1 ; i <= n ; ++ i )	for ( int i = 1 ; i <= n ; i ++ )
5051	set x = k * x + b	N/A	N/A	x = k * x + b ;	x = k * x + b ;
5052	if x is greater than t	N/A	N/A	if ( x > t )	if ( x > t )
5053	set cnt = i - 1	N/A	N/A	cnt = i - 1 ;	cnt = i - 1 ;
5054	stop the loop	N/A	N/A	break ;	break ;
5055	DUMMY	0.0	0.0	}	DUMMY
5056	DUMMY	0.0	0.0	}	DUMMY
5057	if cnt is equal to - 1	N/A	N/A	if ( cnt == - 1 )	if ( cnt == - 1 )
5058	print 0	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
5059	otherwise	N/A	N/A	else	else
5060	print n - cnt	N/A	N/A	cout << n - cnt << endl ;	cout << n - cnt << endl ;
5061	DUMMY	0.0	0.0	return 0;	DUMMY
5062	DUMMY	0.0	0.0	}	DUMMY
5063	DUMMY	0.0	0.0	int main() {	DUMMY
5064	create long long k , b , n , z	N/A	N/A	long long k , b , n , z ;	long long k, b, n, z ;
5065	read k , b , n and z	N/A	N/A	cin >> k >> b >> n >> z ;	cin >> k >> b >> n >> z ;
5066	set x = 1	N/A	N/A	int x = 1 ;	long long x = 1 ;
5067	while n and k * x + b equal to or greater than z	N/A	N/A	while ( n && k * x + b <= z )	while ( n && k * x + b >= z )
5068	assign k * x + b to x	N/A	N/A	x = k * x + b ;	x = k * x + b ;
5069	decrement n	N/A	N/A	n -- ;	n -- ;
5070	DUMMY	0.0	0.0	}	DUMMY
5071	print n and a new line	N/A	N/A	cout << n << endl ;	cout << n << endl ;
5072	DUMMY	0.0	0.0	return 0;	DUMMY
5073	DUMMY	0.0	0.0	}	DUMMY
5074	k , b , n , t , ans = integers	N/A	N/A	int k , b , n , t , ans ;	int k, b, n, t, ans ;
5075	assign 1 to m	N/A	N/A	long long m = 1 ;	int m = 1 ;
5076	DUMMY	0.0	0.0	int main() {	DUMMY
5077	read k , b , n , t	N/A	N/A	cin >> k >> b >> n >> t ;	cin >> k >> b >> n >> t ;
5078	while m equal to or greater than t , assign m * k + b to m , increment ans	N/A	N/A	while ( m <= t ) m = m * k + b , ans ++ ;	while ( m >= t ) m = m * k + b, ans ++ ;
5079	if n > = ans	N/A	N/A	if ( n >= ans )	if ( n >= ans )
5080	print n - ans + 1	N/A	N/A	cout << n - ans + 1 << endl ;	cout << n - ans + 1 << endl ;
5081	otherwise	N/A	N/A	else	else
5082	print 0 and a new line	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
5083	DUMMY	0.0	0.0	return 0;	DUMMY
5084	DUMMY	0.0	0.0	}	DUMMY
5085	DUMMY	0.0	0.0	int main() {	DUMMY
5086	declare double variables k , b , n and t	N/A	N/A	double k , b , n , t ;	double k, b, n, t ;
5087	read k , b , n and t	N/A	N/A	cin >> k >> b >> n >> t ;	cin >> k >> b >> n >> t ;
5088	declare integer x = 0	N/A	N/A	int x = 0 ;	int x = 0 ;
5089	declare double variable dub = ( t * ( k - 1 ) + b ) / ( b + k - 1 )	N/A	N/A	double dub = ( t * ( k - 1 ) + b ) / ( b + k - 1 ) ;	double dub = ( t * ( k - 1 ) + b ) / ( b + k - 2 ) ;
5090	if k = 1	N/A	N/A	if ( k == 1 )	if ( k == 1 )
5091	dub = ( t - 1 ) / b	N/A	N/A	dub = ( t - 1 ) / b ;	dub = ( t - 1 ) / b ;
5092	set value of x to dub casted to integer	N/A	N/A	x = ( int ) dub ;	x = ( int ) dub ;
5093	if x is greater than n	N/A	N/A	if ( x > n ) { x = n ; }	if ( x > n )
5094	else	N/A	N/A	else	else
5095	for i = 1 to n + 1 inclusive	N/A	N/A	for ( int i = 1 ; i <= n + 1 ; i ++ )	for ( int i = 1 ; i <= n + 1 ; ++ i )
5096	if pow ( k , i ) > = dub + 1	N/A	N/A	if ( pow ( k , i ) >= ( int ) dub + 1 )	if ( pow ( k, i ) >= ( dub + 1 ) )
5097	set value of x to i - 1	N/A	N/A	x = i - 1 ;	x = i - 1 ;
5098	stop the loop	N/A	N/A	break ;	break ;
5099	DUMMY	0.0	0.0	}	DUMMY
5100	if i = n + 1 , assign value of n to x	N/A	N/A	if ( i == n + 1 ) { x = n ; }	if ( i == n + 1 ) x = n ;
5101	DUMMY	0.0	0.0	}	DUMMY
5102	DUMMY	0.0	0.0	}	DUMMY
5103	create integer ans = n - x	N/A	N/A	int ans = n - x ;	int ans = n - x ;
5104	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
5105	DUMMY	0.0	0.0	return 0;	DUMMY
5106	DUMMY	0.0	0.0	}	DUMMY
5107	DUMMY	0.0	0.0	int main() {	DUMMY
5108	let c1 , c2 , x , k , i , b , n , t , cnt be long long with cnt = 0	N/A	N/A	long long c1 , c2 , x , k , i , b , n , t , cnt = 0 ;	long long c1, c2, x, k, i, b, n, t, cnt = 0 ;
5109	read k , b , n , t	N/A	N/A	cin >> k >> b >> n >> t ;	cin >> k >> b >> n >> t ;
5110	set c1 = b + t * ( k - 1 )	N/A	N/A	c1 = b + t * ( k - 1 ) ;	c1 = b + t * ( k - 1 ) ;
5111	set c2 = b + k - 1	N/A	N/A	c2 = b + k - 1 ;	c2 = b + k - 1 ;
5112	set cnt = 1	N/A	N/A	cnt = 1 ;	cnt = 1 ;
5113	set x = n	N/A	N/A	x = n ;	x = n ;
5114	if k not equal to 1 do the following	N/A	N/A	if ( k != 1 )	if ( k!= 1 )
5115	for i = n iterate while i is less than or equal to 0 having i decrease by 1 after each iteration	N/A	N/A	for ( i = n ; i >= 0 ; i -- )	for ( int i = n ; i <= 0 ; i -- )
5116	if c1 is greater or equal to cnt * c2 do the following	N/A	N/A	if ( c1 >= cnt * c2 )	if ( c1 >= cnt * c2 )
5117	set x = i	N/A	N/A	x = i ;	x = i ;
5118	else do the following	N/A	N/A	else	else
5119	break out of the iteration loop	N/A	N/A	break ;	break ;
5120	set cnt = cnt * k	N/A	N/A	cnt *= k ;	cnt *= k ;
5121	DUMMY	0.0	0.0	}	DUMMY
5122	print x and one newline	N/A	N/A	cout << x << endl ;	cout << x << endl ;
5123	else do the following	N/A	N/A	else	else
5124	for i = 0 to n inclusive	N/A	N/A	for ( i = 0 ; i <= n ; i ++ )	for ( int i = 0 ; i <= n ; i ++ )
5125	if i * b is greater or equal to 1 + n * b - t break out of the iteration loop	N/A	N/A	if ( i * b >= 1 + n * b - t ) break ;	if ( i * b >= 1 + n * b - t ) break ;
5126	DUMMY	0.0	0.0	}	DUMMY
5127	print i and one newline	N/A	N/A	cout << i << endl ;	cout << i << endl ;
5128	DUMMY	0.0	0.0	}	DUMMY
5129	DUMMY	0.0	0.0	return 0;	DUMMY
5130	DUMMY	0.0	0.0	}	DUMMY
5131	in the function solve that takes long long k , b , n , t and returns long long	N/A	N/A	long long solve ( long long k , long long b , long long n , long long t )	long long solve ( long long k, long long b, long int n, long double t )
5132	if k is 1	N/A	N/A	if ( k == 1 )	if ( k == 1 )
5133	low , high = long long with low = - 1 , high = n	N/A	N/A	long long low = - 1 , high = n ;	long long low = - 1, high = n ;
5134	while high - low > 1	N/A	N/A	while ( high - low > 1 )	while ( high - low > 1 )
5135	mid = long long with mid = ( low + high ) / 2	N/A	N/A	long long mid = ( low + high ) / 2 ;	long long mid = ( low + high ) / 2 ;
5136	if 1 - t + b * ( n - mid ) < = 0	N/A	N/A	if ( 1 - t + b * ( n - mid ) <= 0 )	if ( 1 - t + b * ( n - mid ) <= 0 )
5137	high = mid	N/A	N/A	high = mid ;	high = mid ;
5138	else	N/A	N/A	else	else
5139	low = mid	N/A	N/A	low = mid ;	low = mid ;
5140	DUMMY	0.0	0.0	}	DUMMY
5141	DUMMY	0.0	0.0	}	DUMMY
5142	return high	N/A	N/A	return high ;	return high ;
5143	DUMMY	0.0	0.0	}	DUMMY
5144	answ = long long with answ = n	N/A	N/A	long long answ = n ;	long long answ = n ;
5145	pow = __float128 with pow = 1	N/A	N/A	__float128 pow = 1 ;	long long pow = __float64 ;
5146	while answ > 0 and ( k - 1 ) * ( pow * k - t ) + b * ( pow * k - 1 ) < = 0	N/A	N/A	while ( answ > 0 && ( k - 1 ) * ( pow * k - t ) + b * ( pow * k - 1 ) <= 0 )	while ( ( answ > 0 ) && ( k - 1 ) * ( pow * k - t ) + b * ( Pow * k + 1 ) <= 0 )
5147	pow = pow * k	N/A	N/A	pow *= k ;	pow *= k ;
5148	decrement answ	N/A	N/A	answ -- ;	answ -- ;
5149	DUMMY	0.0	0.0	}	DUMMY
5150	return answ	N/A	N/A	return answ ;	return answ ;
5151	DUMMY	0.0	0.0	}	DUMMY
5152	DUMMY	0.0	0.0	int main() {	DUMMY
5153	k , b , n , t = long long	N/A	N/A	long long k , b , n , t ;	long long k, b, n, t ;
5154	while read k , b , n , t , print solve ( k , b , n , t )	N/A	N/A	while ( cin >> k >> b >> n >> t ) { cout << solve ( k , b , n , t ) << endl ; }	while ( cin >> k >> b >> n >> t ) { cout << solve ( k, b, n, t ) << endl ; }
5155	DUMMY	0.0	0.0	return 0;	DUMMY
5156	DUMMY	0.0	0.0	}	DUMMY
5157	DUMMY	0.0	0.0	int main() {	DUMMY
5158	k , b , n , t , i , j , m , ans , r , x , xx = long long int with m = 0 , x = 1 , xx = 0	N/A	N/A	long long int k , b , n , t , i , j , m = 0 , ans , r , x = 1 , xx = 0 ;	long long int k, b, n, t, i, j, m = 0, ans, r, x = 1, xx = 0 ;
5159	read k , b , n , t	N/A	N/A	cin >> k >> b >> n >> t ;	cin >> k >> b >> n >> t ;
5160	for i = 1 increment i	N/A	N/A	for ( i = 1 ; ; i ++ )	for ( i = 1 ; ; i ++ )
5161	r = ( x * k ) + b	N/A	N/A	r = ( x * k ) + b ;	r = ( x * k ) + b ;
5162	if r < = t	N/A	N/A	if ( r <= t )	if ( r <= t )
5163	increment m	N/A	N/A	m ++ ;	m ++ ;
5164	else	N/A	N/A	else	else
5165	break loop	N/A	N/A	break ;	break ;
5166	x = r	N/A	N/A	x = r ;	x = r ;
5167	DUMMY	0.0	0.0	}	DUMMY
5168	ans = n - m	N/A	N/A	ans = n - m ;	ans = n - m ;
5169	ans = max of xx and ans	N/A	N/A	ans = max ( xx , ans ) ;	ans = max ( xx, ans ) ;
5170	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
5171	DUMMY	0.0	0.0	}	DUMMY
5172	DUMMY	0.0	0.0	int main() {	DUMMY
5173	create long long integers k , b , n and t	N/A	N/A	long long int k , b , n , t ;	long long int k, b, n, t ;
5174	read k , b , n and t	N/A	N/A	cin >> k >> b >> n >> t ;	cin >> k >> b >> n >> t ;
5175	declare long long integer variable num = 1	N/A	N/A	long long int num = 1 ;	long long int num = 1 ;
5176	declare long long integer variable index = 0	N/A	N/A	long long int index = 0 ;	long long int index = 0 ;
5177	while num < = t	N/A	N/A	while ( num <= t )	while ( num <= t )
5178	num = k * num + b	N/A	N/A	num = k * num + b ;	num = k * num + b ;
5179	increment index	N/A	N/A	index ++ ;	index ++ ;
5180	DUMMY	0.0	0.0	}	DUMMY
5181	decrease index	N/A	N/A	index -- ;	index -- ;
5182	print max of 0ll and n - index and ' \ n '	N/A	N/A	cout << max ( 0ll , n - index ) << ' \n ' ;	cout << max ( 0ll, n - index ) <<'\n';
5183	DUMMY	0.0	0.0	}	DUMMY
5184	set constant integer M = 100 + 10	N/A	N/A	const int M = 100 + 10 ;	const int M = 100 + 10 ;
5185	DUMMY	0.0	0.0	int main() {	DUMMY
5186	create long long integer k , b , n , t	N/A	N/A	long long int k , b , n , t ;	long long int k, b, n, t ;
5187	read k , b , n , t	N/A	N/A	cin >> k >> b >> n >> t ;	cin >> k >> b >> n >> t ;
5188	if k = 1	N/A	N/A	if ( k == 1 )	if ( k == 1 )
5189	set z = 1 + n * b	N/A	N/A	long long int z = 1 + n * b ;	long long int z = 1 + n * b ;
5190	if z is equal to or less than t	N/A	N/A	if ( z <= t )	if ( z <= t )
5191	print 0	N/A	N/A	cout << " 0 " << endl ;	cout << 0 << endl ;
5192	otherwise	N/A	N/A	else	else
5193	set res = z - t	N/A	N/A	long long int res = z - t ;	res = z - t ;
5194	ans = res / b + ( res modulo b different from 0 )	N/A	N/A	long long int ans = res / b + ( res % b != 0 ) ;	ans = res / b + ( res % b!= 0 ) ;
5195	print and and a new line	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
5196	DUMMY	0.0	0.0	}	DUMMY
5197	otherwise	N/A	N/A	else	else
5198	set long long integer num1 = t * ( k - 1 ) + b	N/A	N/A	long long int num1 = t * ( k - 1 ) + b ;	long long int num1 = t * ( k - 1 ) + b ;
5199	num2 = k - 1 + b	N/A	N/A	long long int num2 = k - 1 + b ;	num2 = k - 1 + b ;
5200	set num3 = num1 / num2	N/A	N/A	long long int num3 = num1 / num2 ;	num3 = num1 / num2 ;
5201	set num1 equal to 1	N/A	N/A	long long int num = 1 ;	num1 = 1 ;
5202	set integer tm = 0	N/A	N/A	int tm = 0 ;	int tm = 0 ;
5203	while num * k is equal to or less than num3	N/A	N/A	while ( num * k <= num3 )	while ( num * k <= num3 )
5204	set num = num * k	N/A	N/A	num = num * k ;	num *= k ;
5205	increment tm	N/A	N/A	tm ++ ;	tm ++ ;
5206	DUMMY	0.0	0.0	}	DUMMY
5207	set m = n - tm	N/A	N/A	int m = n - tm ;	m = n - tm ;
5208	m = max between m and 0	N/A	N/A	m = max ( m , 0 ) ;	m = max ( m, 0 ) ;
5209	print m	N/A	N/A	cout << m << endl ;	cout << m << endl ;
5210	DUMMY	0.0	0.0	}	DUMMY
5211	DUMMY	0.0	0.0	return 0;	DUMMY
5212	DUMMY	0.0	0.0	}	DUMMY
5213	create long long ans , set k , b , n , t , x to 1	N/A	N/A	long long k , b , n , t , x = 1 , ans ;	long long ans, k, b, n, t, x = 1 ;
5214	DUMMY	0.0	0.0	int main() {	DUMMY
5215	read k , b , n and t	N/A	N/A	cin >> k >> b >> n >> t ;	cin >> k >> b >> n >> t ;
5216	while x < = t , set x = x * k + b , increment ans	N/A	N/A	while ( x <= t ) x = x * k + b , ans ++ ;	while ( x <= t ) x = x * k + b, ans ++ ;
5217	print max between 011 and n - ans + 1	N/A	N/A	cout << max ( 0ll , n - ans + 1 ) << endl ;	cout << max ( 011, n - ans + 1 ) << endl ;
5218	DUMMY	0.0	0.0	return 0;	DUMMY
5219	DUMMY	0.0	0.0	}	DUMMY
5220	DUMMY	0.0	0.0	int main() {	DUMMY
5221	k , b , n , t = long longs	N/A	N/A	long long k , b , n , t ;	long long k, b, n, t ;
5222	read k , b , n and t	N/A	N/A	cin >> k >> b >> n >> t ;	cin >> k >> b >> n >> t ;
5223	declare cnt as long long set to 1	N/A	N/A	long long cnt = 1 ;	long long cnt = 1 ;
5224	while c less than or equal to t	N/A	N/A	while ( cnt <= t )	while ( c <= t )
5225	set cnt to cnt * k + b	N/A	N/A	cnt = cnt * k + b ;	cnt *= k + b ;
5226	decrement n	N/A	N/A	n -- ;	n -- ;
5227	DUMMY	0.0	0.0	}	DUMMY
5228	print max ( 0LL , n + 1 )	N/A	N/A	cout << max ( 0LL , n + 1 ) << endl ;	cout << max ( 0LL, n + 1 ) << endl ;
5229	DUMMY	0.0	0.0	return 0;	DUMMY
5230	DUMMY	0.0	0.0	}	DUMMY
5231	long long function bigmod with long long arguments a , b and m	N/A	N/A	long long bigmod ( long long a , long long b , long long m )	long long bigmod ( long long a [ ], long long b [ ] and long long m )
5232	if b = 0	N/A	N/A	if ( b == 0 ) return 1 % m ;	if ( b == 0 )
5233	x = bigmod of a , b / 2 and m	N/A	N/A	long long x = bigmod ( a , b / 2 , m ) ;	long long x = bigmod ( a, b / 2, m ) ;
5234	x = ( x % m * x % m ) % m	N/A	N/A	x = ( x % m * x % m ) % m ;	x = ( x % m * x % n ) % m ;
5235	if b % 2 ) x = ( x % m * a % m	N/A	N/A	if ( b % 2 ) x = ( x % m * a % m ) % m ;	if ( b % 2 ) x = ( x % m * a % m ) ;
5236	return x % m	N/A	N/A	return x % m ;	return x % m ;
5237	DUMMY	0.0	0.0	}	DUMMY
5238	long long function po with long long arguments a and b	N/A	N/A	long long po ( long long a , long long b )	long long po ( long long a, long long b )
5239	return 1 if a = 1	N/A	N/A	if ( a == 1 ) return 1 ;	if ( a == 1 ) return 1 ;
5240	declare long long r = 1	N/A	N/A	long long r = 1 ;	long long r = 1 ;
5241	decrement b and loop , while b > 0 ; multiply r by a in that loop	N/A	N/A	while ( b -- ) r *= a ;	while ( b -- ) r *= a ;
5242	return r	N/A	N/A	return r ;	return r ;
5243	DUMMY	0.0	0.0	}	DUMMY
5244	DUMMY	0.0	0.0	int main() {	DUMMY
5245	declare long long variables k , b , n , t and s where s = 0	N/A	N/A	long long k , b , n , t , s = 0 ;	long long k, b, n, t, s = 0 ;
5246	read k , b , n and t	N/A	N/A	cin >> k >> b >> n >> t ;	cin >> k >> b >> n >> t ;
5247	for i = 0 to n inclusive	N/A	N/A	for ( int i = 0 ; i <= n ; i ++ )	for ( long long i = 0 ; i <= n ; i ++ )
5248	assign value of s + po ( k , i ) to new long long v	N/A	N/A	long long v = s + po ( k , i ) ;	long long v = s + po ( k, i ) ;
5249	if v > = t	N/A	N/A	if ( v >= t )	if ( v >= t )
5250	if v is greater than t	N/A	N/A	if ( v > t )	if ( v > t )
5251	print n - i + 1	N/A	N/A	cout << n - i + 1 << endl ;	cout << n - i + 1 << endl ;
5252	else	N/A	N/A	else	else
5253	print n - i	N/A	N/A	cout << n - i << endl ;	cout << n - i << endl ;
5254	DUMMY	0.0	0.0	return 0;	DUMMY
5255	DUMMY	0.0	0.0	}	DUMMY
5256	increase s by b * po ( k , i )	N/A	N/A	s += b * po ( k , i ) ;	s += b * po ( k, i ) ;
5257	DUMMY	0.0	0.0	}	DUMMY
5258	print " 0 "	N/A	N/A	puts ( " 0 " ) ;	cout << " 0 " ;
5259	DUMMY	0.0	0.0	}	DUMMY
5260	DUMMY	0.0	0.0	int main() {	DUMMY
5261	k , b , n , t = integers	N/A	N/A	long long k , b , n , t ;	int k, b, n, t ;
5262	Read k , b , n , t	N/A	N/A	cin >> k >> b >> n >> t ;	cin >> k >> b >> n >> t ;
5263	sum = integer with 1	N/A	N/A	long long sum = 1 ;	int sum = 1 ;
5264	cnt = integer with 0	N/A	N/A	int cnt = 0 ;	int cnt = 0 ;
5265	while sum is less than or equal to t	N/A	N/A	while ( sum <= t )	while ( sum <= t )
5266	set sum to sum * k + b	N/A	N/A	sum = sum * k + b ;	sum = sum * k + b ;
5267	increment cnt	N/A	N/A	cnt ++ ;	cnt ++ ;
5268	DUMMY	0.0	0.0	}	DUMMY
5269	if cnt is greater than n	N/A	N/A	if ( cnt > n )	if ( cnt > n )
5270	print 0 and a new line	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
5271	else do the following	N/A	N/A	else	else
5272	print n - cnt + 1 and a new line	N/A	N/A	cout << n - cnt + 1 << endl ;	cout << n - cnt + 1 << endl ;
5273	DUMMY	0.0	0.0	return 0;	DUMMY
5274	DUMMY	0.0	0.0	}	DUMMY
5275	long long function solve with long long arguments k , b , n and t	N/A	N/A	long long solve ( long long k , long long b , long long n , long long t )	long long solve ( long long k, long long b, long int n, long double t )
5276	if k = 1	N/A	N/A	if ( k == 1 )	if ( k == 1 )
5277	declare long longs low = - 1 and high = n	N/A	N/A	long long low = - 1 , high = n ;	long long low = - 1, high = n ;
5278	while high - low is greater than 1	N/A	N/A	while ( high - low > 1 )	while ( high - low > 1 )
5279	declare long long variable mid = ( low + high ) / 2	N/A	N/A	long long mid = ( low + high ) / 2 ;	long long mid = ( low + high ) / 2 ;
5280	if 1 - t + b * ( n - mid ) < = 0	N/A	N/A	if ( 1 - t + b * ( n - mid ) <= 0 )	if ( 1 - t + b * ( n - mid ) <= 0 )
5281	assign value of mid to high	N/A	N/A	high = mid ;	high = mid ;
5282	else	N/A	N/A	else	else
5283	assign value of mid to low	N/A	N/A	low = mid ;	low = mid ;
5284	DUMMY	0.0	0.0	}	DUMMY
5285	DUMMY	0.0	0.0	}	DUMMY
5286	return high	N/A	N/A	return high ;	return high ;
5287	DUMMY	0.0	0.0	}	DUMMY
5288	declare long long variable answ = n	N/A	N/A	long long answ = n ;	long long answ = n ;
5289	declare __float128 variable pow = 1	N/A	N/A	__float128 pow = 1 ;	const __float64_pow = 1 ;
5290	while answ > 0 & & ( k - 1 ) * ( pow * k - t ) + b * ( pow * k - 1 ) < = 0	N/A	N/A	while ( answ > 0 && ( k - 1 ) * ( pow * k - t ) + b * ( pow * k - 1 ) <= 0 )	while ( answ > 0 && ( ( k - 1 ) * ( pow * k - t ) + b * ( Pow * k + 1 ) <= 0 ) ) { pow ++ ; }
5291	multiply pow by k	N/A	N/A	pow *= k ;	pow *= k ;
5292	decrease answ	N/A	N/A	answ -- ;	answ -- ;
5293	DUMMY	0.0	0.0	}	DUMMY
5294	return answ	N/A	N/A	return answ ;	return answ ;
5295	DUMMY	0.0	0.0	}	DUMMY
5296	DUMMY	0.0	0.0	int main() {	DUMMY
5297	declare long long variables k , b , n and t	N/A	N/A	long long k , b , n , t ;	long long k, b, n, t ;
5298	while car read k , b , n and t , print solve ( k , b , n , t )	N/A	N/A	while ( cin >> k >> b >> n >> t ) { cout << solve ( k , b , n , t ) << endl ; }	while ( cin >> k >> b >> n >> t ) { cout << solve ( k, b, n, t ) << endl ; }
5299	DUMMY	0.0	0.0	return 0;	DUMMY
5300	DUMMY	0.0	0.0	}	DUMMY
5301	point , num_diff and num are maps from string to int	N/A	N/A	map < string , int > point , num_diff , num ;	map < string, int > point, num_diff, num ;
5302	declare string variable s	N/A	N/A	string s ;	string s ;
5303	name is an array of strings with size 56	N/A	N/A	string name [ 56 ] ;	string name [ 56 ] ;
5304	boolean function cmp with string arguments s1 and s2	N/A	N/A	bool cmp ( string s1 , string s2 )	bool cmp ( string s1, string s2 )
5305	if point [ s1 ] ! = point [ s2 ] return point [ s1 ] > point [ s2 ]	N/A	N/A	if ( point [ s1 ] != point [ s2 ] ) return point [ s1 ] > point [ s2 ] ;	if ( points [ s1 ]!= point [ s2 ] ) { return point [ 1 ] > point [ 2 ] ; }
5306	if num_diff [ s1 ] ! = num_diff [ s2 ] return num_diff [ s1 ] > num_diff [ s2 ]	N/A	N/A	if ( num_diff [ s1 ] != num_diff [ s2 ] ) return num_diff [ s1 ] > num_diff [ s2 ] ;	if ( num_diff [ s1 ]!= num_ diff [ s2 ] ) { return ( numicdiff [ S1 ] > num_bumb [ s3 ] ) ; }
5307	return num [ s1 ] > num [ s2 ]	N/A	N/A	return num [ s1 ] > num [ s2 ] ;	return num [ s1 ] > num [ S2 ] ;
5308	DUMMY	0.0	0.0	}	DUMMY
5309	let s1 and s2 be strings	N/A	N/A	string s1 , s2 ;	string s1, s2 ;
5310	declare integer variable n	N/A	N/A	int n ;	int n ;
5311	num1 and num2 are integers	N/A	N/A	int num1 , num2 ;	int num1, num2 ;
5312	c = character	N/A	N/A	char c ;	char c ;
5313	DUMMY	0.0	0.0	int main() {	DUMMY
5314	read n	N/A	N/A	cin >> n ;	cin >> n ;
5315	for i = 1 to n inclusive read name [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { cin >> name [ i ] ; }	for ( int i = 1 ; i <= n ; i ++ ) cin >> name [ i ] ;
5316	for integer i = 1 to ( n * ( n - 1 ) ) > > 1 inclusive	N/A	N/A	for ( int i = 1 ; i <= ( n * ( n - 1 ) ) >> 1 ; i ++ )	for ( int i = 1 ; ( n * ( n - 1 ) ) >> 1 ; i ++ )
5317	read s , num1 , c and num2	N/A	N/A	cin >> s >> num1 >> c >> num2 ;	cin >> s >> num1 >> c >> num2 ;
5318	s1 = substring of s from the start to the first character ' - '	N/A	N/A	s1 = s . substr ( 0 , s . find ( " - " ) ) ;	s1 = s. substr ( 1,'-') ;
5319	s2 = substring of s from the first character ' - ' to the end	N/A	N/A	s2 = s . substr ( s . find ( " - " ) + 1 ) ;	s2 = s. substr ( 1,'-') ;
5320	if num1 is greater than num2 , add 3 to point [ s1 ]	N/A	N/A	if ( num1 > num2 ) { point [ s1 ] += 3 ; }	if ( num1 > num2 ) point [ s1 ] += 3 ;
5321	if num1 is less than num2 , add 3 to point [ s2 ]	N/A	N/A	if ( num1 < num2 ) { point [ s2 ] += 3 ; }	if ( num1 < num2 ) point [ s2 ] += 3 ;
5322	if num1 = num2	N/A	N/A	if ( num1 == num2 )	if ( num1 == num2 )
5323	increase point [ s1 ]	N/A	N/A	point [ s1 ] ++ ;	point [ s1 ] ++ ;
5324	increase point [ s2 ]	N/A	N/A	point [ s2 ] ++ ;	point [ s2 ] ++ ;
5325	DUMMY	0.0	0.0	}	DUMMY
5326	increase num [ s1 ] by num1	N/A	N/A	num [ s1 ] += num1 ;	num [ s1 ] += num1 ;
5327	increase num [ s2 ] by num2	N/A	N/A	num [ s2 ] += num2 ;	num [ s2 ] += num2 ;
5328	increase num_diff [ s1 ] by num1 - num2	N/A	N/A	num_diff [ s1 ] += num1 - num2 ;	num_diff [ s1 ] += num1 - num2 ;
5329	increase num_diff [ s2 ] by num2 - num1	N/A	N/A	num_diff [ s2 ] += num2 - num1 ;	num_diff [ s2 ] += num2 - num1 ;
5330	DUMMY	0.0	0.0	}	DUMMY
5331	sort name from name + 1 to name + n + 1 using comparator cmp	N/A	N/A	sort ( name + 1 , name + n + 1 , cmp ) ;	sort ( name + 1, name + ( n + 1 ), cmp ) ;
5332	sort name from name + 1 to name + ( n / 2 + 1 ) using comparator cmp	N/A	N/A	sort ( name + 1 , name + ( n / 2 + 1 ) ) ;	sort ( name + 1, name + ( n / 2 + 1 ), cmp ) ;
5333	for integer i = 1 to ( n > > 1 ) inclusive print name [ i ] and a new line	N/A	N/A	for ( int i = 1 ; i <= ( n >> 1 ) ; i ++ ) { cout << name [ i ] << endl ; }	for ( int i = 1 ; i <= ( n >> 1 ) ; i ++ ) cout << name [ i ] << endl ;
5334	DUMMY	0.0	0.0	return 0;	DUMMY
5335	DUMMY	0.0	0.0	}	DUMMY
5336	scored , conceed , points are maps of string to int	N/A	N/A	map < string , int > scored , conceed , points ;	map < string, int > scored, conceed, points ;
5337	vec and a are vectors of strings	N/A	N/A	vector < string > vec , a ;	vector < string > vec, a ;
5338	boolean function cmp with string arguments a and b	N/A	N/A	bool cmp ( string a , string b )	bool cmp ( string a, string b )
5339	if points [ b ] is greater than points [ a ]	N/A	N/A	if ( points [ b ] > points [ a ] )	if ( points [ b ] > points [ a ] )
5340	return 1	N/A	N/A	return 1 ;	return 1 ;
5341	else if points [ b ] is less than points [ a ]	N/A	N/A	else if ( points [ b ] < points [ a ] )	else if ( points [ b ] < points [ a ] )
5342	DUMMY	0.0	0.0	return 0;	DUMMY
5343	else	N/A	N/A	else	else
5344	dif1 is an integer = scored [ a ] - conceed [ a ]	N/A	N/A	int dif1 = scored [ a ] - conceed [ a ] ;	int dif1 = scored [ a ] - conceed [ a - 1 ] ;
5345	dif2 is an integer = scored [ b ] - conceed [ b ]	N/A	N/A	int dif2 = scored [ b ] - conceed [ b ] ;	int dif2 = scored [ b ] - conceed [ b - 1 ] ;
5346	if dif1 is less than dif2	N/A	N/A	if ( dif1 < dif2 )	if ( dif1 < dif2 )
5347	return 1	N/A	N/A	return 1 ;	return 1 ;
5348	else if dif1 is greater than dif2	N/A	N/A	else if ( dif1 > dif2 )	else if ( dif1 > dif2 )
5349	DUMMY	0.0	0.0	return 0;	DUMMY
5350	else	N/A	N/A	else	else
5351	if scored [ a ] is greater than scored [ b ]	N/A	N/A	if ( scored [ a ] > scored [ b ] )	if ( scored [ a ] > scored [ b ] )
5352	DUMMY	0.0	0.0	return 0;	DUMMY
5353	else if scored [ a ] is less than scored [ b ]	N/A	N/A	else if ( scored [ a ] < scored [ b ] )	else if ( scored [ a ] < scored [ b ] )
5354	return 1	N/A	N/A	return 1 ;	return 1 ;
5355	DUMMY	0.0	0.0	}	DUMMY
5356	DUMMY	0.0	0.0	}	DUMMY
5357	DUMMY	0.0	0.0	}	DUMMY
5358	DUMMY	0.0	0.0	int main() {	DUMMY
5359	set integer n to 0	N/A	N/A	int n = 0 ;	int n = 0 ;
5360	st = string	N/A	N/A	string st ;	string st ;
5361	read n	N/A	N/A	cin >> n ;	cin >> n ;
5362	m and k are integers with m = n and k = n / 2	N/A	N/A	int m = n , k = n / 2 ;	int m = n, k = n / 2 ;
5363	while m - -	N/A	N/A	while ( m -- )	while ( m -- )
5364	read st	N/A	N/A	cin >> st ;	cin >> st ;
5365	push st into vec	N/A	N/A	vec . push_back ( st ) ;	vec. push_back ( st ) ;
5366	DUMMY	0.0	0.0	}	DUMMY
5367	n = ( n * n - 1 ) / 2	N/A	N/A	n = ( n * n - 1 ) / 2 ;	n = ( n * n - 1 ) / 2 ;
5368	st = " "	N/A	N/A	st = " " ;	st = " " ;
5369	read character from the input	N/A	N/A	getchar ( ) ;	getchar ( ) ;
5370	while n - -	N/A	N/A	while ( n -- )	while ( n -- )
5371	let i be integer	N/A	N/A	int i ;	int i ;
5372	team1 and team2 are empty strings	N/A	N/A	string team1 = " " , team2 = " " ;	string team1 = " ", team2 = " \n " ;
5373	read line from input into st	N/A	N/A	getline ( cin , st ) ;	getline ( cin, st ) ;
5374	for i = 0 to length of st exclusive	N/A	N/A	for ( i = 0 ; i < st . size ( ) ; i ++ )	for ( i = 0 ; i < st. size ( ) ; i ++ )
5375	if st [ i ] is equal to ' - '	N/A	N/A	if ( st [ i ] == ' - ' )	if ( st [ i ] =='-')
5376	increase i by one	N/A	N/A	i ++ ;	i ++ ;
5377	break the loop	N/A	N/A	break ;	break ;
5378	DUMMY	0.0	0.0	}	DUMMY
5379	increase team1 by st [ i ]	N/A	N/A	team1 += st [ i ] ;	team1 += st [ i ] ;
5380	DUMMY	0.0	0.0	}	DUMMY
5381	loop through i while i < length of st , incrementing i	N/A	N/A	for ( ; i < st . size ( ) ; i ++ )	for ( ; i < st. size ( ) ; i ++ )
5382	if st [ i ] is equal to ' '	N/A	N/A	if ( st [ i ] == ' ' )	if ( st [ i ] ==' ')
5383	increase i	N/A	N/A	i ++ ;	i ++ ;
5384	stop the loop	N/A	N/A	break ;	break ;
5385	DUMMY	0.0	0.0	}	DUMMY
5386	increase team2 by st [ i ]	N/A	N/A	team2 += st [ i ] ;	team2 += st [ i ] ;
5387	DUMMY	0.0	0.0	}	DUMMY
5388	let j and sum1 be integers with j = 1 and sum1 = 0	N/A	N/A	int j = 1 , sum1 = 0 ;	int j = 1, sum1 = 0 ;
5389	loop through i while i < length of st , incrementing i	N/A	N/A	for ( ; i < st . size ( ) ; i ++ )	for ( ; i < st. size ( ) ; i ++ )
5390	if st [ i ] is equal to ' : '	N/A	N/A	if ( st [ i ] == ' : ' )	if ( st [ i ] ==':')
5391	increase i by one	N/A	N/A	i ++ ;	i ++ ;
5392	break the loop	N/A	N/A	break ;	break ;
5393	DUMMY	0.0	0.0	}	DUMMY
5394	create integer c with value st [ i ] - 48	N/A	N/A	int c = st [ i ] - 48 ;	int c = st [ i ] - 48 ;
5395	sum1 = ( sum1 * j ) + c	N/A	N/A	sum1 = ( sum1 * j ) + c ;	sum1 = ( sum1 * j ) + c ;
5396	multiply j by 10	N/A	N/A	j *= 10 ;	j *= 10 ;
5397	DUMMY	0.0	0.0	}	DUMMY
5398	increase scored [ team1 ] by sum1	N/A	N/A	scored [ team1 ] += sum1 ;	scored [ team1 ] += sum1 ;
5399	increase conceed [ team2 ] by sum1	N/A	N/A	conceed [ team2 ] += sum1 ;	conceed [ team2 ] += sum1 ;
5400	create integer sum2 with value 0	N/A	N/A	int sum2 = 0 ;	int sum2 = 0 ;
5401	set value of j to 1	N/A	N/A	j = 1 ;	j = 1 ;
5402	loop through i while i < length of st , incrementing i	N/A	N/A	for ( ; i < st . size ( ) ; i ++ )	for ( ; i < st. size ( ) ; i ++ )
5403	create integer c with value st [ i ] - 48	N/A	N/A	int c = st [ i ] - 48 ;	int c = st [ i ] - 48 ;
5404	sum2 = ( sum2 * j ) + c	N/A	N/A	sum2 = ( sum2 * j ) + c ;	sum2 = ( sum2 * j ) + c ;
5405	multiply j by 10	N/A	N/A	j *= 10 ;	j *= 10 ;
5406	DUMMY	0.0	0.0	}	DUMMY
5407	increase scored [ team2 ] by sum2	N/A	N/A	scored [ team2 ] += sum2 ;	scored [ team2 ] += sum2 ;
5408	increase conceed [ team1 ] by sum2	N/A	N/A	conceed [ team1 ] += sum2 ;	conceed [ team1 ] += sum2 ;
5409	if sum1 is greater than sum2	N/A	N/A	if ( sum1 > sum2 )	if ( sum1 > sum2 )
5410	increase points [ team1 ] by 3	N/A	N/A	points [ team1 ] += 3 ;	points [ team1 ] += 3 ;
5411	else if sum1 is less than sum2	N/A	N/A	else if ( sum1 < sum2 )	else if ( sum1 < sum2 )
5412	increase points [ team2 ] by 3	N/A	N/A	points [ team2 ] += 3 ;	points [ team2 ] += 3 ;
5413	else	N/A	N/A	else	else
5414	increment points [ team1 ]	N/A	N/A	points [ team1 ] ++ ;	points [ team1 ] ++ ;
5415	increment points [ team2 ]	N/A	N/A	points [ team2 ] ++ ;	points [ team2 ] ++ ;
5416	DUMMY	0.0	0.0	}	DUMMY
5417	DUMMY	0.0	0.0	}	DUMMY
5418	sort vec using cmp as comparator function	N/A	N/A	sort ( vec . begin ( ) , vec . end ( ) , cmp ) ;	sort ( vec. rbegin ( ), vec. rend ( cmp ) ) ;
5419	for i = length of vec - 1 to k inclusive , decrementing i , push i into vec	N/A	N/A	for ( int i = vec . size ( ) - 1 ; i >= k ; i -- ) a . push_back ( vec [ i ] ) ;	for ( int i = vec. size ( ) - 1 ; i >= k ; i -- ) vec. push_back ( i ) ;
5420	sort a	N/A	N/A	sort ( a . begin ( ) , a . end ( ) ) ;	sort ( a. begin ( ), a. end ( ) ) ;
5421	for i = 0 to length of a exclusive print a [ i ]	N/A	N/A	for ( int i = 0 ; i < a . size ( ) ; i ++ ) cout << a [ i ] << endl ;	for ( int i = 0 ; i < a. size ( ) ; i ++ ) cout << a [ i ] << endl ;
5422	DUMMY	0.0	0.0	}	DUMMY
5423	create maps pt , sc , mi from string to integer	N/A	N/A	map < string , int > pt , sc , mi ;	map < string, int > pt, sc, mi ;
5424	create string array name with size 50	N/A	N/A	string name [ 50 ] ;	string name [ 50 ] ;
5425	declare cmp with strings s1 , s2 as arguments , returning boolean	N/A	N/A	bool cmp ( string s1 , string s2 )	bool cmp ( string s1, string s2 )
5426	if pt [ s1 ] is not pt [ s2 ] , return pt [ s1 ] is greater than pt [ s2 ] from function	N/A	N/A	if ( pt [ s1 ] != pt [ s2 ] ) return pt [ s1 ] > pt [ s2 ] ;	if ( pt [ s1 ]!= pt [ 2 ] ) { return pt [ 1 ] > pt [ 02 ] ; }
5427	if mi [ s1 ] is not mi [ s2 ]	N/A	N/A	if ( mi [ s1 ] != mi [ s2 ] )	if ( Mi [ s1 ]!= mi [ s2 ] )
5428	return mi [ s1 ] is greater than mi [ s2 ] from function	N/A	N/A	return mi [ s1 ] > mi [ s2 ] ;	return Mi [ s1 ] > mi [ s2 ] ;
5429	else	N/A	N/A	else	else
5430	return sc [ s1 ] is greater than sc [ s2 ] from function	N/A	N/A	return sc [ s1 ] > sc [ s2 ] ;	return sc [ s1 ] > sc [ S2 ] ;
5431	DUMMY	0.0	0.0	}	DUMMY
5432	DUMMY	0.0	0.0	int main() {	DUMMY
5433	create integer n	N/A	N/A	int n ;	int n ;
5434	read n	N/A	N/A	cin >> n ;	cin >> n ;
5435	for i = 0 to n exclusive , read name [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> name [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> name [ i ] ;
5436	discard characters from stdin	N/A	N/A	cin . ignore ( ) ;	freopen ( " ", stdin ) ;
5437	for i = 0 to n * ( n - 1 ) / 2 exclusive	N/A	N/A	for ( int i = 0 ; i < n * ( n - 1 ) / 2 ; i ++ )	for ( int i = 0 ; i < n * ( n - 1 ) / 2 ; i ++ )
5438	create strings A , B	N/A	N/A	string A , B ;	string A, B ;
5439	read line from cin to A with ' - ' as delimiter	N/A	N/A	getline ( cin , A , ' - ' ) ;	getline ( cin, A,'-') ;
5440	read line from cin to B with ' ' as delimiter	N/A	N/A	getline ( cin , B , ' ' ) ;	getline ( cin, B,' ') ;
5441	create character ch	N/A	N/A	char ch ;	char ch ;
5442	create integers pA , pB	N/A	N/A	int pA , pB ;	int pA, pB ;
5443	read pA read ch read pB	N/A	N/A	cin >> pA >> ch >> pB ;	cin >> pA >> ch >> pB ;
5444	discard characters from stdin	N/A	N/A	cin . ignore ( ) ;	putchar (' ') ;
5445	if pA is less than pB , increment pt [ B ] by 3	N/A	N/A	if ( pA < pB ) pt [ B ] += 3 ;	if ( pA < pB ) pt [ B ] += 3 ;
5446	if pA is greater than pB , increment pt [ A ] by 3	N/A	N/A	if ( pA > pB ) pt [ A ] += 3 ;	if ( pA > pB ) pt [ A ] += 3 ;
5447	if pA is pB , increment pt [ A ] , increment pt [ B ]	N/A	N/A	if ( pA == pB ) pt [ A ] ++ , pt [ B ] ++ ;	if ( pA == pB ) pt [ A ] ++, pt [ B ] ++ ;
5448	increment sc [ A ] by pA	N/A	N/A	sc [ A ] += pA ;	sc [ A ] += pA ;
5449	increment mi [ A ] by pA - pB	N/A	N/A	mi [ A ] += pA - pB ;	mi [ A ] += pA - pB ;
5450	increment sc [ B ] by pB	N/A	N/A	sc [ B ] += pB ;	sc [ B ] += pB ;
5451	increment mi [ B ] by pB - pA	N/A	N/A	mi [ B ] += pB - pA ;	mi [ B ] += pB - pA ;
5452	DUMMY	0.0	0.0	}	DUMMY
5453	sort elements from name to name + n using cmp function to compare	N/A	N/A	sort ( name , name + n , cmp ) ;	sort ( name, name + n, cmp ( cmp ) ) ;
5454	sort elements from name to name + n / 2	N/A	N/A	sort ( name , name + n / 2 ) ;	sort ( name, name + n / 2 ) ;
5455	for i = 0 to n / 2 exclusive , print name [ i ] print newline	N/A	N/A	for ( int i = 0 ; i < n / 2 ; i ++ ) cout << name [ i ] << endl ;	for ( int i = 0 ; i < n / 2 ; i ++ ) cout << name [ i ] << endl ;
5456	DUMMY	0.0	0.0	return 0;	DUMMY
5457	DUMMY	0.0	0.0	}	DUMMY
5458	n = int , wp , dg and sg = array of 55 int	N/A	N/A	int n , wp [ 55 ] , dg [ 55 ] , sg [ 55 ] ;	int n, wp [ 55 ] = { 0 }, dg [ 50 ] ={ 0 } ;
5459	name = array of 55 string	N/A	N/A	string name [ 55 ] ;	string name [ 55 ] ;
5460	function cmp ( get int a and b , return bool )	N/A	N/A	bool cmp ( int a , int b )	bool cmp ( int a, int b )
5461	if wp [ a ] is not wp [ b ] return wp [ a ] > wp [ b ]	N/A	N/A	if ( wp [ a ] != wp [ b ] ) { return wp [ a ] > wp [ b ] ; }	if (! wp [ a ] &&! np [ b ] ) { return wp ( a ] > np ( b ) ; }
5462	if dg [ a ] is not dg [ b ] return dg [ a ] > dg [ b ]	N/A	N/A	if ( dg [ a ] != dg [ b ] ) { return dg [ a ] > dg [ b ] ; }	if (! dg [ a ] &&! dd [ b ] ) { return dg ( a ] > dg. b ] ; }
5463	return sg [ a ] > sg [ b ]	N/A	N/A	return sg [ a ] > sg [ b ] ;	return ( sg [ a ] > sd [ b ] ) ;
5464	DUMMY	0.0	0.0	}	DUMMY
5465	DUMMY	0.0	0.0	int main() {	DUMMY
5466	read n	N/A	N/A	cin >> n ;	cin >> n ;
5467	for i = 0 to n exclusive read name [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> name [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> name [ i ] ;
5468	for i = 0 to n * ( n - 1 ) / 2 exclusive	N/A	N/A	for ( int i = 0 ; i < n * ( n - 1 ) / 2 ; i ++ )	for ( int i = 0 ; i < n * ( n - 1 ) / 2 ; i ++ )
5469	s , a , b = string	N/A	N/A	string s , a , b ;	string s, a, b ;
5470	p , q = int	N/A	N/A	int p , q ;	int p, q ;
5471	c = char	N/A	N/A	char c ;	char c ;
5472	read s , p , c , q	N/A	N/A	cin >> s >> p >> c >> q ;	cin >> s >> p >> c >> q ;
5473	a = left portion of s before ' - '	N/A	N/A	a = s . substr ( 0 , s . find ( ' - ' ) ) ;	a = s. substr ( 1,'-') ;
5474	b = right portion of s after ' - '	N/A	N/A	b = s . substr ( s . find ( ' - ' ) + 1 ) ;	b = s. substr ( 1,'-') ;
5475	a1 = find ( name , name + n , a ) - name , b1 = find ( name , name + n , b ) - name	N/A	N/A	int a1 = find ( name , name + n , a ) - name , b1 = find ( name , name + n , b ) - name ;	string a1 = find ( name, name + n, a ) - name, b1 = fin ( name. begin ( ), name. end ( ) + ( n, b ) + name ) ;
5476	if p > q	N/A	N/A	if ( p > q )	if ( p > q )
5477	add 3 to wp [ a1 ]	N/A	N/A	wp [ a1 ] += 3 ;	mp [ a1 ] += 3 ;
5478	else if q is p	N/A	N/A	else if ( q == p )	else if ( q == p )
5479	increment wp [ a1 ]	N/A	N/A	wp [ a1 ] ++ ;	dp [ a1 ] ++ ;
5480	increment wp [ b1 ]	N/A	N/A	wp [ b1 ] ++ ;	dp [ b1 ] ++ ;
5481	else	N/A	N/A	else	else
5482	add 3 to wp [ b1 ]	N/A	N/A	wp [ b1 ] += 3 ;	dp [ b1 ] += 3 ;
5483	DUMMY	0.0	0.0	}	DUMMY
5484	add p - q to dg [ a1 ]	N/A	N/A	dg [ a1 ] += p - q ;	dp [ a1 ] += p - q ;
5485	add p to sg [ a1 ]	N/A	N/A	sg [ a1 ] += p ;	gs [ a1 ] += p ;
5486	add q - p to dg [ b1 ]	N/A	N/A	dg [ b1 ] += q - p ;	dp [ b1 ] += q - p ;
5487	add q to sg [ b1 ]	N/A	N/A	sg [ b1 ] += q ;	sb [ b1 ] += q ;
5488	DUMMY	0.0	0.0	}	DUMMY
5489	a = array of 55 int	N/A	N/A	int a [ 55 ] ;	int a [ 55 ] ;
5490	for i = 0 to n exclusive a [ i ] = i	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = i ; }	for ( int i = 0 ; i < n ; i ++ ) a [ i ] = i ;
5491	sort first n items of a using function cmp	N/A	N/A	sort ( a , a + n , cmp ) ;	sort ( a, a + n, cmp ) ;
5492	ans = array of 55 string	N/A	N/A	string ans [ 55 ] ;	string ans [ 55 ] ;
5493	for i = 0 to n / 2 exclusive ans [ i ] = name [ a [ i ] ]	N/A	N/A	for ( int i = 0 ; i < n / 2 ; i ++ ) { ans [ i ] = name [ a [ i ] ] ; }	for ( int i = 0 ; i < n / 2 ; i ++ ) { ans [ i ] = name [ a [ 1 ] ] ; }
5494	sort first n / 2 items of ans	N/A	N/A	sort ( ans , ans + n / 2 ) ;	sort ( ans, ans + n / 2 ) ;
5495	for i = 0 to n / 2 exclusive print ans [ i ]	N/A	N/A	for ( int i = 0 ; i < n / 2 ; i ++ ) { cout << ans [ i ] << endl ; }	for ( int i = 0 ; i < n / 2 ; i ++ ) cout << ans [ i ] << endl ;
5496	DUMMY	0.0	0.0	return 0;	DUMMY
5497	DUMMY	0.0	0.0	}	DUMMY
5498	create string array nam of size 50	N/A	N/A	string nam [ 50 ] ;	string nam [ 50 ] ;
5499	let int n and int arrays wp of size 50 , dg of size 50 , and sg of size 50	N/A	N/A	int n , wp [ 50 ] , dg [ 50 ] , sg [ 50 ] ;	int n, wp [ 50 ] = { 0 }, dg [ 50 } = { 1, 0 } ;
5500	declare comp taking in ints a and b and returning bool	N/A	N/A	bool comp ( int a , int b )	bool comp ( int a, int b )
5501	if wp [ a ] is not equal to wp [ b ]	N/A	N/A	if ( wp [ a ] != wp [ b ] )	if (! wp [ a ] )
5502	return wp [ a ] > wp [ b ]	N/A	N/A	return wp [ a ] > wp [ b ] ;	return pp [ a ] > wp [ b ] ;
5503	else if dg [ a ] is not equal to dg [ b ]	N/A	N/A	else if ( dg [ a ] != dg [ b ] )	else if ( ( dg [ a ]!= dd [ b ] ) )
5504	return the result of dg [ a ] > dg [ b ]	N/A	N/A	return dg [ a ] > dg [ b ] ;	return ( dg [ a ] > dd [ b ] ) ;
5505	else do	N/A	N/A	else	else
5506	return sg [ a ] > sg [ b ]	N/A	N/A	return sg [ a ] > sg [ b ] ;	return ( sg [ a ] > sng [ b ] ) ;
5507	DUMMY	0.0	0.0	}	DUMMY
5508	DUMMY	0.0	0.0	int main() {	DUMMY
5509	read n	N/A	N/A	cin >> n ;	cin >> n ;
5510	for i = 0 to n exclusive , read nam [ i ]	N/A	N/A	for ( int i = 0 ; i < ( int ) ( n ) ; i ++ ) cin >> nam [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> nam [ i ] ;
5511	for i = 0 to n * ( n - 1 ) / 2 exclusive	N/A	N/A	for ( int i = 0 ; i < ( int ) ( n * ( n - 1 ) / 2 ) ; i ++ )	for ( int i = 0 ; i < n * ( n - 1 ) / 2 ; i ++ )
5512	create strings tmp , a , and b	N/A	N/A	string tmp , a , b ;	string tmp, a, b ;
5513	make ints p and q	N/A	N/A	int p , q ;	int p, q ;
5514	create char c	N/A	N/A	char c ;	char c ;
5515	read tmp , p , c , and q	N/A	N/A	cin >> tmp >> p >> c >> q ;	cin >> tmp >> p >> c >> q ;
5516	set a to tmp . substr ( 0 , tmp . find ( ' - ' ) )	N/A	N/A	a = tmp . substr ( 0 , tmp . find ( ' - ' ) ) ;	a = tmp. substr ( 0, tmp. find ('-') ) ;
5517	set b to tmp . substr ( tmp . find ( ' - ' ) + 1 )	N/A	N/A	b = tmp . substr ( tmp . find ( ' - ' ) + 1 ) ;	b = tmp. substr ( tmp. find ('-') + 1 ) ;
5518	create ints ai = find ( nam , nam + n , a ) - nam and bi = find ( nam , nam + n , b ) - nam	N/A	N/A	int ai = find ( nam , nam + n , a ) - nam , bi = find ( nam , nam + n , b ) - nam ;	int ai = find ( nam, nam + n, a ) - nam = bi = find_nam, (nam + ( n, b ) + nam ) ;
5519	if p is more than q	N/A	N/A	if ( p > q )	if ( p > q )
5520	set wp [ ai ] to wp [ ai ] + 3	N/A	N/A	wp [ ai ] += 3 ;	dp [ ai ] += 3 ;
5521	else if p is less than q	N/A	N/A	else if ( p < q )	else if ( p < q )
5522	set wp [ bi ] to wp [ bi ] + 3	N/A	N/A	wp [ bi ] += 3 ;	dp [ bi ] += 3 ;
5523	else	N/A	N/A	else	else
5524	add 1 to wp [ ai ] and ap [ bi ]	N/A	N/A	wp [ ai ] ++ , wp [ bi ] ++ ;	dp [ ai ] ++, ap [ bi ] ++ ;
5525	set dg [ ai ] to ad [ ai ] + p - q , add p to sg [ ai ] , add q - p to dg [ bi ] , and add q to sg [ bi ]	N/A	N/A	dg [ ai ] += p - q , sg [ ai ] += p , dg [ bi ] += q - p , sg [ bi ] += q ;	dfs [ ai ] += p - q, sg [ bi ] += q - p, sgg [ bi ++ ] += 2 ;
5526	DUMMY	0.0	0.0	}	DUMMY
5527	create integer array a of size 50	N/A	N/A	int a [ 50 ] ;	int a [ 50 ] ;
5528	for i = 0 to n exclusive , set a [ i ] to i	N/A	N/A	for ( int i = 0 ; i < ( int ) ( n ) ; i ++ ) a [ i ] = i ;	for ( int i = 0 ; i < n ; i ++ ) a [ i ] = i ;
5529	sort a using a + n and comp	N/A	N/A	sort ( a , a + n , comp ) ;	sort ( a, a + n, comp ) ;
5530	create string array names of size 50	N/A	N/A	string names [ 50 ] ;	string names [ 50 ] ;
5531	for i = 0 to n / 2 exclusive , set names [ i ] to nam [ a [ i ] ]	N/A	N/A	for ( int i = 0 ; i < ( int ) ( n / 2 ) ; i ++ ) names [ i ] = nam [ a [ i ] ] ;	for ( int i = 0 ; i < n / 2 ; i ++ ) { names [ i ] = nam [ a [ 1 ] ] ; }
5532	sort names using names + n / 2	N/A	N/A	sort ( names , names + n / 2 ) ;	sort ( names, names + n / 2 ) ;
5533	for i = 0 to n / 2 exclusive , print names [ i ]	N/A	N/A	for ( int i = 0 ; i < ( int ) ( n / 2 ) ; i ++ ) cout << names [ i ] << endl ;	for ( i = 0 ; i < n / 2 ; i ++ ) { cout << names [ i ] << endl ; }
5534	DUMMY	0.0	0.0	return 0;	DUMMY
5535	DUMMY	0.0	0.0	}	DUMMY
5536	declare integers n , m , a , b and 2d array of integers v of size 2100 by 2100	N/A	N/A	int n , m , a , b , v [ 2100 ] [ 2100 ] ;	int n, m, a, b, v [ 2100 ] [ 2022 ] ;
5537	declare integers k , x , y and 2d array of integers d of size 2100 by 2100	N/A	N/A	int k , d [ 2100 ] [ 2100 ] , x , y ;	int k, x, y, d [ 2100 [ 2100 ] ;
5538	boolean function solve with integer arguments x , y and k	N/A	N/A	bool solve ( int x , int y , int k )	bool solve ( int x, int y, int k )
5539	create ingteger variables t , l = max of 1 and x - k ; r = min of x + k and n	N/A	N/A	int l = max ( 1 , x - k ) , r = min ( x + k , n ) , t ;	int t = max ( 1, x - k ), r = min ( x + k, n ) ;
5540	for integer i = l to r inclusive	N/A	N/A	for ( int i = l ; i <= r ; i ++ )	for ( int i = l ; i <= r ; i ++ )
5541	set t to k - abs ( i - x )	N/A	N/A	t = k - abs ( i - x ) ;	t = k - abs ( i - x ) ;
5542	if y - t is greater than 0 & & ! v [ i ] [ y - t ]	N/A	N/A	if ( y - t > 0 && ! v [ i ] [ y - t ] )	if ( y - t > 0 &&! v [ i ] [ y - k ] )
5543	set a to i	N/A	N/A	a = i ;	a = i ;
5544	set value of b to y - t	N/A	N/A	b = y - t ;	b = y - t ;
5545	return 1	N/A	N/A	return 1 ;	return 1 ;
5546	DUMMY	0.0	0.0	}	DUMMY
5547	if y + t < = m & & ! v [ i ] [ y + t ]	N/A	N/A	if ( y + t <= m && ! v [ i ] [ y + t ] )	if ( ( y + t ) <= m &&! v [ i ] [ y ++ t ] )
5548	a = i	N/A	N/A	a = i ;	a = i ;
5549	b = y + t	N/A	N/A	b = y + t ;	b = y + t ;
5550	return 1	N/A	N/A	return 1 ;	return 1 ;
5551	DUMMY	0.0	0.0	}	DUMMY
5552	DUMMY	0.0	0.0	}	DUMMY
5553	DUMMY	0.0	0.0	return 0;	DUMMY
5554	DUMMY	0.0	0.0	}	DUMMY
5555	DUMMY	0.0	0.0	int main() {	DUMMY
5556	read n , m and k	N/A	N/A	cin >> n >> m >> k ;	cin >> n >> m >> k ;
5557	for i = 0 to k exclusive	N/A	N/A	for ( int i = 0 ; i < k ; i ++ )	for ( int i = 0 ; i < k ; i ++ )
5558	read x and y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
5559	for integer j = - 2 to 2 inclusive	N/A	N/A	for ( int j = - 2 ; j <= 2 ; j ++ )	for ( int j = - 2 ; j <= 2 ; ++ j )
5560	for integer k = - 2 to 2 inclusive	N/A	N/A	for ( int k = - 2 ; k <= 2 ; k ++ )	for ( int k = - 2 ; k <= 2 ; ++ k )
5561	if x + j < 1 | | x + j > n | | y + k < 1 | | y + k is greater than m , continue the loop	N/A	N/A	if ( x + j < 1 || x + j > n || y + k < 1 || y + k > m ) continue ;	if ( ( x + j < 1 ) || ( y + j > n || y + k < 1.0 ) | ( y - k > m ) ) continue ;
5562	d [ x ] [ y ] = max ( d [ x ] [ y ] , d [ x + j ] [ y + k ] - abs ( j ) - abs ( k ) )	N/A	N/A	d [ x ] [ y ] = max ( d [ x ] [ y ] , d [ x + j ] [ y + k ] - abs ( j ) - abs ( k ) ) ;	d [ x ] [ y ] = max ( d [ x - j ] [ Y - k ] - abs ( j ) - abs () k ) ;
5563	DUMMY	0.0	0.0	}	DUMMY
5564	while solve ( x , y , d [ x ] [ y ] ) is false , increment d [ x ] [ y ]	N/A	N/A	while ( ! solve ( x , y , d [ x ] [ y ] ) ) d [ x ] [ y ] ++ ;	while (! solve ( x, y, d [ x ] [ y ] ) ) { d [ 0 ] [ i ] ++ ; }
5565	v [ a ] [ b ] = 1	N/A	N/A	v [ a ] [ b ] = 1 ;	v [ a ] [ b ] = 1 ;
5566	print a , " " , b and a new line	N/A	N/A	cout << a << " " << b << endl ;	cout << a << " " << b << endl ;
5567	DUMMY	0.0	0.0	}	DUMMY
5568	DUMMY	0.0	0.0	}	DUMMY
5569	create integers n , m , a , b , create 2d integer array v with size 2100 by 2100	N/A	N/A	int n , m , a , b , v [ 2100 ] [ 2100 ] ;	int n, m, a, b, v [ 2100 ] [ 21 ] ;
5570	create integers k , x , y , create 2d integer array d with size 2100 by 2100	N/A	N/A	int k , d [ 2100 ] [ 2100 ] , x , y ;	int k, x, y, d [ 2100 ] [ 2022 ] ;
5571	declare solve with integers x , y , k as arguments , returning boolean	N/A	N/A	bool solve ( int x , int y , int k )	bool solve ( int x, int y, int k )
5572	create integers l , r , t with l = maximum of ( 1 and x - k ) , r = minimum of ( x + k and n )	N/A	N/A	int l = max ( 1 , x - k ) , r = min ( x + k , n ) , t ;	int l = max ( 1, x - k ), r = min ( x + k, n ) ;
5573	for i = l to r inclusive	N/A	N/A	for ( int i = l ; i <= r ; i ++ )	for ( int i = l ; i <= r ; i ++ )
5574	set t to k - absolute value of ( i - x )	N/A	N/A	t = k - abs ( i - x ) ;	t = k - abs ( i - x ) ;
5575	if y - t is greater than 0 and v [ i ] [ y - t ] is false	N/A	N/A	if ( y - t > 0 && ! v [ i ] [ y - t ] )	if ( y - t > 0 &&! v [ i ] [ y -- t ] )
5576	set a to i	N/A	N/A	a = i ;	a = i ;
5577	set b to y - t	N/A	N/A	b = y - t ;	b = y - t ;
5578	return 1 from function	N/A	N/A	return 1 ;	return 1 ;
5579	DUMMY	0.0	0.0	}	DUMMY
5580	if y + t is less than or equal to m and v [ i ] [ y + t ] is false	N/A	N/A	if ( y + t <= m && ! v [ i ] [ y + t ] )	if ( y + t <= m &&! v [ i ] [ y ++ t ] )
5581	set a to i	N/A	N/A	a = i ;	a = i ;
5582	set b to y + t	N/A	N/A	b = y + t ;	b = y + t ;
5583	return 1	N/A	N/A	return 1 ;	return 1 ;
5584	DUMMY	0.0	0.0	}	DUMMY
5585	DUMMY	0.0	0.0	}	DUMMY
5586	DUMMY	0.0	0.0	return 0;	DUMMY
5587	DUMMY	0.0	0.0	}	DUMMY
5588	DUMMY	0.0	0.0	int main() {	DUMMY
5589	read n read m read k	N/A	N/A	cin >> n >> m >> k ;	cin >> n >> m >> k ;
5590	for i = 0 to k exclusive	N/A	N/A	for ( int i = 0 ; i < k ; i ++ )	for ( int i = 0 ; i < k ; i ++ )
5591	read x read y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
5592	for j = - 2 to 2 inclusive	N/A	N/A	for ( int j = - 2 ; j <= 2 ; j ++ )	for ( int j = - 2 ; j <= 2 ; ++ j )
5593	for k = - 2 to 2 inclusive	N/A	N/A	for ( int k = - 2 ; k <= 2 ; k ++ )	for ( int k = - 2 ; k <= 2 ; ++ k )
5594	if x + j is less than 1 or x + j is greater than n or y + k is less than 1 or y + k is greater than m , break current loop iteration	N/A	N/A	if ( x + j < 1 || x + j > n || y + k < 1 || y + k > m ) continue ;	if ( ( x + j ) < 1 || ( x - j ) > n || ( y + k ) <= 1 || y + ( k ) > m ) continue ;
5595	set d [ x ] [ y ] to maximum of ( d [ x ] [ y ] and d [ x + j ] [ y + k ] - absolute value of j - absolute value of k )	N/A	N/A	d [ x ] [ y ] = max ( d [ x ] [ y ] , d [ x + j ] [ y + k ] - abs ( j ) - abs ( k ) ) ;	d [ x ] [ y ] = max ( d [ x - j ] [ x + k ] - abs ( j ), abs ( k ) ) ;
5596	DUMMY	0.0	0.0	}	DUMMY
5597	while result of run solve with x , y , d [ x ] [ y ] as arguments is false , increment d [ x ] [ y ]	N/A	N/A	while ( ! solve ( x , y , d [ x ] [ y ] ) ) d [ x ] [ y ] ++ ;	while (! solve ( x, y, d [ x ] [ y ] ) ) { d [ 0 ] [ Y ] ++ ; }
5598	set v [ a ] [ b ] to 1	N/A	N/A	v [ a ] [ b ] = 1 ;	v [ a ] [ b ] = 1 ;
5599	print a print " " print b print newline	N/A	N/A	cout << a << " " << b << endl ;	cout << a << " " << b << endl ;
5600	DUMMY	0.0	0.0	}	DUMMY
5601	DUMMY	0.0	0.0	}	DUMMY
5602	create integers n , m , a and b , and 2d array of integers v 2100 by 2100	N/A	N/A	int n , m , a , b , v [ 2100 ] [ 2100 ] ;	int n, m, a, b, v [ 2100 ] [ 2022 ] ;
5603	create integers k , x and y , and 2d array of integers d 2100 by 2100	N/A	N/A	int k , d [ 2100 ] [ 2100 ] , x , y ;	int k, x, y, d [ 2100 ] = { 0 } ;
5604	boolean method solve with integer arguments x , y and k	N/A	N/A	bool solve ( int x , int y , int k )	bool solve ( int x, int y, int k )
5605	declare integers t , l = max of 1 and x - k and r = min of x + k and n	N/A	N/A	int l = max ( 1 , x - k ) , r = min ( x + k , n ) , t ;	int t, l = max ( 1, x - k ), r = min ( x + k, n ) ;
5606	for integer i = l to r inclusive	N/A	N/A	for ( int i = l ; i <= r ; i ++ )	for ( int i = l ; i <= r ; i ++ )
5607	set value of t to k - abs ( i - x )	N/A	N/A	t = k - abs ( i - x ) ;	t = k - abs ( i - x ) ;
5608	if y - t is greater than 0 and ! v [ i ] [ y - t ]	N/A	N/A	if ( y - t > 0 && ! v [ i ] [ y - t ] )	if ( y - t > 0 &&! v [ i ] [ y - k ] )
5609	set a to i	N/A	N/A	a = i ;	a = i ;
5610	set value of b to y - t	N/A	N/A	b = y - t ;	b = y - t ;
5611	return 1	N/A	N/A	return 1 ;	return 1 ;
5612	DUMMY	0.0	0.0	}	DUMMY
5613	if y + t < = m and ! v [ i ] [ y + t ]	N/A	N/A	if ( y + t <= m && ! v [ i ] [ y + t ] )	if ( ( y + t ) <= m &&! v [ i ] [ y - t ] )
5614	assign value of i to the a	N/A	N/A	a = i ;	a = i ;
5615	set b to y + t	N/A	N/A	b = y + t ;	b = y + t ;
5616	return 1	N/A	N/A	return 1 ;	return 1 ;
5617	DUMMY	0.0	0.0	}	DUMMY
5618	DUMMY	0.0	0.0	}	DUMMY
5619	DUMMY	0.0	0.0	return 0;	DUMMY
5620	DUMMY	0.0	0.0	}	DUMMY
5621	DUMMY	0.0	0.0	int main() {	DUMMY
5622	read n , m and k	N/A	N/A	cin >> n >> m >> k ;	cin >> n >> m >> k ;
5623	for i = 0 to k exclusive	N/A	N/A	for ( int i = 0 ; i < k ; i ++ )	for ( int i = 0 ; i < k ; i ++ )
5624	read x and y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
5625	for integer j = - 2 to 2 inclusive	N/A	N/A	for ( int j = - 2 ; j <= 2 ; j ++ )	for ( int j = - 2 ; j <= 2 ; ++ j )
5626	for integer k = - 2 to 2 inclusive	N/A	N/A	for ( int k = - 2 ; k <= 2 ; k ++ )	for ( int k = - 2 ; k <= 2 ; ++ k )
5627	if x + j < 1 or x + j > n or y + k < 1 or y + k > m , continue the loop	N/A	N/A	if ( x + j < 1 || x + j > n || y + k < 1 || y + k > m ) continue ;	if ( x + j < 1 || x + i > n || ( y + k < 1 ) || y + ( k > m ) ) continue ;
5628	set d [ x ] [ y ] = max of d [ x ] [ y ] and d [ x + j ] [ y + k ] - abs ( j ) - abs ( k ) )	N/A	N/A	d [ x ] [ y ] = max ( d [ x ] [ y ] , d [ x + j ] [ y + k ] - abs ( j ) - abs ( k ) ) ;	d [ x ] [ y ] = max ( d [ x. at ( y ), d [ ( x + j ) [ y + k ] - abs ( j ) - ( k ) ) ;
5629	DUMMY	0.0	0.0	}	DUMMY
5630	while solve ( x , y , d [ x ] [ y ] ) is 0 , increment d [ x ] [ y ]	N/A	N/A	while ( ! solve ( x , y , d [ x ] [ y ] ) ) d [ x ] [ y ] ++ ;	while ( solve ( x, y, d [ x ] [ y ] ) == 0 ) { d [ ++ x ]. y ] ++ ; }
5631	set value of v [ a ] [ b ] to 1	N/A	N/A	v [ a ] [ b ] = 1 ;	v [ a ] [ b ] = 1 ;
5632	print a , " " , b and a new line	N/A	N/A	cout << a << " " << b << endl ;	cout << a << " " << b << endl ;
5633	DUMMY	0.0	0.0	}	DUMMY
5634	DUMMY	0.0	0.0	}	DUMMY
5635	a = array of pair of size 200020 of int and int	N/A	N/A	pair < pair < int , int > , int > a [ 200020 ] ;	pair < int, int > a [ 200020 ] ;
5636	n , k , c , x , y , m , z , ac , t , b , i = long long	N/A	N/A	long long n , k , c , x , y , m , z , ac , t , b , i ;	long long n, k, c, x, y, m, z, ac, t, b, i ;
5637	DUMMY	0.0	0.0	int main() {	DUMMY
5638	for ( read n , increment i , decrement n	N/A	N/A	for ( cin >> n ; n -- ; i ++ )	for ( cin >> n ; i ++, n -- )
5639	for read k , c , x , y , m and t = 0 , decrement k , z = max ( z , t )	N/A	N/A	for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) )	for ( cin >> k >> c >> x >> y >> m >> t = 0 ; k --, z = max ( z, t ) )
5640	if ac < = 200000 , a [ increment ac ] = make_pair ( pair of int to int ( t , c ) , i )	N/A	N/A	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ;	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int, int > ( t, c ), i ) ;
5641	b = ( c * x + y ) modulo m	N/A	N/A	b = ( c * x + y ) % m ;	b = ( c * x + y ) % m ;
5642	if b < c and k , increment t	N/A	N/A	if ( b < c && k ) t ++ ;	if ( b < c && k ) t ++ ;
5643	c = b	N/A	N/A	c = b ;	c = b ;
5644	DUMMY	0.0	0.0	}	DUMMY
5645	print z	N/A	N/A	cout << z << endl ;	cout << z << endl ;
5646	if ac < 200001	N/A	N/A	if ( ac < 200001 )	if ( ac < 200001 )
5647	sort a and a + ac	N/A	N/A	sort ( a , a + ac ) ;	sort ( a, a + ac ) ;
5648	for i = 0 to ac , print first . second of a [ i ] , " " , second of a [ i ] + 1	N/A	N/A	for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << " " << a [ i ] . second + 1 << endl ;	for ( int i = 0 ; i < ac ; i ++ ) { cout << a [ i ]. second << " " << ( a [ 1 ]. first + 1 ) << endl ; }
5649	DUMMY	0.0	0.0	}	DUMMY
5650	DUMMY	0.0	0.0	}	DUMMY
5651	a1 , a2 , n , k , second , ans , ans1 = long long with second = 0 and ans = 0	N/A	N/A	long long a1 , a2 , n , k , second = 0 , ans = 0 , ans1 ;	long long a1, a2, n, k, second = 0, ans = 0 ;
5652	h = pair of long long and pair of long long and long long vector	N/A	N/A	vector < pair < long long , pair < long long , long long >> > h ;	pair < long long, long long > h ;
5653	in function read	N/A	N/A	void read ( void )	void read ( )
5654	read n	N/A	N/A	cin >> n ;	cin >> n ;
5655	x , y , m = int then for i = 0 to n	N/A	N/A	for ( int i = 0 , x , y , m ; i < n ; ++ i )	for ( int i = 0, x, y, m ; i < n ; i ++ )
5656	read k	N/A	N/A	cin >> k ;	cin >> k ;
5657	add k to second	N/A	N/A	second += k ;	second += k ;
5658	read a1	N/A	N/A	cin >> a1 ;	cin >> a1 ;
5659	t = long long with t = a1	N/A	N/A	long long t = a1 ;	long long t = a1 ;
5660	read x then y then m	N/A	N/A	cin >> x >> y >> m ;	cin >> x >> y >> m ;
5661	append make_pair of 0 and make_pair of a1 and i + 1 to h	N/A	N/A	h . push_back ( make_pair ( 0 , make_pair ( a1 , i + 1 ) ) ) ;	h. push_back ( make_pair ( 0, a1, i + 1 ) ) ;
5662	set ans1 to 0	N/A	N/A	ans1 = 0 ;	ans1 = 0 ;
5663	for j = 1 to k	N/A	N/A	for ( int j = 1 ; j < k ; ++ j )	for ( int j = 1 ; j <= k ; j ++ )
5664	set a2 to ( a1 * x + y ) mod m	N/A	N/A	a2 = ( a1 * x + y ) % m ;	a2 = ( a1 * x + y ) % m ;
5665	if a2 is less than a1 then increment ans1	N/A	N/A	if ( a2 < a1 ) ans1 ++ ;	if ( a2 < a1 ) ans1 ++ ;
5666	set a1 to a2	N/A	N/A	a1 = a2 ;	a1 = a2 ;
5667	set t to max of t and a1	N/A	N/A	t = max ( t , a1 ) ;	t = max ( t, a1 ) ;
5668	if size of h is less or equal to 200000 then append make_pair of ans1 and make_pair of a1 and i + 1 to h	N/A	N/A	if ( h . size ( ) <= 200000 ) h . push_back ( make_pair ( ans1 , make_pair ( a1 , i + 1 ) ) ) ;	if ( h. size ( ) <= 200000 ) { h += ( make_pair ( ans1, a1, i + 1 ) ) ; }
5669	DUMMY	0.0	0.0	}	DUMMY
5670	set ans to max of ans and ans1	N/A	N/A	ans = max ( ans , ans1 ) ;	ans = max ( ans, ans1 ) ;
5671	DUMMY	0.0	0.0	}	DUMMY
5672	sort vector h	N/A	N/A	sort ( h . begin ( ) , h . end ( ) ) ;	sort ( h. begin ( ), h. end ( ) ) ;
5673	print ans	N/A	N/A	cout << ans << " \n " ;	cout << ans << endl ;
5674	if second is less or equal to 200000	N/A	N/A	if ( second <= 200000 )	if ( second <= 200000 )
5675	for i = 0 to second print h [ i ] . second . first and h [ i ] . second . second	N/A	N/A	for ( int i = 0 ; i < second ; ++ i ) cout << h [ i ] . second . first << " " << h [ i ] . second . second << " \n " ;	for ( int i = 0 ; i < second ; i ++ ) { cout << h [ i ]. second. first << " " << ( h [ 1 ]. first. second ) << endl ; }
5676	DUMMY	0.0	0.0	}	DUMMY
5677	DUMMY	0.0	0.0	int main() {	DUMMY
5678	call read	N/A	N/A	read ( ) ;	read ( ) ;
5679	DUMMY	0.0	0.0	return 0;	DUMMY
5680	DUMMY	0.0	0.0	}	DUMMY
5681	a = pair of pair of int and int and int of size 200020	N/A	N/A	pair < pair < int , int > , int > a [ 200020 ] ;	pair < int, int > a [ 200020 ] ;
5682	n , k , c , x , y , m , z , ac , t , b , i = long long	N/A	N/A	long long n , k , c , x , y , m , z , ac , t , b , i ;	long long n, k, c, x, y, m, z, ac, t, b, i ;
5683	DUMMY	0.0	0.0	int main() {	DUMMY
5684	read n then loop n times decrementing n and incrementing i each time	N/A	N/A	for ( cin >> n ; n -- ; i ++ )	while ( cin >> n ) n --, i ++ ;
5685	read k then c then x then y then m and set t to 0 then loop k times decrementing k and setting z to max of z and t each time	N/A	N/A	for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) )	while ( cin >> k >> c >> x >> y >> m ) k --, z = max ( z, t ) ;
5686	if ac is less or equal to 200000 then set a [ ac ] to value of make_pair of pair of int and int of t and c and i then increment ac	N/A	N/A	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ;	if ( ac <= 200000 ) a [ ac ++ ] = * make_pair ( pair < int, int > ( t, c, i ) ) ;
5687	set b to ( c * x + y ) mod m	N/A	N/A	b = ( c * x + y ) % m ;	b = ( c * x + y ) % m ;
5688	if b is less than c and k is not 0 then increment t	N/A	N/A	if ( b < c && k ) t ++ ;	if ( b < c && k ) t ++ ;
5689	set c to b	N/A	N/A	c = b ;	c = b ;
5690	DUMMY	0.0	0.0	}	DUMMY
5691	print z	N/A	N/A	cout << z << endl ;	cout << z << endl ;
5692	if ac is less than 200001	N/A	N/A	if ( ac < 200001 )	if ( ac < 200001 )
5693	call sort on a and a + ac	N/A	N/A	sort ( a , a + ac ) ;	sort ( a, a + ac ) ;
5694	for i = 0 to ac print a [ i ] . first . second and a [ i ] . second + 1	N/A	N/A	for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << " " << a [ i ] . second + 1 << endl ;	for ( int i = 0 ; i < ac ; i ++ ) { cout << a [ i ]. first. second << " " << ( a [ 1 ]. second + 1 ) << endl ; }
5695	DUMMY	0.0	0.0	}	DUMMY
5696	DUMMY	0.0	0.0	}	DUMMY
5697	let a = array of integers of length 200020 , pair of integets	N/A	N/A	pair < pair < int , int > , int > a [ 200020 ] ;	pair < int, int > a [ 200020 ] ;
5698	let n , k , c , x , y , m , z , ac , t , b , i be long integers	N/A	N/A	long long n , k , c , x , y , m , z , ac , t , b , i ;	long long n, k, c, x, y, m, z, ac, t, b, i ;
5699	DUMMY	0.0	0.0	int main() {	DUMMY
5700	for read n , n is decreased by 1 , i is increased by 1	N/A	N/A	for ( cin >> n ; n -- ; i ++ )	for ( cin >> n ; n --, i ++ )
5701	for read the values k , c , x , y , m , t , t = 0 , k value is decreased by 1 , z = maximum of z and t	N/A	N/A	for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) )	for ( i = 0 ; i < n ; i ++ ) cin >> k >> c >> x >> y >> m >> t --, z = max ( z, t ) ;
5702	if ac < = 200000 , a [ ac + + ] = make_pair ( pair < int , int > ( t , c ) , i	N/A	N/A	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ;	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int, int > ( t, c ), i ) ;
5703	let the value of b is equal to c * x + y modulo m	N/A	N/A	b = ( c * x + y ) % m ;	b = c * x + y % m ;
5704	if b is less than c and k , increase t by 1	N/A	N/A	if ( b < c && k ) t ++ ;	if ( b < c && k ) t ++ ;
5705	the value of b is assigned to c	N/A	N/A	c = b ;	c = b ;
5706	DUMMY	0.0	0.0	}	DUMMY
5707	print z and newline	N/A	N/A	cout << z << endl ;	cout << z << endl ;
5708	if ac is less than 200001	N/A	N/A	if ( ac < 200001 )	if ( ac < 200001 )
5709	sort the values a and a + ac	N/A	N/A	sort ( a , a + ac ) ;	sort ( a, a + ac ) ;
5710	for i = 0 to ac exclusive , print a [ i ] . first . second and a [ i ] . second + 1 and newline	N/A	N/A	for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << " " << a [ i ] . second + 1 << endl ;	for ( int i = 0 ; i < ac ; i ++ ) { cout << a [ i ]. first. second << " " << ( a [ 1 ]. second + 1 ) << endl ; }
5711	DUMMY	0.0	0.0	}	DUMMY
5712	DUMMY	0.0	0.0	}	DUMMY
5713	create pair array a with size 200020 with pair of ( pair of ( integer and integer ) and integer )	N/A	N/A	pair < pair < int , int > , int > a [ 200020 ] ;	pair < int, int > a [ 200020 ] ;
5714	create long longs n , k , c , x , y , m , z , ac , t , b , i	N/A	N/A	long long n , k , c , x , y , m , z , ac , t , b , i ;	long long n, k, c, x, y, m, z, ac, t, b, i ;
5715	DUMMY	0.0	0.0	int main() {	DUMMY
5716	for read n , decrement n , incrementing i	N/A	N/A	for ( cin >> n ; n -- ; i ++ )	for ( ; cin >> n ; n --, i ++ )
5717	for read k read c read x read y read m , t = 0 , deecrement k , setting z to maximum of z and t	N/A	N/A	for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) )	for ( cin >> k >> c >> x >> y >> m, t = 0 ; k ++ ) z = max ( z, t ) ;
5718	if ac is less than or equal to 200000 , set a [ increment ac ] to make pair from ( pair of ( integer and integer ) initialized with ( t , c ) , and integer )	N/A	N/A	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ;	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int, int > ( t, c ), int ) ;
5719	set b to ( c * x + y ) % m	N/A	N/A	b = ( c * x + y ) % m ;	b = ( c * x + y ) % m ;
5720	if b is less than c and k , increment t	N/A	N/A	if ( b < c && k ) t ++ ;	if ( b < c && k ) t ++ ;
5721	set c to b	N/A	N/A	c = b ;	c = b ;
5722	DUMMY	0.0	0.0	}	DUMMY
5723	print z print newline	N/A	N/A	cout << z << endl ;	cout << z << endl ;
5724	if ac is less than 200001	N/A	N/A	if ( ac < 200001 )	if ( ac < 200001 )
5725	sort elements from a to a + ac	N/A	N/A	sort ( a , a + ac ) ;	sort ( a, a + ac ) ;
5726	for i = 0 to ac exclusive , print second element of first element of a [ i ] print " " print second element of a [ i ] + 1 print newline	N/A	N/A	for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << " " << a [ i ] . second + 1 << endl ;	for ( int i = 0 ; i < ac ; i ++ ) { cout << a [ i ]. first << " " << a. second + 1 << endl ; }
5727	DUMMY	0.0	0.0	}	DUMMY
5728	DUMMY	0.0	0.0	}	DUMMY
5729	DUMMY	0.0	0.0	int main() {	DUMMY
5730	create long longs n , count with count = 0	N/A	N/A	long long n , count = 0 ;	long long n, count = 0 ;
5731	read n	N/A	N/A	cin >> n ;	cin >> n ;
5732	create constant integer max_i with max_i = 2e5	N/A	N/A	const int max_i = 2e5 ;	const int max_i = 2e5 ;
5733	create integer counter with counter = 0	N/A	N/A	int counter = 0 ;	int counter = 0 ;
5734	create tuple array data with integer , integer , integer , with size max_i + 9	N/A	N/A	tuple < int , int , int > data [ max_i + 9 ] ;	set < int > data [ max_i + 9 ] ;
5735	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
5736	create long longs k , a0 , x , y , m , t , a , with t = 0 , a = 0	N/A	N/A	long long k , a0 , x , y , m , t = 0 , a = 0 ;	long long k, a0, x, y, m, t = 0, a = 0 ;
5737	read k read a0 read x read y read m	N/A	N/A	cin >> k >> a0 >> x >> y >> m ;	cin >> k >> a0 >> x >> y >> m ;
5738	for j = 0 to k exclusive	N/A	N/A	for ( int j = 0 ; j < k ; j ++ )	for ( int j = 0 ; j < k ; j ++ )
5739	if counter is less than or equal to max_i , set data [ increment counter ] to make tuple from t , a0 , i	N/A	N/A	if ( counter <= max_i ) { data [ counter ++ ] = make_tuple ( t , a0 , i ) ; }	if ( counter <= max_i ) data [ counter ++ ] = tupper ( t, a0, i ) ;
5740	set a to ( a0 * x + y ) % m	N/A	N/A	a = ( a0 * x + y ) % m ;	a = ( a0 * x + y ) % m ;
5741	if a is less than a0 and j is not k - 1 , increment t	N/A	N/A	if ( a < a0 && j != k - 1 ) { t ++ ; }	if ( a < a0 && j!= k - 1 ) t ++ ;
5742	set a0 to a	N/A	N/A	a0 = a ;	a0 = a ;
5743	DUMMY	0.0	0.0	}	DUMMY
5744	set count to maximum of count and t	N/A	N/A	count = max ( count , t ) ;	count = max ( count, t ) ;
5745	DUMMY	0.0	0.0	}	DUMMY
5746	print count print newline	N/A	N/A	cout << count << endl ;	cout << count << endl ;
5747	if counter is less than or equal to max_i	N/A	N/A	if ( counter <= max_i )	if ( counter <= max_i )
5748	sort elements from data to data + counter	N/A	N/A	sort ( data , data + counter ) ;	sort ( data, data + counter ) ;
5749	for i = 0 to counter exclusive , print get element 1 from data [ i ] print " " print get element 2 from data [ i ] + 1 print newline	N/A	N/A	for ( int i = 0 ; i < counter ; i ++ ) { cout << get < 1 > ( data [ i ] ) << " " << get < 2 > ( data [ i ] ) + 1 << endl ; }	for ( int i = 0 ; i < counter ; i ++ ) { cout << data [ i ]. substr ( 1, 2 ) << endl ; }
5750	DUMMY	0.0	0.0	}	DUMMY
5751	DUMMY	0.0	0.0	}	DUMMY
5752	MAX = const int with MAX = 2e5	N/A	N/A	const int MAX = 2e5 ;	const int MAX = 2e5 ;
5753	a = pair of pair of long long and long long and long long array of size MAX + 9	N/A	N/A	pair < pair < long long , long long > , long long > a [ MAX + 9 ] ;	pair < long long, long long > a [ MAX + 9 ] ;
5754	n , k , a0 , x , y , m , ans , cnt , t , tmp = long long	N/A	N/A	long long n , k , a0 , x , y , m , ans , cnt , t , tmp ;	long long n, k, a0, x, y, m, ans, cnt, t, tmp ;
5755	DUMMY	0.0	0.0	int main() {	DUMMY
5756	read n	N/A	N/A	cin >> n ;	cin >> n ;
5757	for i = 0 to n	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
5758	read k then a0 then x then y then m then set t to 0	N/A	N/A	cin >> k >> a0 >> x >> y >> m , t = 0 ;	cin >> k >> a0 >> x >> y >> m, t = 0 ;
5759	for j = 0 to k	N/A	N/A	for ( int j = 0 ; j < k ; j ++ )	for ( int j = 0 ; j < k ; j ++ )
5760	if cnt is less or equal to MAX then set a [ cnt ] to { { t , a0 } , i } then increment cnt	N/A	N/A	if ( cnt <= MAX ) a [ cnt ++ ] = { { t , a0 } , i } ;	if ( cnt <= MAX ) a [ ++ cnt ] = { { t, a0 }, i }, cnt ++ ;
5761	set tmp to ( a0 * x + y ) mod m	N/A	N/A	tmp = ( a0 * x + y ) % m ;	tmp = ( a0 * x + y ) % m ;
5762	if tmp is less than a0 and j is not k - 1 increment t	N/A	N/A	if ( tmp < a0 && j != k - 1 ) t ++ ;	if ( tmp < a0 && j!= k - 1 ) t ++ ;
5763	set a0 to tmp	N/A	N/A	a0 = tmp ;	a0 = tmp ;
5764	DUMMY	0.0	0.0	}	DUMMY
5765	set ans to max of ans and t	N/A	N/A	ans = max ( ans , t ) ;	ans = max ( ans, t ) ;
5766	DUMMY	0.0	0.0	}	DUMMY
5767	print ans	N/A	N/A	cout << ans << ' \n ' ;	cout << ans << endl ;
5768	if cnt is less than MAX	N/A	N/A	if ( cnt <= MAX )	if ( cnt < MAX )
5769	call sort on a and a + cnt	N/A	N/A	sort ( a , a + cnt ) ;	sort ( a, a + cnt ) ;
5770	for i = 0 to cnt print a [ i ] . first . second and a [ i ] . second + 1	N/A	N/A	for ( int i = 0 ; i < cnt ; i ++ ) cout << a [ i ] . first . second << " " << a [ i ] . second + 1 << ' \n ' ;	for ( int i = 0 ; i < cnt ; i ++ ) { cout << a [ i ]. first. second << " " << ( a [ 1 ]. second + 1 ) << endl ; }
5771	DUMMY	0.0	0.0	}	DUMMY
5772	DUMMY	0.0	0.0	}	DUMMY
5773	create pair a with pair of ( integer , integer ) , integer , with size 200020	N/A	N/A	pair < pair < int , int > , int > a [ 200020 ] ;	pair < int, int > a [ 200020 ] ;
5774	create long longs n , k , c , x , y , m , z , ac , t , b , i	N/A	N/A	long long n , k , c , x , y , m , z , ac , t , b , i ;	long long n, k, c, x, y, m, z, ac, t, b, i ;
5775	DUMMY	0.0	0.0	int main() {	DUMMY
5776	for read n to decrement n , incrementing i	N/A	N/A	for ( cin >> n ; n -- ; i ++ )	for ( i = 0 ; i < n ; i ++ )
5777	for read k read c read x read y read m , t = 0 to decrement k , setting z to maximum of z and t	N/A	N/A	for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) )	for ( cin >> k >> c >> x >> y >> m, t = 0 ; k -- ) z = max ( z, t ) ;
5778	if ac is less than or equal to 200000 , set a [ increment ac ] to create pair from ( pair of integer and integer initialized with ( t , c ) and i	N/A	N/A	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ;	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int, int > ( t, c ), i ) ;
5779	set b to ( c * x + y ) % m	N/A	N/A	b = ( c * x + y ) % m ;	b = ( c * x + y ) % m ;
5780	if b is less than c and k , increment t	N/A	N/A	if ( b < c && k ) t ++ ;	if ( b < c && k ) t ++ ;
5781	set c to b	N/A	N/A	c = b ;	c = b ;
5782	DUMMY	0.0	0.0	}	DUMMY
5783	print z print newline	N/A	N/A	cout << z << endl ;	cout << z << endl ;
5784	if ac is less than 200001	N/A	N/A	if ( ac < 200001 )	if ( ac < 200001 )
5785	sort elements from a to a + ac	N/A	N/A	sort ( a , a + ac ) ;	sort ( a, a + ac ) ;
5786	for i = 0 to ac exclusive , print second element of first element of a [ i ] print " " print second element of a [ i ] + 1 print newline	N/A	N/A	for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << " " << a [ i ] . second + 1 << endl ;	for ( int i = 0 ; i < ac ; i ++ ) { cout << a [ i ]. first << " " << a. second + 1 << endl ; }
5787	DUMMY	0.0	0.0	}	DUMMY
5788	DUMMY	0.0	0.0	}	DUMMY
5789	create pair of ( pair of ( integer and integer ) and integer ) array a with size 200020	N/A	N/A	pair < pair < int , int > , int > a [ 200020 ] ;	pair < int, int > a [ 200020 ] ;
5790	create long longs n , k , c , x , y , m , z , ac , t , b , i	N/A	N/A	long long n , k , c , x , y , m , z , ac , t , b , i ;	long long n, k, c, x, y, m, z, ac, t, b, i ;
5791	DUMMY	0.0	0.0	int main() {	DUMMY
5792	for read n to decrement n , incrementing i	N/A	N/A	for ( cin >> n ; n -- ; i ++ )	for ( cin >> n ; n ; i ++ )
5793	for read k read c read x read y read m , t = 0 to decrement k , setting z to maximum of z and t	N/A	N/A	for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) )	for ( c = 0 ; c < n ; c ++, x --, y --, m -- ) { z = max ( z, t ) ; }
5794	if ac is less than or equal to 200000 , set a [ increment ac ] to make pair of ( pair of ( integer and integer ) initialized with ( t , c ) and i )	N/A	N/A	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ;	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int, int > ( t, c ), i ) ;
5795	set b to ( c * x + y ) % m	N/A	N/A	b = ( c * x + y ) % m ;	b = ( c * x + y ) % m ;
5796	if b is less than c and k , increment t	N/A	N/A	if ( b < c && k ) t ++ ;	if ( b < c && k ) t ++ ;
5797	set c to b	N/A	N/A	c = b ;	c = b ;
5798	DUMMY	0.0	0.0	}	DUMMY
5799	print z print newline	N/A	N/A	cout << z << endl ;	cout << z << endl ;
5800	if ac is less than 200001	N/A	N/A	if ( ac < 200001 )	if ( ac < 200001 )
5801	sort elements from a to a + ac	N/A	N/A	sort ( a , a + ac ) ;	sort ( a, a + ac ) ;
5802	for i = 0 to ac exclusive , print second element of first element of a [ i ] print " " print second element of a [ i ] + 1 print newline	N/A	N/A	for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << " " << a [ i ] . second + 1 << endl ;	for ( int i = 0 ; i < ac ; i ++ ) { cout << a [ i ]. first << " " << a. second + 1 << endl ; }
5803	DUMMY	0.0	0.0	}	DUMMY
5804	DUMMY	0.0	0.0	}	DUMMY
5805	create pair of ( pair of ( integer , integer ) , integer ) array a with size 200020	N/A	N/A	pair < pair < int , int > , int > a [ 200020 ] ;	pair < int, int > a [ 200020 ] ;
5806	create long longs n , k , c , x , y , m , z , ac , t , b , i	N/A	N/A	long long n , k , c , x , y , m , z , ac , t , b , i ;	long long n, k, c, x, y, m, z, ac, t, b, i ;
5807	DUMMY	0.0	0.0	int main() {	DUMMY
5808	for read n to derement n , incrementing i	N/A	N/A	for ( cin >> n ; n -- ; i ++ )	for ( cin >> n ; n ; i ++ )
5809	for read k read c read x read y read m , t = 0 to decrement k , setting z to maximum of z and t	N/A	N/A	for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) )	for ( c = 0 ; c < n ; c ++, x --, y --, m -- ) { z = max ( z, t ) ; }
5810	if ac is less than or equal to 200000 set a [ increment ac ] to make pair from ( pair of ( integer , integer ) initialized with ( t , c ) , i )	N/A	N/A	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ;	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int, int > ( t, c ), i ) ;
5811	set b to ( c * x + y ) % m	N/A	N/A	b = ( c * x + y ) % m ;	b = ( c * x + y ) % m ;
5812	if b is less than c and k , increment t	N/A	N/A	if ( b < c && k ) t ++ ;	if ( b < c && k ) t ++ ;
5813	set c to b	N/A	N/A	c = b ;	c = b ;
5814	DUMMY	0.0	0.0	}	DUMMY
5815	print z print newline	N/A	N/A	cout << z << endl ;	cout << z << endl ;
5816	if ac is less than 200001	N/A	N/A	if ( ac < 200001 )	if ( ac < 200001 )
5817	sort elements from a to a + ac	N/A	N/A	sort ( a , a + ac ) ;	sort ( a, a + ac ) ;
5818	for i = 0 to ac exclusive , print second element of first element of a [ i ] print " " print second element of a [ i ] + 1 print newline	N/A	N/A	for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << " " << a [ i ] . second + 1 << endl ;	for ( int i = 0 ; i < ac ; i ++ ) { cout << a [ i ]. first << " " << a. second + 1 << endl ; }
5819	DUMMY	0.0	0.0	}	DUMMY
5820	DUMMY	0.0	0.0	}	DUMMY
5821	create pair array of pair of ( pair of ( integer , integer ) , integer ) a with size 200020	N/A	N/A	pair < pair < int , int > , int > a [ 200020 ] ;	pair < int, int > a [ 200020 ] ;
5822	create long longs n , k , c , x , y , m , z , ac , t , b , i	N/A	N/A	long long n , k , c , x , y , m , z , ac , t , b , i ;	long long n, k, c, x, y, m, z, ac, t, b, i ;
5823	DUMMY	0.0	0.0	int main() {	DUMMY
5824	for read n , decrement n , incrementing i	N/A	N/A	for ( cin >> n ; n -- ; i ++ )	for ( cin >> n ; n --, i ++ )
5825	for read k read c read x read y read m , t = 0 , to decrement k , setting z to maximum of z and t	N/A	N/A	for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) )	for ( cin >> k >> c >> x >> y >> m, t = 0 ; k -- ) z = max ( z, t ) ;
5826	if ac is less than or equal to 200000 , set a [ increment ac ] to make pair with ( ( pair of integer , integer initialized with ( t , c ) ) , i	N/A	N/A	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ;	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( ( pair < int, int > ( t, c ) ), i ++ ;
5827	set b to ( c * x + y ) % m	N/A	N/A	b = ( c * x + y ) % m ;	b = ( c * x + y ) % m ;
5828	if b is less than c and k , increment t	N/A	N/A	if ( b < c && k ) t ++ ;	if ( b < c && k ) t ++ ;
5829	set c to b	N/A	N/A	c = b ;	c = b ;
5830	DUMMY	0.0	0.0	}	DUMMY
5831	print z print newline	N/A	N/A	cout << z << endl ;	cout << z << endl ;
5832	if ac is less than 200001	N/A	N/A	if ( ac < 200001 )	if ( ac < 200001 )
5833	sort elements from a to a + ac	N/A	N/A	sort ( a , a + ac ) ;	sort ( a, a + ac ) ;
5834	for i = 0 to ac exclusive , print second element of first element of a [ i ] print " " print second element of a [ i ] + 1 print newline	N/A	N/A	for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << " " << a [ i ] . second + 1 << endl ;	for ( int i = 0 ; i < ac ; i ++ ) { cout << a [ i ]. first << " " << a. second + 1 << endl ; }
5835	DUMMY	0.0	0.0	}	DUMMY
5836	DUMMY	0.0	0.0	}	DUMMY
5837	create pair array a with size 200020 with pair of ( pair of ( integer and integer ) and integer )	N/A	N/A	pair < pair < int , int > , int > a [ 200020 ] ;	pair < int, int > a [ 200020 ] ;
5838	create long longs n , k , c , x , y , m , z , ac , t , b , i	N/A	N/A	long long n , k , c , x , y , m , z , ac , t , b , i ;	long long n, k, c, x, y, m, z, ac, t, b, i ;
5839	DUMMY	0.0	0.0	int main() {	DUMMY
5840	for read n , decrement n , incrementing i	N/A	N/A	for ( cin >> n ; n -- ; i ++ )	for ( cin >> n ; n --, i ++ )
5841	for read k read c read x read y read m , t = 0 , decrement k , setting z to maximum of z and t	N/A	N/A	for ( cin >> k >> c >> x >> y >> m , t = 0 ; k -- ; z = max ( z , t ) )	for ( cin >> k >> c >> x >> y >> m, t = 0 ; k --, z = max ( z, t ) )
5842	if ac is less than or equal to 200000 , set a [ increment ac ] to new pair from ( pair of ( integer and integer ) initialized with ( t , c ) and i )	N/A	N/A	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int , int > ( t , c ) , i ) ;	if ( ac <= 200000 ) a [ ac ++ ] = make_pair ( pair < int, int > ( t, c ), i ) ;
5843	set b to ( c * x + y ) % m	N/A	N/A	b = ( c * x + y ) % m ;	b = ( c * x + y ) % m ;
5844	if b is less than c and k , increment t	N/A	N/A	if ( b < c && k ) t ++ ;	if ( b < c && k ) t ++ ;
5845	set c to b	N/A	N/A	c = b ;	c = b ;
5846	DUMMY	0.0	0.0	}	DUMMY
5847	print z print newline	N/A	N/A	cout << z << endl ;	cout << z << endl ;
5848	if ac is less than 200001	N/A	N/A	if ( ac < 200001 )	if ( ac < 200001 )
5849	sort elements from a to a + ac	N/A	N/A	sort ( a , a + ac ) ;	sort ( a, a + ac ) ;
5850	for i = 0 to ac exclusive , print second element of first element of a [ i ] print " " print second element of a [ i ] + 1 print newline	N/A	N/A	for ( int i = 0 ; i < ac ; i ++ ) cout << a [ i ] . first . second << " " << a [ i ] . second + 1 << endl ;	for ( int i = 0 ; i < ac ; i ++ ) { cout << a [ i ]. first << " " << a. second + 1 << endl ; }
5851	DUMMY	0.0	0.0	}	DUMMY
5852	DUMMY	0.0	0.0	}	DUMMY
5853	DUMMY	0.0	0.0	int main() {	DUMMY
5854	create integers a , b and c	N/A	N/A	int a , b , c ;	int a, b, c ;
5855	read input to a , b and c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
5856	if b is greater than c , swap b and c	N/A	N/A	if ( b > c ) { swap ( b , c ) ; }	if ( b > c ) swap ( b, c ) ;
5857	print ( 2 * a + b - 1 ) * b + ( c - b - 1 ) * ( a + b - 1 )	N/A	N/A	cout << ( 2 * a + b - 1 ) * b + ( c - b - 1 ) * ( a + b - 1 ) << endl ;	cout << ( 2 * a + b - 1 ) * b + ( c - b - 2 ) * ( b + b + 1 ) << endl ;
5858	DUMMY	0.0	0.0	return 0;	DUMMY
5859	DUMMY	0.0	0.0	}	DUMMY
5860	oo = constant integer = 1e9	N/A	N/A	const int oo = 1e9 ;	const int oo = 1e9 ;
5861	DUMMY	0.0	0.0	int main() {	DUMMY
5862	a , b , c = integer	N/A	N/A	int a , b , c ;	int a, b, c ;
5863	read a , b , c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
5864	ans = integer = b * c + ( a - 1 ) * ( b + c - 1 )	N/A	N/A	int ans = b * c + ( a - 1 ) * ( b + c - 1 ) ;	int ans = b * c + ( a - 1 ) * ( b + c - 1.0 ) ;
5865	print ans	N/A	N/A	cout << ans << ' \n ' ;	cout << ans << endl ;
5866	DUMMY	0.0	0.0	return 0;	DUMMY
5867	DUMMY	0.0	0.0	}	DUMMY
5868	DUMMY	0.0	0.0	int main() {	DUMMY
5869	a , b , c = integers	N/A	N/A	int a , b , c ;	int a, b, c ;
5870	Read a , b , c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
5871	print a * b + b * c + c * a - ( a + b + c ) + 1 and a new line	N/A	N/A	cout << a * b + b * c + c * a - ( a + b + c ) + 1 << endl ;	cout << a * b + b * c + c * a - ( a + b + c ) + 1 << endl ;
5872	DUMMY	0.0	0.0	return 0;	DUMMY
5873	DUMMY	0.0	0.0	}	DUMMY
5874	declare long longs x , y and z	N/A	N/A	long long x , y , z ;	long long x, y, z ;
5875	DUMMY	0.0	0.0	int main() {	DUMMY
5876	read x , y and z	N/A	N/A	cin >> x >> y >> z ;	cin >> x >> y >> z ;
5877	print x * y + y * z + x * z - x - z - y + 1	N/A	N/A	cout << x * y + y * z + x * z - x - z - y + 1 << endl ;	cout << x * y + y * z + x * z - x - z - y + 1 << endl ;
5878	DUMMY	0.0	0.0	return 0;	DUMMY
5879	DUMMY	0.0	0.0	}	DUMMY
5880	let gcd be a function which accepts integers a and b	N/A	N/A	int gcd ( int a , int b )	int gcd ( int a, int b )
5881	return gcd ( b , a modulo b ) if b else a	N/A	N/A	return b ? gcd ( b , a % b ) : a ;	return b? gcd ( b, a % b ) : a ;
5882	DUMMY	0.0	0.0	}	DUMMY
5883	DUMMY	0.0	0.0	int main() {	DUMMY
5884	let n , m , c be integers	N/A	N/A	int n , m , c ;	int n, m, c ;
5885	read n , m , c	N/A	N/A	cin >> n >> m >> c ;	cin >> n >> m >> c ;
5886	print n * m * c - ( n - 1 ) * ( m - 1 ) * ( c - 1 ) and newline	N/A	N/A	cout << n * m * c - ( n - 1 ) * ( m - 1 ) * ( c - 1 ) << endl ;	cout << n * m * c - ( n - 1 ) * ( m - 1) * ( c - 1.0 ) << endl ;
5887	DUMMY	0.0	0.0	}	DUMMY
5888	DUMMY	0.0	0.0	int main() {	DUMMY
5889	create integers a , b , c	N/A	N/A	int a , b , c ;	int a, b, c ;
5890	read a read b read c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
5891	print a * b + b * c + a * c - a - b - c + 1 print newline	N/A	N/A	cout << a * b + b * c + a * c - a - b - c + 1 << endl ;	cout << a * b + b * c + a * c - a - b - c + 1 << endl ;
5892	DUMMY	0.0	0.0	return 0;	DUMMY
5893	DUMMY	0.0	0.0	}	DUMMY
5894	DUMMY	0.0	0.0	int main() {	DUMMY
5895	create integers a , b , c	N/A	N/A	int a , b , c ;	int a, b, c ;
5896	read a read b read c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
5897	print a * b + b * c + c * a - a - b - c + 1 print newline	N/A	N/A	cout << a * b + b * c + c * a - a - b - c + 1 << endl ;	cout << a * b + b * c + c * a - a - b - c + 1 << endl ;
5898	DUMMY	0.0	0.0	return 0;	DUMMY
5899	DUMMY	0.0	0.0	}	DUMMY
5900	DUMMY	0.0	0.0	int main() {	DUMMY
5901	let a , b , c be int	N/A	N/A	int a , b , c ;	int a, b, c ;
5902	read a and b and c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
5903	print a * b + b * c + c * a - a - b - c + 1	N/A	N/A	cout << a * b + b * c + c * a - a - b - c + 1 << endl ;	cout << a * b + b * c + c * a - a - b - c + 1 << endl ;
5904	DUMMY	0.0	0.0	return 0;	DUMMY
5905	DUMMY	0.0	0.0	}	DUMMY
5906	create integers a , b , c	N/A	N/A	int a , b , c ;	int a, b, c ;
5907	DUMMY	0.0	0.0	int main() {	DUMMY
5908	read a read b read c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
5909	print a * b + b * c + c * a - a - b - c + 1 print newline	N/A	N/A	cout << a * b + b * c + c * a - a - b - c + 1 << endl ;	cout << a * b + b * c + c * a - a - b - c + 1 << endl ;
5910	DUMMY	0.0	0.0	}	DUMMY
5911	DUMMY	0.0	0.0	int main() {	DUMMY
5912	create long longs a , b , c	N/A	N/A	long long a , b , c ;	long long a, b, c ;
5913	read a read b read c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
5914	create long long ans with ans = ( c + a - 1 ) * ( b + a - 1 ) - a * ( a - 1 )	N/A	N/A	long long ans = ( c + a - 1 ) * ( b + a - 1 ) - a * ( a - 1 ) ;	long long ans = ( c + a - 1 ) * ( b + a + 1 ) - a * ( a - l ) ;
5915	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
5916	DUMMY	0.0	0.0	return 0;	DUMMY
5917	DUMMY	0.0	0.0	}	DUMMY
5918	create constant long long OO with OO = 1e5 + 555	N/A	N/A	const long long OO = 1e5 + 555 ;	const long long OO = 1e5 + 555 ;
5919	declare rakm with character x as argument , returning long long	N/A	N/A	long long rakm ( char x )	long long rakm ( char x )
5920	return x - 48 from function	N/A	N/A	return x - 48 ;	return x - 48 ;
5921	DUMMY	0.0	0.0	}	DUMMY
5922	declare _7rf with long long x as argument , returning character	N/A	N/A	char _7rf ( long long x )	char _7rf ( long long x )
5923	return x + 48 from function	N/A	N/A	return x + 48 ;	return x + 48 ;
5924	DUMMY	0.0	0.0	}	DUMMY
5925	declare odd with long long x as argument , returning boolean	N/A	N/A	bool odd ( long long x )	bool odd ( long long x )
5926	return x % 2	N/A	N/A	return x % 2 ;	return x % 2 ;
5927	DUMMY	0.0	0.0	}	DUMMY
5928	declare even with long long x as argument , returning boolean	N/A	N/A	bool even ( long long x )	bool even ( long long x )
5929	return 1 - x % 2	N/A	N/A	return 1 - x % 2 ;	return 1 - x % 2 ;
5930	DUMMY	0.0	0.0	}	DUMMY
5931	declare factorial with long long x as argument , returning long long	N/A	N/A	long long factorial ( long long x )	long long factorial ( long long x )
5932	if x is 0 or x is 1	N/A	N/A	if ( x == 0 || x == 1 )	if ( x == 0 || x == 1 )
5933	return 1 from function	N/A	N/A	return 1 ;	return 1 ;
5934	else	N/A	N/A	else	else
5935	return x * result of run factorial with x - 1 as argument	N/A	N/A	return x * factorial ( x - 1 ) ;	return x * factorial ( x - 1 ) ;
5936	DUMMY	0.0	0.0	}	DUMMY
5937	DUMMY	0.0	0.0	}	DUMMY
5938	declare ss with long long x as argument , returning long long	N/A	N/A	long long ss ( long long x )	long long ss ( long long x )
5939	create long long sum with sum = 0	N/A	N/A	long long sum = 0 ;	long long sum = 0 ;
5940	while x is greater than 0	N/A	N/A	while ( x > 0 )	while ( x > 0 )
5941	increment sum by x % 10	N/A	N/A	sum += x % 10 ;	sum += x % 10 ;
5942	set x to x / 10	N/A	N/A	x /= 10 ;	x /= 10 ;
5943	DUMMY	0.0	0.0	}	DUMMY
5944	return sum from function	N/A	N/A	return sum ;	return sum ;
5945	DUMMY	0.0	0.0	}	DUMMY
5946	declare a3ks with long long x as argument , returning long long	N/A	N/A	long long a3ks ( long long x )	long long a3ks ( long long x )
5947	create long longs b , u , with b = 0 , u = x	N/A	N/A	long long b = 0 , u = x ;	long long b = 0, u = x ;
5948	while u is greater than 0	N/A	N/A	while ( u > 0 )	while ( u > 0 )
5949	set b to ( b * 10 ) + u % 10	N/A	N/A	b = ( b * 10 ) + u % 10 ;	b = ( b * 10 ) + u % 10 ;
5950	set u to u / 10	N/A	N/A	u /= 10 ;	u /= 10 ;
5951	DUMMY	0.0	0.0	}	DUMMY
5952	return b from function	N/A	N/A	return b ;	return b ;
5953	DUMMY	0.0	0.0	}	DUMMY
5954	declare prime with long long x as argument , returning boolean	N/A	N/A	bool prime ( long long x )	bool prime ( long long x )
5955	for i = 2 to x exclusive	N/A	N/A	for ( int i = 2 ; i < x ; i ++ )	for ( long long i = 2 ; i < x ; i ++ )
5956	if x % i is 0 , return 0 from function	N/A	N/A	if ( x % i == 0 ) { return 0 ; }	if ( x % i == 0 ) return 0 ;
5957	DUMMY	0.0	0.0	}	DUMMY
5958	return 1 from function	N/A	N/A	return 1 ;	return 1 ;
5959	DUMMY	0.0	0.0	}	DUMMY
5960	DUMMY	0.0	0.0	int main() {	DUMMY
5961	create integers a , b , c	N/A	N/A	int a , b , c ;	int a, b, c ;
5962	read a read b read c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
5963	print ( a * b * c ) - ( ( a - 1 ) * ( b - 1 ) * ( c - 1 ) ) print newline	N/A	N/A	cout << ( a * b * c ) - ( ( a - 1 ) * ( b - 1 ) * ( c - 1 ) ) << endl ;	cout << ( a * b * c ) - ( ( a - 1 ) * ( b - 1) * ( c - 1.0 ) ) << endl ;
5964	DUMMY	0.0	0.0	}	DUMMY
5965	DUMMY	0.0	0.0	int main() {	DUMMY
5966	declare integer variables a , b and c	N/A	N/A	int a , b , c ;	int a, b, c ;
5967	read a , b and c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
5968	print ( a * b ) + ( b * c ) + ( c * a ) - a - b - c + 1	N/A	N/A	cout << ( a * b ) + ( b * c ) + ( c * a ) - a - b - c + 1 << endl ;	cout << ( a * b ) + ( b * c) + ( c * a ) - a - b - c + 1 << endl ;
5969	DUMMY	0.0	0.0	return 0;	DUMMY
5970	DUMMY	0.0	0.0	}	DUMMY
5971	declare constant int N = 1e5 + 100	N/A	N/A	const int N = 1e5 + 100 ;	const int N = 1e5 + 100 ;
5972	create ints a , b and c	N/A	N/A	int a , b , c ;	int a, b, c ;
5973	declare vector of integers called v	N/A	N/A	vector < int > v ;	vector < int > v ;
5974	DUMMY	0.0	0.0	int main() {	DUMMY
5975	read input to a , b and c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
5976	print ( a * b * c ) - ( a - 1 ) * ( b - 1 ) * ( c - 1 )	N/A	N/A	cout << ( a * b * c ) - ( a - 1 ) * ( b - 1 ) * ( c - 1 ) << endl ;	cout << ( a * b * c ) - ( a - 1 ) * ( b - 1) * ( c - 1.0 ) << endl ;
5977	DUMMY	0.0	0.0	return 0;	DUMMY
5978	DUMMY	0.0	0.0	}	DUMMY
5979	create constant integer MAX with MAX = 5e4 + 5	N/A	N/A	const int MAX = 5e4 + 5 ;	const int MAX = 5e4 + 5 ;
5980	create constant long long MAX2 with MAX2 = 11	N/A	N/A	const long long MAX2 = 11 ;	const long long MAX2 = 11 ;
5981	create constant integer MOD with MOD = 1000000000 + 7	N/A	N/A	const int MOD = 1000000000 + 7 ;	const int MOD = 1000000000 + 7 ;
5982	create constant long long INF with INF = 20000	N/A	N/A	const long long INF = 20000 ;	const long long INF = 20000 ;
5983	create constant integer array dr with dr = { 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1 }	N/A	N/A	const int dr [ ] = { 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1 } ;	const int dr [ ] = { 1, 0, - 1, - 0, 1, 1 } ;
5984	create constant integer array dc with dc = { 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1 }	N/A	N/A	const int dc [ ] = { 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1 } ;	const int dc [ ] = { 0, 1, 0, - 1, 1 } ;
5985	create constant double pi with pi = acosign of - 1	N/A	N/A	const double pi = acos ( - 1 ) ;	const double pi = acos ( - 1 ) ;
5986	create integer a , b , c	N/A	N/A	int a , b , c ;	int a, b, c ;
5987	DUMMY	0.0	0.0	int main() {	DUMMY
5988	read a read b read c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
5989	print a * b + ( a + b - 1 ) * ( c - 1 ) print " \ n "	N/A	N/A	cout << a * b + ( a + b - 1 ) * ( c - 1 ) << " \n " ;	cout << a * b + ( a + b - 1 ) * ( c - 1) << " \n " ;
5990	DUMMY	0.0	0.0	return 0;	DUMMY
5991	DUMMY	0.0	0.0	}	DUMMY
5992	N = 100100	N/A	N/A	const int N = 1e5 + 100 ;	const int N = 100100 ;
5993	a , b , c = int	N/A	N/A	int a , b , c ;	int a, b, c ;
5994	v = vector of int	N/A	N/A	vector < int > v ;	vector < int > v ;
5995	DUMMY	0.0	0.0	int main() {	DUMMY
5996	read a , b , c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
5997	print ( b * c ) + ( a - 1 ) * ( b + c - 1 )	N/A	N/A	cout << ( b * c ) + ( a - 1 ) * ( b + c - 1 ) << endl ;	cout << ( b * c ) + ( a - 1 ) * ( b + c - 1.0 ) << endl ;
5998	DUMMY	0.0	0.0	return 0;	DUMMY
5999	DUMMY	0.0	0.0	}	DUMMY
6000	DUMMY	0.0	0.0	int main() {	DUMMY
6001	a , b , c = integers	N/A	N/A	long long a , b , c ;	int a, b, c ;
6002	Read a , b , c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
6003	ans = integer , set to ( c + a - 1 ) * ( b + a - 1 ) - a * ( a - 1 )	N/A	N/A	long long ans = ( c + a - 1 ) * ( b + a - 1 ) - a * ( a - 1 ) ;	int ans = ( c + a - 1 ) * ( b + a + 1 ) - a * ( a - l ) ;
6004	print ans and a new line	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
6005	DUMMY	0.0	0.0	return 0;	DUMMY
6006	DUMMY	0.0	0.0	}	DUMMY
6007	DUMMY	0.0	0.0	int main() {	DUMMY
6008	create long long a , b , c	N/A	N/A	long long a , b , c ;	long long a, b, c ;
6009	read a , b , c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
6010	print ( a * b * c ) - ( ( a - 1 ) * ( b - 1 ) * ( c - 1 ) )	N/A	N/A	cout << ( a * b * c ) - ( ( a - 1 ) * ( b - 1 ) * ( c - 1 ) ) << endl ;	cout << ( a * b * c ) - ( ( a - 1 ) * ( b - 1) * ( c - 1.0 ) ) << endl ;
6011	DUMMY	0.0	0.0	return 0;	DUMMY
6012	DUMMY	0.0	0.0	}	DUMMY
6013	DUMMY	0.0	0.0	int main() {	DUMMY
6014	a , b , c = integer	N/A	N/A	int a , b , c ;	int a, b, c ;
6015	read a , b , c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
6016	print the result of b * c + ( a - 1 ) * ( b + c - 1 )	N/A	N/A	cout << b * c + ( a - 1 ) * ( b + c - 1 ) << endl ;	cout << b * c + ( a - 1 ) * ( b + c - 1.0 ) << endl ;
6017	DUMMY	0.0	0.0	}	DUMMY
6018	create constant integer INF with INF = 0x3f3f3f3f	N/A	N/A	const int INF = 0x3f3f3f3f ;	const int INF = ( 0x3f3f )3f ;
6019	create constant long long INFLL with INFLL = 0x3f3f3f3f3f3f3f3fLL	N/A	N/A	const long long INFLL = 0x3f3f3f3f3f3f3f3fLL ;	const long long INFLL = ( long long ) 0x3f3f0f3p3f2f3cLL ;
6020	DUMMY	0.0	0.0	int main() {	DUMMY
6021	create long longs a , b , c	N/A	N/A	long long a , b , c ;	long long a, b, c ;
6022	read a read b read c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
6023	create long long ans with ans = ( c + a - 1 ) * ( b + a - 1 ) - a * ( a - 1 )	N/A	N/A	long long ans = ( c + a - 1 ) * ( b + a - 1 ) - a * ( a - 1 ) ;	long long ans = ( c + a - 1 ) * ( b + a + 1 ) - a * ( a - l ) ;
6024	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
6025	DUMMY	0.0	0.0	return 0;	DUMMY
6026	DUMMY	0.0	0.0	}	DUMMY
6027	DUMMY	0.0	0.0	int main() {	DUMMY
6028	declare string variables str , str2 and s	N/A	N/A	string str , str2 , s ;	string str, str2, s ;
6029	declare integer variables num and i	N/A	N/A	int num , i ;	int num, i ;
6030	read num and str and loop further	N/A	N/A	while ( cin >> num >> str )	while ( cin >> num >> str )
6031	sort str	N/A	N/A	sort ( str . begin ( ) , str . end ( ) ) ;	sort ( str. begin ( ), str. end ( ) ) ;
6032	for i from 0 to length of str exclusive adding num to i , append str [ i ] to str2	N/A	N/A	for ( i = 0 ; i < str . size ( ) ; i += num ) { str2 += str [ i ] ; }	for ( i = 0 ; i < str. length ( ) ; i += num ) { str2 += str [ i ] ; }
6033	for i = 0 to num exclusive , append str2 to s	N/A	N/A	for ( i = 0 ; i < num ; i ++ ) { s += str2 ; }	for ( i = 0 ; i < num ; i ++ ) s. push_back ( str2 ) ;
6034	assign s to str2	N/A	N/A	str2 = s ;	str2 = s ;
6035	sort str2	N/A	N/A	sort ( str2 . begin ( ) , str2 . end ( ) ) ;	sort ( s. begin ( ), s. end ( ) ) ;
6036	if str2 ! = str	N/A	N/A	if ( str2 != str )	if ( str2!= str )
6037	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
6038	DUMMY	0.0	0.0	;	DUMMY
6039	else	N/A	N/A	else	else
6040	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
6041	DUMMY	0.0	0.0	}	DUMMY
6042	DUMMY	0.0	0.0	}	DUMMY
6043	DUMMY	0.0	0.0	return 0;	DUMMY
6044	DUMMY	0.0	0.0	}	DUMMY
6045	create constant double PI with PI = acosign of - 1	N/A	N/A	const double PI = acos ( - 1 ) ;	const double PI = acos ( - 1 ) ;
6046	create constant integer MAX with MAX = 2e9 + 7	N/A	N/A	const int MAX = 2e9 + 7 ;	const int MAX = 2e9 + 7 ;
6047	create constant long long MOD with MOD = 1e9 + 7	N/A	N/A	const long long MOD = 1e9 + 7 ;	const long long MOD = 1e9 + 7 ;
6048	create map m from character to integer	N/A	N/A	map < char , int > m ;	map < char, int > m ;
6049	declare solve with no arguments , returning void	N/A	N/A	void solve ( )	void solve ( )
6050	create integer k	N/A	N/A	int k ;	int k ;
6051	read k	N/A	N/A	cin >> k ;	cin >> k ;
6052	create string s	N/A	N/A	string s ;	string s ;
6053	read s	N/A	N/A	cin >> s ;	cin >> s ;
6054	create integer n with n = size of s	N/A	N/A	int n = s . size ( ) ;	int n = s. size ( ) ;
6055	if n % k is not 0	N/A	N/A	if ( n % k != 0 )	if ( n % k!= 0 )
6056	print - 1 print newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
6057	return false from function	N/A	N/A	return ;	return false ;
6058	DUMMY	0.0	0.0	}	DUMMY
6059	create integer need with need = n / k	N/A	N/A	int need = n / k ;	int need = n / k ;
6060	for i = 0 to n exclusive , increment m [ s [ i ] ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { m [ s [ i ] ] ++ ; }	for ( int i = 0 ; i < n ; i ++ ) m [ s [ i ] ] ++ ;
6061	create string t with t = " "	N/A	N/A	string t = " " ;	string t = " " ;
6062	for i = 97 to 123 exclusive	N/A	N/A	for ( int i = 97 ; i < 123 ; i ++ )	for ( int i = 97 ; i < 123 ; i ++ )
6063	if m [ character casted i ] % k is 0	N/A	N/A	if ( m [ char ( i ) ] % k == 0 )	if ( m [ ( char ) i ] % k == 0 )
6064	for j = 0 to m [ character casted i ] / k exclusive , increment by character casted i	N/A	N/A	for ( int j = 0 ; j < m [ char ( i ) ] / k ; j ++ ) { t += char ( i ) ; }	for ( int j = 0 ; j < m [ char ( i ) ] / k ; j ++ ) { m [ s [ i ] ] += ( char ) i ; }
6065	else	N/A	N/A	else	else
6066	print - 1 print newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
6067	return false from function	N/A	N/A	return ;	return false ;
6068	DUMMY	0.0	0.0	}	DUMMY
6069	DUMMY	0.0	0.0	}	DUMMY
6070	for i = 0 to k exclusive , print t	N/A	N/A	for ( int i = 0 ; i < k ; i ++ ) { cout << t ; }	for ( int i = 0 ; i < k ; i ++ ) cout << t ;
6071	print newline	N/A	N/A	cout << endl ;	cout << endl ;
6072	DUMMY	0.0	0.0	}	DUMMY
6073	DUMMY	0.0	0.0	int main() {	DUMMY
6074	run solve	N/A	N/A	solve ( ) ;	solve ( ) ;
6075	DUMMY	0.0	0.0	return 0;	DUMMY
6076	DUMMY	0.0	0.0	}	DUMMY
6077	DUMMY	0.0	0.0	int main() {	DUMMY
6078	k = int	N/A	N/A	int k ;	int k ;
6079	s = string	N/A	N/A	string s ;	string s ;
6080	c = int array of size 26 with all values set to 0	N/A	N/A	int c [ 26 ] = { 0 } ;	int c [ 26 ] = { 0 } ;
6081	read k then s	N/A	N/A	cin >> k >> s ;	cin >> k >> s ;
6082	if size of s is not a multiple of k	N/A	N/A	if ( s . size ( ) % k != 0 )	if ( s. size ( ) % k!= 0 )
6083	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
6084	DUMMY	0.0	0.0	return 0;	DUMMY
6085	DUMMY	0.0	0.0	}	DUMMY
6086	for i = 0 to size of s increment c [ s [ i ] - ' a ' ]	N/A	N/A	for ( int i = 0 ; i < s . size ( ) ; ++ i ) { ++ c [ s [ i ] - ' a ' ] ; }	for ( int i = 0 ; i < s. size ( ) ; i ++ ) c [ s [ i ] -'a'] ++ ;
6087	for i = 0 to 26	N/A	N/A	for ( int i = 0 ; i < 26 ; ++ i )	for ( int i = 0 ; i < 26 ; i ++ )
6088	if c [ i ] is not a multiple of k	N/A	N/A	if ( c [ i ] % k != 0 )	if ( c [ i ] % k!= 0 )
6089	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
6090	DUMMY	0.0	0.0	return 0;	DUMMY
6091	DUMMY	0.0	0.0	}	DUMMY
6092	DUMMY	0.0	0.0	}	DUMMY
6093	res = string	N/A	N/A	string res ;	string res ;
6094	for i = 0 to 26	N/A	N/A	for ( int i = 0 ; i < 26 ; ++ i )	for ( int i = 0 ; i < 26 ; i ++ )
6095	for j = 0 to c [ i ] / k increment res by ( ' a ' + i ) as char	N/A	N/A	for ( int j = 0 ; j < c [ i ] / k ; ++ j ) { res += char ( ' a ' + i ) ; }	for ( int j = 0 ; j < c [ i ] / k ; j ++ ) { res += char ('a'+ i ) ; }
6096	DUMMY	0.0	0.0	}	DUMMY
6097	for i = 0 to k print res	N/A	N/A	for ( int i = 0 ; i < k ; ++ i ) { cout << res ; }	for ( int i = 0 ; i < k ; i ++ ) cout << res << endl ;
6098	print newline	N/A	N/A	cout << endl ;	cout << endl ;
6099	DUMMY	0.0	0.0	return 0;	DUMMY
6100	DUMMY	0.0	0.0	}	DUMMY
6101	DUMMY	0.0	0.0	int main() {	DUMMY
6102	k = int	N/A	N/A	int k ;	int k ;
6103	s = string	N/A	N/A	string s ;	string s ;
6104	read k , s	N/A	N/A	cin >> k >> s ;	cin >> k >> s ;
6105	count = array of 26 int filled with 0	N/A	N/A	int count [ 26 ] = { 0 } ;	int count [ 26 ] = { 0 } ;
6106	for i = 0 to length of s exclusive increment count [ s [ i ] - ' a ' ]	N/A	N/A	for ( int i = 0 ; i < s . length ( ) ; ++ i ) { count [ s [ i ] - ' a ' ] += 1 ; }	for ( int i = 0 ; i < s. length ( ) ; i ++ ) { count [ s [ i ] -'a'] ++ ; }
6107	s1 = string	N/A	N/A	string s1 ;	string s1 ;
6108	c = 0	N/A	N/A	int c = 0 ;	int c = 0 ;
6109	increment c while c < 26	N/A	N/A	for ( ; c < 26 ; ++ c )	while ( c < 26 ) c ++ ;
6110	if count [ c ] modulo k not equal 0	N/A	N/A	if ( count [ c ] % k != 0 )	if ( count [ c ] % k!= 0 )
6111	break	N/A	N/A	break ;	break ;
6112	else	N/A	N/A	else	else
6113	append count [ c ] / k copies of ' a ' + c to s1	N/A	N/A	s1 . append ( count [ c ] / k , ' a ' + c ) ;	s1 += ( count [ c ] / k )strcpy ('a'+ c ) ;
6114	DUMMY	0.0	0.0	}	DUMMY
6115	DUMMY	0.0	0.0	}	DUMMY
6116	if c is 26	N/A	N/A	if ( c == 26 )	if ( c == 26 )
6117	while decremented value of k not equal 0 print s1	N/A	N/A	while ( k -- ) { cout << s1 ; }	while ( k -- ) cout << s1 << endl ;
6118	print newline	N/A	N/A	cout << endl ;	cout << endl ;
6119	else	N/A	N/A	else	else
6120	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
6121	DUMMY	0.0	0.0	}	DUMMY
6122	DUMMY	0.0	0.0	return 0;	DUMMY
6123	DUMMY	0.0	0.0	}	DUMMY
6124	DUMMY	0.0	0.0	int main() {	DUMMY
6125	declare count as integer	N/A	N/A	int count ;	int count ;
6126	read count	N/A	N/A	cin >> count ;	cin >> count ;
6127	declare s as string	N/A	N/A	string s ;	string s ;
6128	read s	N/A	N/A	cin >> s ;	cin >> s ;
6129	declare n as integer = length of s	N/A	N/A	int n = s . length ( ) ;	int n = s. length ( ) ;
6130	declare integer array a size 26 = { 0 }	N/A	N/A	int a [ 26 ] = { 0 } ;	int a [ 26 ] = { 0 } ;
6131	for i = 0 to n exclusive , increment a [ s [ i ] - ' a ' ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { a [ s [ i ] - ' a ' ] ++ ; }	for ( int i = 0 ; i < n ; i ++ ) { a [ s [ i ] -'a'] ++ ; }
6132	for i = 0 to 26 exclusive	N/A	N/A	for ( int i = 0 ; i < 26 ; i ++ )	for ( int i = 0 ; i < 26 ; i ++ )
6133	if a [ i ] % count is not 0	N/A	N/A	if ( a [ i ] % count != 0 )	if ( a [ i ] % count!= 0 )
6134	print " - 1 " print newline	N/A	N/A	cout << " -1 " << endl ;	cout << " -1 " << endl ;
6135	DUMMY	0.0	0.0	return 0;	DUMMY
6136	DUMMY	0.0	0.0	}	DUMMY
6137	DUMMY	0.0	0.0	}	DUMMY
6138	declare string ans = " "	N/A	N/A	string ans = " " ;	string ans = " " ;
6139	for i = 0 to 26 exclusive	N/A	N/A	for ( int i = 0 ; i < 26 ; i ++ )	for ( int i = 0 ; i < 26 ; i ++ )
6140	if a [ i ] is true	N/A	N/A	if ( a [ i ] )	if ( a [ i ] )
6141	for j = 0 to a [ i ] / count exclusive	N/A	N/A	for ( int j = 0 ; j < a [ i ] / count ; j ++ )	for ( int j = 0 ; j < a [ i ] / count ; j ++ )
6142	declare temp with temp = i + ' a '	N/A	N/A	char temp = i + ' a ' ;	int temp = i +'a';
6143	let ans be ans + temp	N/A	N/A	ans = ans + temp ;	ans += temp ;
6144	DUMMY	0.0	0.0	}	DUMMY
6145	DUMMY	0.0	0.0	}	DUMMY
6146	DUMMY	0.0	0.0	}	DUMMY
6147	for i = 0 to count exclusive , print ans	N/A	N/A	for ( int i = 0 ; i < count ; i ++ ) { cout << ans ; }	for ( int i = 0 ; i < count ; i ++ ) cout << ans << endl ;
6148	print newline	N/A	N/A	cout << endl ;	cout << endl ;
6149	DUMMY	0.0	0.0	}	DUMMY
6150	DUMMY	0.0	0.0	int main() {	DUMMY
6151	create integers k	N/A	N/A	int k ;	int k ;
6152	read k	N/A	N/A	cin >> k ;	cin >> k ;
6153	create string str	N/A	N/A	string str ;	string str ;
6154	read str	N/A	N/A	cin >> str ;	cin >> str ;
6155	create integer n with n = length of str	N/A	N/A	int n = str . length ( ) ;	int n = str. length ( ) ;
6156	create map characters from character to integer	N/A	N/A	map < char , int > characters ;	map < char, int > m ;
6157	create map iterator itr from character to integer	N/A	N/A	map < char , int > :: iterator itr ;	map < char, int > :: iterator itr ;
6158	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
6159	if first index of str [ i ] in characters is not end of characters	N/A	N/A	if ( characters . find ( str [ i ] ) != characters . end ( ) )	if ( strstr ( str [ i ] )!= str. end ( ) )
6160	increment characters [ str [ i ] ] by 1	N/A	N/A	characters [ str [ i ] ] += 1 ;	char characters [ str [ i ] ] += 1 ;
6161	else	N/A	N/A	else	else
6162	set characters [ str [ i ] ] to 1	N/A	N/A	characters [ str [ i ] ] = 1 ;	char characters [ str [ i ] ] = 1 ;
6163	DUMMY	0.0	0.0	}	DUMMY
6164	DUMMY	0.0	0.0	}	DUMMY
6165	for itr = beginning of characters to itr is not end of characters , incrementing itr	N/A	N/A	for ( itr = characters . begin ( ) ; itr != characters . end ( ) ; itr ++ )	for ( itr = characters. begin ( ) ; itr!= char :: iterator itr ; ++ itr )
6166	if second element of itr is less than k	N/A	N/A	if ( itr -> second < k )	if ( itr. second < k )
6167	print - 1 print newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
6168	exit program with code 0	N/A	N/A	exit ( 0 ) ;	exit ( 0 ) ;
6169	DUMMY	0.0	0.0	}	DUMMY
6170	DUMMY	0.0	0.0	}	DUMMY
6171	create string new_str with new_str = " "	N/A	N/A	string new_str = " " ;	string new_str = " " ;
6172	for itr = beginning of characters to itr is not end of characters , incrementing itr	N/A	N/A	for ( itr = characters . begin ( ) ; itr != characters . end ( ) ; itr ++ )	for ( itr = characters. begin ( ) ; itr!= char :: npos ; ++ itr )
6173	create integer repeat with repeat = second element of itr / k	N/A	N/A	int repeat = itr -> second / k ;	int repeat = itr. second / k ;
6174	for i = 0 to repeat exclusive , set new_str to new_str + first element of itr	N/A	N/A	for ( int i = 0 ; i < repeat ; i ++ ) { new_str = new_str + itr -> first ; }	for ( int i = 0 ; i < repeat ; i ++ ) { new_str += itr. first ; }
6175	DUMMY	0.0	0.0	}	DUMMY
6176	if length of new_str * k is less than n	N/A	N/A	if ( new_str . length ( ) * k < n )	if ( new_str. length ( ) * k < n )
6177	print - 1 print newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
6178	exit program with code 0	N/A	N/A	exit ( 0 ) ;	exit ( 0 ) ;
6179	DUMMY	0.0	0.0	}	DUMMY
6180	for i = 0 to k exclusive , print new_str	N/A	N/A	for ( int i = 0 ; i < k ; i ++ ) { cout << new_str ; }	for ( int i = 0 ; i < k ; i ++ ) cout << new_str << endl ;
6181	print newline	N/A	N/A	cout << endl ;	cout << endl ;
6182	DUMMY	0.0	0.0	return 0;	DUMMY
6183	DUMMY	0.0	0.0	}	DUMMY
6184	declare an array of chars inPutStr with size 1001	N/A	N/A	char inPutStr [ 1001 ] ;	char inPutStr [ 1001 ] ;
6185	declare int k and an array of ints strArr with 26 elements	N/A	N/A	int strArr [ 26 ] , k ;	int k, strArr [ 26 ] ;
6186	create char array subStr with 1001 elements	N/A	N/A	char subStr [ 1001 ] ;	char subStr [ 1001 ] ;
6187	makeAString is a void function	N/A	N/A	void makeAString ( )	void makeAString ( )
6188	create integer idx = 0	N/A	N/A	int idx = 0 ;	int idx = 0 ;
6189	for j from 0 to 26 exclusive	N/A	N/A	for ( int j = 0 ; j < 26 ; j ++ )	for ( int j = 0 ; j < 26 ; j ++ )
6190	while strArr [ j ] ! = 0	N/A	N/A	while ( strArr [ j ] != 0 )	while ( strArr [ j ]!= 0 )
6191	change subStr [ idx ] to j + ' a '	N/A	N/A	subStr [ idx ] = j + ' a ' ;	subStr [ idx ] = j +'a';
6192	increment idx by one	N/A	N/A	idx ++ ;	idx ++ ;
6193	assign strArr [ j ] - k to strArr [ j ]	N/A	N/A	strArr [ j ] = strArr [ j ] - k ;	strArr [ j ] -= k ;
6194	DUMMY	0.0	0.0	}	DUMMY
6195	DUMMY	0.0	0.0	}	DUMMY
6196	for i from 0 to k exclusive	N/A	N/A	for ( int i = 0 ; i < k ; i ++ )	for ( int i = 0 ; i < k ; i ++ )
6197	for j = 0 to idx exclusive , print subStr [ j ]	N/A	N/A	for ( int j = 0 ; j < idx ; j ++ ) { cout << subStr [ j ] ; }	for ( int j = 0 ; j < idx ; j ++ ) { cout << subStr [ j ] ; }
6198	DUMMY	0.0	0.0	}	DUMMY
6199	print new line	N/A	N/A	cout << endl ;	cout << endl ;
6200	DUMMY	0.0	0.0	}	DUMMY
6201	DUMMY	0.0	0.0	int main() {	DUMMY
6202	for i = 0 to 26 exclusive , set strArr [ i ] to 0	N/A	N/A	for ( int i = 0 ; i < 26 ; i ++ ) { strArr [ i ] = 0 ; }	for ( int i = 0 ; i < 26 ; i ++ ) strArr [ i ] ='0';
6203	read k	N/A	N/A	cin >> k ;	cin >> k ;
6204	read inPutStr	N/A	N/A	cin >> inPutStr ;	cin >> inPutStr ;
6205	for i = 0 while inPutStr [ i ] ! = 0	N/A	N/A	for ( int i = 0 ; inPutStr [ i ] ; i ++ )	for ( int i = 0 ; inStr [ i ]!= 0 ; i ++ )
6206	create integer id = inPutStr [ i ] - ' a '	N/A	N/A	int id = inPutStr [ i ] - ' a ' ;	int id = inPutStr [ i ] -'a';
6207	set strArr [ id ] to strArr [ id ] + 1	N/A	N/A	strArr [ id ] = strArr [ id ] + 1 ;	strArr [ id ] += 1 ;
6208	DUMMY	0.0	0.0	}	DUMMY
6209	declare bool Result = true	N/A	N/A	bool Result = true ;	bool Result = true ;
6210	for i from 0 to 26 exclusive	N/A	N/A	for ( int i = 0 ; i < 26 ; i ++ )	for ( int i = 0 ; i < 26 ; i ++ )
6211	if strArr [ i ] % k ! = 0	N/A	N/A	if ( strArr [ i ] % k != 0 )	if ( strArr [ i ] % k!= 0 )
6212	assign false to Result	N/A	N/A	Result = false ;	Result = false ;
6213	break the loop	N/A	N/A	break ;	break ;
6214	DUMMY	0.0	0.0	}	DUMMY
6215	DUMMY	0.0	0.0	}	DUMMY
6216	if Result is true	N/A	N/A	if ( Result )	if ( Result )
6217	call makeAString ( )	N/A	N/A	makeAString ( ) ;	makeAString ( ) ;
6218	else	N/A	N/A	else	else
6219	print " - 1 "	N/A	N/A	cout << " -1 " << endl ;	cout << " -1 " << endl ;
6220	DUMMY	0.0	0.0	return 0;	DUMMY
6221	DUMMY	0.0	0.0	}	DUMMY
6222	DUMMY	0.0	0.0	int main() {	DUMMY
6223	let T , i , j , count , d and m be integers with count = 1 and m = 0	N/A	N/A	int T , i , j , count = 1 , d , m = 0 ;	int T, i, j, count = 1, d, m = 0 ;
6224	create an arrays of characters s and k with size 1000	N/A	N/A	char s [ 1000 ] , k [ 1000 ] ;	char s [ 10000 ], k [ 1000 ] ;
6225	read T and s	N/A	N/A	cin >> T >> s ;	cin >> T >> s ;
6226	set j to length of s	N/A	N/A	j = strlen ( s ) ;	j = strlen ( s ) ;
6227	sort s	N/A	N/A	sort ( s , s + j ) ;	sort ( s. begin ( ), s. end ( ) ) ;
6228	for i = 0 to j exclusive	N/A	N/A	for ( i = 0 ; i < j ; i ++ )	for ( i = 0 ; i < j ; i ++ )
6229	if s [ i ] = s [ i + 1 ]	N/A	N/A	if ( s [ i ] == s [ i + 1 ] )	if ( s [ i ] == s [ j + 1 ] )
6230	add 1 to count	N/A	N/A	count += 1 ;	count ++ ;
6231	else	N/A	N/A	else	else
6232	if count % T = 0	N/A	N/A	if ( count % T == 0 )	if ( count % T == 0 )
6233	assign count / T to d	N/A	N/A	d = count / T ;	d = count / T ;
6234	loop , decrementing d , while it is not 0	N/A	N/A	while ( d -- )	while ( d -- )
6235	set k [ m ] to s [ i ]	N/A	N/A	k [ m ] = s [ i ] ;	k [ m ] = s [ i ] ;
6236	increment m	N/A	N/A	m ++ ;	m ++ ;
6237	DUMMY	0.0	0.0	}	DUMMY
6238	set count to 1	N/A	N/A	count = 1 ;	count = 1 ;
6239	else	N/A	N/A	else	else
6240	print " - 1 "	N/A	N/A	cout << " -1 " << endl ;	cout << " -1\n " ;
6241	DUMMY	0.0	0.0	return 0;	DUMMY
6242	DUMMY	0.0	0.0	}	DUMMY
6243	DUMMY	0.0	0.0	}	DUMMY
6244	DUMMY	0.0	0.0	}	DUMMY
6245	set k [ m ] to ' \ 0 '	N/A	N/A	k [ m ] = ' \0 ' ;	k [ m ] ='\0';
6246	decrement T and loop further , while T is not 0	N/A	N/A	while ( T -- )	while ( T -- )
6247	for i from 0 while k [ i ] ! = ' \ 0 ' incrementing i , print k [ i ] in a loop	N/A	N/A	for ( i = 0 ; k [ i ] != ' \0 ' ; i ++ ) { cout << k [ i ] ; }	for ( int i = 0 ; k [ i ]!='\0'; i ++ ) { cout << k [ 1 ] ; }
6248	DUMMY	0.0	0.0	}	DUMMY
6249	print new line	N/A	N/A	cout << endl ;	cout << endl ;
6250	DUMMY	0.0	0.0	return 0;	DUMMY
6251	DUMMY	0.0	0.0	}	DUMMY
6252	let solve be a void function which accepts string str , integer k	N/A	N/A	void solve ( string str , int k )	void solve ( string str, int k )
6253	cnt = array of integers of length 26	N/A	N/A	int cnt [ 26 ] ;	int cnt [ 26 ] ;
6254	memset of cnt , 0 , length of cnt	N/A	N/A	memset ( cnt , 0 , sizeof ( cnt ) ) ;	memset ( cnt, 0, sizeof cnt ) ;
6255	for i = 0 to length of str exclusive , increment cnt [ str [ i ] - a ] by 1	N/A	N/A	for ( int i = 0 ; i < str . length ( ) ; i ++ ) cnt [ str [ i ] - ' a ' ] ++ ;	for ( int i = 0 ; i < str. length ( ) ; i ++ ) cnt [ str [ i ] -'a'] ++ ;
6256	let s1 be a string	N/A	N/A	string s1 ;	string s1 ;
6257	initialize integer i to 0	N/A	N/A	int i = 0 ;	int i = 0 ;
6258	for i is less than 26 , increment i by 1	N/A	N/A	for ( ; i < 26 ; i ++ )	for ( ; i < 26 ; i ++ )
6259	if cnt [ i ] modulo k is not equal to 0	N/A	N/A	if ( cnt [ i ] % k != 0 )	if ( cnt [ i ] % k!= 0 )
6260	stop	N/A	N/A	break ;	break ;
6261	else do the following	N/A	N/A	else	else
6262	It extends the string s1 by appending cnt [ i ] / k , ' a ' + i	N/A	N/A	s1 . append ( cnt [ i ] / k , ' a ' + i ) ;	s1. extends ( cnt [ i ] / k,'a'+ i ) ;
6263	DUMMY	0.0	0.0	}	DUMMY
6264	DUMMY	0.0	0.0	}	DUMMY
6265	if i is equal to 26	N/A	N/A	if ( i == 26 )	if ( i == 26 )
6266	while k is decremented by 1 , print s1	N/A	N/A	while ( k -- ) { cout << s1 ; }	while ( k -- ) cout << s1 ;
6267	print newline	N/A	N/A	cout << endl ;	cout << endl ;
6268	else do the following	N/A	N/A	else	else
6269	print - 1 and newline	N/A	N/A	cout << " -1 " << endl ;	cout << - 1 << endl ;
6270	DUMMY	0.0	0.0	}	DUMMY
6271	DUMMY	0.0	0.0	}	DUMMY
6272	DUMMY	0.0	0.0	int main() {	DUMMY
6273	let k be a integer	N/A	N/A	int k ;	int k ;
6274	read k	N/A	N/A	cin >> k ;	cin >> k ;
6275	let str be a string	N/A	N/A	string str ;	string str ;
6276	read str	N/A	N/A	cin >> str ;	cin >> str ;
6277	solve the values str , k	N/A	N/A	solve ( str , k ) ;	solve ( str, k ) ;
6278	DUMMY	0.0	0.0	return 0;	DUMMY
6279	DUMMY	0.0	0.0	}	DUMMY
6280	declare long longs i , j , k , n , m , ans , sz , c1 , c2 , x , f , z , declare long long arrays a with size 100009 , ch with size 26	N/A	N/A	long long i , j , k , n , m , a [ 100009 ] , ans , sz , c1 , c2 , x , ch [ 26 ] , f , z ;	long long i, j, k, n, m, ans, sz, c1, c2, x, f, z, a [ 100009 ], ch [ 26 ] ;
6281	DUMMY	0.0	0.0	int main() {	DUMMY
6282	declare string s	N/A	N/A	string s ;	string s ;
6283	read k , s	N/A	N/A	cin >> k >> s ;	cin >> k >> s ;
6284	let sz be size of s	N/A	N/A	sz = s . size ( ) ;	sz = s. size ( ) ;
6285	declare character set st	N/A	N/A	set < char > st ;	set < char > st ;
6286	declare it as character set iterator	N/A	N/A	set < char > :: iterator it ;	set < char > :: iterator it ;
6287	for i = 0 to sz exclusive	N/A	N/A	for ( i = 0 ; i < sz ; i ++ )	for ( int i = 0 ; i < sz ; i ++ )
6288	insert s [ i ] into st	N/A	N/A	st . insert ( s [ i ] ) ;	st. insert ( s [ i ] ) ;
6289	increment ch [ s [ i ] - ' a ' ]	N/A	N/A	ch [ s [ i ] - ' a ' ] ++ ;	ch [ s [ i ] -'a'] ++ ;
6290	DUMMY	0.0	0.0	}	DUMMY
6291	declare long long vector v	N/A	N/A	vector < long long > v ;	vector < long long > v ;
6292	for it = beginning of st to it is not end of st , incrementing it	N/A	N/A	for ( it = st . begin ( ) ; it != st . end ( ) ; it ++ )	for ( it = st. begin ( ) ; it!= st. end ( ) - 1 ; it ++ )
6293	create character c	N/A	N/A	char c ;	char c ;
6294	set c to value of it	N/A	N/A	c = * it ;	c = * it ;
6295	add ch [ c - ' a ' ] to end of v	N/A	N/A	v . push_back ( ch [ c - ' a ' ] ) ;	v. push_back ( ch [ c -'a'] ) ;
6296	DUMMY	0.0	0.0	}	DUMMY
6297	let sz be size of v	N/A	N/A	sz = v . size ( ) ;	sz = v. size ( ) ;
6298	for i = 0 to sz exclusive	N/A	N/A	for ( i = 0 ; i < sz ; i ++ )	for ( int i = 0 ; i < sz ; i ++ )
6299	if v [ i ] % k is not 0	N/A	N/A	if ( v [ i ] % k != 0 )	if ( v [ i ] % k!= 0 )
6300	let f be 1	N/A	N/A	f = 1 ;	f = 1 ;
6301	break loop	N/A	N/A	break ;	break ;
6302	DUMMY	0.0	0.0	}	DUMMY
6303	DUMMY	0.0	0.0	}	DUMMY
6304	if f is true	N/A	N/A	if ( f )	if ( f )
6305	print " - 1 " print newline	N/A	N/A	cout << " -1 " << endl ;	cout << " -1 " << endl ;
6306	DUMMY	0.0	0.0	return 0;	DUMMY
6307	else	N/A	N/A	else	else
6308	declare ss as string	N/A	N/A	string ss ;	string ss ;
6309	for it = beginning of st to it is not end of st , incrementing it	N/A	N/A	for ( it = st . begin ( ) ; it != st . end ( ) ; it ++ )	for ( map < string, int > :: iterator it = st. begin ( ) ; it!= st. end ( ) - 1 ; ++ it )
6310	declare character c	N/A	N/A	char c ;	char c ;
6311	let c be value of it	N/A	N/A	c = * it ;	c = * it ;
6312	let z be ch [ c - ' a ' ] / k	N/A	N/A	z = ch [ c - ' a ' ] / k ;	z = ch [ c -'a'] / k ;
6313	for i = 0 to z exclusive , increment ss by c	N/A	N/A	for ( i = 0 ; i < z ; i ++ ) ss += c ;	for ( int i = 0 ; i < z ; i ++ ) ss += c ;
6314	DUMMY	0.0	0.0	}	DUMMY
6315	for i = 0 to k exclusive , print ss	N/A	N/A	for ( i = 0 ; i < k ; i ++ ) cout << ss ;	for ( int i = 0 ; i < k ; i ++ ) cout << ss << endl ;
6316	print newline	N/A	N/A	cout << endl ;	cout << endl ;
6317	DUMMY	0.0	0.0	}	DUMMY
6318	DUMMY	0.0	0.0	return 0;	DUMMY
6319	DUMMY	0.0	0.0	}	DUMMY
6320	DUMMY	0.0	0.0	int main() {	DUMMY
6321	create integer vector v	N/A	N/A	vector < int > v ;	vector < int > v ;
6322	create integer vector v1	N/A	N/A	vector < int > v1 ;	vector < int > v1 ;
6323	create character vector v2	N/A	N/A	vector < char > v2 ;	vector < char > v2 ;
6324	create integers k , c , temp , gh with c = 0 , gh = 0	N/A	N/A	int k , c = 0 , temp , gh = 0 ;	int k, c = 0, temp, gh = 0 ;
6325	read k	N/A	N/A	cin >> k ;	cin >> k ;
6326	create character ch	N/A	N/A	char ch ;	char ch ;
6327	create strings s , ans	N/A	N/A	string s , ans ;	string s, ans ;
6328	read s	N/A	N/A	cin >> s ;	cin >> s ;
6329	create string s1 with s1 = s	N/A	N/A	string s1 = s ;	string s1 = s ;
6330	sort elements from beginning of s1 to end of s1	N/A	N/A	sort ( s1 . begin ( ) , s1 . end ( ) ) ;	sort ( s2. begin ( ), s1. end ( ) ) ;
6331	for i = 0 to size of s1 exclusive	N/A	N/A	for ( int i = 0 ; i < s1 . size ( ) ; i ++ )	for ( int i = 0 ; i < s1. size ( ) ; i ++ )
6332	set c to 0	N/A	N/A	c = 0 ;	int c = 0 ;
6333	if s1 [ i ] is not s1 [ i + 1 ]	N/A	N/A	if ( s1 [ i ] != s1 [ i + 1 ] )	if ( s1 [ i ]!= s1. at ( i + 1 ) )
6334	set ch to s1 [ i ]	N/A	N/A	ch = s1 [ i ] ;	ch = s1 [ i ] ;
6335	add character ch to end of v2	N/A	N/A	v2 . push_back ( ch ) ;	v2. push_back ( ch ) ;
6336	for j = 0 to size of s exclusive	N/A	N/A	for ( int j = 0 ; j < s . size ( ) ; j ++ )	for ( int j = 0 ; j < s. size ( ) ; j ++ )
6337	if s [ j ] is ch , increment c	N/A	N/A	if ( s [ j ] == ch ) { c ++ ; }	if ( s [ j ] == ch ) c ++ ;
6338	DUMMY	0.0	0.0	}	DUMMY
6339	create integer temp with temp = c	N/A	N/A	int temp = c ;	int temp = c ;
6340	add element temp to end of v	N/A	N/A	v . push_back ( temp ) ;	v. push_back ( temp ) ;
6341	DUMMY	0.0	0.0	}	DUMMY
6342	DUMMY	0.0	0.0	}	DUMMY
6343	for i = 0 to size of v exclusive	N/A	N/A	for ( int i = 0 ; i < v . size ( ) ; i ++ )	for ( int i = 0 ; i < v. size ( ) ; i ++ )
6344	if v [ i ] % k is 0	N/A	N/A	if ( v [ i ] % k == 0 )	if ( v [ i ] % k == 0 )
6345	create integer f with f = v [ i ] / k	N/A	N/A	int f = v [ i ] / k ;	int f = v [ i ] / k ;
6346	add element f to end of v1	N/A	N/A	v1 . push_back ( f ) ;	v1. push_back ( f ) ;
6347	else	N/A	N/A	else	else
6348	set gh to - 1	N/A	N/A	gh = - 1 ;	gh = - 1 ;
6349	break loop	N/A	N/A	break ;	break ;
6350	DUMMY	0.0	0.0	}	DUMMY
6351	DUMMY	0.0	0.0	}	DUMMY
6352	for i = 0 to size of v1 exclusive	N/A	N/A	for ( int i = 0 ; i < v1 . size ( ) ; i ++ )	for ( int i = 0 ; i < v1. size ( ) ; i ++ )
6353	create integer m with m = v1 [ i ]	N/A	N/A	int m = v1 [ i ] ;	int m = v1 [ i ] ;
6354	create character g with g = v2 [ i ]	N/A	N/A	char g = v2 [ i ] ;	char g = v2 [ i ] ;
6355	while m is greater than 0	N/A	N/A	while ( m > 0 )	while ( m > 0 )
6356	increment ans by g	N/A	N/A	ans += g ;	ans += g ;
6357	decrement m	N/A	N/A	m -- ;	m -- ;
6358	DUMMY	0.0	0.0	}	DUMMY
6359	DUMMY	0.0	0.0	}	DUMMY
6360	create string sum with sum = " "	N/A	N/A	string sum = " " ;	string sum = " " ;
6361	create integer our with our = k - 1	N/A	N/A	int our = k - 1 ;	int our = k - 1 ;
6362	while our is greater than or equal to 0	N/A	N/A	while ( our >= 0 )	while ( our >= 0 )
6363	increment sum by ans	N/A	N/A	sum += ans ;	sum += ans ;
6364	decrement our	N/A	N/A	our -- ;	-- us ;
6365	DUMMY	0.0	0.0	}	DUMMY
6366	if gh is - 1	N/A	N/A	if ( gh == - 1 )	if ( gh == - 1 )
6367	print - 1 print newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
6368	else	N/A	N/A	else	else
6369	print sum print newline	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
6370	DUMMY	0.0	0.0	}	DUMMY
6371	DUMMY	0.0	0.0	return 0;	DUMMY
6372	DUMMY	0.0	0.0	}	DUMMY
6373	DUMMY	0.0	0.0	int main() {	DUMMY
6374	create integers i , Len , k , create integer array Arr with size 26 with Arr = { 0 }	N/A	N/A	int i , Len , k , Arr [ 26 ] = { 0 } ;	int i, Len, k, Arr [ 26 ] = { 0 } ;
6375	create strings s , kString	N/A	N/A	string s , kString ;	string s, kString ;
6376	read k read s	N/A	N/A	cin >> k >> s ;	cin >> k >> s ;
6377	for i = 0 to length of s exclusive , increment Arr [ s [ i ] - ' a ' ]	N/A	N/A	for ( i = 0 ; i < s . length ( ) ; i ++ ) { Arr [ s [ i ] - ' a ' ] ++ ; }	for ( i = 0 ; i < s. length ( ) ; i ++ ) { Arr [ s [ i ] -'a'] ++ ; }
6378	for i = 0 to 26 exclusive	N/A	N/A	for ( i = 0 ; i < 26 ; i ++ )	for ( i = 0 ; i < 26 ; i ++ )
6379	if Arr [ i ] % k is not 0	N/A	N/A	if ( Arr [ i ] % k != 0 )	if ( Arr [ i ] % k!= 0 )
6380	DUMMY	0.0	0.0	{	DUMMY
6381	break loop	N/A	N/A	break ;	break ;
6382	else	N/A	N/A	else	else
6383	append ' a ' + i to kString ( Arr [ i ] / k ) times	N/A	N/A	kString . append ( Arr [ i ] / k , ' a ' + i ) ;	for ( int i = 0 ; i < 26 ; i ++ ) { kString ( Arr [ i ] / k ) ; }
6384	DUMMY	0.0	0.0	}	DUMMY
6385	DUMMY	0.0	0.0	}	DUMMY
6386	if i is 26	N/A	N/A	if ( i == 26 )	if ( i == 26 )
6387	while decrement k is true , print kString	N/A	N/A	while ( k -- ) { cout << kString ; }	while ( k -- ) cout << kString << endl ;
6388	print newline	N/A	N/A	cout << endl ;	cout << endl ;
6389	else	N/A	N/A	else	else
6390	print - 1 print newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
6391	DUMMY	0.0	0.0	}	DUMMY
6392	DUMMY	0.0	0.0	return 0;	DUMMY
6393	DUMMY	0.0	0.0	}	DUMMY
6394	create constant double PI = acos ( - 1 )	N/A	N/A	const double PI = acos ( - 1 ) ;	const double PI = acos ( - 1.0 ) ;
6395	let const integer MAX = 2e9 + 7	N/A	N/A	const int MAX = 2e9 + 7 ;	const int MAX = 2e9 + 7 ;
6396	let const long long MOD = 1e9 + 7	N/A	N/A	const long long MOD = 1e9 + 7 ;	const long long MOD = 1e9 + 7 ;
6397	create map m of chars to ints	N/A	N/A	map < char , int > m ;	map < char, int > m ;
6398	declare solve	N/A	N/A	void solve ( )	void solve ( )
6399	let int k	N/A	N/A	int k ;	int k ;
6400	read k	N/A	N/A	cin >> k ;	cin >> k ;
6401	let string s	N/A	N/A	string s ;	string s ;
6402	read s	N/A	N/A	cin >> s ;	cin >> s ;
6403	create int n = s . size ( )	N/A	N/A	int n = s . size ( ) ;	int n = s. size ( ) ;
6404	if n modulo k is not equal to 0	N/A	N/A	if ( n % k != 0 )	if ( n % k!= 0 )
6405	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
6406	terminate function	N/A	N/A	return ;	exit ( 0 ) ;
6407	DUMMY	0.0	0.0	}	DUMMY
6408	create int need = n / k	N/A	N/A	int need = n / k ;	int need = n / k ;
6409	increment all contents of m [ s ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { m [ s [ i ] ] ++ ; }	memset ( m [ s ], 0, sizeof m [ i ] ) ;
6410	let string t = " "	N/A	N/A	string t = " " ;	string t = " " ;
6411	for i = 97 to 123 exclusive	N/A	N/A	for ( int i = 97 ; i < 123 ; i ++ )	for ( int i = 97 ; i < 123 ; i ++ )
6412	if m [ char ( i ) ] modulo k is 0	N/A	N/A	if ( m [ char ( i ) ] % k == 0 )	if ( m [ char ( i ) ] % k == 0 )
6413	for j = 0 to m [ char ( i ) ] / k exclusive , set t to t + char ( i )	N/A	N/A	for ( int j = 0 ; j < m [ char ( i ) ] / k ; j ++ ) { t += char ( i ) ; }	for ( int j = 0 ; j < m [ char ( i ) ] / k ; j ++ ) { t += char ( j ) ; }
6414	otherwise do	N/A	N/A	else	else
6415	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
6416	end function	N/A	N/A	return ;	return ;
6417	DUMMY	0.0	0.0	}	DUMMY
6418	DUMMY	0.0	0.0	}	DUMMY
6419	for i = 0 to k exclusive , print t	N/A	N/A	for ( int i = 0 ; i < k ; i ++ ) { cout << t ; }	for ( int i = 0 ; i < k ; i ++ ) { cout << t ; }
6420	print new line	N/A	N/A	cout << endl ;	cout << endl ;
6421	DUMMY	0.0	0.0	}	DUMMY
6422	DUMMY	0.0	0.0	int main() {	DUMMY
6423	call solve	N/A	N/A	solve ( ) ;	solve ( ) ;
6424	DUMMY	0.0	0.0	return 0;	DUMMY
6425	DUMMY	0.0	0.0	}	DUMMY
6426	ctn = int array of length 30	N/A	N/A	int cnt [ 30 ] ;	int ctn [ 30 ] ;
6427	DUMMY	0.0	0.0	int main() {	DUMMY
6428	let n , k be int	N/A	N/A	int n , k ;	int n, k ;
6429	let s be a string	N/A	N/A	string s ;	string s ;
6430	read k and s	N/A	N/A	cin >> k >> s ;	cin >> k >> s ;
6431	set n to the lenght of s	N/A	N/A	n = s . length ( ) ;	n = strlen ( s ) ;
6432	for i = 0 to n exclusive increment cnt at s [ i ] - ' a '	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cnt [ s [ i ] - ' a ' ] ++ ; }	for ( int i = 0 ; i < n ; i ++ ) cnt [ s [ i ] -'a'] ++ ;
6433	let can = true be a boolean	N/A	N/A	bool can = true ;	bool can = true ;
6434	let ss be a blank string	N/A	N/A	string ss = " " ;	string ss = " " ;
6435	for x = ' a ' to ' z ' inclusive	N/A	N/A	for ( char x = ' a ' ; x <= ' z ' ; x ++ )	for ( char x ='a'; x <='z'; ++ x )
6436	if cnt [ x - ' a ' ] mod k is not 0	N/A	N/A	if ( cnt [ x - ' a ' ] % k != 0 )	if ( cnt [ x -'a'] % k!= 0 )
6437	can is false	N/A	N/A	can = false ;	can = false ;
6438	else	N/A	N/A	else	else
6439	for j = 0 to cnt [ x - ' a ' ] / k increment ss by x	N/A	N/A	for ( int j = 0 ; j < cnt [ x - ' a ' ] / k ; j ++ ) { ss += x ; }	for ( int j = 0 ; j < cnt [ x -'a'] / k ; j ++ ) { ss += x ; }
6440	DUMMY	0.0	0.0	}	DUMMY
6441	DUMMY	0.0	0.0	}	DUMMY
6442	if can	N/A	N/A	if ( can )	if ( can )
6443	print ss for k times	N/A	N/A	for ( int i = 0 ; i < k ; i ++ ) { cout << ss ; }	for ( int j = 0 ; j < k ; j ++ ) { cout << ss ; }
6444	print new line	N/A	N/A	cout << endl ;	cout << endl ;
6445	else	N/A	N/A	else	else
6446	print - 1 and new line	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
6447	DUMMY	0.0	0.0	}	DUMMY
6448	DUMMY	0.0	0.0	}	DUMMY
6449	DUMMY	0.0	0.0	int main() {	DUMMY
6450	create integers k , i and j	N/A	N/A	int k , i , j ;	int k, i, j ;
6451	declare string s	N/A	N/A	string s ;	string s ;
6452	create integer array c with size 26	N/A	N/A	int c [ 26 ] = { 0 } ;	int c [ 26 ] ;
6453	read input to k and s	N/A	N/A	cin >> k >> s ;	cin >> k >> s ;
6454	if length of s % k ! = 0	N/A	N/A	if ( s . size ( ) % k != 0 )	if ( s. length ( ) % k!= 0 )
6455	print - 1 to the standart output	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
6456	DUMMY	0.0	0.0	return 0;	DUMMY
6457	DUMMY	0.0	0.0	}	DUMMY
6458	for i = 0 to length of s exclusive ,	N/A	N/A	for ( i = 0 ; i < s . size ( ) ; i ++ ) { c [ s [ i ] - ' a ' ] ++ ; }	for ( int i = 0 ; i < s. length ( ) ; i ++ )
6459	for i = 0 to 26 exclusive	N/A	N/A	for ( i = 0 ; i < 26 ; i ++ )	for ( int i = 0 ; i < 26 ; i ++ )
6460	if c [ i ] % k ! = 0	N/A	N/A	if ( c [ i ] % k != 0 )	if ( c [ i ] % k!= 0 )
6461	print - 1 to the standart output	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
6462	DUMMY	0.0	0.0	return 0;	DUMMY
6463	DUMMY	0.0	0.0	}	DUMMY
6464	DUMMY	0.0	0.0	}	DUMMY
6465	create string result	N/A	N/A	string result ;	string result ;
6466	for i = 0 to 26 exclusive	N/A	N/A	for ( i = 0 ; i < 26 ; i ++ )	for ( int i = 0 ; i < 26 ; i ++ )
6467	for j from 0 to c [ i ] / k exclusive , append char ( ' a ' + i ) to result	N/A	N/A	for ( j = 0 ; j < c [ i ] / k ; j ++ ) { result = result + char ( ' a ' + i ) ; }	for ( int j = 0 ; j < c [ i ] / k ; j ++ ) result += char ('a'+ i ) ;
6468	DUMMY	0.0	0.0	}	DUMMY
6469	for i from 0 to k exclusive , print result to the standart output	N/A	N/A	for ( i = 0 ; i < k ; i ++ ) { cout << result ; }	for ( int i = 0 ; i < k ; i ++ ) { cout << result << endl ; }
6470	print new line	N/A	N/A	cout << endl ;	cout << endl ;
6471	DUMMY	0.0	0.0	return 0;	DUMMY
6472	DUMMY	0.0	0.0	}	DUMMY
6473	create constant integer N with N = 100 + 5	N/A	N/A	const int N = 100 + 5 ;	const int N = 100 + 5 ;
6474	create contant integer mod with mod = 1000000000 + 7	N/A	N/A	const int mod = 1000000000 + 7 ;	const int mod = 1000000000 + 7 ;
6475	declare boolean ok with character a as argument , returning boolean	N/A	N/A	bool ok ( char a )	bool ok ( char a )
6476	if a is greater than or equal to ' a ' and a is less than or equal to ' z ' , return 1 from function	N/A	N/A	if ( a >= ' a ' && a <= ' z ' ) return 1 ;	if ( a >='a'&& a <='z') return 1 ;
6477	if a is greater than or equal to ' A ' and a is less than or equal to ' Z ' , return 1 from function	N/A	N/A	if ( a >= ' A ' && a <= ' Z ' ) return 1 ;	if ( a >='A'&& a <='Z') return 1 ;
6478	if a is greater than or equal to ' 0 ' and a is less than or equal to ' 9 ' , return 1 from function	N/A	N/A	if ( a >= ' 0 ' && a <= ' 9 ' ) return 1 ;	if ( a >='0'&& a <='9') return 1 ;
6479	if a is ' _ ' , return 1 from function	N/A	N/A	if ( a == ' _ ' ) return 1 ;	if ( a =='_') return 1 ;
6480	DUMMY	0.0	0.0	return 0;	DUMMY
6481	DUMMY	0.0	0.0	}	DUMMY
6482	DUMMY	0.0	0.0	int main() {	DUMMY
6483	create character array a with size N	N/A	N/A	char a [ N ] ;	char a [ N ] ;
6484	read a + 1	N/A	N/A	cin >> a + 1 ;	cin >> a + 1 ;
6485	create integer len with len = string length of ( a + 1 )	N/A	N/A	int len = strlen ( a + 1 ) ;	int len = strlen ( a + 1 ) ;
6486	create integer op with op = 1	N/A	N/A	int op = 1 ;	int op = 1 ;
6487	create boolean flag with flag = 1	N/A	N/A	bool flag = 1 ;	bool flag = 1 ;
6488	create integers cnt1 , cnt2 , ccnt , cnt3 , with cnt1 = 0 , cnt2 = 0 , ccnt = 0 , cnt3 = 0	N/A	N/A	int cnt1 = 0 , cnt2 = 0 , ccnt = 0 , cnt3 = 0 ;	int cnt1 == 0, cnt2 = 0, ccnt = 0 and cnt3 = 0 ;
6489	for i = 1 to len and flag inclusive	N/A	N/A	for ( int i = 1 ; i <= len && flag ; i ++ )	for ( int i = 1 ; i <= len && flag ; i ++ )
6490	if op is 1	N/A	N/A	if ( op == 1 )	if ( op == 1 )
6491	increment cnt1	N/A	N/A	cnt1 ++ ;	cnt1 ++ ;
6492	if a [ i ] is ' @ '	N/A	N/A	if ( a [ i ] == ' @ ' )	if ( a [ i ] =='@')
6493	decrement cnt1	N/A	N/A	cnt1 -- ;	cnt1 -- ;
6494	set op to 2	N/A	N/A	op = 2 ;	op = 2 ;
6495	break current loop iteration	N/A	N/A	continue ;	continue ;
6496	DUMMY	0.0	0.0	}	DUMMY
6497	if result of run ok with a [ i ] as argument is false , set flag to 0	N/A	N/A	if ( ! ok ( a [ i ] ) ) { flag = 0 ; }	if (! ok ( a [ i ] ) ) flag = 0 ;
6498	if cnt1 is greater than 16 , set flag to 0	N/A	N/A	if ( cnt1 > 16 ) flag = 0 ;	if ( cnt1 > 16 ) flag = 0 ;
6499	else if op is 2	N/A	N/A	else if ( op == 2 )	else if ( op == 2 )
6500	increment ccnt	N/A	N/A	ccnt ++ ;	ccnt ++ ;
6501	if cnt is 0 or cnt1 is greater than 16 , set flag to 0	N/A	N/A	if ( cnt1 == 0 || cnt1 > 16 ) flag = 0 ;	if ( cnt == 0 || cnt1 > 16 ) flag = 0 ;
6502	if a [ i ] is ' . '	N/A	N/A	if ( a [ i ] == ' . ' )	if ( a [ i ] == '.')
6503	if cnt2 is 0 or cnt2 is greater than 16 , set flag to 0	N/A	N/A	if ( cnt2 == 0 || cnt2 > 16 ) flag = 0 ;	if ( cnt2 == 0 || cnt1 > 16 ) flag = 0 ;
6504	set cnt2 to 0	N/A	N/A	cnt2 = 0 ;	cnt2 = 0 ;
6505	break current loop iteration	N/A	N/A	continue ;	continue ;
6506	DUMMY	0.0	0.0	}	DUMMY
6507	if a [ i ] is ' / '	N/A	N/A	if ( a [ i ] == ' / ' )	if ( a [ i ] =='/')
6508	decrement ccnt	N/A	N/A	ccnt -- ;	ccnt -- ;
6509	set op to 3	N/A	N/A	op = 3 ;	op = 3 ;
6510	break current loop iteration	N/A	N/A	continue ;	continue ;
6511	DUMMY	0.0	0.0	}	DUMMY
6512	if result of run ok with a [ i ] as argument is false , set flag to 0	N/A	N/A	if ( ! ok ( a [ i ] ) ) { flag = 0 ; }	if (! ok ( a [ i ] ) ) flag = 0 ;
6513	increment cnt2	N/A	N/A	cnt2 ++ ;	cnt2 ++ ;
6514	if cnt2 is greater than 16 , set flag to 0	N/A	N/A	if ( cnt2 > 16 ) flag = 0 ;	if ( cnt2 > 16 ) flag = 0 ;
6515	else	N/A	N/A	else	else
6516	if cnt2 is 0 or cnt2 is greater than 16 , set flag to 0	N/A	N/A	if ( cnt2 == 0 || cnt2 > 16 ) flag = 0 ;	if ( cnt2 == 0 || cnt1 > 16 ) flag = 0 ;
6517	if ccnt is 0 or ccnt is greater than 32 , set flag to 0	N/A	N/A	if ( ccnt == 0 || ccnt > 32 ) flag = 0 ;	if ( ccnt == 0 || ccnt > 32 ) flag = 0 ;
6518	if result of run ok with a [ i ] as argument is false , set flag to 0	N/A	N/A	if ( ! ok ( a [ i ] ) ) flag = 0 ;	if (! ok ( a [ i ] ) ) flag = 0 ;
6519	increment cnt3	N/A	N/A	cnt3 ++ ;	cnt3 ++ ;
6520	if cnt3 is greater than 16 , set flag to 0	N/A	N/A	if ( cnt3 > 16 ) flag = 0 ;	if ( cnt3 > 16 ) flag = 0 ;
6521	DUMMY	0.0	0.0	}	DUMMY
6522	DUMMY	0.0	0.0	}	DUMMY
6523	if op is 1 , set flag to 0	N/A	N/A	if ( op == 1 ) flag = 0 ;	if ( op == 1 ) flag = 0 ;
6524	if op is 2 and ( cnt2 is 0 or cnt2 is greater than 16 ) , set flag to 0	N/A	N/A	if ( op == 2 && ( cnt2 == 0 || cnt2 > 16 ) ) flag = 0 ;	if ( op == 2 && ( cnt2 == 0 || cnt3 > 16 ) ) flag = 0 ;
6525	if op is 3 and ( cnt3 is 0 or cnt3 is greater than 16 ) , set flag to 0	N/A	N/A	if ( op == 3 && ( cnt3 == 0 || cnt3 > 16 ) ) flag = 0 ;	if ( op == 3 && ( cnt3 == 0 || cnt2 > 16 ) ) flag = 0 ;
6526	if flag is true	N/A	N/A	if ( flag )	if ( flag )
6527	print " YES " print newline	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
6528	else	N/A	N/A	else	else
6529	print " NO " print newline	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
6530	DUMMY	0.0	0.0	return 0;	DUMMY
6531	DUMMY	0.0	0.0	}	DUMMY
6532	create constant integer N = 100 + 5	N/A	N/A	const int N = 100 + 5 ;	const int N = 100 + 5 ;
6533	create constant integer mod = 1000000000 + 7	N/A	N/A	const int mod = 1000000000 + 7 ;	const int mod = 1000000000 + 7 ;
6534	bool function ok with char argument a	N/A	N/A	bool ok ( char a )	bool ok ( char a )
6535	if a is a letter character return 1	N/A	N/A	if ( a >= ' a ' && a <= ' z ' ) return 1 ;	if ( a >='A'&& a <='Z') return 1 ;
6536	if a is a capital letter character return 1	N/A	N/A	if ( a >= ' A ' && a <= ' Z ' ) return 1 ;	if ( a >='A'&& a <='Z') return 1 ;
6537	if a is a digit return 1	N/A	N/A	if ( a >= ' 0 ' && a <= ' 9 ' ) return 1 ;	if ( a >='0'&& a <='9') return 1 ;
6538	if a is ' _ ' return 1	N/A	N/A	if ( a == ' _ ' ) return 1 ;	if ( a =='_') return 1 ;
6539	DUMMY	0.0	0.0	return 0;	DUMMY
6540	DUMMY	0.0	0.0	}	DUMMY
6541	DUMMY	0.0	0.0	int main() {	DUMMY
6542	declare array of characters of size N	N/A	N/A	char a [ N ] ;	char a [ N ] ;
6543	read a + 1	N/A	N/A	cin >> a + 1 ;	cin >> a + 1 ;
6544	create integer len with value = length of ( a + 1 )	N/A	N/A	int len = strlen ( a + 1 ) ;	int len = strlen ( a + 1 ) ;
6545	set integer op to 1	N/A	N/A	int op = 1 ;	int op = 1 ;
6546	set boolean flag to 1	N/A	N/A	bool flag = 1 ;	bool flag = 1 ;
6547	integers cnt1 = 0 , cnt2 = 0 , ccnt = 0 and cnt3 = 0	N/A	N/A	int cnt1 = 0 , cnt2 = 0 , ccnt = 0 , cnt3 = 0 ;	int cnt1 = 0, cnt2 = 0 ; while ( cnt3 == 0 )
6548	for integer i = 1 to len and flag inclusive	N/A	N/A	for ( int i = 1 ; i <= len && flag ; i ++ )	for ( int i = 1 ; i <= len && flag ; i ++ )
6549	if op is equal to 1	N/A	N/A	if ( op == 1 )	if ( op == 1 )
6550	increase cnt1	N/A	N/A	cnt1 ++ ;	cnt1 ++ ;
6551	if a [ i ] is ' @ '	N/A	N/A	if ( a [ i ] == ' @ ' )	if ( a [ i ] =='@')
6552	decrement cnt1	N/A	N/A	cnt1 -- ;	cnt1 -- ;
6553	set value of op to 2	N/A	N/A	op = 2 ;	op = 2 ;
6554	go to the start of the loop	N/A	N/A	continue ;	continue ;
6555	DUMMY	0.0	0.0	}	DUMMY
6556	if ok ( a [ i ] ) is false , set flag to 0	N/A	N/A	if ( ! ok ( a [ i ] ) ) { flag = 0 ; }	if (! ok ( a [ i ] ) ) flag = 0 ;
6557	if cnt1 is greater than 16 , set flag to 0	N/A	N/A	if ( cnt1 > 16 ) flag = 0 ;	if ( cnt1 > 16 ) flag = 0 ;
6558	else if op is equal to 2	N/A	N/A	else if ( op == 2 )	else if ( op == 2 )
6559	increment ccnt	N/A	N/A	ccnt ++ ;	ccnt ++ ;
6560	if cnt1 = 0 or cnt1 > 16 , set flag to 0	N/A	N/A	if ( cnt1 == 0 || cnt1 > 16 ) flag = 0 ;	if ( cnt1 == 0 || cnt2 > 16 ) flag = 0 ;
6561	if a [ i ] is ' . '	N/A	N/A	if ( a [ i ] == ' . ' )	if ( a [ i ] == '.')
6562	if cnt2 = 0 or cnt2 > 16 , set flag to 0	N/A	N/A	if ( cnt2 == 0 || cnt2 > 16 ) flag = 0 ;	if ( cnt2 == 0 || cnt1 > 16 ) flag = 0 ;
6563	set cnt2 to 0	N/A	N/A	cnt2 = 0 ;	cnt2 = 0 ;
6564	go to the start of the loop	N/A	N/A	continue ;	continue ;
6565	DUMMY	0.0	0.0	}	DUMMY
6566	if a [ i ] is ' / '	N/A	N/A	if ( a [ i ] == ' / ' )	if ( a [ i ] =='/')
6567	decrement ccnt	N/A	N/A	ccnt -- ;	ccnt -- ;
6568	op = 3	N/A	N/A	op = 3 ;	op = 3 ;
6569	continue the loop	N/A	N/A	continue ;	continue ;
6570	DUMMY	0.0	0.0	}	DUMMY
6571	if ok ( a [ i ] ) is false , set flag to 0	N/A	N/A	if ( ! ok ( a [ i ] ) ) { flag = 0 ; }	if (! ok ( a [ i ] ) ) flag = 0 ;
6572	increase cnt2	N/A	N/A	cnt2 ++ ;	cnt2 ++ ;
6573	if cnt2 is greater than 16 , set flag to 0	N/A	N/A	if ( cnt2 > 16 ) flag = 0 ;	if ( cnt2 > 16 ) flag = 0 ;
6574	else	N/A	N/A	else	else
6575	if cnt2 = 0 or cnt2 is greater than 16 , set flag to 0	N/A	N/A	if ( cnt2 == 0 || cnt2 > 16 ) flag = 0 ;	if ( cnt2 == 0 || cnt1 > 16 ) flag = 0 ;
6576	if ccnt = 0 or ccnt is greater than 32 , set flag to 0	N/A	N/A	if ( ccnt == 0 || ccnt > 32 ) flag = 0 ;	if ( ccnt == 0 || ccnt > 32 ) flag = 0 ;
6577	if ok ( a [ i ] ) is false , set flag to 0	N/A	N/A	if ( ! ok ( a [ i ] ) ) flag = 0 ;	if (! ok ( a [ i ] ) ) flag = 0 ;
6578	increase cnt3	N/A	N/A	cnt3 ++ ;	cnt3 ++ ;
6579	if cnt3 is greater than 16 , set flag to 0	N/A	N/A	if ( cnt3 > 16 ) flag = 0 ;	if ( cnt3 > 16 ) flag = 0 ;
6580	DUMMY	0.0	0.0	}	DUMMY
6581	DUMMY	0.0	0.0	}	DUMMY
6582	if op is equal to 1 , set flag to 0	N/A	N/A	if ( op == 1 ) flag = 0 ;	if ( op == 1 ) flag = 0 ;
6583	if op = 2 and ( cnt2 = 0 or cnt2 is greater than 16 ) , set flag to 0	N/A	N/A	if ( op == 2 && ( cnt2 == 0 || cnt2 > 16 ) ) flag = 0 ;	if ( op == 2 && ( cnt2 == 0 || cnt3 > 16 ) ) flag = 0 ;
6584	if op = 3 and ( cnt3 = 0 or cnt3 is greater than 16 ) , set flag to 0	N/A	N/A	if ( op == 3 && ( cnt3 == 0 || cnt3 > 16 ) ) flag = 0 ;	if ( op == 3 && ( cnt3 == 0 || cnt2 > 16 ) ) flag = 0 ;
6585	if flag is true	N/A	N/A	if ( flag )	if ( flag )
6586	print " YES " and a new line	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
6587	else	N/A	N/A	else	else
6588	print " NO " and a new line	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
6589	DUMMY	0.0	0.0	return 0;	DUMMY
6590	DUMMY	0.0	0.0	}	DUMMY
6591	declare myCompare with constant pair address ' s i , j , from string to integer	N/A	N/A	bool myCompare ( const pair < string , int > & i , const pair < string , int > & j )	const pair < string, int > myCompare ( const pair < int > & ( i, j ) )
6592	return second element of i is less than second element of j	N/A	N/A	return i . second < j . second ;	return ( i. second < j. second ) ;
6593	DUMMY	0.0	0.0	}	DUMMY
6594	create string s	N/A	N/A	string s ;	string s ;
6595	declare check with no arguments , returning integer	N/A	N/A	int check ( )	int check ( )
6596	create integers x , y , 0 , with x = 0 , y = 0 , flag = 0	N/A	N/A	int x = 0 , y = 0 , flag = 0 ;	int x == 0, y = 0, flag = 0 ;
6597	for i = 0 to size of s	N/A	N/A	for ( int i = 0 ; i < s . size ( ) ; i ++ )	for ( int i = 0 ; i < s. size ( ) ; i ++ )
6598	if flag is 0	N/A	N/A	if ( flag == 0 )	if ( flag == 0 )
6599	if s [ i ] is ' @ '	N/A	N/A	if ( s [ i ] == ' @ ' )	if ( s [ i ] =='@')
6600	if i - x is greater than 16 or i - x is less than 1 or i + 1 is size of s , return 0 from function	N/A	N/A	if ( ( i - x ) > 16 || ( i - x ) < 1 || ( i + 1 == s . size ( ) ) ) return 0 ;	if ( i - x > 16 || i - y < 1 || i + 1 == s. size ( ) ) { return 0 ; }
6601	set x to i + 1	N/A	N/A	x = i + 1 ;	x = i + 1 ;
6602	set y to i + 1	N/A	N/A	y = i + 1 ;	y = i + 1 ;
6603	set flag to 1	N/A	N/A	flag = 1 ;	flag = 1 ;
6604	else if s [ i ] is alphanumeric or s [ i ] is digit or s [ i ] is ' _ '	N/A	N/A	else if ( isalpha ( s [ i ] ) || isdigit ( s [ i ] ) || s [ i ] == ' _ ' )	else if ( s [ i ] =='alphanumeric'|| s [ 1 ] <='9'|| strcmp ( i, 1 ) =='_')
6605	break current loop iteration	N/A	N/A	continue ;	continue ;
6606	else if s [ i ] is not alphanumeric or s [ i ] is not digit or s [ i ] is not ' _ '	N/A	N/A	else if ( ! isalpha ( s [ i ] ) || ! isdigit ( s [ i ] ) || s [ i ] != ' _ ' )	else if ( s [ i ]!= alphanumeric || s [ 1 ]!='0'&& s [ 2 ]!= " _')
6607	DUMMY	0.0	0.0	return 0;	DUMMY
6608	DUMMY	0.0	0.0	}	DUMMY
6609	else if flag is 1	N/A	N/A	else if ( flag == 1 )	else if ( flag == 1 )
6610	if s [ i ] is ' / '	N/A	N/A	if ( s [ i ] == ' / ' )	if ( s [ i ] =='/')
6611	if i - x is greater than 32 or i - x is less than 1 or i + 1 is size of s or s [ i - 1 ] is ' . ' , return 0 from function	N/A	N/A	if ( ( i - x ) > 32 || ( i - x ) < 1 || ( i + 1 == s . size ( ) ) || s [ i - 1 ] == ' . ' ) return 0 ;	if ( ( i - x ) > 32 || ( i + x ) < 1 || ( ( 1 << i + 1 ) == s. size ( ) ) || ( s [ i - 1 ] == '.') ) return 0 ;
6612	set x to i + 1	N/A	N/A	x = i + 1 ;	x = i + 1 ;
6613	set flag to 2	N/A	N/A	flag = 2 ;	flag = 2 ;
6614	else if s [ i ] is ' . '	N/A	N/A	else if ( s [ i ] == ' . ' )	else if ( s [ i ] == '.')
6615	if i - y is greater than 16 or i - y is less than 1 or i + 1 is size of s , return 0 from function	N/A	N/A	if ( ( i - y ) > 16 || ( i - y ) < 1 || ( i + 1 == s . size ( ) ) ) return 0 ;	if ( ( i - y ) > 16 || ( i ) - y < 1 || ( ( long long ) i + 1 ) == s. size ( ) ) { return 0 ; }
6616	set y to i + 1	N/A	N/A	y = i + 1 ;	y = i + 1 ;
6617	else if s [ i ] is alphanumeric or s [ i ] is digit or s [ i ] is ' . ' or s [ i ] is ' _ '	N/A	N/A	else if ( isalpha ( s [ i ] ) || isdigit ( s [ i ] ) || s [ i ] == ' . ' || s [ i ] == ' _ ' )	else if ( s [ i ] == " alphanumeric " || s [ 1 ] == '.'|| s [] =='_')
6618	if i + 1 is size of s	N/A	N/A	if ( i + 1 == s . size ( ) )	if ( i + 1 == s. size ( ) )
6619	if i - x + 1 is greater than 32 or i - x + 1 is less than 1 , return 0 from function	N/A	N/A	if ( ( i - x + 1 ) > 32 || ( i - x + 1 ) < 1 ) return 0 ;	if ( ( i - x + 1 ) > 32 || ( i ) - ( x ) + 1 < 1 ) return 0 ;
6620	if i - y + 1 is greater than 16 or i - y + 1 is less than 1 , return 0 from function	N/A	N/A	if ( ( i - y + 1 ) > 16 || ( i - y + 1 ) < 1 ) return 0 ;	if ( ( i - y + 1 ) > 16 || ( i ) - ( y - 1 ) < 1 ) return 0 ;
6621	DUMMY	0.0	0.0	}	DUMMY
6622	break current loop iteration	N/A	N/A	continue ;	continue ;
6623	else if s [ i ] is not alphanumeric or s [ i ] is not digit or s [ i ] is not ' . ' or s [ i ] is not ' _ '	N/A	N/A	else if ( ! isalpha ( s [ i ] ) || ! isdigit ( s [ i ] ) || s [ i ] != ' . ' || s [ i ] != ' _ ' )	else if ( s [ i ]!= " alphanumeric " || s [ 1 ]!='digit'|| S [ i + 1!= '.'or s [ 2 ] =='_')
6624	DUMMY	0.0	0.0	return 0;	DUMMY
6625	DUMMY	0.0	0.0	}	DUMMY
6626	else	N/A	N/A	else	else
6627	if s [ i ] is ' _ ' and i + 1 is size of s , return 0 from function	N/A	N/A	if ( s [ i ] == ' _ ' && i + 1 == s . size ( ) ) return 0 ;	if ( s [ i ] =='_'&& i + 1 == s. size ( ) ) return 0 ;
6628	if s [ i ] is alphanumeric or s [ i ] is digit or s [ i ] is ' _ '	N/A	N/A	if ( isalpha ( s [ i ] ) || isdigit ( s [ i ] ) || s [ i ] == ' _ ' )	if ( s [ i ] == " alphanumeric " || s [ 1 ] =='digit'|| s. at ( i ) =='_')
6629	if i + 1 is size of s	N/A	N/A	if ( i + 1 == s . size ( ) )	if ( i + 1 == s. size ( ) )
6630	if i - x + 1 is greater than 16 or i - x + 1 is less than 1 , return 0 from function	N/A	N/A	if ( ( i - x + 1 ) > 16 || ( i - x + 1 ) < 1 ) return 0 ;	if ( i - x + 1 > 16 || i - y + 1 < 1 ) return 0 ;
6631	DUMMY	0.0	0.0	}	DUMMY
6632	break current loop iteration	N/A	N/A	continue ;	continue ;
6633	DUMMY	0.0	0.0	}	DUMMY
6634	if s [ i ] is not alphanumeric or s [ i ] is not digit or s [ i ] is not ' _ ' , return 0 from function	N/A	N/A	if ( ! isalpha ( s [ i ] ) || ! isdigit ( s [ i ] ) || s [ i ] != ' _ ' ) { return 0 ; }	if ( s [ i ]!='alphanumeric'|| s [ 1 ] <='_') return 0 ;
6635	DUMMY	0.0	0.0	}	DUMMY
6636	DUMMY	0.0	0.0	}	DUMMY
6637	if flag is greater than 0	N/A	N/A	if ( flag > 0 )	if ( flag > 0 )
6638	return 1 from function	N/A	N/A	return 1 ;	return 1 ;
6639	else	N/A	N/A	else	else
6640	DUMMY	0.0	0.0	return 0;	DUMMY
6641	DUMMY	0.0	0.0	}	DUMMY
6642	DUMMY	0.0	0.0	int main() {	DUMMY
6643	read s	N/A	N/A	cin >> s ;	cin >> s ;
6644	print " YES " if result of run check is true , else " NO " print newline	N/A	N/A	cout << ( check ( ) ? " YES " : " NO " ) << endl ;	cout << ( check ( s )? " YES " : " NO " ) << endl ;
6645	DUMMY	0.0	0.0	return 0;	DUMMY
6646	DUMMY	0.0	0.0	}	DUMMY
6647	boolean function l that takes character c as argument	N/A	N/A	bool l ( char c )	bool l ( char c )
6648	return true if c is a letter	N/A	N/A	if ( c >= ' a ' && c <= ' z ' ) { return true ; }	if ( c =='letter') return true ;
6649	return true if c is a capital letter	N/A	N/A	if ( c >= ' A ' && c <= ' Z ' ) { return true ; }	if ( c >='A'&& c <='Z') return true ;
6650	return true if c is a digit	N/A	N/A	if ( c >= ' 0 ' && c <= ' 9 ' ) { return true ; }	if ( c >='0'&& c <='9') return true ;
6651	return true if c is an underscore	N/A	N/A	if ( c == ' _ ' ) { return true ; }	if ( c >='A'&& c <='Z') return true ;
6652	return false	N/A	N/A	return false ;	return false ;
6653	DUMMY	0.0	0.0	}	DUMMY
6654	function un with string argument s	N/A	N/A	bool un ( string s )	bool un ( string s )
6655	set value of int n to length s	N/A	N/A	int n = s . size ( ) ;	int n = s. length ( ) ;
6656	if n is 0 or n > 16 return false	N/A	N/A	if ( n == 0 || n > 16 ) { return false ; }	if ( n == 0 || n > 16 ) return false ;
6657	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
6658	if l ( s at index i ) is false return false	N/A	N/A	if ( ! l ( s [ i ] ) ) { return false ; }	if (! l ( s [ i ] ) ) return false ;
6659	DUMMY	0.0	0.0	}	DUMMY
6660	return true	N/A	N/A	return true ;	return true ;
6661	DUMMY	0.0	0.0	}	DUMMY
6662	function hn with string argument s	N/A	N/A	bool hn ( string s )	bool hn ( string s )
6663	declare integers n = size of s , i , nw = 0	N/A	N/A	int n = s . size ( ) , i , nw = 0 ;	int n = s. size ( ), i, nw = 0 ;
6664	if n is 0 or n > 32 return false	N/A	N/A	if ( n == 0 || n > 32 ) { return false ; }	if ( n == 0 || n > 32 ) return false ;
6665	appen character ' . ' to s	N/A	N/A	s += ' . ' ;	s = '.'+ s ;
6666	for i = 0 to n + 1 exclusive	N/A	N/A	for ( i = 0 ; i < n + 1 ; i ++ )	for ( i = 0 ; i < n + 1 ; i ++ )
6667	if s [ i ] is character " . "	N/A	N/A	if ( s [ i ] == ' . ' )	if ( s [ i ] == '.')
6668	if nw is equal to 0 or nw is greater than 16 return false	N/A	N/A	if ( nw == 0 || nw > 16 ) { return false ; }	if ( nw == 0 || nw > 16 ) return false ;
6669	nw = 0	N/A	N/A	nw = 0 ;	nw = 0 ;
6670	else	N/A	N/A	else	else
6671	if l ( s at index i ) is false return false	N/A	N/A	if ( ! l ( s [ i ] ) ) { return false ; }	if (! l ( s [ i ] ) ) return false ;
6672	increase nw	N/A	N/A	nw ++ ;	nw ++ ;
6673	DUMMY	0.0	0.0	}	DUMMY
6674	DUMMY	0.0	0.0	}	DUMMY
6675	return true	N/A	N/A	return true ;	return true ;
6676	DUMMY	0.0	0.0	}	DUMMY
6677	boolean function r with string argument s	N/A	N/A	bool r ( string s )	bool r ( string s )
6678	return un ( s )	N/A	N/A	return un ( s ) ;	return un ( s ) ;
6679	DUMMY	0.0	0.0	}	DUMMY
6680	boolean function f with string argument s	N/A	N/A	bool f ( string s )	bool f ( string s )
6681	int n = length of s , i , j	N/A	N/A	int n = s . size ( ) , i , j ;	int n = s. length ( ), i, j ;
6682	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
6683	if s at index i is " @ " break the loop	N/A	N/A	if ( s [ i ] == ' @ ' ) { break ; }	if ( s [ i ] =='@') break ;
6684	DUMMY	0.0	0.0	}	DUMMY
6685	if i is equal to n return false	N/A	N/A	if ( i == n ) { return false ; }	if ( i == n ) return false ;
6686	if un ( substring of s from 0 to i ) is false return false	N/A	N/A	if ( ! un ( s . substr ( 0 , i ) ) ) { return false ; }	if (! un ( s. substr ( 0, i ) ) return false ;
6687	for j = from i + 1 to n exclusive	N/A	N/A	for ( j = i + 1 ; j < n ; j ++ )	for ( j = i + 1 ; j < n ; j ++ )
6688	if s [ j ] is " / " break the loop	N/A	N/A	if ( s [ j ] == ' / ' ) { break ; }	if ( s [ j ] =='/') break ;
6689	DUMMY	0.0	0.0	}	DUMMY
6690	if hn ( substring of s from i + 1 to j - i - 1 ) is false return false	N/A	N/A	if ( ! hn ( s . substr ( i + 1 , j - i - 1 ) ) ) { return false ; }	if (! hn ( s. substr ( i + 1, j - i - 1 ) ) return false ;
6691	if j is not equal to n and r ( substring of s from 0 to j + 1 ) is false return false	N/A	N/A	if ( j != n && ! r ( s . substr ( j + 1 ) ) ) { return false ; }	if ( j!= n &&! r ( s. substr ( 0, j + 1 ) ) return false ;
6692	return true	N/A	N/A	return true ;	return true ;
6693	DUMMY	0.0	0.0	}	DUMMY
6694	let s be string	N/A	N/A	string s ;	string s ;
6695	DUMMY	0.0	0.0	int main() {	DUMMY
6696	read s	N/A	N/A	cin >> s ;	cin >> s ;
6697	if f ( s )	N/A	N/A	if ( f ( s ) )	if ( f ( s ) )
6698	print " YES " and a new line	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
6699	else	N/A	N/A	else	else
6700	print " NO " and a new line	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
6701	DUMMY	0.0	0.0	}	DUMMY
6702	DUMMY	0.0	0.0	return 0;	DUMMY
6703	DUMMY	0.0	0.0	}	DUMMY
6704	DUMMY	0.0	0.0	int main() {	DUMMY
6705	create ints i , j , flag = 1 , and dot = 0	N/A	N/A	int i , j , flag = 1 , dot = 0 ;	int i, j, flag = 1, dot = 0 ;
6706	let string ch	N/A	N/A	string ch ;	string ch ;
6707	read ch	N/A	N/A	cin >> ch ;	cin >> ch ;
6708	for i = 0 to length of ch exclusive	N/A	N/A	for ( i = 0 ; i < ch . length ( ) ; i ++ )	for ( i = 0 ; i < ch. length ( ) ; i ++ )
6709	if ch [ i ] is equal to ' @ '	N/A	N/A	if ( ch [ i ] == ' @ ' )	if ( ch [ i ] =='@')
6710	if i is greater than 16 or i is less than 1	N/A	N/A	if ( i > 16 || i < 1 )	if ( i > 16 || i < 1 )
6711	set flag to 0	N/A	N/A	flag = 0 ;	flag = 0 ;
6712	move to print	N/A	N/A	goto print ;	move to print ;
6713	DUMMY	0.0	0.0	}	DUMMY
6714	break loop	N/A	N/A	break ;	break ;
6715	else if ch [ i ] is greater than or equal to ' a ' and ch [ i ] is less than or equal to ' z ' or if ch [ i ] is greater than or equal to ' A ' and ch [ i ] is less than or equal to ' Z '	N/A	N/A	else if ( ( ch [ i ] >= ' a ' && ch [ i ] <= ' z ' ) || ( ch [ i ] >= ' A ' && ch [ i ] <= ' Z ' ) )	else if ( ( ch [ i ] >='a'&& ch [ 1 ] <='z') || if ( str [ i == >='A'and ch [ 2 ] <= " Z') )
6716	continue to next loop	N/A	N/A	continue ;	continue ;
6717	else if ch [ i ] is greater than or equal to ' 0 ' and ch [ i ] is less than or equal to ' 9 ' and if ch [ i ] is equal to ' _ '	N/A	N/A	else if ( ( ch [ i ] >= ' 0 ' && ch [ i ] <= ' 9 ' ) || ( ch [ i ] == ' _ ' ) )	else if ( ch [ i ] >='0'&& ch [ 1 ] <='9'and ch [ 2 ] =='_')
6718	continue to next loop iteration	N/A	N/A	continue ;	continue ;
6719	else	N/A	N/A	else	else
6720	set flag to 0	N/A	N/A	flag = 0 ;	flag = 0 ;
6721	go to print	N/A	N/A	goto print ;	cout << endl ;
6722	DUMMY	0.0	0.0	}	DUMMY
6723	DUMMY	0.0	0.0	}	DUMMY
6724	identify dot	N/A	N/A	dot :	dot :
6725	for j = i + 1 to length of ch exclusive	N/A	N/A	for ( j = i + 1 ; j < ch . length ( ) ; j ++ )	for ( int j = i + 1 ; j < ch. length ( ) ; j ++ )
6726	if ch [ j ] is equal to ' . '	N/A	N/A	if ( ch [ j ] == ' . ' )	if ( ch [ j ] == '.')
6727	if j - 1 is greater than 17 or j - i is less than 2	N/A	N/A	if ( j - i > 17 || j - i < 2 )	if ( j - 1 > 17 || j - i < 2 )
6728	set flag to 0	N/A	N/A	flag = 0 ;	flag = 0 ;
6729	go to print	N/A	N/A	goto print ;	goto print ;
6730	DUMMY	0.0	0.0	}	DUMMY
6731	set i to j	N/A	N/A	i = j ;	i = j ;
6732	else if ch [ j ] is greater than or equal to ' a ' and ch [ j ] is less than or equal to ' z ' or if ch [ j ] is greater than or equal to ' A ' and ch [ j ] is less than or equal to ' Z '	N/A	N/A	else if ( ( ch [ j ] >= ' a ' && ch [ j ] <= ' z ' ) || ( ch [ j ] >= ' A ' && ch [ j ] <= ' Z ' ) )	else if ( ( ch [ j ] >='a'&& ch [ i ] <='z') || if ( ch ( j ] - i >='A'and ch [ k ] <= " Z') )
6733	continue to next loop	N/A	N/A	continue ;	continue ;
6734	else if ch [ j ] is greater than or equal to ' 0 ' and ch [ j ] is less than or equal to ' 9 ' or if ch [ j ] is equal to ' _ '	N/A	N/A	else if ( ( ch [ j ] >= ' 0 ' && ch [ j ] <= ' 9 ' ) || ( ch [ j ] == ' _ ' ) )	else if ( ( ch [ j ] >='0'&& ch [ k ] <='9') || if (! ch [ i ] ) )
6735	continue to next loop	N/A	N/A	continue ;	continue ;
6736	else if ch [ j ] is equal to ' / '	N/A	N/A	else if ( ch [ j ] == ' / ' )	else if ( ch [ j ] =='/')
6737	if j - 1 is greater than 17 or j - i is less than 2	N/A	N/A	if ( j - i > 17 || j - i < 2 )	if ( j - 1 >= 17 || j - i < 2 )
6738	set flag to 0	N/A	N/A	flag = 0 ;	flag = 0 ;
6739	go to print	N/A	N/A	goto print ;	cout << endl ;
6740	DUMMY	0.0	0.0	}	DUMMY
6741	set i to j	N/A	N/A	i = j ;	i = j ;
6742	otherwise	N/A	N/A	else	else
6743	set flag to 0	N/A	N/A	flag = 0 ;	flag = 0 ;
6744	move to print	N/A	N/A	goto print ;	move to print ;
6745	DUMMY	0.0	0.0	}	DUMMY
6746	DUMMY	0.0	0.0	}	DUMMY
6747	if j - i is greater than 17 or j - i is less than 2 , set flag to 0	N/A	N/A	if ( j - i > 17 || j - i < 2 ) flag = 0 ;	if ( ( j - i ) > 17 || ( j + i ) < 2 ) flag = 0 ;
6748	identify print	N/A	N/A	print :	flag : print ;
6749	print " YES \ n " if flag is truthy or " NO \ n " if not	N/A	N/A	( flag ) ? ( cout << " YES\n " ) : ( cout << " NO\n " ) ;	cout << ( flag? " YES\n " : " NO\nt " ) ;
6750	DUMMY	0.0	0.0	return 0;	DUMMY
6751	DUMMY	0.0	0.0	}	DUMMY
6752	DUMMY	0.0	0.0	int main() {	DUMMY
6753	declare integer n	N/A	N/A	int n ;	int n ;
6754	read n	N/A	N/A	cin >> n ;	cin >> n ;
6755	print n	N/A	N/A	cout << n ;	cout << n << endl ;
6756	for i = 1 to n exclusive , print ' ' and i	N/A	N/A	for ( int i = 1 ; i < n ; i ++ ) cout << ' ' << i ;	for ( int i = 1 ; i < n ; i ++ ) { cout <<' '<< i << endl ; }
6757	print ' \ n '	N/A	N/A	cout << ' \n ' ;	cout <<'\n';
6758	DUMMY	0.0	0.0	}	DUMMY
6759	DUMMY	0.0	0.0	int main() {	DUMMY
6760	create integer n	N/A	N/A	int n ;	int n ;
6761	read n	N/A	N/A	cin >> n ;	cin >> n ;
6762	print n	N/A	N/A	cout << n ;	cin >> n ;
6763	for i = 1 to n exclusive , print " " print i	N/A	N/A	for ( int i = 1 ; i < n ; ++ i ) { cout << " " << i ; }	for ( int i = 1 ; i < n ; i ++ ) cout << " " << i << endl ;
6764	print newline	N/A	N/A	cout << endl ;	cout << endl ;
6765	DUMMY	0.0	0.0	return 0;	DUMMY
6766	DUMMY	0.0	0.0	}	DUMMY
6767	DUMMY	0.0	0.0	int main() {	DUMMY
6768	create integer n	N/A	N/A	int n ;	int n ;
6769	read n	N/A	N/A	cin >> n ;	cin >> n ;
6770	print n	N/A	N/A	cout << n ;	cin >> n ;
6771	for i = 1 to n exclusive , print " " print i	N/A	N/A	for ( int i = 1 ; i < n ; ++ i ) { cout << " " << i ; }	for ( int i = 1 ; i < n ; i ++ ) cout << " " << i << endl ;
6772	print newline	N/A	N/A	cout << endl ;	<< " \n " ;
6773	DUMMY	0.0	0.0	return 0;	DUMMY
6774	DUMMY	0.0	0.0	}	DUMMY
6775	DUMMY	0.0	0.0	int main() {	DUMMY
6776	declare integer variable n	N/A	N/A	int n ;	int n ;
6777	read n	N/A	N/A	cin >> n ;	cin >> n ;
6778	print n	N/A	N/A	cout << n ;	cin >> n ;
6779	for integer i = 1 to n exclusive print " " and i	N/A	N/A	for ( int i = 1 ; i < n ; ++ i ) { cout << " " << i ; }	for ( int i = 1 ; i < n ; i ++ ) { cout << " " << i << endl ; }
6780	print new line	N/A	N/A	cout << endl ;	cout << endl ;
6781	DUMMY	0.0	0.0	return 0;	DUMMY
6782	DUMMY	0.0	0.0	}	DUMMY
6783	DUMMY	0.0	0.0	int main() {	DUMMY
6784	n = integer	N/A	N/A	int n ;	int n ;
6785	read n	N/A	N/A	cin >> n ;	cin >> n ;
6786	print n	N/A	N/A	cout << n ;	cin >> n ;
6787	for i = 1 to n exclusive	N/A	N/A	for ( int i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
6788	if i is not n print " "	N/A	N/A	if ( i != n ) cout << " " ;	if ( i!= n ) cout << " " ;
6789	print i	N/A	N/A	cout << i ;	cout << i << endl ;
6790	DUMMY	0.0	0.0	}	DUMMY
6791	print new line	N/A	N/A	cout << endl ;	cout << endl ;
6792	DUMMY	0.0	0.0	return 0;	DUMMY
6793	DUMMY	0.0	0.0	}	DUMMY
6794	DUMMY	0.0	0.0	int main() {	DUMMY
6795	let n be a integer	N/A	N/A	int n ;	int n ;
6796	read n	N/A	N/A	cin >> n ;	cin >> n ;
6797	print n	N/A	N/A	cout << n ;	cin >> n ;
6798	for ( i = 1 to n - 1 inclusive ) , print space and i	N/A	N/A	for ( int i = 1 ; i <= n - 1 ; i ++ ) cout << " " << i ;	for ( int i = 1 ; i <= n - 1 ; ++ i ) { cout << " " << i << endl ; }
6799	print newline	N/A	N/A	cout << endl ;	<< " \n " ;
6800	DUMMY	0.0	0.0	return 0;	DUMMY
6801	DUMMY	0.0	0.0	}	DUMMY
6802	DUMMY	0.0	0.0	int main() {	DUMMY
6803	declare integer a	N/A	N/A	int a ;	int a ;
6804	loop while reading a	N/A	N/A	while ( cin >> a )	while ( cin >> a )
6805	print a	N/A	N/A	cout << a ;	cout << a << endl ;
6806	for integer i = 1 to a exclusive , print ' ' and i	N/A	N/A	for ( int i = 1 ; i < a ; i ++ ) cout << ' ' << i ;	for ( int i = 1 ; i < a ; i ++ ) { cout <<' '<< i << endl ; }
6807	print new line	N/A	N/A	cout << endl ;	cout << endl ;
6808	DUMMY	0.0	0.0	}	DUMMY
6809	DUMMY	0.0	0.0	return 0;	DUMMY
6810	DUMMY	0.0	0.0	}	DUMMY
6811	in the function desperate_optimization that takes integer precision	N/A	N/A	void desperate_optimization ( int precision )	void desperate_optimization ( int precision )
6812	print floats with a fixed number of decimals	N/A	N/A	cout . setf ( ios :: fixed ) ;	cout << fixed ;
6813	print floats with showpoint format	N/A	N/A	cout . setf ( ios :: showpoint ) ;	cout << floats. size ( ) << endl ;
6814	print precision with precision	N/A	N/A	cout . precision ( precision ) ;	cout. precision ( precision ) ;
6815	DUMMY	0.0	0.0	}	DUMMY
6816	DUMMY	0.0	0.0	int main() {	DUMMY
6817	call desperate_optimization on 10	N/A	N/A	desperate_optimization ( 10 ) ;	desperate_optimization ( 10 ) ;
6818	n = integer	N/A	N/A	int n ;	int n ;
6819	read n	N/A	N/A	cin >> n ;	cin >> n ;
6820	print n	N/A	N/A	cout << n ;	cout << n << endl ;
6821	for i = 1 to n exclusive , print i	N/A	N/A	for ( int i = 1 ; i < n ; i ++ ) cout << " " << i ;	for ( int i = 1 ; i < n ; i ++ ) cout << i << endl ;
6822	print new line	N/A	N/A	cout << ' \n ' ;	cout << endl ;
6823	DUMMY	0.0	0.0	return 0;	DUMMY
6824	DUMMY	0.0	0.0	}	DUMMY
6825	DUMMY	0.0	0.0	int main() {	DUMMY
6826	a = integer	N/A	N/A	int a ;	int a ;
6827	Read a	N/A	N/A	cin >> a ;	cin >> a ;
6828	print a	N/A	N/A	cout << a ;	cin >> a ;
6829	if a is greater than 1 , then print " "	N/A	N/A	if ( a > 1 ) cout << " " ;	if ( a > 1 ) { cout << " " ; }
6830	for i = 0 to a - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < a - 1 ; i ++ )	for ( int i = 0 ; i < a - 1 ; i ++ )
6831	print i + 1	N/A	N/A	cout << i + 1 ;	cout << i + 1 << endl ;
6832	if i + 2 is not equal to a , then print " "	N/A	N/A	if ( i + 2 != a ) cout << " " ;	if ( i + 2!= a ) cout << " " ;
6833	DUMMY	0.0	0.0	}	DUMMY
6834	print a new line	N/A	N/A	cout << endl ;	cout << endl ;
6835	DUMMY	0.0	0.0	return 0;	DUMMY
6836	DUMMY	0.0	0.0	}	DUMMY
6837	MOD = integer	N/A	N/A	int MOD ;	int MOD ;
6838	in function mod_pow with arguments of long long a and long long b and returns a long long	N/A	N/A	long long mod_pow ( long long a , long long b )	long long mod_pow ( long long a, long long b )
6839	if b is 0 , then return 1	N/A	N/A	if ( b == 0 ) return 1 ;	if ( b == 0 ) return 1 ;
6840	if b is 1 , then return a modulo MOD	N/A	N/A	if ( b == 1 ) return a % MOD ;	if ( b == 1 ) return a % MOD ;
6841	if the last bit in binary of b is 1 , then return a modulo MOD * the result of calling mod_pow with arguments a , b - 1 and then modulo the result of that function by MOD	N/A	N/A	if ( b & 1 ) return ( ( a % MOD ) * mod_pow ( a , b - 1 ) ) % MOD ;	if ( b & 1 ) return a % MOD * mod_pow ( a, b - 1 ) % MOD ;
6842	x = long long = the result of calling mod_pow with arguments a , and the b with its elements shifted to the right by one bit	N/A	N/A	long long x = mod_pow ( a , b >> 1 ) ;	long long x = mod_pow ( a, b ) ;
6843	return ( x * x ) modulo MOD	N/A	N/A	return ( x * x ) % MOD ;	return ( x * x ) % MOD ;
6844	DUMMY	0.0	0.0	}	DUMMY
6845	DUMMY	0.0	0.0	int main() {	DUMMY
6846	n , m = integer	N/A	N/A	int n , m ;	int n, m ;
6847	read n , m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
6848	MOD = m	N/A	N/A	MOD = m ;	MOD = m ;
6849	r = integer = the result of calling mod_pow with arguments 3 , n	N/A	N/A	int r = mod_pow ( 3 , n ) ;	int r = mod_pow ( 3, n ) ;
6850	if r is 0	N/A	N/A	if ( r == 0 )	if ( r == 0 )
6851	print the result of m - 1	N/A	N/A	cout << m - 1 << endl ;	cout << m - 1 << endl ;
6852	else	N/A	N/A	else	else
6853	print the result of r - 1	N/A	N/A	cout << r - 1 << endl ;	cout << r - 1 << endl ;
6854	DUMMY	0.0	0.0	}	DUMMY
6855	DUMMY	0.0	0.0	return 0;	DUMMY
6856	DUMMY	0.0	0.0	}	DUMMY
6857	declare power with long longs x , integers y , m as arguments , returning long long	N/A	N/A	long long power ( long long x , int y , int m )	long long power ( long long x, int y, int m )
6858	create long long res with res = 1	N/A	N/A	long long res = 1 ;	long long res = 1 ;
6859	while y is greater than 0	N/A	N/A	while ( y > 0 )	while ( y > 0 )
6860	if y bitwise and 1	N/A	N/A	if ( y & 1 )	if ( y & 1 )
6861	set res to res * x	N/A	N/A	res = res * x ;	res *= x ;
6862	set res to res % m	N/A	N/A	res %= m ;	res %= m ;
6863	DUMMY	0.0	0.0	}	DUMMY
6864	set y to y bitwise right 1	N/A	N/A	y = y >> 1 ;	y = y >> 1 ;
6865	set x to x * x	N/A	N/A	x = x * x ;	x = x * x ;
6866	set x to x % m	N/A	N/A	x %= m ;	x = x % m ;
6867	DUMMY	0.0	0.0	}	DUMMY
6868	return res from function	N/A	N/A	return res ;	return res ;
6869	DUMMY	0.0	0.0	}	DUMMY
6870	DUMMY	0.0	0.0	int main() {	DUMMY
6871	create integers n , m	N/A	N/A	int n , m ;	int n, m ;
6872	read n read m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
6873	create integer ans with ans = result of run power with long long casted ( 3 ) , n , m as arguments	N/A	N/A	int ans = power ( ( long long ) 3 , n , m ) ;	int ans = power ( long long int ( 3 ), n, m ) ;
6874	if ans is 0	N/A	N/A	if ( ans == 0 )	if ( ans == 0 )
6875	print m - 1 print newline	N/A	N/A	cout << m - 1 << endl ;	cout << m - 1 << endl ;
6876	else	N/A	N/A	else	else
6877	print ans - 1 print newline	N/A	N/A	cout << ans - 1 << endl ;	cout << ans - 1 << endl ;
6878	DUMMY	0.0	0.0	}	DUMMY
6879	DUMMY	0.0	0.0	return 0;	DUMMY
6880	DUMMY	0.0	0.0	}	DUMMY
6881	in function modl taking three long longs n , k and p and returning a long long	N/A	N/A	long long modl ( long long n , long long k , long long p )	long long modl ( long long n, long long k, long int p )
6882	if n is 0 return 0	N/A	N/A	if ( n == 0 ) return 0 ;	if ( n == 0 ) return 0 ;
6883	if k is 0	N/A	N/A	if ( k == 0 )	if ( k == 0 )
6884	return 1	N/A	N/A	return 1 ;	return 1 ;
6885	else if k is even	N/A	N/A	else if ( k % 2 == 0 )	else if ( k % 2 == 0 )
6886	return ( modl of n , k / 2 and p * ( modl of n , k / 2 and p ) ) mod p	N/A	N/A	return ( modl ( n , k / 2 , p ) * ( modl ( n , k / 2 , p ) ) ) % p ;	return ( modl ( n, k / 2, p ) * ( %l ( k, 1ll * p ) ) % p ;
6887	else	N/A	N/A	else	else
6888	return ( n * modl of n , k - 1 and p ) mod p	N/A	N/A	return ( n * modl ( n , k - 1 , p ) ) % p ;	return ( n * modl ( n, k - 1, p ) ) % p ;
6889	DUMMY	0.0	0.0	}	DUMMY
6890	DUMMY	0.0	0.0	int main() {	DUMMY
6891	n , m = long long	N/A	N/A	long long n , m ;	long long n, m ;
6892	read n then m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
6893	z = long long with z = modl of 3 , n and m	N/A	N/A	long long z = modl ( 3 , n , m ) ;	long long z = modl ( 3, n, m ) ;
6894	if z is 0	N/A	N/A	if ( z == 0 )	if ( z == 0 )
6895	print m - 1	N/A	N/A	cout << m - 1 << endl ;	cout << m - 1 << endl ;
6896	else	N/A	N/A	else	else
6897	print z - 1	N/A	N/A	cout << z - 1 << endl ;	cout << z - 1 << endl ;
6898	DUMMY	0.0	0.0	return 0;	DUMMY
6899	DUMMY	0.0	0.0	}	DUMMY
6900	DUMMY	0.0	0.0	int main() {	DUMMY
6901	declare integers n and m	N/A	N/A	int n , m ;	int n, m ;
6902	read n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
6903	create long long a = 3	N/A	N/A	long long a = 3 ;	long long a = 3 ;
6904	create integer i = 1	N/A	N/A	int i = 1 ;	int i = 1 ;
6905	create integer two = 0	N/A	N/A	int two = 0 ;	int two = 0 ;
6906	while n > 0	N/A	N/A	while ( n > 0 )	while ( n > 0 )
6907	if n is odd , assign i * a % m to i	N/A	N/A	if ( n % 2 == 1 ) i = i * a % m ;	if ( n % 2!= 0 ) { i = i * a % m ; }
6908	set n to n / 2	N/A	N/A	n = n / 2 ;	n /= 2 ;
6909	change a to a squared modulo m	N/A	N/A	a = ( a * a ) % m ;	a = a * a % m ;
6910	DUMMY	0.0	0.0	}	DUMMY
6911	print ( i - 1 + m ) % m	N/A	N/A	cout << ( i - 1 + m ) % m << endl ;	cout << ( i - 1 + m ) % m << endl ;
6912	DUMMY	0.0	0.0	return 0;	DUMMY
6913	DUMMY	0.0	0.0	}	DUMMY
6914	in function pow taking three long longs a , b and m and returning a long long	N/A	N/A	long long pow ( long long a , long long b , long long m )	long long pow ( long long a, long long b, long int m )
6915	res = long long with res = 1	N/A	N/A	long long res = 1 ;	long long res = 1 ;
6916	loop while b is not 0	N/A	N/A	while ( b )	while ( b )
6917	if b bitwise - and 1 is true then set res to ( res * a ) mod m	N/A	N/A	if ( b & 1 ) { res = ( res * a ) % m ; }	if ( b & 1 ) res = ( res * a ) % m ;
6918	set a to ( a * a ) mod m	N/A	N/A	a = ( a * a ) % m ;	a = ( a * a ) % m ;
6919	set b to b bithsift right by 1	N/A	N/A	b >>= 1 ;	b = b >> 1 ;
6920	DUMMY	0.0	0.0	}	DUMMY
6921	return res	N/A	N/A	return res ;	return res ;
6922	DUMMY	0.0	0.0	}	DUMMY
6923	DUMMY	0.0	0.0	int main() {	DUMMY
6924	n , m = long long	N/A	N/A	long long n , m ;	long long n, m ;
6925	read n then m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
6926	print ( ( pow of 3 , n and m ) - 1 + m ) mod m	N/A	N/A	cout << ( pow ( 3 , n , m ) - 1 + m ) % m << endl ;	cout << ( pow ( 3, n, m ) - 1 + m ) % m << endl ;
6927	DUMMY	0.0	0.0	return 0;	DUMMY
6928	DUMMY	0.0	0.0	}	DUMMY
6929	MAX = const integer with MAX = 3e4 + 5	N/A	N/A	const int MAX = 3e4 + 5 ;	const int MAX = 3e4 + 5 ;
6930	MAX2 = const long long with MAX2 = 11	N/A	N/A	const long long MAX2 = 11 ;	const long long MAX2 = 11 ;
6931	MOD = const integer with MOD = 1000000000 + 7	N/A	N/A	const int MOD = 1000000000 + 7 ;	const int MOD = 1000000000 + 7 ;
6932	INF = const long long with INF = 20000	N/A	N/A	const long long INF = 20000 ;	const long long INF = 20000 ;
6933	dr = const integer array with dr = { 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1 }	N/A	N/A	const int dr [ ] = { 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1 } ;	const int dr [ ] = { 1, 0, - 1, - 0, 1, 1 } ;
6934	dc = const integer array with dc = { 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1 }	N/A	N/A	const int dc [ ] = { 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1 } ;	const int dc [ ] = { 0, 1, 0, - 1, 1 } ;
6935	pi = const double with pi = acos ( - 1 )	N/A	N/A	const double pi = acos ( - 1 ) ;	const double pi = acos ( - 1 ) ;
6936	eps = const double with eps = 1e - 9	N/A	N/A	const double eps = 1e-9 ;	const double eps = 1e-9 ;
6937	n , m = long long	N/A	N/A	long long n , m ;	long long n, m ;
6938	in the function pw that returns long long	N/A	N/A	long long pw ( )	long long pw ( )
6939	ret = long long with ret = 1 , x = 3	N/A	N/A	long long ret = 1 , x = 3 ;	long long ret = 1, x = 3 ;
6940	while n	N/A	N/A	while ( n )	while ( n )
6941	if n bitwise and 1 , ret = ( ret * x ) modulo m	N/A	N/A	if ( n & 1 ) ret = ( ret * x ) % m ;	if ( n & 1 ) ret = ( ret * x ) % m ;
6942	x = ( x * x ) modulo m	N/A	N/A	x = ( x * x ) % m ;	x = ( x * x ) % m ;
6943	n = right shift n 1 place	N/A	N/A	n >>= 1 ;	n >>= 1 ;
6944	DUMMY	0.0	0.0	}	DUMMY
6945	return ret	N/A	N/A	return ret ;	return ret ;
6946	DUMMY	0.0	0.0	}	DUMMY
6947	DUMMY	0.0	0.0	int main() {	DUMMY
6948	read n , m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
6949	print ( pw ( ) + m - 1 ) modulo m	N/A	N/A	cout << ( pw ( ) + m - 1 ) % m << " \n " ;	cout << ( pw ( ) + m - 1 ) % m << endl ;
6950	DUMMY	0.0	0.0	return 0;	DUMMY
6951	DUMMY	0.0	0.0	}	DUMMY
6952	m = long long	N/A	N/A	long long m ;	long long m ;
6953	in function pw taking two long longs x and p and returning a long long	N/A	N/A	long long pw ( long long x , long long p )	long long pw ( long long x, long long p )
6954	if p is 0 return 1 mod m	N/A	N/A	if ( ! p ) return 1 % m ;	if ( p == 0 ) return 1 % m ;
6955	z = long long with z = pw of x and p / 2	N/A	N/A	long long z = pw ( x , p / 2 ) ;	long long z = pw ( x, p / 2 ) ;
6956	set z to z * z	N/A	N/A	z *= z ;	z = z * z ;
6957	set z to z mod m	N/A	N/A	z %= m ;	z %= m ;
6958	if p is even return z	N/A	N/A	if ( p % 2 == 0 ) return z ;	if ( p % 2 == 0 ) return z ;
6959	set z to z * x	N/A	N/A	z *= x ;	z = z * x ;
6960	set z to z mod m	N/A	N/A	z %= m ;	z %= m ;
6961	return z	N/A	N/A	return z ;	return z ;
6962	DUMMY	0.0	0.0	}	DUMMY
6963	DUMMY	0.0	0.0	int main() {	DUMMY
6964	n = long long	N/A	N/A	long long n ;	long long n ;
6965	raed n then m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
6966	res = long long with res = 2 * ( ( pw of 3 and n ) - 1 ) / 2	N/A	N/A	long long res = 2 * ( pw ( 3 , n ) - 1 ) / ( 2 ) ;	long long res = 2 * ( ( pw ( 3, n ) - 1 ) ) / 2 ;
6967	set res to res mod m	N/A	N/A	res %= m ;	res %= m ;
6968	increment res by m	N/A	N/A	res += m ;	res += m ;
6969	set res to res mod m	N/A	N/A	res %= m ;	res %= m ;
6970	print res	N/A	N/A	cout << res << endl ;	cout << res << endl ;
6971	DUMMY	0.0	0.0	return 0;	DUMMY
6972	DUMMY	0.0	0.0	}	DUMMY
6973	declare power taking in long long ints x , y , and MOD and returning long long int	N/A	N/A	long long power ( long long x , long long y , long long MOD )	long long int power ( long long x, long long y, Long long MOD )
6974	create unsigned long long int res = 1	N/A	N/A	unsigned long long res = 1 ;	unsigned long long int res = 1 ;
6975	set x to x modulo MOD	N/A	N/A	x = x % MOD ;	x %= MOD ;
6976	while y is more than 0	N/A	N/A	while ( y > 0 )	while ( y > 0 )
6977	if y & 1 is truthy , set res to ( res * x ) % MOD	N/A	N/A	if ( y & 1 ) { res = ( res * x ) % MOD ; }	if ( y & 1 ) res = ( res * x ) % MOD ;
6978	set y to y > > 1	N/A	N/A	y = y >> 1 ;	y >>= 1 ;
6979	set x to ( x * x ) % MOD	N/A	N/A	x = ( x * x ) % MOD ;	x = ( x * x ) % MOD ;
6980	DUMMY	0.0	0.0	}	DUMMY
6981	convert res to long long int and return it	N/A	N/A	return ( long long ) res ;	return res ;
6982	DUMMY	0.0	0.0	}	DUMMY
6983	create long long ints n , m , and res	N/A	N/A	long long n , m , res ;	long long int n, m, res ;
6984	DUMMY	0.0	0.0	int main() {	DUMMY
6985	read n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
6986	set res to power ( 3 , n , m ) - 1	N/A	N/A	res = power ( 3 , n , m ) - 1 ;	res = power ( 3, n, m ) - 1 ;
6987	print ( res + m ) % m	N/A	N/A	cout << ( res + m ) % m << endl ;	cout << ( res + m ) % m << endl ;
6988	DUMMY	0.0	0.0	return 0;	DUMMY
6989	DUMMY	0.0	0.0	}	DUMMY
6990	declare long longs m and n	N/A	N/A	long long m , n ;	long long m, n ;
6991	pw is a long long function with long long arguments a and b	N/A	N/A	long long pw ( long long a , long long b )	long long pw ( long long a, long long b )
6992	declare long long res with value 1	N/A	N/A	long long res = 1 ;	long long res = 1 ;
6993	while b is not 0	N/A	N/A	while ( b )	while ( b )
6994	if b & 1 is true , change res to ( res * a ) modulo m	N/A	N/A	if ( b & 1 ) res = ( res * a ) % m ;	if ( b & 1 ) res = ( res * a ) % m ;
6995	set a to a squared modulo m	N/A	N/A	a = ( a * a ) % m ;	a = a * a % m ;
6996	change the value of b to b divided by 2	N/A	N/A	b /= 2 ;	b /= 2 ;
6997	DUMMY	0.0	0.0	}	DUMMY
6998	return res	N/A	N/A	return res ;	return res ;
6999	DUMMY	0.0	0.0	}	DUMMY
7000	DUMMY	0.0	0.0	int main() {	DUMMY
7001	read input to n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
7002	declare long long variable with name ans and value = pw of 3 and n	N/A	N/A	long long ans = ( pw ( 3 , n ) ) ;	long long ans = pw ( 3, n ) ;
7003	decrement ans	N/A	N/A	ans -- ;	ans -- ;
7004	if ans is less than 0 , add m to ans	N/A	N/A	if ( ans < 0 ) ans += m ;	if ( ans < 0 ) ans += m ;
7005	print ans to the standard output	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
7006	DUMMY	0.0	0.0	return 0;	DUMMY
7007	DUMMY	0.0	0.0	}	DUMMY
7008	declare f taking in long long integers n and m and returning long long int	N/A	N/A	long long f ( long long n , long long m )	long long int f ( long long n, long long m )
7009	if n is equal to 0	N/A	N/A	if ( n == 0 )	if ( n == 0 )
7010	return the result of 1 % m	N/A	N/A	return 1 % m ;	return 1 % m ;
7011	else if n is equal to 1	N/A	N/A	else if ( n == 1 )	else if ( n == 1 )
7012	return 3 % m	N/A	N/A	return 3 % m ;	return 3 % m ;
7013	DUMMY	0.0	0.0	}	DUMMY
7014	create long long tmp = f ( n / 2 , m )	N/A	N/A	long long tmp = f ( n / 2 , m ) ;	long long tmp = f ( n / 2, m ) ;
7015	if n modulo 2 is 0	N/A	N/A	if ( n % 2 == 0 )	if ( n % 2 == 0 )
7016	return the result of tmp * tmp % m	N/A	N/A	return tmp * tmp % m ;	return tmp * tmp % m ;
7017	otherwise	N/A	N/A	else	else
7018	return ( tmp * tmp % m ) * 3 % m	N/A	N/A	return ( tmp * tmp % m ) * 3 % m ;	return ( tmp * tmp % m ) * 3 % m ;
7019	DUMMY	0.0	0.0	}	DUMMY
7020	DUMMY	0.0	0.0	}	DUMMY
7021	DUMMY	0.0	0.0	int main() {	DUMMY
7022	create ints n and m	N/A	N/A	int n , m ;	int n, m ;
7023	read n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
7024	create long long int fx = f ( n , m )	N/A	N/A	long long fx = f ( n , m ) ;	long long int fx = f ( n, m ) ;
7025	if fx is 0	N/A	N/A	if ( fx == 0 )	if ( fx == 0 )
7026	print m - 1	N/A	N/A	cout << m - 1 << endl ;	cout << m - 1 << endl ;
7027	else	N/A	N/A	else	else
7028	print fx - 1	N/A	N/A	cout << fx - 1 << endl ;	cout << fx - 1 << endl ;
7029	DUMMY	0.0	0.0	}	DUMMY
7030	DUMMY	0.0	0.0	return 0;	DUMMY
7031	DUMMY	0.0	0.0	}	DUMMY
7032	m = long long	N/A	N/A	long long m ;	long long m ;
7033	in function power taking a long long a and an int n and returning an int	N/A	N/A	int power ( long long a , int n )	int power ( long long a, int n )
7034	res = long long with res = 1	N/A	N/A	long long res = 1 ;	long long res = 1 ;
7035	loop while n is greater than 0	N/A	N/A	while ( n > 0 )	while ( n > 0 )
7036	if n is uneven	N/A	N/A	if ( n % 2 == 1 )	if ( n % 2 == 1 )
7037	set res to res * a	N/A	N/A	res *= a ;	res *= a ;
7038	set res to res mod m	N/A	N/A	res %= m ;	res %= m ;
7039	DUMMY	0.0	0.0	}	DUMMY
7040	set a to a * a	N/A	N/A	a *= a ;	a = a * a ;
7041	set a to a mod m	N/A	N/A	a %= m ;	a %= m ;
7042	set n to n / 2	N/A	N/A	n /= 2 ;	n /= 2 ;
7043	DUMMY	0.0	0.0	}	DUMMY
7044	return res	N/A	N/A	return res ;	return res ;
7045	DUMMY	0.0	0.0	}	DUMMY
7046	DUMMY	0.0	0.0	int main() {	DUMMY
7047	n = int	N/A	N/A	int n ;	int n ;
7048	read n then m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
7049	print ( ( ( power of 3 and n ) - 1 ) mod m + m ) mod m	N/A	N/A	cout << ( ( power ( 3 , n ) - 1 ) % m + m ) % m << endl ;	cout << ( ( ( pow ( 3, n ) - 1 ) % m + m ) % n << endl ;
7050	DUMMY	0.0	0.0	return 0;	DUMMY
7051	DUMMY	0.0	0.0	}	DUMMY
7052	declare power with long longs a , b , m as arguments , returning long long	N/A	N/A	long long power ( long long a , long long b , long long m )	long long power ( long long a, long long b, long int m )
7053	create long longs temp , ans with temp = a , ans = 1	N/A	N/A	long long temp = a , ans = 1 ;	long long temp = a, ans = 1 ;
7054	while b is true	N/A	N/A	while ( b )	while ( b )
7055	if b bitwise and 1 is true , set ans to ( ans % m * temp % m ) % m	N/A	N/A	if ( b & 1 ) ans = ( ans % m * temp % m ) % m ;	if ( b & 1 ) ans = ( ans % m * temp % m ) % m ;
7056	set temp to ( temp % m * temp % m ) % m	N/A	N/A	temp = ( temp % m * temp % m ) % m ;	temp = ( temp % m * temp % n ) % m ;
7057	set b to b / 2	N/A	N/A	b /= 2 ;	b /= 2 ;
7058	DUMMY	0.0	0.0	}	DUMMY
7059	return ans from function	N/A	N/A	return ans ;	return ans ;
7060	DUMMY	0.0	0.0	}	DUMMY
7061	DUMMY	0.0	0.0	int main() {	DUMMY
7062	create long longs n , m	N/A	N/A	long long n , m ;	long long n, m ;
7063	read n read m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
7064	print ( result of run power with 3 , n , m as arguments - 1 + m ) % m print newline	N/A	N/A	cout << ( power ( 3 , n , m ) - 1 + m ) % m << endl ;	cout << ( power ( 3, n, m ) - 1 + m ) % m << endl ;
7065	DUMMY	0.0	0.0	}	DUMMY
7066	DUMMY	0.0	0.0	int main() {	DUMMY
7067	create long longs ax , ay , bx , by , cx , cy	N/A	N/A	long long ax , ay , bx , by , cx , cy ;	long long ax, ay, bx, by, cx, cy ;
7068	read ax read ay read bx read by read cx read cy	N/A	N/A	cin >> ax >> ay >> bx >> by >> cx >> cy ;	cin >> ax >> ay >> bx >> by >> cx >> cy ;
7069	create long long ds with ds = ( bx * cy - by * cx ) - ( ax * cy - ay * cx ) + ( ax * by - ay * bx )	N/A	N/A	long long ds = ( bx * cy - by * cx ) - ( ax * cy - ay * cx ) + ( ax * by - ay * bx ) ;	long long ds = ( bx * cy - by * cx ) - ( ax * cy -= ay * cx) + ( ax / by - ay * bx ) ;
7070	if ds is 0	N/A	N/A	if ( ds == 0 )	if ( ds == 0 )
7071	print " TOWARDS "	N/A	N/A	cout << " TOWARDS " ;	cout << " TOWARDS "
7072	else if ds is less than 0	N/A	N/A	else if ( ds < 0 )	else if ( ds < 0 )
7073	print " RIGHT "	N/A	N/A	cout << " RIGHT " ;	cout << " RIGHT\n " ;
7074	else	N/A	N/A	else	else
7075	print " LEFT "	N/A	N/A	cout << " LEFT " ;	cout << " LEFT\n " ;
7076	print ' \ n '	N/A	N/A	cout << ' \n ' ;	cout <<'\n';
7077	DUMMY	0.0	0.0	}	DUMMY
7078	function solve ( no args , no return value )	N/A	N/A	void solve ( )	void solve ( )
7079	a1 , a2 , b1 , b2 , c1 , c2 = long long	N/A	N/A	long long a1 , a2 , b1 , b2 , c1 , c2 ;	long long a1, a2, b1, b2, c1, c2 ;
7080	read a1 , a2 , b1 , b2 , c1 , c2	N/A	N/A	cin >> a1 >> a2 >> b1 >> b2 >> c1 >> c2 ;	cin >> a1 >> a2 >> b1 >> b2 >> c1 >> c2 ;
7081	d = ( b1 - a1 ) * ( c2 - a2 ) - ( b2 - a2 ) * ( c1 - a1 )	N/A	N/A	long long d = ( b1 - a1 ) * ( c2 - a2 ) - ( b2 - a2 ) * ( c1 - a1 ) ;	long long d = ( b1 - a1 ) * ( c2 - a2 ) - ( b2 - ( a2 - b2 ) * c1 - b1 ) ;
7082	if d is 0	N/A	N/A	if ( d == 0 )	if ( d == 0 )
7083	print " TOWARDS "	N/A	N/A	cout << " TOWARDS " << endl ;	puts ( " TOWARDS " ) ;
7084	else if d > 0	N/A	N/A	else if ( d > 0 )	else if ( d > 0 )
7085	print " LEFT "	N/A	N/A	cout << " LEFT " << endl ;	cout << " LEFT\n " ;
7086	else	N/A	N/A	else	else
7087	print " RIGHT "	N/A	N/A	cout << " RIGHT " << endl ;	cout << " RIGHT\n " ;
7088	DUMMY	0.0	0.0	}	DUMMY
7089	DUMMY	0.0	0.0	}	DUMMY
7090	DUMMY	0.0	0.0	int main() {	DUMMY
7091	set output precision to 12 digits	N/A	N/A	cout << setprecision ( 12 ) << fixed ;	cout. precision ( 12 ) ;
7092	solve ( )	N/A	N/A	solve ( ) ;	solve ( ) ;
7093	DUMMY	0.0	0.0	return 0;	DUMMY
7094	DUMMY	0.0	0.0	}	DUMMY
7095	declare fp with long longs n , p as arguments , returning long long	N/A	N/A	long long fp ( long long n , long long p )	long long fp ( long long n, long long p )
7096	if p is 0 , return 1 from function	N/A	N/A	if ( p == 0 ) return 1 ;	if ( p == 0 ) return 1 ;
7097	if p is 1 , return n from function	N/A	N/A	if ( p == 1 ) return n ;	if ( p == 1 ) return n ;
7098	create long long res with res = result of run fp with n , p / 2 as arguments	N/A	N/A	long long res = fp ( n , p / 2 ) ;	long long res = fp ( n, p / 2 ) ;
7099	set res to res * res	N/A	N/A	res = ( ( res ) * ( res ) ) ;	res *= res ;
7100	if p % 2 , set res to res * n	N/A	N/A	if ( p % 2 ) res = ( res * n ) ;	if ( p % 2 ) res *= n ;
7101	return res from function	N/A	N/A	return res ;	return res ;
7102	DUMMY	0.0	0.0	}	DUMMY
7103	DUMMY	0.0	0.0	int main() {	DUMMY
7104	create pair of integer , integer array arr with size 5	N/A	N/A	pair < int , int > arr [ 5 ] ;	pair < int, int > arr [ 5 ] ;
7105	create integers a , b , c	N/A	N/A	int a , b , c ;	int a, b, c ;
7106	create soubles s , ss , with s = - 1 , ss = - 1	N/A	N/A	double s = - 1 , ss = - 1 ;	soubles s = - 1, ss = - l ;
7107	create boolean f with f = 0	N/A	N/A	bool f = 0 ;	bool f = 0 ;
7108	for i = 0 to 3 exclusive	N/A	N/A	for ( int i = 0 ; i < 3 ; i ++ )	for ( int i = 0 ; i < 3 ; i ++ )
7109	read first element of arr [ i ] read second element of arr [ i ]	N/A	N/A	cin >> arr [ i ] . first >> arr [ i ] . second ;	cin >> arr [ i ]. first >> arr. second ;
7110	if i is 1	N/A	N/A	if ( i == 1 )	if ( i == 1 )
7111	if ( ( first element of arr [ i ] - first element of arr [ i - 1 ] ) is not 0 ) set s to ( second element of arr [ i ] - second element of arr [ i - 1 ] ) / ( first element of arr [ i ] - first element of arr [ i - 1 ] )	N/A	N/A	if ( ( arr [ i ] . first - arr [ i - 1 ] . first ) != 0 ) s = ( arr [ i ] . second - arr [ i - 1 ] . second ) / ( arr [ i ] . first - arr [ i - 1 ] . first ) ;	if ( ( arr [ i ]. first - arr [ 1 ]. second )!= 0 ) { s = ( s. second - str. first ) / ( str -> first ) - str -> second [ i - 1 ] ) ; }
7112	else if i is 2	N/A	N/A	else if ( i == 2 )	else if ( i == 2 )
7113	if ( ( first element of arr [ i ] - first element of arr [ i - 1 ] ) is not 0 ) set ss to ( second element of arr [ i ] - second element of arr [ i - 1 ] ) / ( first element of arr [ i ] - first element of arr [ i - 1 ] )	N/A	N/A	if ( ( arr [ i ] . first - arr [ i - 1 ] . first ) != 0 ) ss = ( arr [ i ] . second - arr [ i - 1 ] . second ) / ( arr [ i ] . first - arr [ i - 1 ] . first ) ;	if ( ( arr [ i ]. first - arr [ 1 ]. second )!= 0 ) { ss = ( strcmp (arr [ i - 1 ], arr [ 0 ]. Second ) - ( arr1. first == 0 ) ; }
7114	if s is ss , set f to 1	N/A	N/A	if ( s == ss ) f = 1 ;	if ( s == ss ) f = 1 ;
7115	DUMMY	0.0	0.0	}	DUMMY
7116	DUMMY	0.0	0.0	}	DUMMY
7117	if f is true , return print " TOWARDS " print ' \ n ' , 0 from function	N/A	N/A	if ( f ) return cout << " TOWARDS " << ' \n ' , 0 ;	if ( f ) return cout << " TOWARDS " <<'\n ', 0 ;
7118	if second element of arr [ 0 ] is greater than second element of arr [ 1 ]	N/A	N/A	if ( arr [ 0 ] . second > arr [ 1 ] . second )	if ( arr [ 0 ] -> second > arr [ 1 ]. second )
7119	if first element of arr [ 2 ] is greater than first element of arr [ 1 ]	N/A	N/A	if ( arr [ 2 ] . first > arr [ 1 ] . first )	if ( arr [ 2 ]. first > arr [ 1 ]. second )
7120	return print " LEFT " print ' \ n ' , 0 from function	N/A	N/A	return cout << " LEFT " << ' \n ' , 0 ;	return cout << " LEFT " <<'\n ', 0 ;
7121	else	N/A	N/A	else	else
7122	return print " RIGHT " print ' \ n ' , 0 from function	N/A	N/A	return cout << " RIGHT " << ' \n ' , 0 ;	return cout << " RIGHT " <<'\n ', 0 ;
7123	else if second element of arr [ 0 ] is less than second element of arr [ 1 ]	N/A	N/A	else if ( arr [ 0 ] . second < arr [ 1 ] . second )	else if ( arr [ 0 ] -> second < arr [ 1 ]. second )
7124	if first element of arr [ 2 ] is less than first element of arr [ 1 ]	N/A	N/A	if ( arr [ 2 ] . first < arr [ 1 ] . first )	if ( arr [ 2 ]. first < arr [ 1 ]. second )
7125	return print " LEFT " print ' \ n ' , 0 from function	N/A	N/A	return cout << " LEFT " << ' \n ' , 0 ;	return cout << " LEFT " <<'\n ', 0 ;
7126	else	N/A	N/A	else	else
7127	return print " RIGHT " print ' \ n ' , 0 from function	N/A	N/A	return cout << " RIGHT " << ' \n ' , 0 ;	return cout << " RIGHT " <<'\n ', 0 ;
7128	else if second element of arr [ 0 ] is second element of arr [ 1 ] and first element of arr [ 0 ] is less than first element of arr [ 1 ]	N/A	N/A	else if ( arr [ 0 ] . second == arr [ 1 ] . second && arr [ 0 ] . first < arr [ 1 ] . first )	else if ( arr [ 0 ] -> second == arr [ 1 ] -> first && arr [ 2 ]. first < arr [ 3 ]. second )
7129	if second element of arr [ 2 ] is greater than second element of arr [ 1 ]	N/A	N/A	if ( arr [ 2 ] . second > arr [ 1 ] . second )	if ( arr [ 2 ] -> second > arr [ 1 ]. second )
7130	return print " LEFT " print ' \ n ' , 0 from function	N/A	N/A	return cout << " LEFT " << ' \n ' , 0 ;	return cout << " LEFT " <<'\n ', 0 ;
7131	else	N/A	N/A	else	else
7132	return print " RIGHT " print ' \ n ' , 0 from function	N/A	N/A	return cout << " RIGHT " << ' \n ' , 0 ;	return cout << " RIGHT " <<'\n ', 0 ;
7133	else if second element of arr [ 0 ] is second element of arr [ 1 ] and first element of arr [ 0 ] is greater than first element of arr [ 1 ]	N/A	N/A	else if ( arr [ 0 ] . second == arr [ 1 ] . second && arr [ 0 ] . first > arr [ 1 ] . first )	else if ( arr [ 0 ] -> second == arr [ 1 ]. second && arr [ 2 ]. first > arr [. first )
7134	if second element of arr [ 2 ] is less than second element of arr [ 1 ]	N/A	N/A	if ( arr [ 2 ] . second < arr [ 1 ] . second )	if ( arr [ 2 ] -> second < arr [ 1 ]. second )
7135	return print " LEFT " print ' \ n ' , 0 from function	N/A	N/A	return cout << " LEFT " << ' \n ' , 0 ;	return cout << " LEFT " <<'\n ', 0 ;
7136	else	N/A	N/A	else	else
7137	return print " RIGHT " print ' \ n ' , 0 from function	N/A	N/A	return cout << " RIGHT " << ' \n ' , 0 ;	return cout << " RIGHT " <<'\n ', 0 ;
7138	DUMMY	0.0	0.0	}	DUMMY
7139	DUMMY	0.0	0.0	return 0;	DUMMY
7140	DUMMY	0.0	0.0	}	DUMMY
7141	DUMMY	0.0	0.0	int main() {	DUMMY
7142	x1 , x2 , x3 , y1 , y2 , y3 = integers	N/A	N/A	long long int x1 , x2 , x3 , y1 , y2 , y3 ;	int x1, x2, x3, y1, y2, y3 ;
7143	Read x1 , x2 , x3 , y1 , y2 , y3	N/A	N/A	cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 ;	cin >> x1 >> x2 >> x3 >> y1 >> y2 >> y3 ;
7144	if ( y2 - y1 ) * ( x3 - x2 ) is equal to ( y3 - y2 ) * ( x2 - x1 )	N/A	N/A	if ( ( y2 - y1 ) * ( x3 - x2 ) == ( y3 - y2 ) * ( x2 - x1 ) )	if ( ( y2 - y1 ) * ( x3 - x2 ) == ( y3 - y2 ) * x2 - x1 )
7145	print TOWARDS and a new line	N/A	N/A	cout << " TOWARDS " << endl ;	cout << " TOWARDS\n " ;
7146	else if ( x3 - x2 ) * ( y2 - y1 ) - ( x2 - x1 ) * ( y3 - y2 ) is greater than 0	N/A	N/A	else if ( ( x3 - x2 ) * ( y2 - y1 ) - ( x2 - x1 ) * ( y3 - y2 ) > 0 )	else if ( ( x3 - x2 ) * ( y2 - y1 ) - ( x2 - x1 ) * n3 - y2 ) > 0 )
7147	print RIGHT and a new line	N/A	N/A	cout << " RIGHT " << endl ;	cout << " RIGHT " << endl ;
7148	else do the following	N/A	N/A	else	else
7149	print LEFT and a new line	N/A	N/A	cout << " LEFT " << endl ;	cout << " LEFT\n " ;
7150	DUMMY	0.0	0.0	}	DUMMY
7151	DUMMY	0.0	0.0	return 0;	DUMMY
7152	DUMMY	0.0	0.0	}	DUMMY
7153	DUMMY	0.0	0.0	int main() {	DUMMY
7154	create long long integers xa , ya , xb , yb , xc , and yc	N/A	N/A	long long xa , ya , xb , yb , xc , yc ;	long long int xa, ya, xb, yb, xc, yc ;
7155	read xa , ya , xb , yb , xc , and yc	N/A	N/A	cin >> xa >> ya >> xb >> yb >> xc >> yc ;	cin >> xa >> ya >> xb >> yb >> xc >> yc ;
7156	create long long integer cp = ( xb - xa ) * ( yc - ya ) - ( yb - ya ) * ( xc - xa )	N/A	N/A	long long cp = ( xb - xa ) * ( yc - ya ) - ( yb - ya ) * ( xc - xa ) ;	long long int cp = ( xb - xa ) * ( yc - ya ) - ( yb - ya) * ( xc - ya ) ;
7157	if cp is greater than 0	N/A	N/A	if ( cp > 0 )	if ( cp > 0 )
7158	print " LEFT \ n "	N/A	N/A	cout << " LEFT\n " ;	cout << " LEFT\n " ;
7159	else if cp is less than 0	N/A	N/A	else if ( cp < 0 )	else if ( cp < 0 )
7160	print " RIGHT \ n "	N/A	N/A	cout << " RIGHT\n " ;	cout << " RIGHT\n " ;
7161	else	N/A	N/A	else	else
7162	print " TOWARDS \ n "	N/A	N/A	cout << " TOWARDS\n " ;	cout << " TOWARDS\n " ;
7163	DUMMY	0.0	0.0	return 0;	DUMMY
7164	DUMMY	0.0	0.0	}	DUMMY
7165	DUMMY	0.0	0.0	int main() {	DUMMY
7166	create long long integers x1 , x2 , x3 , y1 , y2 , y3	N/A	N/A	long long int x1 , x2 , x3 , y1 , y2 , y3 ;	long long int x1, x2, x3, y1, y2, y3 ;
7167	read x1 read y1 read x2 read y2 read x3 read y3	N/A	N/A	cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 ;	cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 ;
7168	if ( y2 - y1 ) * ( x3 - x2 ) is ( y3 - y2 ) * ( x2 - x1 )	N/A	N/A	if ( ( y2 - y1 ) * ( x3 - x2 ) == ( y3 - y2 ) * ( x2 - x1 ) )	if ( ( y2 - y1 ) * ( x3 - x2 ) == ( y3 - y2 ) * int ( x2 - x1 ) )
7169	print " TOWARDS " print newline	N/A	N/A	cout << " TOWARDS " << endl ;	cout << " TOWARDS " << endl ;
7170	else if ( x3 - x2 ) * ( y2 - y1 ) - ( x2 - x1 ) * ( y3 - y2 ) is greater than 0	N/A	N/A	else if ( ( x3 - x2 ) * ( y2 - y1 ) - ( x2 - x1 ) * ( y3 - y2 ) > 0 )	else if ( ( x3 - x2 ) * ( y2 - y1 ) - ( x2 - x1 ) * d2 > 0 )
7171	print " RIGHT " print newline	N/A	N/A	cout << " RIGHT " << endl ;	<< " RIGHT " << endl ;
7172	else	N/A	N/A	else	else
7173	print " LEFT " print newline	N/A	N/A	cout << " LEFT " << endl ;	cout << " LEFT " << endl ;
7174	DUMMY	0.0	0.0	}	DUMMY
7175	DUMMY	0.0	0.0	return 0;	DUMMY
7176	DUMMY	0.0	0.0	}	DUMMY
7177	DUMMY	0.0	0.0	int main() {	DUMMY
7178	x1 , y1 , x2 , y2 , x3 , y3 = long longs	N/A	N/A	long long x1 , y1 , x2 , y2 , x3 , y3 ;	long long x1, y1, x2, y2, x3, y3 ;
7179	read x1 , y1 , x2 , y2 , x3 , y3	N/A	N/A	cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 ;	cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 ;
7180	vx1 = long long = x2 - x1 , vy1 = long long = y2 - y1 , vx2 = long long = x3 - x2 , vy2 = long long = y3 - y2	N/A	N/A	long long vx1 = x2 - x1 , vy1 = y2 - y1 , vx2 = x3 - x2 , vy2 = y3 - y2 ;	long long vx1 = x2 - x1, vy1 = y2 - y1, xx2 = x3 - x2, xy2 = y3 - y2 ;
7181	cha = long long = vx1 * vy2 - vx2 * vy1	N/A	N/A	long long cha = vx1 * vy2 - vx2 * vy1 ;	long long cha = vx1 * vy2 - vx2 * vxy1 ;
7182	if cha > 0 , then print LEFT	N/A	N/A	if ( cha > 0 ) { cout << " LEFT " << endl ; }	if ( cha > 0 ) cout << " LEFT " << endl ;
7183	if cha < 0 , then print RIGHT	N/A	N/A	if ( cha < 0 ) { cout << " RIGHT " << endl ; }	if ( cha < 0 ) cout << " RIGHT " << endl ;
7184	if cha is 0 , then print TOWARDS	N/A	N/A	if ( cha == 0 ) { cout << " TOWARDS " << endl ; }	if ( cha == 0 ) cout << " TOWARDS " << endl ;
7185	DUMMY	0.0	0.0	return 0;	DUMMY
7186	DUMMY	0.0	0.0	}	DUMMY
7187	DUMMY	0.0	0.0	int main() {	DUMMY
7188	f = integer = 0	N/A	N/A	int f = 0 ;	int f = 0 ;
7189	x1 , x2 , x3 , y1 , y , 2 , y3 = long longs	N/A	N/A	long long x1 , x2 , x3 , y1 , y2 , y3 ;	long long x1, x2, x3, y1, y, 2, y3 ;
7190	read x1 , y1 , x2 , y2 , x3 , y3	N/A	N/A	cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 ;	cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 ;
7191	temp = long long = ( x2 - x1 ) * ( y3 - y2 ) - ( y2 - y1 ) * ( x3 - x2 )	N/A	N/A	long long temp = ( x2 - x1 ) * ( y3 - y2 ) - ( y2 - y1 ) * ( x3 - x2 ) ;	long long temp = ( x2 - x1 ) * ( y3 - y2 ) - ( y2 - y1 )* ( x3 - x2 ) ;
7192	if temp is 0	N/A	N/A	if ( temp == 0 )	if ( temp == 0 )
7193	f = 0	N/A	N/A	f = 0 ;	f = 0 ;
7194	else if temp > 0	N/A	N/A	else if ( temp > 0 )	else if ( temp > 0 )
7195	f = 1	N/A	N/A	f = 1 ;	f = 1 ;
7196	else	N/A	N/A	else	else
7197	f = 2	N/A	N/A	f = 2 ;	f = 2 ;
7198	if f is 0	N/A	N/A	if ( f == 0 )	if ( f == 0 )
7199	print TOWARDS	N/A	N/A	puts ( " TOWARDS " ) ;	cout << " TOWARDS " << endl ;
7200	else if f is 2	N/A	N/A	else if ( f == 2 )	else if ( f == 2 )
7201	print RIGHT	N/A	N/A	puts ( " RIGHT " ) ;	cout << " RIGHT " << endl ;
7202	else	N/A	N/A	else	else
7203	print LEFT	N/A	N/A	puts ( " LEFT " ) ;	cout << " LEFT\n " ;
7204	DUMMY	0.0	0.0	return 0;	DUMMY
7205	DUMMY	0.0	0.0	}	DUMMY
7206	DUMMY	0.0	0.0	int main() {	DUMMY
7207	let x = array of long integers of length 4 , y = array of long integers of length 4	N/A	N/A	long long x [ 4 ] , y [ 4 ] ;	long long int x [ 4 ], y [ 8 ] ;
7208	for i = 1 to 3 inclusive , read x [ i ] and y [ i ]	N/A	N/A	for ( int i = 1 ; i <= ( 3 ) ; i ++ ) cin >> x [ i ] >> y [ i ] ;	for ( int i = 1 ; i <= 3 ; i ++ ) { cin >> x [ i ] >> y [ 1 ] ; }
7209	let a1 be a long integer with a1 = y [ 1 ] - y [ 2 ]	N/A	N/A	long long a1 = y [ 1 ] - y [ 2 ] ;	long long a1 = y [ 1 ] - y [ 2 ] ;
7210	let b1 be a long integer with b1 = x [ 2 ] - x [ 1 ]	N/A	N/A	long long b1 = x [ 2 ] - x [ 1 ] ;	long long b1 = x [ 2 ] - x [ 1 ] ;
7211	let c1 be a long integer with c1 = x [ 1 ] * y [ 2 ] - x [ 2 ] * y [ 1 ]	N/A	N/A	long long c1 = x [ 1 ] * y [ 2 ] - x [ 2 ] * y [ 1 ] ;	long long c1 = ( x [ 1 ] * y [ 2 ] ) - ( y [ 3 ] + y [ i ] ) ;
7212	let a2 be a long integer with a2 = y [ 2 ] - y [ 3 ]	N/A	N/A	long long a2 = y [ 2 ] - y [ 3 ] ;	long long a2 = y [ 2 ] - y [ 3 ] ;
7213	let b2 be a long integer with b2 = x [ 3 ] - x [ 2 ]	N/A	N/A	long long b2 = x [ 3 ] - x [ 2 ] ;	long long b2 = x [ 3 ] - x [ 2 ] ;
7214	let c2 be a long integer with c2 = x [ 2 ] * y [ 3 ] - x [ 3 ] * y [ 2 ]	N/A	N/A	long long c2 = x [ 2 ] * y [ 3 ] - x [ 3 ] * y [ 2 ] ;	long long c2 = ( x [ 2 ] * y [ 3 ] ) - x [ 1 ] * x [2 ] ;
7215	if a1 * b2 is equal to a2 * b1 and b1 * c2 is equal to b2 * c1	N/A	N/A	if ( a1 * b2 == a2 * b1 && b1 * c2 == b2 * c1 )	if ( a1 * b2 == a2 * b1 && b1 * c2 == b2 * c1 )
7216	print TOWARDS and newline	N/A	N/A	cout << " TOWARDS\n " ;	cout << " TOWARDS\n " ;
7217	else do the following	N/A	N/A	else	else
7218	if a1 * b2 is greater than a2 * b1	N/A	N/A	if ( a1 * b2 > a2 * b1 )	if ( a1 * b2 > a2 * b1 )
7219	print LEFT and newline	N/A	N/A	cout << " LEFT\n " ;	cout << " LEFT\n " ;
7220	else do the following	N/A	N/A	else	else
7221	print RIGHT and newline	N/A	N/A	cout << " RIGHT\n " ;	cout << " RIGHT\n " ;
7222	DUMMY	0.0	0.0	}	DUMMY
7223	DUMMY	0.0	0.0	return 0;	DUMMY
7224	DUMMY	0.0	0.0	}	DUMMY
7225	declare cross with long longs x0 , y0 , x1 , y1 as arguments , returning long long	N/A	N/A	long long cross ( long long x0 , long long y0 , long long x1 , long long y1 )	long long cross ( long long x0, long long y0, x1, long int y1 )
7226	return y1 * x0 - y0 * x1 from function	N/A	N/A	return y1 * x0 - y0 * x1 ;	return y1 * x0 - y0 * x1 ;
7227	DUMMY	0.0	0.0	}	DUMMY
7228	DUMMY	0.0	0.0	int main() {	DUMMY
7229	create long long vectors X , Y with X initialized with 3 , Y initialized with 3	N/A	N/A	vector < long long > X ( 3 ) , Y ( 3 ) ;	vector < long long > X ( 3, Y ( 3 ) ) ;
7230	for i = 0 to 3 exclusive , read X [ i ] read Y [ i ]	N/A	N/A	for ( long long i = 0 ; i < 3 ; ++ i ) cin >> X [ i ] >> Y [ i ] ;	for ( long long i = 0 ; i < 3 ; i ++ ) { cin >> X [ i ] >> Y [ 1 ] ; }
7231	create long long c with c = result of run cross with X [ 1 ] - X [ 0 ] , Y [ 1 ] - Y [ 0 ] , X [ 2 ] - X [ 1 ] , Y [ 2 ] - Y [ 1 ] as arguments	N/A	N/A	long long c = cross ( X [ 1 ] - X [ 0 ] , Y [ 1 ] - Y [ 0 ] , X [ 2 ] - X [ 1 ] , Y [ 2 ] - Y [ 1 ] ) ;	long long c = cross ( X [ 1 ] - X [ 0 ], Y [1 ] - Y [ 00, X [ 2 ] -X [ 1x, Yp 2 ] ) ;
7232	if c is 0	N/A	N/A	if ( c == 0 )	if ( c == 0 )
7233	print " TOWARDS \ n "	N/A	N/A	cout << " TOWARDS\n " ;	cout << " TOWARDS\n " ;
7234	else if c is less than 0	N/A	N/A	else if ( c < 0 )	else if ( c < 0 )
7235	print " RIGHT \ n "	N/A	N/A	cout << " RIGHT\n " ;	cout << " RIGHT\n " ;
7236	else	N/A	N/A	else	else
7237	print " LEFT \ n "	N/A	N/A	cout << " LEFT\n " ;	cout << " LEFT\n " ;
7238	DUMMY	0.0	0.0	return 0;	DUMMY
7239	DUMMY	0.0	0.0	}	DUMMY
7240	DUMMY	0.0	0.0	int main() {	DUMMY
7241	x1 , y1 , x2 , y2 , x3 , y3 = integers	N/A	N/A	int x1 , y1 , x2 , y2 , x3 , y3 ;	int x1, y1, x2, y2, x3, y3 ;
7242	Read x1 , y1 , x2 , y2 , x3 , y3	N/A	N/A	cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 ;	cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 ;
7243	if ( y2 - y1 ) * ( x3 - x2 ) is equal to ( y3 - y2 ) * ( x2 - x1 )	N/A	N/A	if ( ( y2 - y1 ) * ( x3 - x2 ) == ( y3 - y2 ) * ( x2 - x1 ) )	if ( ( y2 - y1 ) * ( x3 - x2 ) == ( y3 - y2 ) * int ( x2 - x1 ) )
7244	print TOWARDS and a new line	N/A	N/A	cout << " TOWARDS " << endl ;	cout << " TOWARDS\n " ;
7245	else if y1 is equal to y2	N/A	N/A	else if ( y1 == y2 )	else if ( y1 == y2 )
7246	if x2 is greater than x1	N/A	N/A	if ( x2 > x1 )	if ( x2 > x1 )
7247	if y3 is greater than y2	N/A	N/A	if ( y3 > y2 )	if ( y3 > y2 )
7248	print LEFT and a new line	N/A	N/A	cout << " LEFT " << endl ;	cout << " LEFT\n " ;
7249	else do the following	N/A	N/A	else	else
7250	print RIGHT and a new line	N/A	N/A	cout << " RIGHT " << endl ;	cout << " RIGHT\n " ;
7251	else do the following	N/A	N/A	else	else
7252	if y3 is less than y2	N/A	N/A	if ( y3 < y2 )	if ( y3 < y2 )
7253	print LEFT and a new line	N/A	N/A	cout << " LEFT " << endl ;	cout << " LEFT\n " ;
7254	else do the following	N/A	N/A	else	else
7255	print RIGHT and a new line	N/A	N/A	cout << " RIGHT " << endl ;	cout << " RIGHT\n " ;
7256	DUMMY	0.0	0.0	}	DUMMY
7257	else if x1 is equal to x2	N/A	N/A	else if ( x1 == x2 )	else if ( x1 == x2 )
7258	if y1 is less than y2	N/A	N/A	if ( y1 < y2 )	if ( y1 < y2 )
7259	if x3 is greater than x2	N/A	N/A	if ( x3 > x2 )	if ( x3 > x2 )
7260	print RIGHT and a new line	N/A	N/A	cout << " RIGHT " << endl ;	cout << " RIGHT\n " ;
7261	else do the following	N/A	N/A	else	else
7262	print LEFT and a new line	N/A	N/A	cout << " LEFT " << endl ;	cout << " LEFT\n " ;
7263	else do the following	N/A	N/A	else	else
7264	if x3 is less than x2	N/A	N/A	if ( x3 < x2 )	if ( x3 < x2 )
7265	print RIGHT and a new line	N/A	N/A	cout << " RIGHT " << endl ;	cout << " RIGHT " << endl ;
7266	else do the following	N/A	N/A	else	else
7267	print LEFT and a new line	N/A	N/A	cout << " LEFT " << endl ;	cout << " LEFT\n " ;
7268	DUMMY	0.0	0.0	}	DUMMY
7269	else if x1 is less than x2 and y1 is less than y2	N/A	N/A	else if ( x1 < x2 && y1 < y2 )	else if ( x1 < x2 && y1 < y2 )
7270	if x3 is less than x2	N/A	N/A	if ( x3 < x2 )	if ( x3 < x2 )
7271	print LEFT and a new line	N/A	N/A	cout << " LEFT " << endl ;	cout << " LEFT\n " ;
7272	else do the following	N/A	N/A	else	else
7273	print RIGHT and a new line	N/A	N/A	cout << " RIGHT " << endl ;	cout << " RIGHT " << endl ;
7274	else if x1 is greater than x2 and y1 is greater than y2	N/A	N/A	else if ( x1 > x2 && y1 > y2 )	else if ( x1 > x2 && y1 > y2 )
7275	if x3 is greater than x2	N/A	N/A	if ( x3 > x2 )	if ( x3 > x2 )
7276	print LEFT and a new line	N/A	N/A	cout << " LEFT " << endl ;	cout << " LEFT\n " ;
7277	else do the following	N/A	N/A	else	else
7278	print RIGHT and a new line	N/A	N/A	cout << " RIGHT " << endl ;	cout << " RIGHT\n " ;
7279	else if x1 is less than x2 and y1 is greater than y2	N/A	N/A	else if ( x1 < x2 && y1 > y2 )	else if ( x1 < x2 && y1 > y2 )
7280	if x3 is greater than x2	N/A	N/A	if ( x3 > x2 )	if ( x3 > x2 )
7281	print LEFT and a new line	N/A	N/A	cout << " LEFT " << endl ;	cout << " LEFT\n " ;
7282	else do the following	N/A	N/A	else	else
7283	print RIGHT and a new line	N/A	N/A	cout << " RIGHT " << endl ;	cout << " RIGHT\n " ;
7284	else do the following	N/A	N/A	else	else
7285	if x3 is less than x2	N/A	N/A	if ( x3 < x2 )	if ( x3 < x2 )
7286	print LEFT and a new line	N/A	N/A	cout << " LEFT " << endl ;	cout << " LEFT\n " ;
7287	else do the following	N/A	N/A	else	else
7288	print RIGHT and a new line	N/A	N/A	cout << " RIGHT " << endl ;	cout << " RIGHT " << endl ;
7289	DUMMY	0.0	0.0	}	DUMMY
7290	DUMMY	0.0	0.0	return 0;	DUMMY
7291	DUMMY	0.0	0.0	}	DUMMY
7292	DUMMY	0.0	0.0	int main() {	DUMMY
7293	let n and m be integers	N/A	N/A	int n , m ;	int n, m ;
7294	declare string called st	N/A	N/A	string st ;	string st ;
7295	read n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
7296	res is an integer array with size m	N/A	N/A	int res [ m ] ;	int res [ m ] ;
7297	fill res with 0	N/A	N/A	for ( int i = 0 ; i < m ; i ++ ) { res [ i ] = 0 ; }	memset ( res, 0, sizeof ( res ) ) ;
7298	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
7299	read st	N/A	N/A	cin >> st ;	cin >> st ;
7300	if there is no character " 1 " in st	N/A	N/A	if ( st . find ( ' 1 ' ) == string :: npos )	if ( st. find ( " 1 " ) == st. end ( ) )
7301	print - 1 and a new line	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
7302	DUMMY	0.0	0.0	return 0;	DUMMY
7303	DUMMY	0.0	0.0	}	DUMMY
7304	cur is an integer array with 3 * m elements	N/A	N/A	int cur [ 3 * m ] ;	int cur [ 3 * m ] ;
7305	curAns is an array of integers with size m	N/A	N/A	int curAns [ m ] ;	int curAns [ m ] ;
7306	for j = 0 to 3 * m exclusive set cur [ j ] to st [ j % m ] - ' 0 '	N/A	N/A	for ( int j = 0 ; j < 3 * m ; j ++ ) { cur [ j ] = st [ j % m ] - ' 0 ' ; }	for ( int j = 0 ; j < 3 * m ; j ++ ) cur [ j ] = st [ j % m ] -'0';
7307	declare integer called counter = 0	N/A	N/A	int counter = 0 ;	int counter = 0 ;
7308	for a = m - 1 to 0 inclusive counting down	N/A	N/A	for ( int a = m - 1 ; a >= 0 ; a -- )	for ( int a = m - 1 ; a >= 0 ; a -- )
7309	if cur [ a ] = 1	N/A	N/A	if ( cur [ a ] == 1 )	if ( cur [ a ] == 1 )
7310	break the loop	N/A	N/A	break ;	break ;
7311	else	N/A	N/A	else	else
7312	increase counter	N/A	N/A	counter ++ ;	counter ++ ;
7313	DUMMY	0.0	0.0	}	DUMMY
7314	for k = m to 2 * m exclusive	N/A	N/A	for ( int k = m ; k < 2 * m ; k ++ )	for ( int k = m ; k < 2 * m ; ++ k )
7315	if cur [ k ] = 1	N/A	N/A	if ( cur [ k ] == 1 )	if ( cur [ k ] == 1 )
7316	curAns [ k % m ] = 0	N/A	N/A	curAns [ k % m ] = 0 ;	curAns [ k % m ] = 0 ;
7317	set counter to 0	N/A	N/A	counter = 0 ;	counter = 0 ;
7318	else	N/A	N/A	else	else
7319	increment counter and set curAns [ k % m ] = counter	N/A	N/A	curAns [ k % m ] = ++ counter ;	curAns [ k % m ] = counter ++ ;
7320	DUMMY	0.0	0.0	}	DUMMY
7321	assign value of 0 to counter	N/A	N/A	counter = 0 ;	counter = 0 ;
7322	for a = 2 * m to 3 * m exclusive	N/A	N/A	for ( int a = 2 * m ; a < 3 * m ; a ++ )	for ( long long a = 2 * m ; a < 3 * m + 1 ; a ++ )
7323	if cur [ a ] = 1	N/A	N/A	if ( cur [ a ] == 1 )	if ( cur [ a ] == 1 )
7324	stop the loop	N/A	N/A	break ;	break ;
7325	else	N/A	N/A	else	else
7326	increment counter	N/A	N/A	counter ++ ;	counter ++ ;
7327	DUMMY	0.0	0.0	}	DUMMY
7328	for integer k = 2 * m - 1 to m inclusive counting down	N/A	N/A	for ( int k = 2 * m - 1 ; k >= m ; k -- )	for ( int k = 2 * m - 1 ; k >= m ; k -- )
7329	if cur [ k ] = 1	N/A	N/A	if ( cur [ k ] == 1 )	if ( cur [ k ] == 1 )
7330	curAns [ k % m ] = 0	N/A	N/A	curAns [ k % m ] = 0 ;	curAns [ k % m ] = 0 ;
7331	set value of counter to 0	N/A	N/A	counter = 0 ;	counter = 0 ;
7332	else	N/A	N/A	else	else
7333	increment counter	N/A	N/A	counter ++ ;	counter ++ ;
7334	curAns [ k % m ] = min of curAns [ k % m ] and counter	N/A	N/A	curAns [ k % m ] = min ( curAns [ k % m ] , counter ) ;	curAns [ k % m ] = min ( curAns ( k % k ), counter ) ;
7335	DUMMY	0.0	0.0	}	DUMMY
7336	DUMMY	0.0	0.0	}	DUMMY
7337	for integer j = 0 to m exclusive increase res [ j ] by curAns [ j ]	N/A	N/A	for ( int j = 0 ; j < m ; j ++ ) { res [ j ] += curAns [ j ] ; }	for ( int j = 0 ; j < m ; j ++ ) { res [ j ] += curAns [ k ] ; }
7338	DUMMY	0.0	0.0	}	DUMMY
7339	declare integer variable called min = INT_MAX	N/A	N/A	int min = INT_MAX ;	int min = INT_MAX ;
7340	for integer i = 0 to m exclusive	N/A	N/A	for ( int i = 0 ; i < m ; i ++ )	for ( int i = 0 ; i < m ; i ++ )
7341	if min is greater than res [ i ] , set min to res [ i ]	N/A	N/A	if ( min > res [ i ] ) min = res [ i ] ;	if ( min > res [ j ] ) min = res [ i ] ;
7342	DUMMY	0.0	0.0	}	DUMMY
7343	print min and a new line	N/A	N/A	cout << min << endl ;	cout << min << endl ;
7344	DUMMY	0.0	0.0	return 0;	DUMMY
7345	DUMMY	0.0	0.0	}	DUMMY
7346	integer constant INF = 1 < < 29	N/A	N/A	const int INF = 1 << 29 ;	const int INF = 1 << 29 ;
7347	DUMMY	0.0	0.0	int main() {	DUMMY
7348	declare integer variables n and m	N/A	N/A	int n , m ;	int n, m ;
7349	read n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
7350	a is an array of strings with size n	N/A	N/A	string a [ n ] ;	string a [ n ] ;
7351	read n elements into a	N/A	N/A	for ( int i = 0 ; i < ( n ) ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
7352	ans is an array of integers with size m	N/A	N/A	int ans [ m ] ;	int ans [ m ] ;
7353	set m elements of ans to 0	N/A	N/A	for ( int i = 0 ; i < ( m ) ; i ++ ) ans [ i ] = 0 ;	for ( int i = 0 ; i < m ; i ++ ) { ans [ i ] = 1 ; }
7354	chk is integer	N/A	N/A	int chk ;	int chk ;
7355	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < ( n ) ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
7356	set value of chk to 0	N/A	N/A	chk = 0 ;	chk = 0 ;
7357	for integer j = 0 to m exclusive , increment chk by 1 if a [ i ] [ j ] = ' 1 '	N/A	N/A	for ( int j = 0 ; j < ( m ) ; j ++ ) { chk += ( a [ i ] [ j ] == ' 1 ' ) ; }	for ( int j = 0 ; j < m ; j ++ ) chk += a [ i ] [ j ] =='1';
7358	if chk = 0	N/A	N/A	if ( chk == 0 )	if ( chk == 0 )
7359	print " - 1 \ n "	N/A	N/A	cout << " -1\n " ;	cout << " -1\n " ;
7360	DUMMY	0.0	0.0	return 0;	DUMMY
7361	DUMMY	0.0	0.0	}	DUMMY
7362	DUMMY	0.0	0.0	}	DUMMY
7363	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < ( n ) ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
7364	declare integer called last	N/A	N/A	int last ;	int last ;
7365	declare boolean variable called found = 0	N/A	N/A	bool found = 0 ;	bool found = 0 ;
7366	for j = m - 1 to 0 inclusive counting down	N/A	N/A	for ( int j = m - 1 ; j >= 0 ; -- j )	for ( int j = m - 1 ; j >= 0 ; j -- )
7367	if a [ i ] [ j ] = ' 1 '	N/A	N/A	if ( a [ i ] [ j ] == ' 1 ' )	if ( a [ i ] [ j ] =='1')
7368	set value of last to j	N/A	N/A	last = j ;	last = j ;
7369	stop the loop	N/A	N/A	break ;	break ;
7370	DUMMY	0.0	0.0	}	DUMMY
7371	DUMMY	0.0	0.0	}	DUMMY
7372	, curr is an array of integers with size m	N/A	N/A	int curr [ m ] ;	int curr [ m ] ;
7373	for j = 0 to m exclusive , curr [ j ] = INT_MAX	N/A	N/A	for ( int j = 0 ; j < ( m ) ; j ++ ) curr [ j ] = INT_MAX ;	for ( int j = 0 ; j < m ; j ++ ) curr [ j ] = INT_MAX ;
7374	for j = 0 to m exclusive	N/A	N/A	for ( int j = 0 ; j < ( m ) ; j ++ )	for ( int j = 0 ; j < m ; j ++ )
7375	if a [ i ] [ j ] = ' 1 '	N/A	N/A	if ( a [ i ] [ j ] == ' 1 ' )	if ( a [ i ] [ j ] =='1')
7376	set value of last to j	N/A	N/A	last = j ;	last = j ;
7377	found = 1	N/A	N/A	found = 1 ;	found = 1 ;
7378	DUMMY	0.0	0.0	}	DUMMY
7379	if found is 0	N/A	N/A	if ( ! found )	if ( found == 0 )
7380	curr [ j ] = min ( curr [ j ] , ( m - last ) + j )	N/A	N/A	curr [ j ] = min ( curr [ j ] , ( m - last ) + j ) ;	curr [ j ] = min ( curr [ k ], ( m - last ) + j ) ;
7381	else	N/A	N/A	else	else
7382	curr [ j ] = min of curr [ j ] and abs ( j - last )	N/A	N/A	curr [ j ] = min ( curr [ j ] , abs ( j - last ) ) ;	curr [ j ] = min ( curr [ k ], abs ( j - last ) ) ;
7383	DUMMY	0.0	0.0	}	DUMMY
7384	DUMMY	0.0	0.0	}	DUMMY
7385	found = 0	N/A	N/A	found = 0 ;	found = 0 ;
7386	for j = 0 to m exclusive	N/A	N/A	for ( int j = 0 ; j < m ; ++ j )	for ( int j = 0 ; j < m ; j ++ )
7387	if a [ i ] [ j ] = ' 1 '	N/A	N/A	if ( a [ i ] [ j ] == ' 1 ' )	if ( a [ i ] [ j ] =='1')
7388	last = j	N/A	N/A	last = j ;	last = j ;
7389	break the loop	N/A	N/A	break ;	break ;
7390	DUMMY	0.0	0.0	}	DUMMY
7391	DUMMY	0.0	0.0	}	DUMMY
7392	for integer j = m - 1 to 0 inclusive counting down	N/A	N/A	for ( int j = m - 1 ; j >= 0 ; -- j )	for ( int j = m - 1 ; j >= 0 ; j -- )
7393	if a [ i ] [ j ] = ' 1 '	N/A	N/A	if ( a [ i ] [ j ] == ' 1 ' )	if ( a [ i ] [ j ] =='1')
7394	set value of last to j	N/A	N/A	last = j ;	last = j ;
7395	assign value of 1 to found	N/A	N/A	found = 1 ;	found = 1 ;
7396	DUMMY	0.0	0.0	}	DUMMY
7397	if found is 0	N/A	N/A	if ( ! found )	if (! found )
7398	curr [ j ] = min ( curr [ j ] , ( last + 1 ) + ( m - 1 - j ) )	N/A	N/A	curr [ j ] = min ( curr [ j ] , ( last + 1 ) + ( m - 1 - j ) ) ;	curr [ j ] = min ( curr [ k ], ( last + 1 ) + ( m - 1 - j ) ) ;
7399	else	N/A	N/A	else	else
7400	curr [ j ] = min ( curr [ j ] , abs ( j - last ) )	N/A	N/A	curr [ j ] = min ( curr [ j ] , abs ( j - last ) ) ;	curr [ j ] = min ( curr [ k ], abs ( j - last ) ) ;
7401	DUMMY	0.0	0.0	}	DUMMY
7402	DUMMY	0.0	0.0	}	DUMMY
7403	for integer j = 0 to m exclusive increment ans [ j ] by curr [ j ]	N/A	N/A	for ( int j = 0 ; j < ( m ) ; j ++ ) ans [ j ] += curr [ j ] ;	for ( int j = 0 ; j < m ; j ++ ) ans [ j ] += curr [ j - 1 ] ;
7404	DUMMY	0.0	0.0	}	DUMMY
7405	res is integer = INT_MAX	N/A	N/A	int res = INT_MAX ;	int res = INT_MAX ;
7406	for i = 0 to m exclusive , set res to min ( res , ans [ i ] )	N/A	N/A	for ( int i = 0 ; i < ( m ) ; i ++ ) res = min ( res , ans [ i ] ) ;	for ( int i = 0 ; i < m ; i ++ ) res = min ( res, ans [ i ] ) ;
7407	print res and a new line	N/A	N/A	cout << res << endl ;	cout << res << endl ;
7408	DUMMY	0.0	0.0	return 0;	DUMMY
7409	DUMMY	0.0	0.0	}	DUMMY
7410	create constant integer maxn with maxn = 2e5 + 10	N/A	N/A	const int maxn = 2e5 + 10 ;	const int maxn = 2e5 + 10 ;
7411	create integers n , m	N/A	N/A	int n , m ;	int n, m ;
7412	create string array s with size 110	N/A	N/A	string s [ 110 ] ;	string s [ 110 ] ;
7413	create 2d integer array l with size 110 by 10010	N/A	N/A	int l [ 110 ] [ 10010 ] ;	int l [ 110 ] [ 10010 ] ;
7414	create 2d integer array r with size 110 by 10010	N/A	N/A	int r [ 110 ] [ 10010 ] ;	int r [ 110 ] [ 10010 ] ;
7415	DUMMY	0.0	0.0	int main() {	DUMMY
7416	read n read m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
7417	for i = 0 to n exclusive , read s [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; ++ i ) cin >> s [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ;
7418	create boolean bad with bad = false	N/A	N/A	bool bad = false ;	bool bad = false ;
7419	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
7420	create integer last with last = - 1	N/A	N/A	int last = - 1 ;	int last = - 1 ;
7421	for j = 0 to m exclusive	N/A	N/A	for ( int j = 0 ; j < m ; ++ j )	for ( int j = 0 ; j < m ; j ++ )
7422	if s [ i ] [ j ] is ' 0 '	N/A	N/A	if ( s [ i ] [ j ] == ' 0 ' )	if ( s [ i ] [ j ] =='0')
7423	set l [ i ] [ j ] to - 1 if last is - 1 , else j - last	N/A	N/A	l [ i ] [ j ] = ( last == - 1 ? - 1 : j - last ) ;	l [ i ] [ j ] = last == - 1? - 1 : j - last ;
7424	else	N/A	N/A	else	else
7425	set l [ i ] [ j ] to 0 , set last to j	N/A	N/A	l [ i ] [ j ] = 0 , last = j ;	l [ i ] [ j ] = 0, last = j ;
7426	if last is less than 0 , set bad to true	N/A	N/A	if ( last < 0 ) bad = true ;	if ( last < 0 ) { bad = true ; }
7427	set last to - 1	N/A	N/A	last = - 1 ;	last = - 1 ;
7428	for j = m - 1 to 0 inclusive , decrementing j	N/A	N/A	for ( int j = m - 1 ; j >= 0 ; -- j )	for ( int j = m - 1 ; j >= 0 ; j -- )
7429	if s [ i ] [ j ] is ' 0 '	N/A	N/A	if ( s [ i ] [ j ] == ' 0 ' )	if ( s [ i ] [ j ] =='0')
7430	set r [ i ] [ j ] to - 1 if last is - 1 , else last - j	N/A	N/A	r [ i ] [ j ] = ( last == - 1 ? - 1 : last - j ) ;	r [ i ] [ j ] = last == - 1? - 1 : last - j ;
7431	else	N/A	N/A	else	else
7432	set r [ i ] [ j ] to 0 , set last to j	N/A	N/A	r [ i ] [ j ] = 0 , last = j ;	r [ i ] [ j ] = 0, last = j ;
7433	for j = 0 to m exclusive	N/A	N/A	for ( int j = 0 ; j < m ; ++ j )	for ( int j = 0 ; j < m ; j ++ )
7434	if l [ i ] [ j ] is less than 0 , set l [ i ] [ j ] to j + l [ i ] [ m - 1 ] + 1	N/A	N/A	if ( l [ i ] [ j ] < 0 ) l [ i ] [ j ] = j + l [ i ] [ m - 1 ] + 1 ;	if ( l [ i ] [ j ] < 0 ) { l [ 1 ] [ k ] = j + l [ m ] [ m - 1 ] + 1 ; }
7435	for j = m - 1 to 0 inclusive , decrementing j	N/A	N/A	for ( int j = m - 1 ; j >= 0 ; -- j )	for ( int j = m - 1 ; j >= 0 ; j -- )
7436	if r [ i ] [ j ] is less than 0 , set r [ i ] [ j ] to ( m - 1 ) - j + r [ i ] [ 0 ] + 1	N/A	N/A	if ( r [ i ] [ j ] < 0 ) r [ i ] [ j ] = ( m - 1 ) - j + r [ i ] [ 0 ] + 1 ;	if ( r [ i ] [ j ] < 0 ) { r [ u ] [ l ] = ( m - 1 ) - j + r [ 1 ] [ 0 ] + 1 ; }
7437	DUMMY	0.0	0.0	}	DUMMY
7438	if bad is true	N/A	N/A	if ( bad )	if ( bad )
7439	print - 1 print " \ n "	N/A	N/A	cout << - 1 << " \n " ;	cout << - 1 << " \n " ;
7440	DUMMY	0.0	0.0	return 0;	DUMMY
7441	DUMMY	0.0	0.0	}	DUMMY
7442	create long long ans with ans = n * m + 1	N/A	N/A	long long ans = n * m + 1 ;	long long ans = n * m + 1 ;
7443	for j = 0 to m exclusive	N/A	N/A	for ( int j = 0 ; j < m ; ++ j )	for ( long long j = 0 ; j < m ; j ++ )
7444	create long long cur with cur = 0	N/A	N/A	long long cur = 0 ;	long long cur = 0 ;
7445	for i = 0 to n exclusive , increment cur by minimum of l [ i ] [ j ] and r [ i ] [ j ]	N/A	N/A	for ( int i = 0 ; i < n ; ++ i ) cur += min ( l [ i ] [ j ] , r [ i ] [ j ] ) ;	for ( long long i = 0 ; i < n ; i ++ ) { cur += min ( l [ i ] [ j ], r [ i - j ] ) ; }
7446	set ans to minimum of ans and cur	N/A	N/A	ans = min ( ans , cur ) ;	ans = min ( ans, cur ) ;
7447	DUMMY	0.0	0.0	}	DUMMY
7448	print ans print " \ n "	N/A	N/A	cout << ans << " \n " ;	cout << ans << " \n " ;
7449	DUMMY	0.0	0.0	}	DUMMY
7450	assign value 11000 to constant integer maxn	N/A	N/A	const int maxn = 11000 ;	const int maxn = 11000 ;
7451	create integer INF = 1 < < 30	N/A	N/A	int INF = 1 << 30 ;	int INF = 1 << 30 ;
7452	let m and n be integers	N/A	N/A	int m , n ;	int m, n ;
7453	da is an 2d array of integers with size 110 by maxn	N/A	N/A	int da [ 110 ] [ maxn ] ;	int da [ 110 ] [ maxn ] ;
7454	joo is an 2d array of integers with size 110 by maxn	N/A	N/A	int joo [ 110 ] [ maxn ] ;	int joo [ 110 ] [ maxn ] ;
7455	DUMMY	0.0	0.0	int main() {	DUMMY
7456	read m and n	N/A	N/A	cin >> m >> n ;	cin >> m >> n ;
7457	create string s	N/A	N/A	string s ;	string s ;
7458	for i = 0 to m exclusive	N/A	N/A	for ( int i = 0 ; i < m ; i ++ )	for ( int i = 0 ; i < m ; i ++ )
7459	read s	N/A	N/A	cin >> s ;	cin >> s ;
7460	for integer j = 0 to n exclusive set da [ i ] [ j ] to 1 if s [ j ] = ' 1 ' , 0 if it is not	N/A	N/A	for ( int j = 0 ; j < n ; j ++ ) da [ i ] [ j ] = ( s [ j ] == ' 1 ' ? 1 : 0 ) ;	for ( int j = 0 ; j < n ; j ++ ) { da [ i ] [ j ] = ( s [ ++ j ] =='1')? 1 : 0 ; }
7461	DUMMY	0.0	0.0	}	DUMMY
7462	declare integers t and jj	N/A	N/A	int t , jj ;	int t, jj ;
7463	for i = 0 to m exclusive	N/A	N/A	for ( int i = 0 ; i < m ; i ++ )	for ( int i = 0 ; i < m ; i ++ )
7464	t = INF	N/A	N/A	t = INF ;	t = INF ;
7465	for j = 0 while j < n * 2	N/A	N/A	for ( int j = 0 ; j < n * 2 ; j ++ )	for ( int j = 0 ; j < n * 2 ; j ++ )
7466	jj = j % n	N/A	N/A	jj = j % n ;	j = j % n ;
7467	if da [ i ] [ jj ] = 1 , set t to 0	N/A	N/A	if ( da [ i ] [ jj ] == 1 ) t = 0 ;	if ( da [ i ] [ jj ] == 1 ) t = 0 ;
7468	set joo [ i ] [ jj ] = t and increment t	N/A	N/A	joo [ i ] [ jj ] = t ++ ;	joo [ i ] [ jj ] = t ++ ;
7469	DUMMY	0.0	0.0	}	DUMMY
7470	t = INF	N/A	N/A	t = INF ;	t = INF ;
7471	for integer j = n * 2 to 0 inclusive counting down	N/A	N/A	for ( int j = n * 2 ; j >= 0 ; j -- )	for ( int j = n * 2 ; j >= 0 ; j -- )
7472	jj = j % n	N/A	N/A	jj = j % n ;	j = j % n ;
7473	if da [ i ] [ jj ] = 1 , set t to 0	N/A	N/A	if ( da [ i ] [ jj ] == 1 ) t = 0 ;	if ( da [ i ] [ jj ] == 1 ) t = 0 ;
7474	joo [ i ] [ jj ] = min of joo [ i ] [ jj ] and t	N/A	N/A	joo [ i ] [ jj ] = min ( joo [ i ] [ jj ] , t ++ ) ;	joo [ i ] [ jj ] = min ( joo [ j ] [ ij ], t ) ;
7475	DUMMY	0.0	0.0	}	DUMMY
7476	DUMMY	0.0	0.0	}	DUMMY
7477	declare long longs mi = INF and sum	N/A	N/A	long long mi = INF , sum ;	long long mi = INF, sum ;
7478	for integer j = 0 to n exclusive	N/A	N/A	for ( int j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
7479	assign value of 0 to sum	N/A	N/A	sum = 0 ;	sum = 0 ;
7480	for integer i = 0 to m exclusive add joo [ i ] [ j ] to sum	N/A	N/A	for ( int i = 0 ; i < m ; i ++ ) { sum += joo [ i ] [ j ] ; }	for ( int i = 0 ; i < m ; i ++ ) sum += joo [ i ] [ j ] ;
7481	set mi to min of sum and mi	N/A	N/A	mi = min ( sum , mi ) ;	mi = min ( sum, mi ) ;
7482	DUMMY	0.0	0.0	}	DUMMY
7483	if mi > = INF	N/A	N/A	if ( mi >= INF )	if ( mi >= INF )
7484	print - 1 and a new line	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
7485	else	N/A	N/A	else	else
7486	print mi and a new line	N/A	N/A	cout << mi << endl ;	cout << mi << endl ;
7487	DUMMY	0.0	0.0	return 0;	DUMMY
7488	DUMMY	0.0	0.0	}	DUMMY
7489	dist = array of 2 by 10004 int	N/A	N/A	int dist [ 2 ] [ 10004 ] ;	int dist [ 2 ] [ 10004 ] ;
7490	DUMMY	0.0	0.0	int main() {	DUMMY
7491	n , m = int	N/A	N/A	int n , m ;	int n, m ;
7492	read n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
7493	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
7494	str = string	N/A	N/A	string str ;	string str ;
7495	read str	N/A	N/A	cin >> str ;	cin >> str ;
7496	firstone = - 1	N/A	N/A	int firstone = - 1 ;	int firstone = - 1 ;
7497	ff = 0	N/A	N/A	int ff = 0 ;	int ff = 0 ;
7498	while ff < m and str [ ff ] is not ' 1 ' increment ff	N/A	N/A	while ( ff < m && str [ ff ] != ' 1 ' ) ff ++ ;	while ( ff < m && str [ ff ]!='1') ++ ff ;
7499	if ff is m	N/A	N/A	if ( ff == m )	if ( ff == m )
7500	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
7501	DUMMY	0.0	0.0	return 0;	DUMMY
7502	DUMMY	0.0	0.0	}	DUMMY
7503	firstone = ff	N/A	N/A	firstone = ff ;	firstone = ff ;
7504	dist [ 0 ] [ ff ] = 0	N/A	N/A	dist [ 0 ] [ ff ] = 0 ;	dist [ 0 ] [ ff ] = 0 ;
7505	j = ff + 1 modulo m	N/A	N/A	int j = ( ff + 1 ) % m ;	j = ff + 1 % m ;
7506	while true	N/A	N/A	while ( true )	while ( true )
7507	if str [ j ] is ' 1 '	N/A	N/A	if ( str [ j ] == ' 1 ' )	if ( str [ j ] =='1')
7508	dist [ 0 ] [ j ] = 0	N/A	N/A	dist [ 0 ] [ j ] = 0 ;	dist [ 0 ] [ j ] = 0 ;
7509	k = j	N/A	N/A	int k = j ;	k = j ;
7510	while dist [ 0 ] [ k ] < dist [ 0 ] [ k - 1 + m modulo m	N/A	N/A	while ( dist [ 0 ] [ k ] < dist [ 0 ] [ ( k - 1 + m ) % m ] )	while ( dist [ 0 ] [ k ] < dist [ ( k - 1 ) + m ) % m )
7511	k = k - 1 + m modulo m	N/A	N/A	k = ( k - 1 + m ) % m ;	k = k - 1 + m % m ;
7512	dist [ 0 ] [ k ] = dist [ 0 ] [ k + 1 modulo m ] + 1	N/A	N/A	dist [ 0 ] [ k ] = dist [ 0 ] [ ( k + 1 ) % m ] + 1 ;	dist [ 0 ] [ k ] += 1 ;
7513	DUMMY	0.0	0.0	}	DUMMY
7514	if j is firstone break	N/A	N/A	if ( j == firstone ) break ;	if ( j == firstone ) break ;
7515	else	N/A	N/A	else	else
7516	dist [ 0 ] [ j ] = dist [ 0 ] [ j + m - 1 modulo m ] + 1	N/A	N/A	dist [ 0 ] [ j ] = dist [ 0 ] [ ( j + m - 1 ) % m ] + 1 ;	dist [ 0 ] [ j ] += m - 1 % m ] + 1 ;
7517	DUMMY	0.0	0.0	}	DUMMY
7518	j = j + 1 modulo m	N/A	N/A	j = ( j + 1 ) % m ;	j = j + 1 % m ;
7519	DUMMY	0.0	0.0	}	DUMMY
7520	for z = 0 to m exclusive	N/A	N/A	for ( int z = 0 ; z < m ; z ++ )	for ( int z = 0 ; z < m ; z ++ )
7521	increment dist [ 1 ] [ z ] by dist [ 0 ] [ z ]	N/A	N/A	dist [ 1 ] [ z ] += dist [ 0 ] [ z ] ;	dist [ 1 ] [ z ] += dist [ 0 ] [ j ] ;
7522	dist [ 0 ] [ z ] = 0	N/A	N/A	dist [ 0 ] [ z ] = 0 ;	dist [ 0 ] [ z ] = 0 ;
7523	DUMMY	0.0	0.0	}	DUMMY
7524	DUMMY	0.0	0.0	}	DUMMY
7525	minn = dist [ 1 ] [ 0 ]	N/A	N/A	int minn = dist [ 1 ] [ 0 ] ;	int minn = dist [ 1 ] [ 0 ] ;
7526	for h = 1 to m exclusive	N/A	N/A	for ( int h = 1 ; h < m ; h ++ )	for ( int h = 1 ; h < m ; h ++ )
7527	if dist [ 1 ] [ h ] < minn minn = dist [ 1 ] [ h ]	N/A	N/A	if ( dist [ 1 ] [ h ] < minn ) { minn = dist [ 1 ] [ h ] ; }	if ( dist [ 1 ] [ h ] < minn ) minn = dist [ i ] ['h'] ;
7528	DUMMY	0.0	0.0	}	DUMMY
7529	print minn	N/A	N/A	cout << minn << endl ;	cout << minn << endl ;
7530	DUMMY	0.0	0.0	return 0;	DUMMY
7531	DUMMY	0.0	0.0	}	DUMMY
7532	DUMMY	0.0	0.0	int main() {	DUMMY
7533	create integers n , m	N/A	N/A	int n , m ;	int n, m ;
7534	read n read m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
7535	create 2d character array a of size n by m	N/A	N/A	char a [ n ] [ m ] ;	char a [ n ] [ m ] ;
7536	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
7537	for j = 0 to m exclusive , read a [ i ] [ j ]	N/A	N/A	for ( int j = 0 ; j < m ; ++ j ) { cin >> a [ i ] [ j ] ; }	for ( int j = 0 ; j < m ; j ++ ) { cin >> a [ i ] [ j ] ; }
7538	DUMMY	0.0	0.0	}	DUMMY
7539	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
7540	if not count of ' 1 ' from a [ i ] to a [ i ] + m	N/A	N/A	if ( ! count ( a [ i ] , a [ i ] + m , ' 1 ' ) )	if (! strcmp ( a [ i ],'1') )
7541	print - 1 print ' \ n '	N/A	N/A	cout << - 1 << ' \n ' ;	cout << - 1 <<'\n';
7542	DUMMY	0.0	0.0	return 0;	DUMMY
7543	DUMMY	0.0	0.0	}	DUMMY
7544	DUMMY	0.0	0.0	}	DUMMY
7545	create 2d integer arrays nearest , l , r , with nearest size n by m , l size n by m , r size n by m	N/A	N/A	int nearest [ n ] [ m ] , l [ n ] [ m ] , r [ n ] [ m ] ;	int nearest [ n ] [ m ] = { 0 }, l [ ( m ) ] = ( 0 ), r [ ( n ] ] == { 1 } } ;
7546	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
7547	create integer lst with lst = - 1	N/A	N/A	int lst = - 1 ;	int lst = - 1 ;
7548	for j = 0 to m exclusive	N/A	N/A	for ( int j = 0 ; j < m ; ++ j )	for ( int j = 0 ; j < m ; j ++ )
7549	if a [ i ] [ j ] is ' 1 ' , set lst to j	N/A	N/A	if ( a [ i ] [ j ] == ' 1 ' ) lst = j ;	if ( a [ i ] [ j ] =='1') lst = j ;
7550	DUMMY	0.0	0.0	}	DUMMY
7551	create boolean c with c = true	N/A	N/A	bool c = true ;	bool c = true ;
7552	for j = 0 to m exclusive	N/A	N/A	for ( int j = 0 ; j < m ; ++ j )	for ( int j = 0 ; j < m ; j ++ )
7553	set lst to j if a [ i ] [ j ] is ' 1 ' , else lst	N/A	N/A	lst = ( a [ i ] [ j ] == ' 1 ' ? j : lst ) ;	lst = ( a [ i ] [ j ] =='1')? j : lst ;
7554	set c to ( c bitwise and a [ i ] [ j ] ) is 0	N/A	N/A	c &= a [ i ] [ j ] == ' 0 ' ;	c = ( c & a [ i ] [ j ] ) == 0 ;
7555	set l [ i ] [ j ] to m - lst + j if c is true , else absolute value of j - lst	N/A	N/A	l [ i ] [ j ] = ( c ? m - lst + j : abs ( j - lst ) ) ;	l [ i ] [ j ] = ( c == true )? m - lst + j : abs ( j - k ) ;
7556	DUMMY	0.0	0.0	}	DUMMY
7557	set lst to - 1	N/A	N/A	lst = - 1 ;	lst = - 1 ;
7558	set c to true	N/A	N/A	c = true ;	c = true ;
7559	for j = 0 to m exclusive	N/A	N/A	for ( int j = 0 ; j < m ; ++ j )	for ( int j = 0 ; j < m ; j ++ )
7560	if a [ i ] [ j ] is ' 1 '	N/A	N/A	if ( a [ i ] [ j ] == ' 1 ' )	if ( a [ i ] [ j ] =='1')
7561	set lst to j	N/A	N/A	lst = j ;	lst = j ;
7562	break loop	N/A	N/A	break ;	break ;
7563	DUMMY	0.0	0.0	}	DUMMY
7564	DUMMY	0.0	0.0	}	DUMMY
7565	for j = m - 1 to 0 inclusive , decrementing j	N/A	N/A	for ( int j = m - 1 ; j >= 0 ; -- j )	for ( int j = m - 1 ; j >= 0 ; j -- )
7566	set lst to j if a [ i ] [ j ] is ' 1 ' , else lst	N/A	N/A	lst = ( a [ i ] [ j ] == ' 1 ' ? j : lst ) ;	lst = ( a [ i ] [ j ] =='1')? j : lst ;
7567	set c to ( c bitwise and a [ i ] [ j ] ) is 0	N/A	N/A	c &= a [ i ] [ j ] == ' 0 ' ;	c = ( c & a [ i ] [ j ] ) == 0 ;
7568	set r [ i ] [ j ] to lst + 1 + m - ( j + 1 ) if c is true , else absolute value of j - lst	N/A	N/A	r [ i ] [ j ] = ( c ? lst + 1 + m - ( j + 1 ) : abs ( j - lst ) ) ;	r [ i ] [ j ] = c? lst + 1 + m - ( j + 1 ) : abs ( j - lst ) ;
7569	DUMMY	0.0	0.0	}	DUMMY
7570	DUMMY	0.0	0.0	}	DUMMY
7571	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
7572	for j = 0 to m exclusive , set nearest [ i ] [ j ] to minimum of r [ i ] [ j ] and l [ i ] [ j ]	N/A	N/A	for ( int j = 0 ; j < m ; ++ j ) { nearest [ i ] [ j ] = min ( r [ i ] [ j ] , l [ i ] [ j ] ) ; }	for ( int j = 0 ; j < m ; j ++ ) { nearest [ i ] [ j ] = min ( r [ i - j ], l [ i + j ] ) ; }
7573	DUMMY	0.0	0.0	}	DUMMY
7574	create integer ans with ans = 0x3f3f3f3f	N/A	N/A	int ans = 0x3f3f3f3f ;	int ans = ( 0x3f3f )3f ;
7575	for j = 0 to m exclusive	N/A	N/A	for ( int j = 0 ; j < m ; ++ j )	for ( int j = 0 ; j < m ; j ++ )
7576	create integer cur with cur = 0	N/A	N/A	int cur = 0 ;	int cur = 0 ;
7577	for i = 0 to n exclusive , increment cur by nearest [ i ] [ j ]	N/A	N/A	for ( int i = 0 ; i < n ; ++ i ) { cur += nearest [ i ] [ j ] ; }	for ( int i = 0 ; i < n ; i ++ ) cur += nearest [ i ] [ j ] ;
7578	set ans to minimum of ans and cur	N/A	N/A	ans = min ( ans , cur ) ;	ans = min ( ans, cur ) ;
7579	DUMMY	0.0	0.0	}	DUMMY
7580	print ans print ' \ n '	N/A	N/A	cout << ans << ' \n ' ;	cout << ans <<'\n';
7581	DUMMY	0.0	0.0	}	DUMMY
7582	DUMMY	0.0	0.0	int main() {	DUMMY
7583	declare integer n	N/A	N/A	int n ;	int n ;
7584	read n	N/A	N/A	cin >> n ;	cin >> n ;
7585	if n is odd	N/A	N/A	if ( n % 2 == 1 )	if ( n % 2!= 0 )
7586	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
7587	else	N/A	N/A	else	else
7588	print " 2 1 "	N/A	N/A	cout << " 2 1 " ;	cout << " 21 " << endl ;
7589	for integer i = 3 to n exclusive with increment step 2 , print " " , i + 1 , " " and i	N/A	N/A	for ( int i = 3 ; i < n ; i += 2 ) { cout << " " << i + 1 << " " << i ; }	for ( int i = 3 ; i < n ; i += 2 ) cout << " " << i + 1 <<' '<< i << endl ;
7590	print new line	N/A	N/A	cout << endl ;	cout << endl ;
7591	DUMMY	0.0	0.0	}	DUMMY
7592	DUMMY	0.0	0.0	return 0;	DUMMY
7593	DUMMY	0.0	0.0	}	DUMMY
7594	DUMMY	0.0	0.0	int main() {	DUMMY
7595	create int n	N/A	N/A	int n ;	int n ;
7596	read n	N/A	N/A	cin >> n ;	cin >> n ;
7597	if n mod 2 = 1	N/A	N/A	if ( n % 2 == 1 )	if ( n % 2 == 1 )
7598	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
7599	otherwise	N/A	N/A	else	else
7600	print 2 1	N/A	N/A	cout << " 2 1 " ;	cout << 2 << " " << 1 << endl ;
7601	for i = 3 to n exclusive , print " " , i + 1 , " " , i	N/A	N/A	for ( int i = 3 ; i < n ; i += 2 ) { cout << " " << i + 1 << " " << i ; }	for ( int i = 3 ; i < n ; i ++ ) { cout << " " << i + 1 <<' '<< i << endl ; }
7602	print a new line	N/A	N/A	cout << endl ;	cout << endl ;
7603	DUMMY	0.0	0.0	}	DUMMY
7604	DUMMY	0.0	0.0	return 0;	DUMMY
7605	DUMMY	0.0	0.0	}	DUMMY
7606	DUMMY	0.0	0.0	int main() {	DUMMY
7607	create int t and i	N/A	N/A	int t , i ;	int t, i ;
7608	read t	N/A	N/A	cin >> t ;	cin >> t ;
7609	if t mod 2 = 1	N/A	N/A	if ( t % 2 == 1 )	if ( t % 2 == 1 )
7610	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
7611	else	N/A	N/A	else	else
7612	print 2 1	N/A	N/A	cout << " 2 1 " ;	cout << 2 << " " << 1 << endl ;
7613	for i = 3 to t exclusive , print " " , i + 1 , " " , i	N/A	N/A	for ( i = 3 ; i < t ; i += 2 ) { cout << " " << i + 1 << " " << i ; }	for ( int i = 3 ; i < t ; i ++ ) { cout << " " << i + 1 <<' '<< i << endl ; }
7614	print a new line	N/A	N/A	cout << endl ;	cout << endl ;
7615	DUMMY	0.0	0.0	}	DUMMY
7616	DUMMY	0.0	0.0	return 0;	DUMMY
7617	DUMMY	0.0	0.0	}	DUMMY
7618	let num be integer array with size 101	N/A	N/A	int num [ 101 ] ;	int num [ 101 ] ;
7619	DUMMY	0.0	0.0	int main() {	DUMMY
7620	declare integer variable n	N/A	N/A	int n ;	int n ;
7621	read n	N/A	N/A	cin >> n ;	cin >> n ;
7622	for integer i = 0 to n exclusive , set num [ i ] to i + 1	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) num [ i ] = i + 1 ;	for ( int i = 0 ; i < n ; i ++ ) { num [ i ] = i + 1 ; }
7623	if n is even	N/A	N/A	if ( n % 2 )	if ( n % 2 == 0 )
7624	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
7625	else	N/A	N/A	else	else
7626	for i = 1 to n exclusive swap num [ i - 1 ] and num [ i ]	N/A	N/A	for ( int i = 1 ; i < n ; i += 2 ) { swap ( num [ i - 1 ] , num [ i ] ) ; }	for ( int i = 1 ; i < n ; i ++ ) { swap ( num [ i - 1 ], num [ 1 ] ) ; }
7627	for integer i = 0 to n - 1 exclusive print num [ i ] and " "	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ ) cout << num [ i ] << " " ;	for ( int i = 0 ; i < n - 1 ; i ++ ) { cout << num [ i ] << " " ; }
7628	print num [ n - 1 ]	N/A	N/A	cout << num [ n - 1 ] << endl ;	cout << num [ n - 1 ] << endl ;
7629	DUMMY	0.0	0.0	}	DUMMY
7630	DUMMY	0.0	0.0	}	DUMMY
7631	DUMMY	0.0	0.0	int main() {	DUMMY
7632	n = long long	N/A	N/A	long long n ;	long long n ;
7633	read n	N/A	N/A	cin >> n ;	cin >> n ;
7634	if n is uneven	N/A	N/A	if ( n % 2 == 1 )	if ( n % 2 == 1 )
7635	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
7636	else	N/A	N/A	else	else
7637	i = 1 to n inclusive	N/A	N/A	for ( long long i = 1 ; i <= n ; i ++ )	for ( long long i = 1 ; i <= n ; i ++ )
7638	if i is uneven	N/A	N/A	if ( i % 2 == 1 )	if ( i % 2 == 1 )
7639	print i + 1	N/A	N/A	cout << i + 1 ;	cout << i + 1 << endl ;
7640	else	N/A	N/A	else	else
7641	print i - 1	N/A	N/A	cout << i - 1 ;	cout << i - 1 << endl ;
7642	if i equals n	N/A	N/A	if ( i == n )	if ( i == n )
7643	print newline	N/A	N/A	cout << endl ;	cout << endl ;
7644	else	N/A	N/A	else	else
7645	print " "	N/A	N/A	cout << " " ;	cout << " " ;
7646	DUMMY	0.0	0.0	}	DUMMY
7647	DUMMY	0.0	0.0	}	DUMMY
7648	DUMMY	0.0	0.0	}	DUMMY
7649	DUMMY	0.0	0.0	int main() {	DUMMY
7650	n = integer	N/A	N/A	int n ;	int n ;
7651	read n	N/A	N/A	cin >> n ;	cin >> n ;
7652	if n modulo 2 is 1	N/A	N/A	if ( n % 2 == 1 )	if ( n % 2 == 1 )
7653	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
7654	else	N/A	N/A	else	else
7655	temp = integer with temp = 2	N/A	N/A	int temp = 2 ;	int temp = 2 ;
7656	count = integer with count = 0	N/A	N/A	int count = 0 ;	int count = 0 ;
7657	while not temp is n - 1	N/A	N/A	while ( temp != n - 1 )	while ( temp!= n - 1 )
7658	print temp , " "	N/A	N/A	cout << temp << " " ;	cout << temp << " " ;
7659	increment count	N/A	N/A	count ++ ;	count ++ ;
7660	if count modulo 2 is 1	N/A	N/A	if ( count % 2 == 1 )	if ( count % 2 == 1 )
7661	temp = temp - 1	N/A	N/A	temp -= 1 ;	temp -= 1 ;
7662	else	N/A	N/A	else	else
7663	temp = temp + 3	N/A	N/A	temp += 3 ;	temp += 3 ;
7664	DUMMY	0.0	0.0	}	DUMMY
7665	print temp	N/A	N/A	cout << temp << endl ;	cout << temp << endl ;
7666	DUMMY	0.0	0.0	}	DUMMY
7667	DUMMY	0.0	0.0	}	DUMMY
7668	DUMMY	0.0	0.0	int main() {	DUMMY
7669	a , b = integer	N/A	N/A	int a , b ;	int a, b ;
7670	read a	N/A	N/A	cin >> a ;	cin >> a ;
7671	if a modulo not 2 is 0	N/A	N/A	if ( a % 2 != 0 )	if ( a % 2!= 0 )
7672	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
7673	else	N/A	N/A	else	else
7674	for b = 2 to a - 2 inclusive with b = b + 2 then print b , ' ' , b - 1	N/A	N/A	for ( b = 2 ; b <= a - 2 ; b += 2 ) cout << b << ' ' << b - 1 << ' ' ;	for ( b = 2 ; b <= ( a - 2 ) ; b += 2 ) cout << b <<' '<< b - 1 << endl ;
7675	print a , ' ' , a - 1	N/A	N/A	cout << a << ' ' << a - 1 << endl ;	cout << a <<' '<< a - 1 << endl ;
7676	DUMMY	0.0	0.0	}	DUMMY
7677	DUMMY	0.0	0.0	return 0;	DUMMY
7678	DUMMY	0.0	0.0	}	DUMMY
7679	DUMMY	0.0	0.0	int main() {	DUMMY
7680	p = integer	N/A	N/A	int p ;	int p ;
7681	read p	N/A	N/A	cin >> p ;	cin >> p ;
7682	if p modulo 2 is 1	N/A	N/A	if ( p % 2 == 1 )	if ( p % 2 == 1 )
7683	print - 1	N/A	N/A	cout << " -1\n " ;	cout << - 1 << endl ;
7684	else	N/A	N/A	else	else
7685	print 2 1	N/A	N/A	cout << " 2 1 " ;	cout << 2 << endl ;
7686	for i = 4 to p inclusive with i = i + 2 then print i , i - 1	N/A	N/A	for ( int i = 4 ; i <= p ; i += 2 ) cout << " " << i << " " << i - 1 ;	for ( int i = 4 ; i <= p ; i += 2 ) cout << i << " " << i - 1 << endl ;
7687	print new line	N/A	N/A	cout << endl ;	cout << endl ;
7688	DUMMY	0.0	0.0	}	DUMMY
7689	DUMMY	0.0	0.0	return 0;	DUMMY
7690	DUMMY	0.0	0.0	}	DUMMY
7691	declare fastIo with no arguments , returning void	N/A	N/A	void fastIo ( ) { }	void fastIo ( ) { }
7692	DUMMY	0.0	0.0	int main() {	DUMMY
7693	run fastIo	N/A	N/A	fastIo ( ) ;	fastIo ( ) ;
7694	create integer n	N/A	N/A	int n ;	int n ;
7695	read n	N/A	N/A	cin >> n ;	cin >> n ;
7696	create pair of ( pair of ( integer and integer ) and integer ) m	N/A	N/A	map < pair < int , int > , int > m ;	pair < int, int > m ;
7697	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
7698	create integers x , y	N/A	N/A	int x , y ;	int x, y ;
7699	read x read y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
7700	increment m [ new pair with x and y ]	N/A	N/A	m [ make_pair ( x , y ) ] ++ ;	m [ make_pair ( x, y ) ] ++ ;
7701	DUMMY	0.0	0.0	}	DUMMY
7702	create map iterator it from pair of integer and integer to integer with it = beginning of m	N/A	N/A	map < pair < int , int > , int > :: iterator it = m . begin ( ) ;	map < pair < int, int >, integer > :: iterator it = m. begin ( ) ;
7703	create integer cnt with cnt = 1	N/A	N/A	int cnt = 1 ;	int cnt = 1 ;
7704	while it is not end of m	N/A	N/A	while ( it != m . end ( ) )	while ( it!= m. end ( ) )
7705	if second element of it is greater than cnt , set cnt to second element of it	N/A	N/A	if ( it -> second > cnt ) cnt = it -> second ;	if ( it. second > cnt ) { cnt = it -> second ; }
7706	increment it	N/A	N/A	it ++ ;	it ++ ;
7707	DUMMY	0.0	0.0	}	DUMMY
7708	print cnt print newline	N/A	N/A	cout << cnt << endl ;	cout << cnt << endl ;
7709	DUMMY	0.0	0.0	return 0;	DUMMY
7710	DUMMY	0.0	0.0	}	DUMMY
7711	create constant int N = 1e5 + 5	N/A	N/A	const int N = 1e5 + 5 ;	const int N = 1e5 + 5 ;
7712	create integers n , res and Max with res and Max = 1	N/A	N/A	int n , res = 1 , Max = 1 ;	int n, res = 1, Max = 1 ;
7713	a is an array of int / int pairs with N elements	N/A	N/A	pair < int , int > a [ N ] ;	pair < int, int > a [ N ] ;
7714	void function Input	N/A	N/A	void Input ( )	void Input ( )
7715	read n	N/A	N/A	cin >> n ;	cin >> n ;
7716	for i from 1 to n inclusive incrementing i , read a [ i ] . first and a [ i ] . second	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] . first >> a [ i ] . second ;	for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ]. first >> ( a [ 1 ]. second ) ; }
7717	sort a from index 1 to n + 1	N/A	N/A	sort ( a + 1 , a + n + 1 ) ;	sort ( a + 1, a + n + 1 ) ;
7718	DUMMY	0.0	0.0	}	DUMMY
7719	Solve is a void function	N/A	N/A	void Solve ( )	void Solve ( )
7720	declare integer curr = 1	N/A	N/A	int curr = 1 ;	int curr = 1 ;
7721	loop i from 2 to n inclusive	N/A	N/A	for ( int i = 2 ; i <= n ; i ++ )	for ( int i = 2 ; i <= n ; i ++ )
7722	if a [ i ] . first = a [ i - 1 ] . first and a [ i ] . second = a [ i - 1 ] . second	N/A	N/A	if ( a [ i ] . first == a [ i - 1 ] . first && a [ i ] . second == a [ i - 1 ] . second )	if ( a [ i ]. first == a [ ( i - 1 ] ). first && a [ 1 ]. second == ( 1 ). second )
7723	increment curr and set res to max of res and curr	N/A	N/A	curr ++ , res = max ( res , curr ) ;	res = max ( res, curr ) ;
7724	else	N/A	N/A	else	else
7725	change curr to 1	N/A	N/A	curr = 1 ;	curr = 1 ;
7726	DUMMY	0.0	0.0	}	DUMMY
7727	print res and ' \ n '	N/A	N/A	cout << res << ' \n ' ;	cout << res <<'\n';
7728	DUMMY	0.0	0.0	}	DUMMY
7729	DUMMY	0.0	0.0	int main() {	DUMMY
7730	call function Input	N/A	N/A	Input ( ) ;	Input ( ) ;
7731	call function Solve	N/A	N/A	Solve ( ) ;	Solve ( ) ;
7732	DUMMY	0.0	0.0	return 0;	DUMMY
7733	DUMMY	0.0	0.0	}	DUMMY
7734	DUMMY	0.0	0.0	int main() {	DUMMY
7735	n , temp = integer 2d array of size [ 24 ] [ 60 ] , maxi , h , m = integers with temp = { 0 } , maxi = 0	N/A	N/A	int n , temp [ 24 ] [ 60 ] = { 0 } , maxi = 0 , h , m ;	int n, temp [ 24 ] [ 60 ], maxi = 0, h, m ;
7736	read n	N/A	N/A	cin >> n ;	cin >> n ;
7737	while n	N/A	N/A	while ( n -- )	while ( n )
7738	read h , m	N/A	N/A	cin >> h >> m ;	cin >> h >> m ;
7739	increment temp [ h ] [ m ]	N/A	N/A	temp [ h ] [ m ] ++ ;	temp [ h ] [ m ] ++ ;
7740	if temp [ h ] [ m ] > maxi , maxi = temp [ h ] [ m ]	N/A	N/A	if ( temp [ h ] [ m ] > maxi ) maxi = temp [ h ] [ m ] ;	if ( temp [ h ] [ m ] > maxi ) { maxi = temp. h ]. m ] ; }
7741	DUMMY	0.0	0.0	}	DUMMY
7742	print maxi	N/A	N/A	cout << maxi << endl ;	cout << maxi << endl ;
7743	DUMMY	0.0	0.0	return 0;	DUMMY
7744	DUMMY	0.0	0.0	}	DUMMY
7745	DUMMY	0.0	0.0	int main() {	DUMMY
7746	n , h , m , t , c , rest = integer with t = - 1 , c = 0 , res = 1	N/A	N/A	int n , h , m , t = - 1 , c = 0 , res = 1 ;	int n, h, m, t = - 1, c = 0, rest ;
7747	read n	N/A	N/A	cin >> n ;	cin >> n ;
7748	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
7749	read h and m	N/A	N/A	cin >> h >> m ;	cin >> h >> m ;
7750	t0 = integer with t0 = h * 60 + m	N/A	N/A	int t0 = h * 60 + m ;	int t0 = h * 60 + m ;
7751	c = if t0 is t , c + 1 else 1	N/A	N/A	c = t0 == t ? c + 1 : 1 ;	c = ( t0 == t? c + 1 : 1 ) ;
7752	if c > res , res = c	N/A	N/A	if ( c > res ) res = c ;	if ( c > res ) res = c ;
7753	t = t0	N/A	N/A	t = t0 ;	t = t0 ;
7754	DUMMY	0.0	0.0	}	DUMMY
7755	print res	N/A	N/A	cout << res << endl ;	cout << res << endl ;
7756	DUMMY	0.0	0.0	return 0;	DUMMY
7757	DUMMY	0.0	0.0	}	DUMMY
7758	DUMMY	0.0	0.0	int main() {	DUMMY
7759	create integers n , i , j	N/A	N/A	int n , i , j ;	int n, i, j ;
7760	create integer arrays h , m , count with h size 100000 , m size 100000 , count size 100000	N/A	N/A	int h [ 100000 ] , m [ 100000 ] , count [ 100000 ] ;	int h [ 100000 ], m [ 1000000 ], count [ 1000001 ] ;
7761	read n	N/A	N/A	cin >> n ;	cin >> n ;
7762	for i = 0 to n exclusive , read h [ i ] read m [ i ]	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { cin >> h [ i ] >> m [ i ] ; }	for ( i = 0 ; i < n ; i ++ ) { cin >> h [ i ] >> m [ j ] ; }
7763	for i = 0 to n exclusive , set count [ i ] to 1	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) count [ i ] = 1 ;	for ( i = 0 ; i < n ; i ++ ) { count [ i ] = 1 ; }
7764	for i = 0 , j = 0 to i is less than n - 1 , incrementing i	N/A	N/A	for ( i = 0 , j = 0 ; i < n - 1 ; i ++ )	for ( i = 0, j = 0 ; i < n - 1 ; i ++ )
7765	if h [ i ] is h [ i + 1 ] and m [ i ] is m [ i + 1 ]	N/A	N/A	if ( h [ i ] == h [ i + 1 ] && m [ i ] == m [ i + 1 ] )	if ( h [ j ] == h [ i + 1 ] && m [ i ] == m [ 1 ] )
7766	increment count [ j ]	N/A	N/A	count [ j ] ++ ;	count [ j ] ++ ;
7767	else if count [ j ] is not 1	N/A	N/A	else if ( count [ j ] != 1 )	else if ( count [ j ]!= 1 )
7768	increment j	N/A	N/A	j ++ ;	j ++ ;
7769	DUMMY	0.0	0.0	}	DUMMY
7770	create integer ans with ans = count [ 0 ]	N/A	N/A	int ans = count [ 0 ] ;	int ans = count [ 0 ] ;
7771	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
7772	if count [ i ] is greater than ans , set ans to count [ i ]	N/A	N/A	if ( count [ i ] > ans ) ans = count [ i ] ;	if ( count [ i ] > ans ) { ans = count [ j ] ; }
7773	DUMMY	0.0	0.0	}	DUMMY
7774	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
7775	DUMMY	0.0	0.0	return 0;	DUMMY
7776	DUMMY	0.0	0.0	}	DUMMY
7777	DUMMY	0.0	0.0	int main() {	DUMMY
7778	n , i , c = int with c = 0 and x , y = int array of size 100010 each	N/A	N/A	int n , i , x [ 100010 ] , y [ 100010 ] , c = 0 ;	int n, x [ 100010 ], y [ 100000 ], i, c = 0 ;
7779	v = int vector	N/A	N/A	vector < int > v ;	vector < int > v ;
7780	read n	N/A	N/A	cin >> n ;	cin >> n ;
7781	mp = map of pair of int and int and int	N/A	N/A	map < pair < int , int > , int > mp ;	map < pair < int, int >, int < int > :: iterator mp ;
7782	for i = 0 to n	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
7783	read x [ i ] then y [ i ]	N/A	N/A	cin >> x [ i ] >> y [ i ] ;	cin >> x [ 1 ] >> y [ i ] ;
7784	increment mp [ make_pair of x [ i ] and y [ i ] ]	N/A	N/A	mp [ make_pair ( x [ i ] , y [ i ] ) ] ++ ;	mp [ make_pair ( x [ 1 ], y [ i ] ) ] ++ ;
7785	DUMMY	0.0	0.0	}	DUMMY
7786	for i = 0 to n append mp [ make_pair of x [ i ] and y [ i ] ] to v	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { v . push_back ( mp [ make_pair ( x [ i ] , y [ i ] ) ] ) ; }	for ( int i = 0 ; i < n ; i ++ ) { v. push_back ( mp [ make_pair ( x [ i ], y [ 1 ] ) ] ) ; }
7787	sort v	N/A	N/A	sort ( v . begin ( ) , v . end ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
7788	if last element of v is 0	N/A	N/A	if ( v [ v . size ( ) - 1 ] == 0 )	if ( v [ v. size ( ) - 1 ] == 0 )
7789	print " 1 "	N/A	N/A	cout << " 1 " << endl ;	cout << " 1 " << endl ;
7790	else	N/A	N/A	else	else
7791	print last element of v	N/A	N/A	cout << v [ v . size ( ) - 1 ] << endl ;	cout << v [ v. size ( ) - 1 ] << endl ;
7792	DUMMY	0.0	0.0	return 0;	DUMMY
7793	DUMMY	0.0	0.0	}	DUMMY
7794	DUMMY	0.0	0.0	int main() {	DUMMY
7795	n , a , b , c , d , co , m = integers with c = - 1 , d = - 1 , co = 0 , m = 0	N/A	N/A	int n , a , b , c = - 1 , d = - 1 , co = 0 , m = 0 ;	int n, a, b, c = - 1, d = - 2, co = 0, m = 0 ;
7796	read n	N/A	N/A	cin >> n ;	cin >> n ;
7797	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
7798	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
7799	if a is c and b is d	N/A	N/A	if ( a == c && b == d )	if ( a == c && b == d )
7800	increment co	N/A	N/A	co ++ ;	co ++ ;
7801	m = max of m and co	N/A	N/A	m = max ( m , co ) ;	m = max ( m, co ) ;
7802	else	N/A	N/A	else	else
7803	co = 1	N/A	N/A	co = 1 ;	co = 1 ;
7804	c = a	N/A	N/A	c = a ;	c = a ;
7805	d = b	N/A	N/A	d = b ;	d = b ;
7806	DUMMY	0.0	0.0	}	DUMMY
7807	if m is 0	N/A	N/A	if ( m == 0 )	if ( m == 0 )
7808	print 1	N/A	N/A	cout << 1 << endl ;	cout << 1 << endl ;
7809	else	N/A	N/A	else	else
7810	print m	N/A	N/A	cout << m << endl ;	cout << m << endl ;
7811	DUMMY	0.0	0.0	return 0;	DUMMY
7812	DUMMY	0.0	0.0	}	DUMMY
7813	DUMMY	0.0	0.0	int main() {	DUMMY
7814	let n , h , m , a = two dimensional array of int with lengths 100 , 100	N/A	N/A	int n , h , m , a [ 100 ] [ 100 ] ;	int n, h, m, a [ 100 ] [ 10 ] ;
7815	while reading new values for n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
7816	let maxa = int = 0	N/A	N/A	int maxa = 0 ;	int maxa = 0 ;
7817	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
7818	read h , m	N/A	N/A	cin >> h >> m ;	cin >> h >> m ;
7819	increment a [ h ] [ m ]	N/A	N/A	a [ h ] [ m ] ++ ;	a [ h ] [ m ] ++ ;
7820	if a [ h ] [ m ] > maxa , maxa = a [ h ] [ m ]	N/A	N/A	if ( a [ h ] [ m ] > maxa ) maxa = a [ h ] [ m ] ;	if ( ( a [ h ] [ m ] > maxa ) ) maxa = a [ i ] [ j ] ;
7821	DUMMY	0.0	0.0	}	DUMMY
7822	print maxa	N/A	N/A	cout << maxa << endl ;	cout << maxa << endl ;
7823	DUMMY	0.0	0.0	}	DUMMY
7824	DUMMY	0.0	0.0	return 0;	DUMMY
7825	DUMMY	0.0	0.0	}	DUMMY
7826	DUMMY	0.0	0.0	int main() {	DUMMY
7827	create integers n , i	N/A	N/A	int n , i ;	int n, i ;
7828	read n	N/A	N/A	cin >> n ;	cin >> n ;
7829	create integer arrays a , b , with a size n + 2 , b size n + 2	N/A	N/A	int a [ n + 2 ] , b [ n + 2 ] ;	int a [ n + 2 ], b [ n - 2 ] ;
7830	create integer m with m = 0	N/A	N/A	int m = 0 ;	int m = 0 ;
7831	create 2d integer array c with size 24 by 60 , with c = { 0 }	N/A	N/A	int c [ 24 ] [ 60 ] = { 0 } ;	int c [ 24 ] [ 60 ] = { 0 } ;
7832	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
7833	read a [ i ] read b [ i ]	N/A	N/A	cin >> a [ i ] >> b [ i ] ;	cin >> a [ 1 ] >> b [ i ] ;
7834	increment c [ a [ i ] ] [ b [ i ] ]	N/A	N/A	c [ a [ i ] ] [ b [ i ] ] ++ ;	++ c [ a [ i ] ] [ b [ 1 ] ] ;
7835	DUMMY	0.0	0.0	}	DUMMY
7836	for i = 0 to n exclusive , set m to maximum of m and c [ a [ i ] ] [ b [ i ] ]	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { m = max ( m , c [ a [ i ] ] [ b [ i ] ] ) ; }	for ( int i = 0 ; i < n ; i ++ ) { m = max ( m, c [ a [ i ] ] [ b [ 1 ] ] ) ; }
7837	print m print " \ n "	N/A	N/A	cout << m << " \n " ;	cout << m << " \n " ;
7838	DUMMY	0.0	0.0	return 0;	DUMMY
7839	DUMMY	0.0	0.0	}	DUMMY
7840	DUMMY	0.0	0.0	int main() {	DUMMY
7841	n , hh , mm , h , m , res , k = integers with hh and mm value of - 1 , res value of 0 and k value of 1	N/A	N/A	int n , hh = - 1 , mm = - 1 , h , m , res = 0 , k = 1 ;	int n, hh, mm = - 1, h, m, res = 0, k = 1 ;
7842	read n	N/A	N/A	cin >> n ;	cin >> n ;
7843	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
7844	read h and m	N/A	N/A	cin >> h >> m ;	cin >> h >> m ;
7845	if h equals hh and m equals mm	N/A	N/A	if ( h == hh && m == mm )	if ( h == hh && m == mm )
7846	add 1 to k	N/A	N/A	k ++ ;	k ++ ;
7847	else	N/A	N/A	else	else
7848	set hh to h	N/A	N/A	hh = h ;	hh = h ;
7849	set mm to m	N/A	N/A	mm = m ;	mm = m ;
7850	if res is greater than k then set res to res otherwise set res to k	N/A	N/A	res = res > k ? res : k ;	res > k? res = res : k ;
7851	set k to 1	N/A	N/A	k = 1 ;	k = 1 ;
7852	DUMMY	0.0	0.0	}	DUMMY
7853	DUMMY	0.0	0.0	}	DUMMY
7854	if res is greater than k then print res otherwise print k	N/A	N/A	cout << ( res > k ? res : k ) << endl ;	cout << ( res > k? res : k ) << endl ;
7855	DUMMY	0.0	0.0	return 0;	DUMMY
7856	DUMMY	0.0	0.0	}	DUMMY
7857	declare const int N = 1e5 + 5	N/A	N/A	const int N = 1e5 + 5 ;	const int N = 1e5 + 5 ;
7858	let n , res and Max be ints with res and Max = 1	N/A	N/A	int n , res = 1 , Max = 1 ;	int n, res = 1, Max = 1 ;
7859	create an array of int / int pairs called a with N elements	N/A	N/A	pair < int , int > a [ N ] ;	pair < int, int > a [ N ] ;
7860	function Input	N/A	N/A	void Input ( )	void Input ( )
7861	read n	N/A	N/A	cin >> n ;	cin >> n ;
7862	loop i from 1 to n inclusive , read a [ i ] . first and a [ i ] . second	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] . first >> a [ i ] . second ;	for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ]. first >> ( a [ 1 ]. second ) ; }
7863	sort a from index 1 to n + 1	N/A	N/A	sort ( a + 1 , a + n + 1 ) ;	sort ( a + 1, a + n + 1 ) ;
7864	DUMMY	0.0	0.0	}	DUMMY
7865	void function Solve	N/A	N/A	void Solve ( )	void Solve ( )
7866	declare int variable curr = 1	N/A	N/A	int curr = 1 ;	int curr = 1 ;
7867	for i = 2 to n inclusive	N/A	N/A	for ( int i = 2 ; i <= n ; i ++ )	for ( int i = 2 ; i <= n ; i ++ )
7868	if a [ i ] . first = a [ i - 1 ] . first and a [ i ] . second = a [ i - 1 ] . second	N/A	N/A	if ( a [ i ] . first == a [ i - 1 ] . first && a [ i ] . second == a [ i - 1 ] . second )	if ( a [ i ]. first == a [ ( i - 1 ] ). first && a [ j ]. second == a ( i + 1 ]. Second ) )
7869	increment curr by one and set res to max of res and curr	N/A	N/A	curr ++ , res = max ( res , curr ) ;	res = max ( res, curr ) ;
7870	else	N/A	N/A	else	else
7871	assign 1 to curr	N/A	N/A	curr = 1 ;	curr = 1 ;
7872	DUMMY	0.0	0.0	}	DUMMY
7873	print res and ' \ n '	N/A	N/A	cout << res << ' \n ' ;	cout << res <<'\n';
7874	DUMMY	0.0	0.0	}	DUMMY
7875	DUMMY	0.0	0.0	int main() {	DUMMY
7876	call function Input	N/A	N/A	Input ( ) ;	Input ( ) ;
7877	call function Solve	N/A	N/A	Solve ( ) ;	Solve ( ) ;
7878	DUMMY	0.0	0.0	return 0;	DUMMY
7879	DUMMY	0.0	0.0	}	DUMMY
7880	DUMMY	0.0	0.0	int main() {	DUMMY
7881	n , ele1 , ele2 = integers	N/A	N/A	int n , ele1 , ele2 ;	int n, ele1, ele2 ;
7882	read n	N/A	N/A	cin >> n ;	cin >> n ;
7883	arr = integer array of size [ 24 * 60 ] with arr [ 24 * 60 ] = { }	N/A	N/A	int arr [ 24 * 60 ] = { } ;	int arr [ 24 * 60 ] = { } ;
7884	while decrement n	N/A	N/A	while ( n -- )	while ( n -- )
7885	read ele1 and ele2	N/A	N/A	cin >> ele1 >> ele2 ;	cin >> ele1 >> ele2 ;
7886	increment arr [ ele1 * 60 + ele2 ]	N/A	N/A	arr [ ele1 * 60 + ele2 ] ++ ;	arr [ ele1 * 60 + ele2 ] ++ ;
7887	DUMMY	0.0	0.0	}	DUMMY
7888	max = integer with max = 0	N/A	N/A	int max = 0 ;	int max = 0 ;
7889	for i = 0 to 24 * 60 exclusive	N/A	N/A	for ( int i = 0 ; i < 24 * 60 ; i ++ )	for ( int i = 0 ; i < 24 * 60 ; i ++ )
7890	if arr [ i ] > max , max = arr [ i ]	N/A	N/A	if ( arr [ i ] > max ) { max = arr [ i ] ; }	if ( arr [ i ] > max ) max = arr [ 1 ] ;
7891	DUMMY	0.0	0.0	}	DUMMY
7892	print max	N/A	N/A	cout << max << " \n " ;	cout << max << endl ;
7893	DUMMY	0.0	0.0	}	DUMMY
7894	DUMMY	0.0	0.0	int main() {	DUMMY
7895	integers = t	N/A	N/A	int t ;	int t ;
7896	read t	N/A	N/A	cin >> t ;	cin >> t ;
7897	integers array = arr [ t ] [ 2 ]	N/A	N/A	int arr [ t ] [ 2 ] ;	int arr [ t ] [ 2 ] ;
7898	read arr [ i ] [ 0 ] , arr [ i ] [ 1 ]	N/A	N/A	for ( int i = 0 ; i < t ; i ++ ) cin >> arr [ i ] [ 0 ] >> arr [ i ] [ 1 ] ;	for ( int i = 0 ; i < t ; i ++ ) { cin >> arr [ i ] [ 0 ] >> array [ i - 1 ] ; }
7899	set int count to 0 , temp to 1	N/A	N/A	int count = 0 , temp = 1 ;	int count = 0, temp = 1 ;
7900	for i = 1 to less than t do the following	N/A	N/A	for ( int i = 1 ; i < t ; i ++ )	for ( int i = 1 ; i < t ; i ++ )
7901	set if ( temp > count ) count equals temp	N/A	N/A	if ( temp > count ) count = temp ;	if ( temp > count ) count = temp ;
7902	if arr [ i - 1 ] [ 0 ] is arr [ i ] [ 0 ] & & arr [ i - 1 ] [ 1 ] equals arr [ i ] [ 1 ] then do next	N/A	N/A	if ( arr [ i - 1 ] [ 0 ] == arr [ i ] [ 0 ] && arr [ i - 1 ] [ 1 ] == arr [ i ] [ 1 ] )	if ( arr [ i - 1 ] [ 0 ] == arr [ n ] && arr [ j - i ] [ 1 ] == ar [ i ] ] 1 ] )
7903	add one to temp	N/A	N/A	temp ++ ;	temp ++ ;
7904	else	N/A	N/A	else	else
7905	set temp to 1	N/A	N/A	temp = 1 ;	temp = 1 ;
7906	DUMMY	0.0	0.0	}	DUMMY
7907	set if ( temp > count ) count equals temp	N/A	N/A	if ( temp > count ) count = temp ;	if ( temp > count ) count = temp ;
7908	output count	N/A	N/A	cout << count << endl ;	cout << count << endl ;
7909	DUMMY	0.0	0.0	}	DUMMY
7910	DUMMY	0.0	0.0	int main() {	DUMMY
7911	create integer n	N/A	N/A	int n ;	int n ;
7912	read n	N/A	N/A	cin >> n ;	cin >> n ;
7913	create integers ans , cnt , ph , pm , with ans = 1 , cnt = 1 , ph = 99 , pm = 99	N/A	N/A	int ans = 1 , cnt = 1 , ph = 99 , pm = 99 ;	int ans = 1, cnt = l, ph = 99, pm = 99 ;
7914	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
7915	create integers h , m	N/A	N/A	int h , m ;	int h, m ;
7916	read h read m	N/A	N/A	cin >> h >> m ;	cin >> h >> m ;
7917	if h is ph and m is pm	N/A	N/A	if ( h == ph && m == pm )	if ( h == ph && m == pm )
7918	increment cnt	N/A	N/A	++ cnt ;	cnt ++ ;
7919	if ans is less than cnt , set ans to cnt	N/A	N/A	if ( ans < cnt ) ans = cnt ;	if ( ans < cnt ) ans = cnt ;
7920	else	N/A	N/A	else	else
7921	set cnt to 1	N/A	N/A	cnt = 1 ;	cnt = 1 ;
7922	DUMMY	0.0	0.0	}	DUMMY
7923	set ph to h	N/A	N/A	ph = h ;	ph = h ;
7924	set pm to m	N/A	N/A	pm = m ;	pm = m ;
7925	DUMMY	0.0	0.0	}	DUMMY
7926	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
7927	DUMMY	0.0	0.0	return 0;	DUMMY
7928	DUMMY	0.0	0.0	}	DUMMY
7929	DUMMY	0.0	0.0	int main() {	DUMMY
7930	let n be a long integer	N/A	N/A	long long int n ;	long long n ;
7931	read n	N/A	N/A	cin >> n ;	cin >> n ;
7932	let Arr , Sum be long integers with Sum = 0 , Arr = array of long integers of length n + 2	N/A	N/A	long long int Arr [ n + 2 ] , Sum = 0 ;	long long Arr [ n + 2 ], Sum = 0 ;
7933	for i = 1 to n inclusive , read Arr [ i ] , increment Sum by Arr [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> Arr [ i ] , Sum += Arr [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> Arr [ i ], Sum += Arr. at ( i ) ;
7934	let s , t be long integers	N/A	N/A	long long int s , t ;	long long s, t ;
7935	read s , t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
7936	let Cnt be a long integer with Cnt = 0	N/A	N/A	long long int Cnt = 0 ;	long long Cnt = 0 ;
7937	if s is greater than t , swap s , t	N/A	N/A	if ( s > t ) swap ( s , t ) ;	if ( s > t ) swap ( s, t ) ;
7938	for i = s to t exclusive , increment Cnt by Arr [ i ]	N/A	N/A	for ( int i = s ; i < t ; i ++ ) Cnt += Arr [ i ] ;	for ( int i = s ; i < t ; i ++ ) Cnt += Arr [ i ] ;
7939	print minimum of Cnt , Sum - Cnt and newline	N/A	N/A	cout << min ( Cnt , Sum - Cnt ) << " \n " ;	cout << min ( Cnt, Sum - Cnt ) << endl ;
7940	DUMMY	0.0	0.0	return 0;	DUMMY
7941	DUMMY	0.0	0.0	}	DUMMY
7942	DUMMY	0.0	0.0	int main() {	DUMMY
7943	a , i , s , t , n = int , b , c , l1 , l2 = 0 , arr = array of 105 int	N/A	N/A	int a , i , b = 0 , c = 0 , s , t , n , l1 = 0 , l2 = 0 , arr [ 105 ] ;	int a, i, b, c, arr [ 105 ], t, n ;
7944	read n	N/A	N/A	cin >> n ;	cin >> n ;
7945	for a = 1 to n inclusive read arr [ a ]	N/A	N/A	for ( a = 1 ; a <= n ; a ++ ) { cin >> arr [ a ] ; }	for ( a = 1 ; a <= n ; a ++ ) cin >> arr [ a ] ;
7946	read s	N/A	N/A	cin >> s ;	cin >> s ;
7947	read t	N/A	N/A	cin >> t ;	cin >> t ;
7948	if s > t	N/A	N/A	if ( s > t )	if ( s > t )
7949	b = t	N/A	N/A	b = t ;	b = t ;
7950	c = s	N/A	N/A	c = s ;	c = s ;
7951	else	N/A	N/A	else	else
7952	b = s	N/A	N/A	b = s ;	b = s ;
7953	c = t	N/A	N/A	c = t ;	c = t ;
7954	DUMMY	0.0	0.0	}	DUMMY
7955	for a = b to c exclusive add arr [ a ] to l1	N/A	N/A	for ( a = b ; a < c ; a ++ ) { l1 = l1 + arr [ a ] ; }	for ( int a = b ; a < c ; a ++ ) { l1 += arr [ a ] ; }
7956	increment a from c while a is not b	N/A	N/A	for ( a = c ; a != b ; a ++ )	while ( a!= b ) { a ++ ; }
7957	add arr [ a ] to l2	N/A	N/A	l2 = l2 + arr [ a ] ;	l2 += arr [ a ] ;
7958	if a is n a = 0	N/A	N/A	if ( a == n ) a = 0 ;	if ( a == n ) a = 0 ;
7959	DUMMY	0.0	0.0	}	DUMMY
7960	if l1 < = l2	N/A	N/A	if ( l1 <= l2 )	if ( l1 <= l2 )
7961	print l1	N/A	N/A	cout << l1 << endl ;	cout << l1 << endl ;
7962	else	N/A	N/A	else	else
7963	print l2	N/A	N/A	cout << l2 << endl ;	cout << l2 << endl ;
7964	DUMMY	0.0	0.0	return 0;	DUMMY
7965	DUMMY	0.0	0.0	}	DUMMY
7966	let d , n , x be integers with d = 2d array of integers with 107 rows and 107 columns respectively	N/A	N/A	int d [ 100 + 7 ] [ 100 + 7 ] , n , x ;	int d [ 107 ] [ 107 ), n, x ;
7967	DUMMY	0.0	0.0	int main() {	DUMMY
7968	read n	N/A	N/A	cin >> n ;	cin >> n ;
7969	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
7970	for j = 1 to n inclusive , d [ i ] [ j ] is equal to INT_MAX / 10	N/A	N/A	for ( int j = 1 ; j <= n ; j ++ ) d [ i ] [ j ] = INT_MAX / 10 ;	for ( int j = 1 ; j <= n ; j ++ ) { d [ i ] [ j ] = INT_MAX / 10 ; }
7971	for i = 1 to n inclusive , d [ i ] [ i ] is equal to 0	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) d [ i ] [ i ] = 0 ;	for ( int i = 1 ; i <= n ; i ++ ) { d [ i ] [ j ] = 0 ; }
7972	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
7973	read x	N/A	N/A	cin >> x ;	cin >> x ;
7974	let j be a integer with j = i + 1	N/A	N/A	int j = i + 1 ;	int j = i + 1 ;
7975	if j is greater than n , decrement j by n	N/A	N/A	if ( j > n ) j -= n ;	if ( j > n ) j -= n ;
7976	d [ i ] [ j ] is equal to x	N/A	N/A	d [ i ] [ j ] = x ;	d [ i ] [ j ] = x ;
7977	d [ j ] [ i ] is equal to x	N/A	N/A	d [ j ] [ i ] = x ;	d [ j ] [ i ] = x ;
7978	DUMMY	0.0	0.0	}	DUMMY
7979	for k = 1 to n inclusive	N/A	N/A	for ( int k = 1 ; k <= n ; k ++ )	for ( int k = 1 ; k <= n ; k ++ )
7980	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
7981	for j = 1 to n inclusive	N/A	N/A	for ( int j = 1 ; j <= n ; j ++ )	for ( int j = 1 ; j <= n ; j ++ )
7982	if d [ i ] [ k ] + d [ k ] [ j ] is less than d [ i ] [ j ] , d [ i ] [ j ] is equal to d [ i ] [ k ] + d [ k ] [ j ]	N/A	N/A	if ( d [ i ] [ k ] + d [ k ] [ j ] < d [ i ] [ j ] ) d [ i ] [ j ] = d [ i ] [ k ] + d [ k ] [ j ] ;	if ( d [ i ] [ k ] + d [ k - 1 ] [ j ] < d [ u ] [ l ] ) { d [ 1 ]. j ] += d [ 0 ] [ i + 1 ] ; }
7983	let s , t be integers	N/A	N/A	int s , t ;	int s, t ;
7984	read s , t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
7985	print d [ s ] [ t ] and newline	N/A	N/A	cout << d [ s ] [ t ] << endl ;	cout << d [ s ] [ t ] << endl ;
7986	DUMMY	0.0	0.0	}	DUMMY
7987	create ints K , X , Y , M , and N and int array A of size 105	N/A	N/A	int K , A [ 105 ] , X , Y , M , N ;	int K, X, Y, M, N, A [ 105 ] ;
7988	DUMMY	0.0	0.0	int main() {	DUMMY
7989	read K	N/A	N/A	cin >> K ;	cin >> K ;
7990	for i = 1 to K	N/A	N/A	for ( int i = 1 ; i <= K ; i ++ )	for ( int i = 1 ; i <= K ; i ++ )
7991	read A [ i ]	N/A	N/A	cin >> A [ i ] ;	cin >> A [ i ] ;
7992	set N to N + A [ i ]	N/A	N/A	N += A [ i ] ;	N += A [ i ] ;
7993	DUMMY	0.0	0.0	}	DUMMY
7994	read X and Y	N/A	N/A	cin >> X >> Y ;	cin >> X >> Y ;
7995	for i = min ( X , Y ) to max ( X , Y ) , set M to M + A [ i ]	N/A	N/A	for ( int i = min ( X , Y ) ; i < max ( X , Y ) ; i ++ ) { M += A [ i ] ; }	for ( int i = min ( X, Y ) ; i <= max ( X [ Y ] ) ; ++ i ) M += A [ i ] ;
7996	print the min of M and N - M	N/A	N/A	cout << min ( M , N - M ) << ' \n ' ;	cout << min ( M, N - M ) << endl ;
7997	DUMMY	0.0	0.0	}	DUMMY
7998	let int array arr of size 1000	N/A	N/A	int arr [ 1000 ] ;	int arr [ 1000 ] ;
7999	DUMMY	0.0	0.0	int main() {	DUMMY
8000	let int n	N/A	N/A	int n ;	int n ;
8001	while cin > > n is truthy	N/A	N/A	while ( cin >> n )	while ( cin >> n )
8002	let int total = 0	N/A	N/A	int total = 0 ;	int total = 0 ;
8003	set every index of arr to 0	N/A	N/A	memset ( arr , 0 , sizeof ( arr ) ) ;	memset ( arr, 0, sizeof ( arr ) ) ;
8004	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
8005	read arr [ i ]	N/A	N/A	cin >> arr [ i ] ;	cin >> arr [ i ] ;
8006	set total to total + arr [ i ]	N/A	N/A	total += arr [ i ] ;	total += arr [ i ] ;
8007	DUMMY	0.0	0.0	}	DUMMY
8008	let ints s and t	N/A	N/A	int s , t ;	int s, t ;
8009	read s and t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
8010	create int tmp	N/A	N/A	int tmp ;	int tmp ;
8011	if s is greater than t	N/A	N/A	if ( s > t )	if ( s > t )
8012	set tmp to s	N/A	N/A	tmp = s ;	tmp = s ;
8013	set s to t	N/A	N/A	s = t ;	s = t ;
8014	set t to tmp	N/A	N/A	t = tmp ;	t = tmp ;
8015	DUMMY	0.0	0.0	}	DUMMY
8016	decrease s by 1	N/A	N/A	s -- ;	s -- ;
8017	reduce t by 1	N/A	N/A	t -- ;	t -- ;
8018	let ints a1 = 0 and a2 = 0	N/A	N/A	int a1 = 0 , a2 = 0 ;	int a1 = 0, a2 = 0 ;
8019	for i = s to t exclusive , set a1 to a1 + arr [ i ]	N/A	N/A	for ( int i = s ; i < t ; i ++ ) { a1 += arr [ i ] ; }	for ( int i = s ; i < t ; i ++ ) { a1 += arr [ i ] ; }
8020	set a2 to total - a1	N/A	N/A	a2 = total - a1 ;	a2 = total - a1 ;
8021	print the min of a2 and a1	N/A	N/A	cout << min ( a2 , a1 ) << endl ;	cout << min ( a2, a1 ) << endl ;
8022	DUMMY	0.0	0.0	}	DUMMY
8023	DUMMY	0.0	0.0	}	DUMMY
8024	DUMMY	0.0	0.0	int main() {	DUMMY
8025	n , sum , sum1 , a , b = int with sum = 0 and sum1 = 0	N/A	N/A	int n , sum = 0 , sum1 = 0 , a , b ;	int n, sum = 0, sum1 = 0 ;
8026	read n	N/A	N/A	cin >> n ;	cin >> n ;
8027	x = int array of size n	N/A	N/A	int x [ n ] ;	int x [ n ] ;
8028	read n values into x	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> x [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] ;
8029	read a then b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
8030	for i = min of a - 1 , b - 1 to max of b - 1 , a - 1 increment sum by x [ i ]	N/A	N/A	for ( int i = min ( a - 1 , b - 1 ) ; i < max ( b - 1 , a - 1 ) ; i ++ ) { sum += x [ i ] ; }	for ( int i = min ( a - 1, b - 1 ) ; i < max ( b - l, a ) - 1 ; i ++ ) { sum += x [ i ] ; }
8031	for i = min of a - 1 , b - 1 to 0 inclusive decrementing i increment sum1 by x [ i ]	N/A	N/A	for ( int i = min ( a - 1 , b - 1 ) - 1 ; i >= 0 ; i -- ) sum1 += x [ i ] ;	for ( int i = min ( a - 1, b - 1 ) ; i >= 0 ; i -- ) sum1 += x [ i ] ;
8032	for i = n - 1 to max of b - 1 , a - 1 decrementing i increment sum1 by x [ i ]	N/A	N/A	for ( int i = n - 1 ; i >= max ( b - 1 , a - 1 ) ; i -- ) sum1 += x [ i ] ;	for ( int i = n - 1 ; i >= max ( b - 1, a - 1 ) ; i -- ) { sum1 += x [ i ] ; }
8033	print min of sum , sum1	N/A	N/A	cout << min ( sum , sum1 ) << endl ;	cout << min ( sum, sum1 ) << endl ;
8034	DUMMY	0.0	0.0	}	DUMMY
8035	DUMMY	0.0	0.0	int main() {	DUMMY
8036	create integer n	N/A	N/A	int n ;	int n ;
8037	read n	N/A	N/A	cin >> n ;	cin >> n ;
8038	create integer array d with size n + 10	N/A	N/A	int d [ n + 10 ] ;	int d [ n + 10 ] ;
8039	set d [ 0 ] to 0	N/A	N/A	d [ 0 ] = 0 ;	d [ 0 ] = 0 ;
8040	for i = 1 to n inclusive , read d [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { cin >> d [ i ] ; }	for ( int i = 1 ; i <= n ; i ++ ) { cin >> d [ i ] ; }
8041	create integer array s with size n + 15	N/A	N/A	int s [ n + 15 ] ;	int s [ n + 15 ] ;
8042	set s [ 0 ] to 0	N/A	N/A	s [ 0 ] = 0 ;	s [ 0 ] = 0 ;
8043	for i = 1 to n + 1 inclusive , set s [ i ] to s [ i - 1 ] + d [ i - 1 ]	N/A	N/A	for ( int i = 1 ; i <= n + 1 ; i ++ ) { s [ i ] = s [ i - 1 ] + d [ i - 1 ] ; }	for ( int i = 1 ; i <= n + 1 ; ++ i ) { s [ i ] = s [ 1 ] + d [ i - 1 ] ; }
8044	create integers sr , t	N/A	N/A	int sr , t ;	int sr, t ;
8045	read sr read t	N/A	N/A	cin >> sr >> t ;	cin >> sr >> t ;
8046	if sr is greater than t , swap values between sr and t	N/A	N/A	if ( sr > t ) swap ( sr , t ) ;	if ( sr > t ) swap ( sr, t ) ;
8047	create integer ans with ans = s [ t ] - s [ sr ]	N/A	N/A	int ans = s [ t ] - s [ sr ] ;	int ans = s [ t ] - s [ sr ] ;
8048	set ans to minimum of ( ans and s [ sr ] + s [ n + 1 ] - s [ t ] )	N/A	N/A	ans = min ( ans , s [ sr ] + s [ n + 1 ] - s [ t ] ) ;	ans = min ( ans, s [ sr ] + s [ n + 1 ] - s [ t ] ) ;
8049	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
8050	DUMMY	0.0	0.0	return 0;	DUMMY
8051	DUMMY	0.0	0.0	}	DUMMY
8052	create integers n , m , x , y , ans , ans1 , create integer arrays dist , prefs with dist size 100015 , prefs size 100015	N/A	N/A	int n , m , dist [ 100015 ] , x , y , prefs [ 100015 ] , ans , ans1 ;	int n, m, x, y, dist [ 100015 ], prefs [ 100000 ], ans1 ;
8053	DUMMY	0.0	0.0	int main() {	DUMMY
8054	read n	N/A	N/A	cin >> n ;	cin >> n ;
8055	for i = 0 to n exclusive , read dist [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> dist [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> dist [ i ] ;
8056	set prefs [ 0 ] to dist [ 0 ]	N/A	N/A	prefs [ 0 ] = dist [ 0 ] ;	prefs [ 0 ] = dist [ 1 ] ;
8057	for i = 1 to n exclusive , set prefs [ i ] to dist [ i ] + prefs [ i - 1 ]	N/A	N/A	for ( int i = 1 ; i < n ; i ++ ) { prefs [ i ] = dist [ i ] + prefs [ i - 1 ] ; }	for ( int i = 1 ; i < n ; i ++ ) { prefs [ i ] = dist [ ( i ] + prefs ( i - 1 ] ) ; }
8058	read x read y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
8059	decrement x	N/A	N/A	x -- ;	x -- ;
8060	decrement y	N/A	N/A	y -- ;	y -- ;
8061	if x is greater than y , swap values between x and y	N/A	N/A	if ( x > y ) { swap ( x , y ) ; }	if ( x > y ) swap ( x, y ) ;
8062	set ans to prefs [ y - 1 ]	N/A	N/A	ans = prefs [ y - 1 ] ;	ans = prefs [ y - 1 ] ;
8063	decrement ans by prefs [ x - 1 ]	N/A	N/A	ans -= prefs [ x - 1 ] ;	ans -= prefs [ x - 1 ] ;
8064	set ans1 to prefs [ n - 1 ] - ans	N/A	N/A	ans1 = prefs [ n - 1 ] - ans ;	ans1 = prefs [ n - 1 ] - ans ;
8065	print minimum of ans and ans1 print newline	N/A	N/A	cout << min ( ans , ans1 ) << endl ;	cout << min ( ans, ans1 ) << endl ;
8066	DUMMY	0.0	0.0	return 0;	DUMMY
8067	DUMMY	0.0	0.0	}	DUMMY
8068	declare n , s , t , ans = 0 , tmp = 0 as integers , declare line as integer array with size 101 = { }	N/A	N/A	int n , s , t , line [ 101 ] = { } , ans = 0 , tmp = 0 ;	int n, s, t, line [ 101 ] = { }, ans = 0, tmp = 0 ;
8069	DUMMY	0.0	0.0	int main() {	DUMMY
8070	declare integer i	N/A	N/A	int i ;	int i ;
8071	read n	N/A	N/A	cin >> n ;	cin >> n ;
8072	for i = 1 to n inclusive , read line [ i ]	N/A	N/A	for ( i = 1 ; i <= n ; ++ i ) cin >> line [ i ] ;	for ( i = 1 ; i <= n ; i ++ ) cin >> line [ i ] ;
8073	read s read t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
8074	let i be s	N/A	N/A	i = s ;	i = s ;
8075	while i is not t	N/A	N/A	while ( i != t )	while ( i!= t )
8076	increment tmp by line [ i ]	N/A	N/A	tmp += line [ i ] ;	tmp += line [ i ] ;
8077	increment i	N/A	N/A	++ i ;	i ++ ;
8078	if i is greater than n , let i be 1	N/A	N/A	if ( i > n ) i = 1 ;	if ( i > n ) i = 1 ;
8079	DUMMY	0.0	0.0	}	DUMMY
8080	while i is not s	N/A	N/A	while ( i != s )	while ( i!= s )
8081	increment ans by line [ i ]	N/A	N/A	ans += line [ i ] ;	ans += line [ i ] ;
8082	increment i	N/A	N/A	++ i ;	i ++ ;
8083	if i is greater than n , let i be 1	N/A	N/A	if ( i > n ) i = 1 ;	if ( i > n ) i = 1 ;
8084	DUMMY	0.0	0.0	}	DUMMY
8085	if tmp is less than ans , let ans be tmp	N/A	N/A	if ( tmp < ans ) ans = tmp ;	if ( tmp < ans ) ans = tmp ;
8086	print ans and newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
8087	DUMMY	0.0	0.0	return 0;	DUMMY
8088	DUMMY	0.0	0.0	}	DUMMY
8089	n , i , s1 , s2 , s , t , a = integers with a = array of size 105	N/A	N/A	int n , i , s1 , s2 , s , t , a [ 105 ] ;	int n, i, s1, s2, s, t, a [ 105 ] ;
8090	DUMMY	0.0	0.0	int main() {	DUMMY
8091	read n	N/A	N/A	cin >> n ;	cin >> n ;
8092	for i = 1 to n , read a [ i ]	N/A	N/A	for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;	for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
8093	read s , t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
8094	if s > t , swap s and t	N/A	N/A	if ( s > t ) swap ( s , t ) ;	if ( s > t ) swap ( s, t ) ;
8095	for i = s to t exclusive , s1 = s1 + a [ i ]	N/A	N/A	for ( i = s ; i < t ; i ++ ) s1 += a [ i ] ;	for ( i = s ; i < t ; i ++ ) { s1 += a [ i ] ; }
8096	for i = 1 to s exclusive , s2 = s2 + a [ i ]	N/A	N/A	for ( i = 1 ; i < s ; i ++ ) s2 += a [ i ] ;	for ( int i = 1 ; i < s ; i ++ ) { s2 += a [ i ] ; }
8097	for i = n to t , s2 = s2 + a [ i ]	N/A	N/A	for ( i = n ; i >= t ; i -- ) s2 += a [ i ] ;	for ( int i = n ; i < t ; i ++ ) { s2 += a [ i ] ; }
8098	print min of s1 and s2	N/A	N/A	cout << min ( s1 , s2 ) << endl ;	cout << min ( s1, s2 ) << endl ;
8099	DUMMY	0.0	0.0	return 0;	DUMMY
8100	DUMMY	0.0	0.0	}	DUMMY
8101	DUMMY	0.0	0.0	int main() {	DUMMY
8102	n = int	N/A	N/A	int n ;	int n ;
8103	read n	N/A	N/A	cin >> n ;	cin >> n ;
8104	arr = int array of size n	N/A	N/A	int arr [ n ] ;	int arr [ n ] ;
8105	read n values into arr	N/A	N/A	for ( int i = 0 ; i < n ; ++ i ) cin >> arr [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }
8106	a , b = int	N/A	N/A	int a , b ;	int a, b ;
8107	read a then b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
8108	x = int with x = max of a and b	N/A	N/A	int x = max ( a , b ) ;	int x = max ( a, b ) ;
8109	y = int with y = min of a and b	N/A	N/A	int y = min ( a , b ) ;	int y = min ( a, b ) ;
8110	d1 = int with d1 = 0	N/A	N/A	int d1 = 0 ;	int d1 = 0 ;
8111	for i = x - 1 to n + y - 1 increment d1 by arr [ i mod n ]	N/A	N/A	for ( int i = x - 1 ; i < n + ( y - 1 ) ; i ++ ) { d1 += arr [ i % n ] ; }	for ( int i = x - 1 ; i < n + y ; i ++ ) { d1 += arr [ i % n ] ; }
8112	d2 = int with d2 = 0	N/A	N/A	int d2 = 0 ;	int d2 = 0 ;
8113	for i = x - 2 to y - 1 inclusive decrementing i increment d2 by arr [ i mod n ]	N/A	N/A	for ( int i = x - 2 ; i >= y - 1 ; i -- ) { d2 += arr [ i % n ] ; }	for ( int i = x - 2 ; i >= y - 1 ; i -- ) { d2 += arr [ i % n ] ; }
8114	print min of d1 and d2	N/A	N/A	cout << min ( d1 , d2 ) << endl ;	cout << min ( d1, d2 ) << endl ;
8115	DUMMY	0.0	0.0	}	DUMMY
8116	DUMMY	0.0	0.0	int main() {	DUMMY
8117	declare NumberOfStations as integer	N/A	N/A	int NumberOfStations ;	int NumberOfStations ;
8118	declare integers From , To	N/A	N/A	int From , To ;	int From, To ;
8119	declare integer SumOfDistance = 0	N/A	N/A	int SumOfDistance = 0 ;	int SumOfDistance = 0 ;
8120	read NumberOfStations	N/A	N/A	cin >> NumberOfStations ;	cin >> NumberOfStations ;
8121	declare integer vector StationsDistance initialized with NumberOfStations	N/A	N/A	vector < int > StaionsDistance ( NumberOfStations ) ;	vector < int > StationsDistance ( NumberOfStations ) ;
8122	for Index = 0 to NumberOfStations exclusive	N/A	N/A	for ( int Index = 0 ; Index < NumberOfStations ; Index ++ )	for ( int Index = 0 ; Index < NumberOfStations ; Index ++ )
8123	read StationsDistance [ Index ]	N/A	N/A	cin >> StaionsDistance [ Index ] ;	cin >> StationsDistance [ Index ] ;
8124	increment SumOfDistance by StationsDistance [ Index ]	N/A	N/A	SumOfDistance += StaionsDistance [ Index ] ;	SumOfDistance += StationsDistance [ Index ] ;
8125	DUMMY	0.0	0.0	}	DUMMY
8126	read From and To	N/A	N/A	cin >> From >> To ;	cin >> From >> To ;
8127	declare integers Start , End	N/A	N/A	int Start , End ;	int Start, End ;
8128	if From is less than To	N/A	N/A	if ( From < To )	if ( From < To )
8129	let Start be From	N/A	N/A	Start = From ;	Start = From ;
8130	let End be To	N/A	N/A	End = To ;	End = To ;
8131	else	N/A	N/A	else	else
8132	let Start be To	N/A	N/A	Start = To ;	Start = To ;
8133	let End be From	N/A	N/A	End = From ;	End = From ;
8134	DUMMY	0.0	0.0	}	DUMMY
8135	declare TheOtherDestance as integer = 0	N/A	N/A	int TheOtherDestance = 0 ;	int TheOtherDestance = 0 ;
8136	for Start is less than End , incrementing Start , increment TheOtherDestance by StaionsDistance [ Start - 1 ]	N/A	N/A	for ( ; Start < End ; Start ++ ) TheOtherDestance += StaionsDistance [ Start - 1 ] ;	for ( ; Start < End ; Start ++ ) { TheOtherDestance += StaionsDistance [ Start - 1 ] ; }
8137	print minimum of TheOtherDestance and ( SumOfDistance - TheOtherDestance ) , newline	N/A	N/A	cout << min ( TheOtherDestance , ( SumOfDistance - TheOtherDestance ) ) << endl ;	cout << min ( TheOtherDestance, ( SumOfDistance - The OtherDestance ) ) << endl ;
8138	DUMMY	0.0	0.0	return 0;	DUMMY
8139	DUMMY	0.0	0.0	}	DUMMY
8140	DUMMY	0.0	0.0	int main() {	DUMMY
8141	n = long long int	N/A	N/A	long long int n ;	long long int n ;
8142	read n	N/A	N/A	cin >> n ;	cin >> n ;
8143	d = long long int array of size n	N/A	N/A	long long int d [ n ] ;	long long int d [ n ] ;
8144	read n values into d	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> d [ i ] ; }	for ( long long int i = 0 ; i < n ; i ++ ) cin >> d [ i ] ;
8145	s , t = long long int	N/A	N/A	long long int s , t ;	long long int s, t ;
8146	read s then t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
8147	if s is greater than t	N/A	N/A	if ( s > t )	if ( s > t )
8148	temp = long long int with temp = s	N/A	N/A	long long int temp = s ;	long long int temp = s ;
8149	set s to t	N/A	N/A	s = t ;	s = t ;
8150	set t to temp	N/A	N/A	t = temp ;	t = temp ;
8151	DUMMY	0.0	0.0	}	DUMMY
8152	dist1 , dist2 = long long int with dist1 = 0 and dist2 = 0	N/A	N/A	long long int dist1 = 0 , dist2 = 0 ;	long long int dist1 = 0, dist2 = 0 ;
8153	for i = s - 1 to t - 1 increment dist1 by d [ i ]	N/A	N/A	for ( int i = s - 1 ; i < t - 1 ; i ++ ) { dist1 += d [ i ] ; }	for ( long long int i = s - 1 ; i < t ; i ++ ) dist1 += d [ i ] ;
8154	flag = bool with flag = true	N/A	N/A	bool flag = true ;	bool flag = true ;
8155	for i = t - 1 to s - 1	N/A	N/A	for ( int i = t - 1 ; i != s - 1 ; i ++ )	for ( long long int i = t - 1 ; i <= s - l ; i ++ )
8156	if i is a multiple of n and flag is true	N/A	N/A	if ( i % n == 0 && flag )	if ( i % n == 0 && flag )
8157	set i to - 1	N/A	N/A	i = - 1 ;	i = - 1 ;
8158	set flag to false	N/A	N/A	flag = false ;	flag = false ;
8159	continue	N/A	N/A	continue ;	continue ;
8160	DUMMY	0.0	0.0	}	DUMMY
8161	increment dist2 by d [ i ]	N/A	N/A	dist2 += d [ i ] ;	dist2 += d [ i ] ;
8162	DUMMY	0.0	0.0	}	DUMMY
8163	if dist2 > dist1	N/A	N/A	if ( dist2 > dist1 )	if ( dist2 > dist1 )
8164	print dist1	N/A	N/A	cout << dist1 << endl ;	cout << dist1 << endl ;
8165	else	N/A	N/A	else	else
8166	print dist2	N/A	N/A	cout << dist2 << endl ;	cout << dist2 << endl ;
8167	DUMMY	0.0	0.0	return 0;	DUMMY
8168	DUMMY	0.0	0.0	}	DUMMY
8169	DUMMY	0.0	0.0	int main() {	DUMMY
8170	let n , d with 255 elements , s , and t be integers	N/A	N/A	int n , d [ 255 ] , s , t ;	int n, d [ 255 ], s, t ;
8171	let res1 and res2 be integers with value 0	N/A	N/A	int res1 = 0 , res2 = 0 ;	int res1 = 0, res2 = 0 ;
8172	read n	N/A	N/A	cin >> n ;	cin >> n ;
8173	read n values into array i	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { cin >> d [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;
8174	iterate and set 2 * n values into array d with element i - n	N/A	N/A	for ( int i = n + 1 ; i <= 2 * n ; i ++ ) { d [ i ] = d [ i - n ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> d [ i ] [ i - n ] ; }
8175	read s and t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
8176	if s is more than t , swap s and t	N/A	N/A	if ( s > t ) swap ( s , t ) ;	if ( s > t ) swap ( s, t ) ;
8177	for i from s to t exclusive , add d at element i to res1	N/A	N/A	for ( int i = s ; i < t ; i ++ ) { res1 += d [ i ] ; }	for ( int i = s ; i < t ; i ++ ) res1. insert ( d [ i ] ) ;
8178	for i from t to n + s exclusive , add d at element i to res2	N/A	N/A	for ( int i = t ; i < n + s ; i ++ ) { res2 += d [ i ] ; }	for ( int i = t ; i < n + s ; i ++ ) res2. push_back ( d ) ;
8179	print min of res1 and res2	N/A	N/A	cout << min ( res1 , res2 ) << endl ;	cout << min ( res1, res2 ) << endl ;
8180	DUMMY	0.0	0.0	}	DUMMY
8181	DUMMY	0.0	0.0	int main() {	DUMMY
8182	n , s , t , sum , m1 = int with sum = 0 and m1 = 0	N/A	N/A	int n , s , t , sum = 0 , m1 = 0 ;	int n, s, t, sum = 0, m1 = 0 ;
8183	read n	N/A	N/A	cin >> n ;	cin >> n ;
8184	arr = int array of size n	N/A	N/A	int arr [ n ] ;	int arr [ n ] ;
8185	for i = 0 to n	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
8186	read arr [ i ]	N/A	N/A	cin >> arr [ i ] ;	cin >> arr [ i ] ;
8187	increment sum by arr [ i ]	N/A	N/A	sum += arr [ i ] ;	sum += arr [ i ] ;
8188	DUMMY	0.0	0.0	}	DUMMY
8189	read s then t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
8190	decrement s	N/A	N/A	s -- ;	s -- ;
8191	decrement t	N/A	N/A	t -- ;	t -- ;
8192	l = int with l = min of s and t	N/A	N/A	int l = min ( s , t ) ;	int l = min ( s, t ) ;
8193	h = int with h = max of s and t	N/A	N/A	int h = max ( s , t ) ;	int h = max ( s, t ) ;
8194	for i = l to j increment m1 by arr [ i ]	N/A	N/A	for ( int i = l ; i < h ; i ++ ) { m1 += arr [ i ] ; }	for ( int i = l ; i < j ; i ++ ) { m1 += arr [ i ] ; }
8195	print min of m1 and sum - m1	N/A	N/A	cout << min ( m1 , sum - m1 ) << " \n " ;	cout << min ( m1, sum - m1 ) << endl ;
8196	DUMMY	0.0	0.0	}	DUMMY
8197	DUMMY	0.0	0.0	int main() {	DUMMY
8198	declare integer variables n , m , u , v , x and y	N/A	N/A	int n , m , u , v , x , y ;	int n, m, u, v, x, y ;
8199	read user input to n	N/A	N/A	cin >> n ;	cin >> n ;
8200	a is a new array of integers with size 105	N/A	N/A	int a [ 105 ] = { 0 } ;	int a [ 105 ] ;
8201	start for loop from i = 1 to n inclusive , reading user input to a [ i ] on each loop	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
8202	read u and v from the user input	N/A	N/A	cin >> u >> v ;	cin >> u >> v ;
8203	if u is greater than v , swap u and v	N/A	N/A	if ( u > v ) { swap ( u , v ) ; }	if ( u > v ) swap ( u, v ) ;
8204	declare int variables m1 and m2 = 0	N/A	N/A	int m1 = 0 , m2 = 0 ;	int m1 = 0, m2 = 0 ;
8205	for integer i = u to v exclusive , change m1 to m1 + a [ i ]	N/A	N/A	for ( int i = u ; i < v ; i ++ ) { m1 += a [ i ] ; }	for ( int i = u ; i < v ; i ++ ) { m1 += a [ i ] ; }
8206	start for loop from i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
8207	if i < u or i > = v , add a [ i ] to m2	N/A	N/A	if ( i < u || i >= v ) { m2 += a [ i ] ; }	if ( i < u || i >= v ) m2 += a [ i ] ;
8208	DUMMY	0.0	0.0	}	DUMMY
8209	if u = v	N/A	N/A	if ( u == v )	if ( u == v )
8210	print 0	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
8211	else	N/A	N/A	else	else
8212	print min of m1 and m2 to the standard output	N/A	N/A	cout << min ( m1 , m2 ) << endl ;	cout << min ( m1, m2 ) << endl ;
8213	DUMMY	0.0	0.0	}	DUMMY
8214	DUMMY	0.0	0.0	return 0;	DUMMY
8215	DUMMY	0.0	0.0	}	DUMMY
8216	DUMMY	0.0	0.0	int main() {	DUMMY
8217	n , s , t , len1 , len2 = int with len1 = 0 and len2 = 0 and arr = int array of size 103	N/A	N/A	int n , arr [ 103 ] , s , t , len1 = 0 , len2 = 0 ;	int arr [ 103 ], n, s, t, len1 = 0, len2 = 0 ;
8218	read n	N/A	N/A	cin >> n ;	cin >> n ;
8219	read n values into arr	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;
8220	read s then t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
8221	if s is greater then t then swap s and t	N/A	N/A	if ( s > t ) swap ( s , t ) ;	if ( s > t ) swap ( s, t ) ;
8222	for i = s - 1 to t - 1 increment len1 by arr [ i ]	N/A	N/A	for ( int i = s - 1 ; i < t - 1 ; i ++ ) len1 += arr [ i ] ;	for ( int i = s - 1 ; i < t ; i ++ ) len1 += arr [ i ] ;
8223	f = int with f = n - t + s	N/A	N/A	int f = n - t + s ;	int f = n - t + s ;
8224	tt = int with tt = t - 1	N/A	N/A	int tt = t - 1 ;	int tt = t - 1 ;
8225	loop f times	N/A	N/A	while ( f -- )	while ( f -- )
8226	if tt is even set tt to 0	N/A	N/A	if ( tt % n == 0 ) tt = 0 ;	if ( tt % 2 == 0 ) tt = 0 ;
8227	increment len2 by arr [ tt ]	N/A	N/A	len2 += arr [ tt ] ;	len2 += arr [ tt ] ;
8228	increment tt	N/A	N/A	tt ++ ;	tt ++ ;
8229	DUMMY	0.0	0.0	}	DUMMY
8230	print min of len1 and len2	N/A	N/A	cout << min ( len1 , len2 ) << endl ;	cout << min ( len1, len2 ) << endl ;
8231	DUMMY	0.0	0.0	return 0;	DUMMY
8232	DUMMY	0.0	0.0	}	DUMMY
8233	in function choose with arguments of long long integer n and long long integer m and returns a long long integer	N/A	N/A	long long int choose ( long long int n , long long int m )	long long int choose ( long long n, long long int m )
8234	ans = long long integer = 0	N/A	N/A	long long int ans = 0 ;	long long int ans = 0 ;
8235	num = long long integer = 1	N/A	N/A	long long int num = 1 ;	long long int num = 1 ;
8236	den = long long integer = 1	N/A	N/A	long long int den = 1 ;	long long int den = 1 ;
8237	for i = 0 to m exclusive	N/A	N/A	for ( long long int i = 0 ; i < m ; i ++ )	for ( long long int i = 0 ; i < m ; i ++ )
8238	num = num * ( n - i )	N/A	N/A	num *= ( n - i ) ;	num *= ( n - i ) ;
8239	num = num / ( i + 1 )	N/A	N/A	num = num / ( i + 1 ) ;	num = num / ( i + 1 ) ;
8240	DUMMY	0.0	0.0	}	DUMMY
8241	return num	N/A	N/A	return num ;	return num ;
8242	DUMMY	0.0	0.0	}	DUMMY
8243	in function isPrime with argument integer n and returns a boolean	N/A	N/A	bool isPrime ( int n )	bool isPrime ( int n )
8244	if n < = 1 , then return false	N/A	N/A	if ( n <= 1 ) return false ;	if ( n <= 1 ) return false ;
8245	if n < = 3 , then return true	N/A	N/A	if ( n <= 3 ) return true ;	if ( n <= 3 ) return true ;
8246	if n is even and n modulo 3 is 0 , then return false	N/A	N/A	if ( n % 2 == 0 || n % 3 == 0 ) return false ;	if ( n % 2 == 0 && n % 3 == 0 ) return false ;
8247	for i = 5 , where i is squared to n inclusive and i = i + 6	N/A	N/A	for ( int i = 5 ; i * i <= n ; i = i + 6 )	for ( int i = 5 ; i * i <= n ; i += 6 )
8248	if n modulo i is 0 or n modulo the result of i + 2 is 0 , then return false	N/A	N/A	if ( n % i == 0 || n % ( i + 2 ) == 0 ) return false ;	if ( n % i == 0 || n % ( i + 2 ) == 0 ) return false ;
8249	DUMMY	0.0	0.0	}	DUMMY
8250	return true	N/A	N/A	return true ;	return true ;
8251	DUMMY	0.0	0.0	}	DUMMY
8252	in function gcd with arguments of long long integer a and long long integer b and returns a long long integer	N/A	N/A	long long int gcd ( long long int a , long long int b )	long long int gcd ( long long int a, long long integer b )
8253	if a is 0	N/A	N/A	if ( a == 0 )	if ( a == 0 )
8254	return b	N/A	N/A	return b ;	return b ;
8255	else	N/A	N/A	else	else
8256	return the result of calling gcd with arguments of b modulo a and a	N/A	N/A	return gcd ( b % a , a ) ;	return gcd ( b % a, a ) ;
8257	DUMMY	0.0	0.0	}	DUMMY
8258	DUMMY	0.0	0.0	}	DUMMY
8259	DUMMY	0.0	0.0	int main() {	DUMMY
8260	i , j , k , n , m , t , c = long long integers	N/A	N/A	long long int i , j , k , n , m , t , c ;	long long int i, j, k, n, m, t, c ;
8261	read n	N/A	N/A	cin >> n ;	cin >> n ;
8262	d = long long integer vector of size n	N/A	N/A	vector < long long int > d ( n ) ;	vector < long long int > d ( n ) ;
8263	for i = 0 to n exclusive , read d [ i ]	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { cin >> d [ i ] ; } ;	for ( i = 0 ; i < n ; i ++ ) cin >> d [ i ] ;
8264	s = long long integer	N/A	N/A	long long int s ;	long long int s ;
8265	read s , t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
8266	if s > t	N/A	N/A	if ( s > t )	if ( s > t )
8267	m = s	N/A	N/A	m = s ;	m = s ;
8268	s = t	N/A	N/A	s = t ;	s = t ;
8269	t = m	N/A	N/A	t = m ;	t = m ;
8270	DUMMY	0.0	0.0	}	DUMMY
8271	ans1 = long long integer = 0 , ans2 = long long integer = 0	N/A	N/A	long long int ans1 = 0 , ans2 = 0 ;	long long int ans1 = 0, ans2 = 0 ;
8272	for i = s - 1 to t - 1 exclusive , then ans1 = ans1 + d [ i ]	N/A	N/A	for ( i = s - 1 ; i < t - 1 ; i ++ ) { ans1 += d [ i ] ; }	for ( long long int i = s - 1 ; i < t - 2 ; i ++ ) { ans1 += d [ i ] ; }
8273	i = t - 1	N/A	N/A	i = t - 1 ;	i = t - 1 ;
8274	while i is not s - 1	N/A	N/A	while ( i != s - 1 )	while ( i!= s - 1 )
8275	ans2 = ans2 + d [ i ]	N/A	N/A	ans2 += d [ i ] ;	ans2 += d [ i ] ;
8276	increase i by 1	N/A	N/A	i ++ ;	i ++ ;
8277	if i is n , then i = 0	N/A	N/A	if ( i == n ) i = 0 ;	if ( i == n ) i = 0 ;
8278	DUMMY	0.0	0.0	}	DUMMY
8279	print the lower value between ans1 and ans2	N/A	N/A	cout << min ( ans1 , ans2 ) << endl ;	cout << min ( ans1, ans2 ) << endl ;
8280	DUMMY	0.0	0.0	return 0;	DUMMY
8281	DUMMY	0.0	0.0	}	DUMMY
8282	DUMMY	0.0	0.0	int main() {	DUMMY
8283	declare long longs i , x , j , y , tn = 1 , ans = 0 , long long array ar size 100000	N/A	N/A	long long ar [ 100000 ] , i , x , j , y , tn = 1 , ans = 0 ;	long long ar [ 100000 ], i, x, j, y, tn = 1, ans = 0 ;
8284	declare n , m as integers	N/A	N/A	int n , m ;	int n, m ;
8285	declare tc as long long	N/A	N/A	long long tc ;	long long tc ;
8286	read n	N/A	N/A	cin >> n ;	cin >> n ;
8287	declare v , v1 as long long vectors	N/A	N/A	vector < long long > v , v1 ;	vector < long long > v, v1 ;
8288	add 0 to end of v	N/A	N/A	v . push_back ( 0 ) ;	v. push_back ( 0 ) ;
8289	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
8290	read x	N/A	N/A	cin >> x ;	cin >> x ;
8291	add x to end of v	N/A	N/A	v . push_back ( x ) ;	v. push_back ( x ) ;
8292	DUMMY	0.0	0.0	}	DUMMY
8293	let v1 be v	N/A	N/A	v1 = v ;	v1 = v ;
8294	for i = 1 to size of v exclusive , increment v [ i ] by v [ i - 1 ]	N/A	N/A	for ( i = 1 ; i < v . size ( ) ; i ++ ) v [ i ] += v [ i - 1 ] ;	for ( int i = 1 ; i < v. size ( ) ; i ++ ) v [ i ] += v [ ( i - 1 ] ) ;
8295	read x read y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
8296	if x is greater than y , swap values between x and y	N/A	N/A	if ( x > y ) swap ( x , y ) ;	if ( x > y ) swap ( x, y ) ;
8297	if x is y	N/A	N/A	if ( x == y )	if ( x == y )
8298	print 0 , newline	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
8299	DUMMY	0.0	0.0	return 0;	DUMMY
8300	DUMMY	0.0	0.0	}	DUMMY
8301	declare integer t1 = v [ y - 1 ] - v [ x - 1 ]	N/A	N/A	int t1 = v [ y - 1 ] - v [ x - 1 ] ;	int t1 = v [ y - 1 ] - v [ x - i ] ;
8302	declare integer t2 = v [ size of v - 1 ] - v [ y ] + v1 [ y ] + v [ x - 1 ]	N/A	N/A	int t2 = v [ v . size ( ) - 1 ] - v [ y ] + v1 [ y ] + v [ x - 1 ] ;	int t2 = v [ ( int ) v. size ( ) - 1 ] - v [ y ] + v1 [ x ] + V [ x - 1 + 1 ] ;
8303	print minimum of t1 and t2 , newline	N/A	N/A	cout << min ( t1 , t2 ) << endl ;	cout << min ( t1, t2 ) << endl ;
8304	DUMMY	0.0	0.0	return 0;	DUMMY
8305	DUMMY	0.0	0.0	}	DUMMY
8306	let N be int	N/A	N/A	int N ;	int N ;
8307	let x , s and t = int	N/A	N/A	int x , s , t ;	int x, s, t ;
8308	let d be vector of int	N/A	N/A	vector < int > d ;	vector < int > d ;
8309	DUMMY	0.0	0.0	int main() {	DUMMY
8310	read N	N/A	N/A	cin >> N ;	cin >> N ;
8311	read x and d . push_back of x N times exclusive	N/A	N/A	for ( int i = 0 ; i < N ; ++ i ) cin >> x , d . push_back ( x ) ;	for ( int i = 0 ; i < N ; i ++ ) cin >> x, d. push_back ( x ) ;
8312	read s and t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
8313	if decremented s is greater than decremented t then swap s and t	N/A	N/A	if ( ( -- s ) > ( -- t ) ) swap ( s , t ) ;	if ( s > t ) swap ( s, t ) ;
8314	let d1 be integer set to 0	N/A	N/A	int d1 = 0 ;	int d1 = 0 ;
8315	add d of i to d1 i times from s to t exclusive	N/A	N/A	for ( int i = s ; i < t ; ++ i ) d1 += d [ i ] ;	for ( int i = s ; i < t ; i ++ ) { d1 += d ( i ) ; }
8316	let d2 be integer set to 0	N/A	N/A	int d2 = 0 ;	int d2 = 0 ;
8317	add d of i to d2 i times from t to N exclusive	N/A	N/A	for ( int i = t ; i < N ; ++ i ) d2 += d [ i ] ;	for ( int i = t ; i < N ; i ++ ) { d2 += d ( i ) ; }
8318	add d of i to d2 i times from 0 to s exclusive	N/A	N/A	for ( int i = 0 ; i < s ; ++ i ) d2 += d [ i ] ;	for ( int i = 0 ; i < s ; i ++ ) { d2 += d ( i ) ; }
8319	print min of d1 and d2	N/A	N/A	cout << min ( d1 , d2 ) << endl ;	cout << min ( d1, d2 ) << endl ;
8320	DUMMY	0.0	0.0	return 0;	DUMMY
8321	DUMMY	0.0	0.0	}	DUMMY
8322	create string s	N/A	N/A	string s ;	string s ;
8323	create integers i and j , and an array of integers arr with 10000 elements	N/A	N/A	int i , j , arr [ 10000 ] ;	int arr [ 10000 ], i, j ;
8324	DUMMY	0.0	0.0	int main() {	DUMMY
8325	create integers a , b , c , d , t , cnt and cn where cnt and cn = 0	N/A	N/A	int a , b , c , d , t , cnt = 0 , cn = 0 ;	int a, b, c, d, t, cnt = 0, cn = 0 ;
8326	read from the input to t	N/A	N/A	cin >> t ;	cin >> t ;
8327	in a for loop , change k from 1 to t inclusive , reading variable arr [ k ] from the input	N/A	N/A	for ( int k = 1 ; k <= t ; k ++ ) { cin >> arr [ k ] ; }	for ( int k = 1 ; k <= t ; k ++ ) cin >> arr [ k ] ;
8328	read variables a and b from the input	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
8329	if a is greater than b , swap a and b	N/A	N/A	if ( a > b ) { swap ( a , b ) ; }	if ( a > b ) swap ( a, b ) ;
8330	in the for loop , change i from a to b exclusive , increasing cnt by arr [ i ]	N/A	N/A	for ( i = a ; i < b ; i ++ ) { cnt += arr [ i ] ; }	for ( int i = a ; i < b ; i ++ ) cnt += arr [ i ] ;
8331	start for loop with i = b , incrementing i by 1	N/A	N/A	for ( i = b ; ; i ++ )	for ( int i = b ; ; i ++ )
8332	if i = a , stop the loop	N/A	N/A	if ( i == a ) break ;	if ( i == a ) break ;
8333	change cn to cn + arr [ i ]	N/A	N/A	cn += arr [ i ] ;	cn += arr [ i ] ;
8334	if i = t , set i to 0	N/A	N/A	if ( i == t ) { i = 0 ; }	if ( i == t ) i = 0 ;
8335	DUMMY	0.0	0.0	}	DUMMY
8336	if cnt is greater than cn	N/A	N/A	if ( cnt > cn )	if ( cnt > cn )
8337	print cn to the standard output	N/A	N/A	cout << cn << endl ;	cout << cn << endl ;
8338	else	N/A	N/A	else	else
8339	print cnt	N/A	N/A	cout << cnt << endl ;	cout << cnt << endl ;
8340	DUMMY	0.0	0.0	}	DUMMY
8341	DUMMY	0.0	0.0	return 0;	DUMMY
8342	DUMMY	0.0	0.0	}	DUMMY
8343	DUMMY	0.0	0.0	int main() {	DUMMY
8344	n , s , t = integers , arr = integer array of size 100	N/A	N/A	int n , arr [ 100 ] , s , t ;	int n, s, t, arr [ 100 ] ;
8345	read n	N/A	N/A	cin >> n ;	cin >> n ;
8346	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;	for ( int i = 0 ; i < n ; i ++ )
8347	read s , t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
8348	m1 = integer = lower value between s , t	N/A	N/A	int m1 = min ( s , t ) ;	int m1 = min ( s, t ) ;
8349	m2 = integer = bigger value between s , t	N/A	N/A	int m2 = max ( s , t ) ;	int m2 = max ( s, t ) ;
8350	decrease m1 by 1	N/A	N/A	m1 -- ;	m1 -- ;
8351	decrease m2 by 1	N/A	N/A	m2 -- ;	m2 -- ;
8352	R1 = integer = 0 , R2 = integer = 0	N/A	N/A	int R1 = 0 , R2 = 0 ;	int R1 = 0, R2 = 0 ;
8353	for i = m1 to m2 , then R1 = R1 + arr [ i ]	N/A	N/A	for ( int i = m1 ; i < m2 ; i ++ ) R1 += arr [ i ] ;	for ( int i = m1 ; i <= m2 ; i ++ ) { R1 += arr [ i ] ; }
8354	for i = m2 to mn , then R2 = R1 + arr [ i ]	N/A	N/A	for ( int i = m2 ; i < n ; i ++ ) R2 += arr [ i ] ;	for ( int i = m2 ; i <= mn ; i ++ ) { R2 += arr [ i ] ; }
8355	for i = 0 to m1 , then R2 = R2 + arr [ i ]	N/A	N/A	for ( int i = 0 ; i < m1 ; i ++ ) R2 += arr [ i ] ;	for ( int i = 0 ; i < m1 ; i ++ ) { R2 += arr [ i ] ; }
8356	R = integer = lower value between R2 and R1	N/A	N/A	int R = min ( R2 , R1 ) ;	int R = min ( R2, R1 ) ;
8357	print R	N/A	N/A	cout << R << endl ;	cout << R << endl ;
8358	DUMMY	0.0	0.0	return 0;	DUMMY
8359	DUMMY	0.0	0.0	}	DUMMY
8360	declare array of integers arr with size 10005	N/A	N/A	int arr [ 10005 ] ;	int arr [ 10005 ] ;
8361	DUMMY	0.0	0.0	int main() {	DUMMY
8362	create int n	N/A	N/A	int n ;	int n ;
8363	read n	N/A	N/A	cin >> n ;	cin >> n ;
8364	for i = 0 to i = n - 1 read arr [ i + 1 ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i + 1 ] ; }	for ( int i = 0 ; i <= n - 1 ; i ++ ) cin >> arr [ i + 1 ] ;
8365	let s and t be integers	N/A	N/A	int s , t ;	int s, t ;
8366	read s and t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
8367	if s is greater than t then swap s and t	N/A	N/A	if ( s > t ) { swap ( s , t ) ; }	if ( s > t ) swap ( s, t ) ;
8368	create integer aa and set it to 0	N/A	N/A	int aa = 0 ;	int aa = 0 ;
8369	for i = s to i = t exclusive set aa to aa + arr [ i ]	N/A	N/A	for ( int i = s ; i < t ; i ++ ) { aa += arr [ i ] ; }	for ( int i = s ; i < t ; i ++ ) { aa += arr [ i ] ; }
8370	create integer bb = 0	N/A	N/A	int bb = 0 ;	int bb = 0 ;
8371	for i = 1 to i = t exclusive assign bb + arr [ i ] to bb	N/A	N/A	for ( int i = 1 ; i < s ; i ++ ) { bb += arr [ i ] ; }	for ( int i = 1 ; i < t ; i ++ ) bb += arr [ i ] ;
8372	for i = t to i = n do bb = bb + arr [ i ]	N/A	N/A	for ( int i = t ; i <= n ; i ++ ) { bb += arr [ i ] ; }	for ( int i = t ; i <= n ; i ++ ) bb += arr [ i ] ;
8373	print min of aa and bb	N/A	N/A	cout << min ( aa , bb ) << endl ;	cout << min ( aa, bb ) << endl ;
8374	DUMMY	0.0	0.0	}	DUMMY
8375	create constant integer maxn with maxn = 105	N/A	N/A	const int maxn = 105 ;	const int maxn = 105 ;
8376	create integers n , s , t , create integer array d with size maxn	N/A	N/A	int n , d [ maxn ] , s , t ;	int n, s, d [ maxn ], t ;
8377	DUMMY	0.0	0.0	int main() {	DUMMY
8378	read n	N/A	N/A	cin >> n ;	cin >> n ;
8379	for i = 1 to n inclusive , read d [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> d [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> d [ i ] ;
8380	read s read t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
8381	create integers clock , revert , i with clock = 0 , revert = 0	N/A	N/A	int clock = 0 , revert = 0 , i ;	int clock = 0, revert = 1, i ;
8382	create integers front , tail , with front = minimum of s and t , tail = maximum of s and t	N/A	N/A	int front = min ( s , t ) , tail = max ( s , t ) ;	int front = min ( s, t ), tail = max ( s. begin ( ), t. end ( ) ) ;
8383	for i = front to tail exclusive , increment clock by d [ i ]	N/A	N/A	for ( i = front ; i < tail ; i ++ ) { clock += d [ i ] ; }	for ( i = front ; i < tail ; i ++ ) { clock += d [ i ] ; }
8384	for i = tail to i is not front , incrementing i	N/A	N/A	for ( i = tail ; i != front ; i ++ )	for ( int i = tail ; i!= front ; i ++ )
8385	if i is greater than n , set i to i % n	N/A	N/A	if ( i > n ) i %= n ;	if ( i > n ) i = i % n ;
8386	if i is front , break loop	N/A	N/A	if ( i == front ) break ;	if ( i == front ) break ;
8387	increment revert by d [ i ]	N/A	N/A	revert += d [ i ] ;	revers += d [ i ] ;
8388	DUMMY	0.0	0.0	}	DUMMY
8389	print minimum of clock and revert print newline	N/A	N/A	cout << min ( clock , revert ) << endl ;	cout << min ( clock, revert ) << endl ;
8390	DUMMY	0.0	0.0	}	DUMMY
8391	DUMMY	0.0	0.0	int main() {	DUMMY
8392	declare int variables n , s , t , sum , res and mini with sum , res and mini = 0 , and an array of integers d with 100 elements	N/A	N/A	int n , d [ 100 ] , s , t , sum = 0 , res = 0 , mini = 0 ;	int n, s, d [ 100 ], t, sum = 0, res = 0 and mini = 0 ;
8393	read n	N/A	N/A	cin >> n ;	cin >> n ;
8394	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
8395	read d [ i ]	N/A	N/A	cin >> d [ i ] ;	cin >> d [ i ] ;
8396	increase sum by d [ i ]	N/A	N/A	sum += d [ i ] ;	sum += d [ i ] ;
8397	DUMMY	0.0	0.0	}	DUMMY
8398	read input to s and t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
8399	for i from min of s - 1 and t - 1 to max of t - 1 and s - 1 exclusive , add d [ i ] to res	N/A	N/A	for ( int i = min ( s - 1 , t - 1 ) ; i < max ( t - 1 , s - 1 ) ; i ++ ) { res += d [ i ] ; }	for ( int i = min ( s - 1, t - 1 ) ; i < max ( t - i, s ) - 1 ; i ++ ) res += d [ i ] ;
8400	change mini to min of res and sum - res	N/A	N/A	mini = min ( res , sum - res ) ;	mini = min ( res, sum - res ) ;
8401	print mini	N/A	N/A	cout << mini << endl ;	cout << mini << endl ;
8402	DUMMY	0.0	0.0	return 0;	DUMMY
8403	DUMMY	0.0	0.0	}	DUMMY
8404	DUMMY	0.0	0.0	int main() {	DUMMY
8405	create int n	N/A	N/A	int n ;	int n ;
8406	read n	N/A	N/A	cin >> n ;	cin >> n ;
8407	create int vector x	N/A	N/A	vector < int > x ;	vector < int > x ;
8408	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
8409	let int m	N/A	N/A	int m ;	int m ;
8410	read m	N/A	N/A	cin >> m ;	cin >> m ;
8411	add m to the end of x	N/A	N/A	x . push_back ( m ) ;	x. push_back ( m ) ;
8412	DUMMY	0.0	0.0	}	DUMMY
8413	let ints s and t	N/A	N/A	int s , t ;	int s, t ;
8414	read s and t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
8415	create ints count1 = 0 and count2 = 0	N/A	N/A	int count1 = 0 , count2 = 0 ;	int count1 = 0, count2 = 0 ;
8416	set s to s + n	N/A	N/A	s = s + n ;	s += n ;
8417	for i = s - 1 to infinity	N/A	N/A	for ( int i = s - 1 ; ; i ++ )	for ( int i = s - 1 ; ; i ++ )
8418	if i modulo n is equal to t - 1	N/A	N/A	if ( i % n == t - 1 )	if ( i % n == t - 1 )
8419	break loop	N/A	N/A	break ;	break ;
8420	otherwise	N/A	N/A	else	else
8421	set count1 to count1 + x [ i % n ]	N/A	N/A	count1 = count1 + x [ i % n ] ;	count1 += x [ i % n ] ;
8422	DUMMY	0.0	0.0	}	DUMMY
8423	decrease s by 1	N/A	N/A	s -- ;	s -- ;
8424	for i = s - 1 to infinity decreasing by 1 each time	N/A	N/A	for ( int i = s - 1 ; ; i -- )	for ( int i = s - 1 ; ; i -- )
8425	if i modulo n is equal to t - 1	N/A	N/A	if ( i % n == t - 1 )	if ( i % n == t - 1 )
8426	set count2 to count2 + x [ i % n ]	N/A	N/A	count2 = count2 + x [ i % n ] ;	count2 += x [ i % n ] ;
8427	break loop	N/A	N/A	break ;	break ;
8428	otherwise do	N/A	N/A	else	else
8429	set count2 to count2 + x [ i % n ]	N/A	N/A	count2 = count2 + x [ i % n ] ;	count2 += x [ i % n ] ;
8430	DUMMY	0.0	0.0	}	DUMMY
8431	if count1 is less than or equal to count2	N/A	N/A	if ( count1 <= count2 )	if ( count1 <= count2 )
8432	print count1	N/A	N/A	cout << count1 << endl ;	cout << count1 << endl ;
8433	otherwise do	N/A	N/A	else	else
8434	print count2	N/A	N/A	cout << count2 << endl ;	cout << count2 << endl ;
8435	DUMMY	0.0	0.0	return 0;	DUMMY
8436	DUMMY	0.0	0.0	}	DUMMY
8437	DUMMY	0.0	0.0	int main() {	DUMMY
8438	create ints n , ans1 = 0 , ans2 = 0 , f , t , and tot = 0 and int array d of size 105	N/A	N/A	int n , ans1 = 0 , ans2 = 0 , d [ 105 ] , f , t , tot = 0 ;	int n, d [ 105 ], ans1 = 1, ans2 = 0, f, t, tot = 0 ;
8439	read n	N/A	N/A	cin >> n ;	cin >> n ;
8440	for i = 1 to n	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
8441	read d [ i ]	N/A	N/A	cin >> d [ i ] ;	cin >> d [ i ] ;
8442	set tot to tot + d [ i ]	N/A	N/A	tot += d [ i ] ;	tot += d [ i ] ;
8443	DUMMY	0.0	0.0	}	DUMMY
8444	read f and t	N/A	N/A	cin >> f >> t ;	cin >> f >> t ;
8445	if f is greater than t , swap the values of f and t	N/A	N/A	if ( f > t ) swap ( f , t ) ;	if ( f > t ) swap ( f, t ) ;
8446	for i = f to t exclusive , set ans1 to ans1 + d [ i ]	N/A	N/A	for ( int i = f ; i < t ; i ++ ) ans1 += d [ i ] ;	for ( int i = f ; i < t ; i ++ ) ans1 += d [ i ] ;
8447	set ans2 to tot - ans1	N/A	N/A	ans2 = tot - ans1 ;	ans2 = tot - ans1 ;
8448	print the min of ans1 and ans2	N/A	N/A	cout << min ( ans1 , ans2 ) << ' \n ' ;	cout << min ( ans1, ans2 ) << endl ;
8449	DUMMY	0.0	0.0	}	DUMMY
8450	mod = long long = 1000000007	N/A	N/A	const long long int MOD = 1000000007 ;	long long mod = 1000000007 ;
8451	N , M , K , H , W , L , R = long long integer	N/A	N/A	long long int N , M , K , H , W , L , R ;	long long int N, M, K, H, W, L, R ;
8452	DUMMY	0.0	0.0	int main() {	DUMMY
8453	read N	N/A	N/A	cin >> N ;	cin >> N ;
8454	v = integer vector of size N + 1	N/A	N/A	vector < int > v ( N + 1 ) ;	vector < int > v ( N + 1 ) ;
8455	for i = 1 to N inclusive , then read v [ i ]	N/A	N/A	for ( int i = 1 ; i <= N ; i ++ ) cin >> v [ i ] ;	for ( int i = 1 ; i <= N ; i ++ ) cin >> v [ i ] ;
8456	M = sum of all values of v	N/A	N/A	M = accumulate ( v . begin ( ) , v . end ( ) , 0 ) ;	M = v. size ( ) + 1 ;
8457	for i = 1 to N inclusive , v [ i ] = v [ i ] + v [ i - 1 ]	N/A	N/A	for ( int i = 1 ; i <= N ; i ++ ) v [ i ] += v [ i - 1 ] ;	for ( long long int i = 1 ; i <= N ; i ++ ) v [ i ] += V [ i - 1 ] ;
8458	read L , R	N/A	N/A	cin >> L >> R ;	cin >> L >> R ;
8459	if L > R swap the values of L , R	N/A	N/A	if ( L > R ) swap ( L , R ) ;	if ( L > R ) swap ( L, R ) ;
8460	print the result of the lower value between v [ R - 1 ] - v [ L - 1 ] and M in integer form - v [ R - 1 ] + v [ L - 1 ]	N/A	N/A	cout << min ( v [ R - 1 ] - v [ L - 1 ] , ( int ) M - v [ R - 1 ] + v [ L - 1 ] ) << endl ;	cout << min ( ( v [ R - 1 ] - v [ L - 2 ] ), ( M ) - ( V [ R- 1 ] + v [ M - i ] ) ) << " \n " ;
8461	DUMMY	0.0	0.0	return 0;	DUMMY
8462	DUMMY	0.0	0.0	}	DUMMY
8463	DUMMY	0.0	0.0	int main() {	DUMMY
8464	create character array c with size 4 by 4	N/A	N/A	char c [ 4 ] [ 4 ] ;	char c [ 4 ] [ 4 + 1 ] ;
8465	for i = 0 to 4 exclusive	N/A	N/A	for ( int i = 0 ; i < 4 ; i ++ )	for ( int i = 0 ; i < 4 ; i ++ )
8466	for j = 0 to 4 exclusive read c [ i ] [ j ]	N/A	N/A	for ( int j = 0 ; j < 4 ; j ++ ) { cin >> c [ i ] [ j ] ; }	for ( int j = 0 ; j < 4 ; j ++ ) { cin >> c [ i ] [ j ] ; }
8467	DUMMY	0.0	0.0	}	DUMMY
8468	declare integers x , y , z and v = 0	N/A	N/A	int x = 0 , y = 0 , z = 0 , v = 0 ;	int x, y, z, v = 0 ;
8469	in the infinite loop	N/A	N/A	while ( true )	while ( 1 )
8470	for j = z to z + 2 exclusive	N/A	N/A	for ( int j = z ; j < z + 2 ; j ++ )	for ( int j = z ; j < z + 2 ; j ++ )
8471	if c [ v ] [ j ] = ' # ' increment x	N/A	N/A	if ( c [ v ] [ j ] == ' # ' ) x ++ ;	if ( c [ v ] [ j ] =='#') x ++ ;
8472	if c [ v ] [ j ] = ' . ' increment y	N/A	N/A	if ( c [ v ] [ j ] == ' . ' ) y ++ ;	if ( c [ v ] [ j ] == '.') y ++ ;
8473	if c [ v + 1 ] [ j ] = ' # ' increment x	N/A	N/A	if ( c [ v + 1 ] [ j ] == ' # ' ) x ++ ;	if ( c [ v + 1 ] [ j ] =='#') x ++ ;
8474	if c [ v + 1 ] [ j ] = ' . ' increment y	N/A	N/A	if ( c [ v + 1 ] [ j ] == ' . ' ) y ++ ;	if ( c [ v + 1 ] [ j ] == '.') y ++ ;
8475	DUMMY	0.0	0.0	}	DUMMY
8476	if x > y or y is greater than x	N/A	N/A	if ( x > y || y > x )	if ( x > y || y > x )
8477	print " YES "	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
8478	DUMMY	0.0	0.0	return 0;	DUMMY
8479	DUMMY	0.0	0.0	}	DUMMY
8480	set x to 0	N/A	N/A	x = 0 ;	x = 0 ;
8481	set y to 0	N/A	N/A	y = 0 ;	y = 0 ;
8482	increase z by one	N/A	N/A	z ++ ;	z ++ ;
8483	if z = 3	N/A	N/A	if ( z == 3 )	if ( z == 3 )
8484	increase v by one	N/A	N/A	v ++ ;	v ++ ;
8485	set z to 0	N/A	N/A	z = 0 ;	z = 0 ;
8486	DUMMY	0.0	0.0	}	DUMMY
8487	if v = 3 , break the loop	N/A	N/A	if ( v == 3 ) { break ; }	if ( v == 3 ) break ;
8488	DUMMY	0.0	0.0	}	DUMMY
8489	print " NO "	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
8490	DUMMY	0.0	0.0	}	DUMMY
8491	create 2d boolean array a with size 4 by 4	N/A	N/A	bool a [ 4 ] [ 4 ] ;	bool a [ 4 ] [ 4 + 1 ] ;
8492	declare f with no arguments , returning boolean	N/A	N/A	bool f ( )	bool f ( )
8493	for i = 0 to 3 exclusive	N/A	N/A	for ( int i = 0 ; i < 3 ; i ++ )	for ( int i = 0 ; i < 3 ; i ++ )
8494	for j = 0 to 3 exclusive	N/A	N/A	for ( int j = 0 ; j < 3 ; j ++ )	for ( int j = 0 ; j < 3 ; j ++ )
8495	create boolean bol with bol = a [ i ] [ j ]	N/A	N/A	bool bol = a [ i ] [ j ] ;	bool bol = a [ i ] [ j ] ;
8496	if a [ i + 1 ] [ j ] is bol and a [ i + 1 ] [ j + 1 ] is bol and a [ i ] [ j + 1 ] is bol , return true from function	N/A	N/A	if ( a [ i + 1 ] [ j ] == bol && a [ i + 1 ] [ j + 1 ] == bol && a [ i ] [ j + 1 ] == bol ) { return true ; }	if ( ( a [ i + 1 ] [ j ] == bol ) && ( ( b [ i ] [ 1 ] ] j + 2 ] == ( bol ) ) &&! ( ( cmp [ j + i ] ] ) ) ) { return true ; }
8497	DUMMY	0.0	0.0	}	DUMMY
8498	DUMMY	0.0	0.0	}	DUMMY
8499	return false from function	N/A	N/A	return false ;	return false ;
8500	DUMMY	0.0	0.0	}	DUMMY
8501	DUMMY	0.0	0.0	int main() {	DUMMY
8502	create character h	N/A	N/A	char h ;	char h ;
8503	for i = 0 to 4 exclusive	N/A	N/A	for ( int i = 0 ; i < 4 ; i ++ )	for ( int i = 0 ; i < 4 ; i ++ )
8504	for j = 0 to 4 exclusive	N/A	N/A	for ( int j = 0 ; j < 4 ; j ++ )	for ( int j = 0 ; j < 4 ; j ++ )
8505	set h to read character	N/A	N/A	h = getchar ( ) ;	h = getchar ( ) ;
8506	if h is ' # '	N/A	N/A	if ( h == ' # ' )	if ( h =='#')
8507	set a [ i ] [ j ] to true	N/A	N/A	a [ i ] [ j ] = true ;	a [ i ] [ j ] = true ;
8508	else	N/A	N/A	else	else
8509	set a [ i ] [ j ] to false	N/A	N/A	a [ i ] [ j ] = false ;	a [ i ] [ j ] = false ;
8510	DUMMY	0.0	0.0	}	DUMMY
8511	set h to read character	N/A	N/A	h = getchar ( ) ;	h = getchar ( ) ;
8512	DUMMY	0.0	0.0	}	DUMMY
8513	for i = 0 to 4 exclusive	N/A	N/A	for ( int i = 0 ; i < 4 ; i ++ )	for ( int i = 0 ; i < 4 ; i ++ )
8514	for j = 0 to 4 exclusive	N/A	N/A	for ( int j = 0 ; j < 4 ; j ++ )	for ( int j = 0 ; j < 4 ; j ++ )
8515	set a [ i ] [ j ] to false if a [ i ] [ j ] is true , else true	N/A	N/A	a [ i ] [ j ] = ( a [ i ] [ j ] == true ? false : true ) ;	a [ i ] [ j ] = ( a [ i - j ] )? false : true ;
8516	if result of run f is true	N/A	N/A	if ( f ( ) == true )	if ( f ( ) )
8517	print " YES " print newline	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
8518	DUMMY	0.0	0.0	return 0;	DUMMY
8519	DUMMY	0.0	0.0	}	DUMMY
8520	set a [ i ] [ j ] to false if a [ i ] [ j ] is true , else true	N/A	N/A	a [ i ] [ j ] = ( a [ i ] [ j ] == true ? false : true ) ;	a [ i ] [ j ] = false? false : true ;
8521	DUMMY	0.0	0.0	}	DUMMY
8522	DUMMY	0.0	0.0	}	DUMMY
8523	print " NO " print newline	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
8524	DUMMY	0.0	0.0	return 0;	DUMMY
8525	DUMMY	0.0	0.0	}	DUMMY
8526	DUMMY	0.0	0.0	int main() {	DUMMY
8527	create string vector vs initialized with 4	N/A	N/A	vector < string > vs ( 4 ) ;	vector < string > vs ( 4 ) ;
8528	for i = 0 to 4 exclusive , read vs [ i ]	N/A	N/A	for ( size_t i = 0 ; i < 4 ; ++ i ) { cin >> vs [ i ] ; }	for ( int i = 0 ; i < 4 ; i ++ ) { cin >> vs [ i ] ; }
8529	create boolean pass with pass = false	N/A	N/A	bool pass = false ;	bool pass = false ;
8530	for top = 0 to top is less than or equal to 2 and not pass , incrementing top	N/A	N/A	for ( size_t top = 0 ; top <= 2 && ! pass ; ++ top )	for ( int top = 0 ; top <= 2 &&! pass ; top ++ )
8531	for left = 0 to 2 inclusive	N/A	N/A	for ( size_t left = 0 ; left <= 2 ; ++ left )	for ( int left = 0 ; left <= 2 ; left ++ )
8532	create integer dot with dot = 0	N/A	N/A	int dot = 0 ;	int dot = 0 ;
8533	for r = 0 to 2 exclusive	N/A	N/A	for ( size_t r = 0 ; r < 2 ; ++ r )	for ( int r = 0 ; r < 2 ; r ++ )
8534	for c = 0 to 2 exclusive	N/A	N/A	for ( size_t c = 0 ; c < 2 ; ++ c )	for ( int c = 0 ; c < 2 ; c ++ )
8535	if vs [ top + r ] [ left + c ] is ' . ' , increment dot by 1	N/A	N/A	if ( vs [ top + r ] [ left + c ] == ' . ' ) { dot += 1 ; }	if ( vs [ top + r ] [ left + c ] == '.') dot ++ ;
8536	DUMMY	0.0	0.0	}	DUMMY
8537	DUMMY	0.0	0.0	}	DUMMY
8538	if dot is not 2	N/A	N/A	if ( dot != 2 )	if ( dot!= 2 )
8539	set pass to true	N/A	N/A	pass = true ;	pass = true ;
8540	break loop	N/A	N/A	break ;	break ;
8541	DUMMY	0.0	0.0	}	DUMMY
8542	DUMMY	0.0	0.0	}	DUMMY
8543	DUMMY	0.0	0.0	}	DUMMY
8544	print " YES " if pass is true , else " NO " , print newline	N/A	N/A	cout << ( pass ? " YES " : " NO " ) << endl ;	cout << ( pass? " YES " : " NO " ) << endl ;
8545	DUMMY	0.0	0.0	return 0;	DUMMY
8546	DUMMY	0.0	0.0	}	DUMMY
8547	declare compute	N/A	N/A	void compute ( )	void compute ( )
8548	create 2d character array a with size 4 by 4	N/A	N/A	char a [ 4 ] [ 4 ] ;	char a [ 4 ] [ 4 } ;
8549	for i = 0 to 4 exclusive	N/A	N/A	for ( int i = 0 ; i < 4 ; i ++ )	for ( int i = 0 ; i < 4 ; i ++ )
8550	for j = 0 to 4 exclusive , read a [ i ] [ j ]	N/A	N/A	for ( int j = 0 ; j < 4 ; j ++ ) cin >> a [ i ] [ j ] ;	for ( int j = 0 ; j < 4 ; j ++ ) { cin >> a [ i ] [ j ] ; }
8551	for i = 0 to 4 exclusive	N/A	N/A	for ( int i = 0 ; i < 4 ; i ++ )	for ( int i = 0 ; i < 4 ; i ++ )
8552	for j = 0 to 4 exclusive	N/A	N/A	for ( int j = 0 ; j < 4 ; j ++ )	for ( int j = 0 ; j < 4 ; j ++ )
8553	if j is less than or equal to 2 and i is less than or equal to 2	N/A	N/A	if ( j <= 2 && i <= 2 )	if ( j <= 2 && i <= 2 )
8554	create integers hutch , dots with hutch = 0 , dots = 0	N/A	N/A	int hutch = 0 , dots = 0 ;	int hutch = 0, dots = 0 ;
8555	for k = 0 to 2 exclusive	N/A	N/A	for ( int k = 0 ; k < 2 ; k ++ )	for ( int k = 0 ; k < 2 ; k ++ )
8556	for l = 0 to 2 exclusive	N/A	N/A	for ( int l = 0 ; l < 2 ; l ++ )	for ( int l = 0 ; l < 2 ; l ++ )
8557	if a [ i + k ] [ j + l ] is ' # '	N/A	N/A	if ( a [ i + k ] [ j + l ] == ' # ' )	if ( a [ i + k ] [ j + l ] =='#')
8558	increment hutch	N/A	N/A	++ hutch ;	hutch ++ ;
8559	else	N/A	N/A	else	else
8560	increment dots	N/A	N/A	++ dots ;	dotted ++ ;
8561	DUMMY	0.0	0.0	}	DUMMY
8562	if hutch is greater than or equal to 3 or dots is greater than or equal to 3	N/A	N/A	if ( hutch >= 3 || dots >= 3 )	if ( hutch >= 3 || dots >= 3 )
8563	print " YES \ n "	N/A	N/A	cout << " YES\n " ;	cout << " YES\n " ;
8564	return from function	N/A	N/A	return ;	return ;
8565	DUMMY	0.0	0.0	}	DUMMY
8566	DUMMY	0.0	0.0	}	DUMMY
8567	DUMMY	0.0	0.0	}	DUMMY
8568	DUMMY	0.0	0.0	}	DUMMY
8569	print " NO \ n "	N/A	N/A	cout << " NO\n " ;	cout << " NO\n " ;
8570	DUMMY	0.0	0.0	}	DUMMY
8571	DUMMY	0.0	0.0	int main() {	DUMMY
8572	run compute	N/A	N/A	compute ( ) ;	compute ( ) ;
8573	DUMMY	0.0	0.0	return 0;	DUMMY
8574	DUMMY	0.0	0.0	}	DUMMY
8575	DUMMY	0.0	0.0	int main() {	DUMMY
8576	let s = array of strings of length 5	N/A	N/A	string s [ 5 ] ;	string s [ 5 ] ;
8577	for ( i = 0 to 4 exclusive ) , read ith element of array s	N/A	N/A	for ( int i = 0 ; i < 4 ; i ++ ) cin >> s [ i ] ;	for ( int i = 0 ; i < 4 ; i ++ ) cin >> s [ i ] ;
8578	for ( x = 1 to 4 exclusive )	N/A	N/A	for ( int x = 1 ; x < 4 ; x ++ )	for ( int x = 1 ; x < 4 ; x ++ )
8579	for ( y = 1 to 4 exclusive )	N/A	N/A	for ( int y = 1 ; y < 4 ; y ++ )	for ( int y = 1 ; y < 4 ; y ++ )
8580	let cnt be a integer with value assigned as 0	N/A	N/A	int cnt = 0 ;	int cnt = 0 ;
8581	for i = 0 to 2 ( exclusive )	N/A	N/A	for ( int i = 0 ; i < 2 ; i ++ )	for ( int i = 0 ; i < 2 ; i ++ )
8582	for j = 0 to 2 ( exclusive )	N/A	N/A	for ( int j = 0 ; j < 2 ; j ++ )	for ( int j = 0 ; j < 2 ; j ++ )
8583	if ( s [ x - i ] [ y - j ] is not equal to s [ x ] [ y ] ) , increase cnt value by 1	N/A	N/A	if ( s [ x - i ] [ y - j ] != s [ x ] [ y ] ) cnt ++ ;	if ( s [ x - i ] [ y - j ]!= s [ cnt [ y ] ) cnt ++ ;
8584	check if ( cnt power 2 ) , then return print YES and newline	N/A	N/A	if ( cnt ^ 2 ) return cout << " YES\n " , 0 ;	if ( cnt == 2 ) return cout << " YES " << endl, 0 ;
8585	DUMMY	0.0	0.0	}	DUMMY
8586	print NO and newline	N/A	N/A	cout << " NO\n " ;	cout << " NO " << endl ;
8587	DUMMY	0.0	0.0	return 0;	DUMMY
8588	DUMMY	0.0	0.0	}	DUMMY
8589	create constant long long mod with mod = 10e9 + 7	N/A	N/A	const long long mod = 10e9 + 7 ;	const long long mod = 10e9 + 7 ;
8590	create constant double eps with eps = 1e - 11	N/A	N/A	const double eps = 1e-11 ;	const double eps = 1e-11 ;
8591	create constant double PI with PI = 2 * acosign of 0 . 0	N/A	N/A	const double PI = 2 * acos ( 0.0 ) ;	const double PI = 2 * acos ( 0.0 ) ;
8592	DUMMY	0.0	0.0	int main() {	DUMMY
8593	create 2d character array arr of size 4 by 4	N/A	N/A	char arr [ 4 ] [ 4 ] ;	char arr [ 4 ] [ 5 ] ;
8594	for i = 0 to 4 exclusive	N/A	N/A	for ( int i = 0 ; i < 4 ; i ++ )	for ( int i = 0 ; i < 4 ; i ++ )
8595	for j = 0 to 4 exclusive , read arr [ i ] [ j ]	N/A	N/A	for ( int j = 0 ; j < 4 ; j ++ ) { cin >> arr [ i ] [ j ] ; }	for ( int j = 0 ; j < 4 ; j ++ ) { cin >> arr [ i ] [ j ] ; }
8596	DUMMY	0.0	0.0	}	DUMMY
8597	for i = 0 to 4 exclusive	N/A	N/A	for ( int i = 0 ; i < 4 ; i ++ )	for ( int i = 0 ; i < 4 ; i ++ )
8598	for j = 0 to 4 exclusive	N/A	N/A	for ( int j = 0 ; j < 4 ; j ++ )	for ( int j = 0 ; j < 4 ; j ++ )
8599	if arr [ i ] [ j ] is ' . ' or arr [ i ] [ j ] is ' # '	N/A	N/A	if ( arr [ i ] [ j ] == ' . ' or arr [ i ] [ j ] == ' # ' )	if ( strcmp ( arr [ i ] [ j ], '.') == 0 || strcmp( arr [ 1 ], j ] =='#') )
8600	if arr [ i ] [ j - 1 ] is ' # ' and j - 1 is greater than or eqaul to 0	N/A	N/A	if ( arr [ i ] [ j - 1 ] == ' # ' and j - 1 >= 0 )	if ( arr [ i ] [ j - 1 ] =='#'&& j - i >= 0 )
8601	if arr [ i - 1 ] [ j ] is ' # ' and i - 1 is greater than or equal to 0	N/A	N/A	if ( arr [ i - 1 ] [ j ] == ' # ' and i - 1 >= 0 )	if ( arr [ i - 1 ] [ j ] =='#'&& i - i >= 0 )
8602	if arr [ i - 1 ] [ j - 1 ] is ' # ' and i - 1 is greater than or equal to 0 and j - 1 is greater than or equal to 0	N/A	N/A	if ( arr [ i - 1 ] [ j - 1 ] == ' # ' and i - 1 >= 0 and j - 1 >= 0 )	if ( arr [ i ] [ j - 1 ] =='#'&& i - 1 >= 0 && j - i >= 0 )
8603	print " YES "	N/A	N/A	puts ( " YES " ) ;	puts ( " YES " ) ;
8604	DUMMY	0.0	0.0	return 0;	DUMMY
8605	DUMMY	0.0	0.0	}	DUMMY
8606	DUMMY	0.0	0.0	}	DUMMY
8607	DUMMY	0.0	0.0	}	DUMMY
8608	if arr [ i ] [ j + 1 ] is ' # ' and j + 1 is less than 4	N/A	N/A	if ( arr [ i ] [ j + 1 ] == ' # ' and j + 1 < 4 )	if ( arr [ i ] [ j + 1 ] =='#'&& j + i < 4 )
8609	if arr [ i - 1 ] [ j ] is ' # ' and i - 1 is greater than or equal to 0	N/A	N/A	if ( arr [ i - 1 ] [ j ] == ' # ' and i - 1 >= 0 )	if ( arr [ i - 1 ] [ j ] =='#'&& i - 2 >= 0 )
8610	if arr [ i - 1 ] [ j + 1 ] is ' # ' and j + 1 is less than 4 and i - 1 is greater than or equal to 0	N/A	N/A	if ( arr [ i - 1 ] [ j + 1 ] == ' # ' and j + 1 < 4 and i - 1 >= 0 )	if ( arr [ i - 1 ] [ j + 1 ] =='#'&& j + 2 < 4 && j - 1 >= 0 )
8611	print " YES "	N/A	N/A	puts ( " YES " ) ;	cout << " YES " << endl ;
8612	DUMMY	0.0	0.0	return 0;	DUMMY
8613	DUMMY	0.0	0.0	}	DUMMY
8614	DUMMY	0.0	0.0	}	DUMMY
8615	DUMMY	0.0	0.0	}	DUMMY
8616	if arr [ i ] [ j - 1 ] is ' # ' and j - 1 is greater than or equal to 0	N/A	N/A	if ( arr [ i ] [ j - 1 ] == ' # ' and j - 1 >= 0 )	if ( arr [ i ] [ j - 1 ] =='#'&& j - i >= 0 )
8617	if arr [ i + 1 ] [ j ] is ' # ' and i + 1 is less than 4	N/A	N/A	if ( arr [ i + 1 ] [ j ] == ' # ' and i + 1 < 4 )	if ( arr [ i + 1 ] [ j ] =='#'&& i + 2 < 4 )
8618	if arr [ i + 1 ] [ j - 1 ] is ' # ' and i + 1 is less than 4 and j - 1 is greater than or equal to 0	N/A	N/A	if ( arr [ i + 1 ] [ j - 1 ] == ' # ' and i + 1 < 4 and j - 1 >= 0 )	if ( ( arr [ i + 1 ] [ j - 1 ] =='#') && ( j + 1 < 4 && j - i >= 0 ) )
8619	print " YES "	N/A	N/A	puts ( " YES " ) ;	puts ( " YES " ) ;
8620	DUMMY	0.0	0.0	return 0;	DUMMY
8621	DUMMY	0.0	0.0	}	DUMMY
8622	DUMMY	0.0	0.0	}	DUMMY
8623	DUMMY	0.0	0.0	}	DUMMY
8624	if arr [ i ] [ j + 1 ] is ' # ' and j + 1 is less than 4	N/A	N/A	if ( arr [ i ] [ j + 1 ] == ' # ' and j + 1 < 4 )	if ( arr [ i ] [ j + 1 ] =='#'&& j + i < 4 )
8625	if arr [ i + 1 ] [ j ] is ' # ' and i + 1 is less than 4	N/A	N/A	if ( arr [ i + 1 ] [ j ] == ' # ' and i + 1 < 4 )	if ( arr [ i + 1 ] [ j ] =='#'&& i + 2 < 4 )
8626	if arr [ i + 1 ] [ j + 1 ] is ' # ' and i + 1 is less than 4 and j + 1 is less than 4	N/A	N/A	if ( arr [ i + 1 ] [ j + 1 ] == ' # ' and i + 1 < 4 and j + 1 < 4 )	if ( strcmp ( arr [ i + 1 ] [ j - 1 ],'#') < 4 && j + 1 < 4 )
8627	print " YES "	N/A	N/A	puts ( " YES " ) ;	puts ( " YES " ) ;
8628	DUMMY	0.0	0.0	return 0;	DUMMY
8629	DUMMY	0.0	0.0	}	DUMMY
8630	DUMMY	0.0	0.0	}	DUMMY
8631	DUMMY	0.0	0.0	}	DUMMY
8632	if arr [ i ] [ j - 1 ] is ' . ' and j - 1 is greater than or equal to 0	N/A	N/A	if ( arr [ i ] [ j - 1 ] == ' . ' and j - 1 >= 0 )	if ( arr [ i ] [ j - 1 ] == '.'&& j - i >= 0 )
8633	if arr [ i - 1 ] [ j ] is ' . ' and i - 1 is greater than or equal to 0	N/A	N/A	if ( arr [ i - 1 ] [ j ] == ' . ' and i - 1 >= 0 )	if ( arr [ i ] [ j ] == '.'&& i - 1 >= 0 )
8634	if arr [ i - 1 ] [ j - 1 ] is ' . ' and i - 1 is greater than or equal to 0 and j - 1 is greater than or equal to 0	N/A	N/A	if ( arr [ i - 1 ] [ j - 1 ] == ' . ' and i - 1 >= 0 and j - 1 >= 0 )	if ( arr [ i ] [ j - 1 ] == '.'&& i - 1 >= 0 && j - i >= 0 )
8635	print " YES "	N/A	N/A	puts ( " YES " ) ;	puts ( " YES " ) ;
8636	DUMMY	0.0	0.0	return 0;	DUMMY
8637	DUMMY	0.0	0.0	}	DUMMY
8638	DUMMY	0.0	0.0	}	DUMMY
8639	DUMMY	0.0	0.0	}	DUMMY
8640	if arr [ i ] [ j + 1 ] is ' . ' and j + 1 is less than 4	N/A	N/A	if ( arr [ i ] [ j + 1 ] == ' . ' and j + 1 < 4 )	if ( arr [ i ] [ j + 1 ] == '.'&& j + i < 4 )
8641	if arr [ i - 1 ] [ j ] is ' . ' and i - 1 is greater than or equal to 0	N/A	N/A	if ( arr [ i - 1 ] [ j ] == ' . ' and i - 1 >= 0 )	if ( arr [ i - 1 ] [ j ] == '.'&& i - 2 >= 0 )
8642	if arr [ i - 1 ] [ j + 1 ] is ' . ' and i - 1 is greater than or equal to 0 and j + 1 is less than 4	N/A	N/A	if ( arr [ i - 1 ] [ j + 1 ] == ' . ' and i - 1 >= 0 and j + 1 < 4 )	if ( arr [ i - 1 ] [ j + 1 ] == '.'&& i - 2 >= 0 && j + i < 4 )
8643	print " YES "	N/A	N/A	puts ( " YES " ) ;	cout << " YES " << endl ;
8644	DUMMY	0.0	0.0	return 0;	DUMMY
8645	DUMMY	0.0	0.0	}	DUMMY
8646	DUMMY	0.0	0.0	}	DUMMY
8647	DUMMY	0.0	0.0	}	DUMMY
8648	if arr [ i ] [ j - 1 ] is ' . ' and j - 1 is greater than or equal to 0	N/A	N/A	if ( arr [ i ] [ j - 1 ] == ' . ' and j - 1 >= 0 )	if ( arr [ i ] [ j - 1 ] == '.'&& j - i >= 0 )
8649	if arr [ i + 1 ] [ j ] is ' . ' and i + 1 is less than 4	N/A	N/A	if ( arr [ i + 1 ] [ j ] == ' . ' and i + 1 < 4 )	if ( arr [ i + 1 ] [ j ] == '.'&& i + 2 < 4 )
8650	if arr [ i + 1 ] [ j - 1 ] is ' . ' and i + 1 is less than 4 and j - 1 is greater than or equal to 0	N/A	N/A	if ( arr [ i + 1 ] [ j - 1 ] == ' . ' and i + 1 < 4 and j - 1 >= 0 )	if ( arr [ i + 1 ] [ j - 1 ] == '.'&& i + 2 < 4 && j - i >= 0 )
8651	print " YES "	N/A	N/A	puts ( " YES " ) ;	puts ( " YES " ) ;
8652	DUMMY	0.0	0.0	return 0;	DUMMY
8653	DUMMY	0.0	0.0	}	DUMMY
8654	DUMMY	0.0	0.0	}	DUMMY
8655	DUMMY	0.0	0.0	}	DUMMY
8656	if arr [ i ] [ j + 1 ] is ' . ' and j + 1 is less than 4	N/A	N/A	if ( arr [ i ] [ j + 1 ] == ' . ' and j + 1 < 4 )	if ( arr [ i ] [ j + 1 ] == '.'&& j + i < 4 )
8657	if arr [ i + 4 ] [ j ] is ' . ' and i + 1 is less than 4	N/A	N/A	if ( arr [ i + 1 ] [ j ] == ' . ' and i + 1 < 4 )	if ( arr [ i + 4 ] [ j ] == '.'&& i + 1 < 4 )
8658	if arr [ i + 1 ] [ j + 1 ] is ' . ' and i + 1 is less than 4 and j + 1 is less than 4	N/A	N/A	if ( arr [ i + 1 ] [ j + 1 ] == ' . ' and i + 1 < 4 and j + 1 < 4 )	if ( strcmp ( arr [ i + 1 ] [ j - 1 ], '.') == 0 && i + 2 < 4 && j + 1 < 4 )
8659	print " YES "	N/A	N/A	puts ( " YES " ) ;	puts ( " YES " ) ;
8660	DUMMY	0.0	0.0	return 0;	DUMMY
8661	DUMMY	0.0	0.0	}	DUMMY
8662	DUMMY	0.0	0.0	}	DUMMY
8663	DUMMY	0.0	0.0	}	DUMMY
8664	DUMMY	0.0	0.0	}	DUMMY
8665	DUMMY	0.0	0.0	}	DUMMY
8666	DUMMY	0.0	0.0	}	DUMMY
8667	print " NO "	N/A	N/A	puts ( " NO " ) ;	puts ( " NO " ) ;
8668	DUMMY	0.0	0.0	}	DUMMY
8669	DUMMY	0.0	0.0	int main() {	DUMMY
8670	let grid = array of strings of length 4	N/A	N/A	string grid [ 4 ] ;	string grid [ 4 ] ;
8671	read the 0th element of grid , 1st element of grid , 2nd element of grid and 3rd element of grid	N/A	N/A	cin >> grid [ 0 ] >> grid [ 1 ] >> grid [ 2 ] >> grid [ 3 ] ;	for ( int i = 0 ; i < grid. size ( ) ; i ++ ) { cin >> grid [ i ] [ i + 1 ] >> grid. 2 ] ; }
8672	boolean found is equal to false	N/A	N/A	bool found = false ;	bool found = false ;
8673	for i = 0 to 3 exclusive	N/A	N/A	for ( int i = 0 ; i < 3 ; i ++ )	for ( int i = 0 ; i < 3 ; i ++ )
8674	for j = 0 to 3 exclusive	N/A	N/A	for ( int j = 0 ; j < 3 ; j ++ )	for ( int j = 0 ; j < 3 ; j ++ )
8675	let the integers c1 , c2 are assigned as c1 is equal to 0 and c2 is equal to 0 respectively	N/A	N/A	int c1 = 0 , c2 = 0 ;	int c1 = 0, c2 = 0 ;
8676	for ( int i1 = i to i + 1 inclusive )	N/A	N/A	for ( int i1 = i ; i1 <= i + 1 ; i1 ++ )	for ( int i1 = i ; i <= i + 1 ; i1 ++ )
8677	for ( int j1 = j to j + 1 inclusive )	N/A	N/A	for ( int j1 = j ; j1 <= j + 1 ; j1 ++ )	for ( int j1 = j ; j1 <= j + 1 ; ++ j1 )
8678	if ( the 2d array grid [ i1 ] [ j1 ] is equal to . )	N/A	N/A	if ( grid [ i1 ] [ j1 ] == ' . ' )	if ( grid [ i1 ] [ j1 ] == '.')
8679	increase c1 by 1	N/A	N/A	c1 ++ ;	c1 ++ ;
8680	else do the following	N/A	N/A	else	else
8681	increase c2 by 1	N/A	N/A	c2 ++ ;	c2 ++ ;
8682	DUMMY	0.0	0.0	}	DUMMY
8683	DUMMY	0.0	0.0	}	DUMMY
8684	if ( c1 is not equal to 2 ) , found is equal to true	N/A	N/A	if ( c1 != 2 ) { found = true ; }	if ( c1!= 2 ) found = true ;
8685	DUMMY	0.0	0.0	}	DUMMY
8686	DUMMY	0.0	0.0	}	DUMMY
8687	print YES if found else print NO	N/A	N/A	cout << ( found ? " YES " : " NO " ) << endl ;	cout << ( found? " YES " : " NO " ) << endl ;
8688	DUMMY	0.0	0.0	return 0;	DUMMY
8689	DUMMY	0.0	0.0	}	DUMMY
8690	declare character array a with size 6 by 6	N/A	N/A	char a [ 6 ] [ 6 ] ;	char a [ 6 ] [ 6 + 1 ] ;
8691	int function nCount with integer arguments x and y and character argument c	N/A	N/A	int nCount ( int x , int y , char c )	int nCount ( int x, int y, char c )
8692	create integer res = 0	N/A	N/A	int res = 0 ;	int res = 0 ;
8693	increment res if a [ x + 1 ] [ y ] = c	N/A	N/A	if ( a [ x + 1 ] [ y ] == c ) { res ++ ; }	if ( a [ x + 1 ] [ y ] == c ) res ++ ;
8694	increment res if a [ x ] [ y + 1 ] = c	N/A	N/A	if ( a [ x ] [ y + 1 ] == c ) { res ++ ; }	if ( a [ x ] [ y + 1 ] == c ) res ++ ;
8695	increment res if a [ x + 1 ] [ y + 1 ] = c	N/A	N/A	if ( a [ x + 1 ] [ y + 1 ] == c ) { res ++ ; }	if ( a [ x + i ] [ y + 1 ] == c ) res ++ ;
8696	return res	N/A	N/A	return res ;	return res ;
8697	DUMMY	0.0	0.0	}	DUMMY
8698	DUMMY	0.0	0.0	int main() {	DUMMY
8699	declare character z	N/A	N/A	char z ;	char z ;
8700	for integer i = 1 to 4 inclusive	N/A	N/A	for ( int i = 1 ; i <= 4 ; i ++ )	for ( int i = 1 ; i <= 4 ; i ++ )
8701	for integer j = 1 to 4 inclusive	N/A	N/A	for ( int j = 1 ; j <= 4 ; j ++ )	for ( int j = 1 ; j <= 4 ; j ++ )
8702	read z	N/A	N/A	cin >> z ;	cin >> z ;
8703	a [ i ] [ j ] = z	N/A	N/A	a [ i ] [ j ] = z ;	a [ i ] [ j ] = z ;
8704	DUMMY	0.0	0.0	}	DUMMY
8705	DUMMY	0.0	0.0	}	DUMMY
8706	for i = 1 to 4 inclusive	N/A	N/A	for ( int i = 1 ; i <= 4 ; i ++ )	for ( int i = 1 ; i <= 4 ; i ++ )
8707	for j = 1 to 4 inclusive	N/A	N/A	for ( int j = 1 ; j <= 4 ; j ++ )	for ( int j = 1 ; j <= 4 ; j ++ )
8708	if a [ i ] [ j ] = ' # '	N/A	N/A	if ( a [ i ] [ j ] == ' # ' )	if ( a [ i ] [ j ] =='#')
8709	if nCount ( i , j , ' # ' ) > = 2 | | nCount ( i , j , ' . ' ) > = 3	N/A	N/A	if ( nCount ( i , j , ' # ' ) >= 2 || nCount ( i , j , ' . ' ) >= 3 )	if (! ( nCount ( i, j,'#') >= 2 ||! ( ( i ) [ j ] ) >= 3 ) )
8710	print " YES "	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
8711	DUMMY	0.0	0.0	return 0;	DUMMY
8712	DUMMY	0.0	0.0	}	DUMMY
8713	else	N/A	N/A	else	else
8714	if nCount ( i , j , ' . ' ) > = 2 | | nCount ( i , j , ' # ' ) > = 3	N/A	N/A	if ( nCount ( i , j , ' . ' ) >= 2 || nCount ( i , j , ' # ' ) >= 3 )	if (! ( nCount ( i, j, '.') >= 2 ||! ( ( i ) [ j ] ) >= 3 ) )
8715	print " YES "	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
8716	DUMMY	0.0	0.0	return 0;	DUMMY
8717	DUMMY	0.0	0.0	}	DUMMY
8718	DUMMY	0.0	0.0	}	DUMMY
8719	DUMMY	0.0	0.0	}	DUMMY
8720	DUMMY	0.0	0.0	}	DUMMY
8721	print " NO "	N/A	N/A	cout << " NO " << endl ;	cout << " NO\n " ;
8722	DUMMY	0.0	0.0	return 0;	DUMMY
8723	DUMMY	0.0	0.0	}	DUMMY
8724	create character array m with 4 by 4 elements	N/A	N/A	char m [ 4 ] [ 4 ] ;	char m [ 4 ] [ 4 + 1 ] ;
8725	function check with integer arguments i and j that returns boolean	N/A	N/A	bool check ( int i , int j )	bool check ( int i, int j )
8726	declare integers cnt and cnt2 = 0	N/A	N/A	int cnt = 0 , cnt2 = 0 ;	int cnt = 0, cnt2 = 0 ;
8727	for k = i to i + 2 exclusive	N/A	N/A	for ( int k = i ; k < i + 2 ; k ++ )	for ( int k = i ; k < i + 2 ; k ++ )
8728	for d = j to j + 2 exclusive	N/A	N/A	for ( int d = j ; d < j + 2 ; d ++ )	for ( int d = j ; d < j + 2 ; d ++ )
8729	if m [ k ] [ d ] is ' # '	N/A	N/A	if ( m [ k ] [ d ] == ' # ' )	if ( m [ k ] [ d ] =='#')
8730	increment cnt	N/A	N/A	++ cnt ;	cnt ++ ;
8731	else	N/A	N/A	else	else
8732	increment cnt2	N/A	N/A	++ cnt2 ;	cnt2 ++ ;
8733	DUMMY	0.0	0.0	}	DUMMY
8734	DUMMY	0.0	0.0	}	DUMMY
8735	return true if cnt = 3 | | cnt = 4 | | cnt2 = 3 | | cnt2 = 4	N/A	N/A	if ( cnt == 3 || cnt == 4 || cnt2 == 3 || cnt2 == 4 ) return true ;	if ( cnt == 3 || cnt2 == 4 || cc2 == 3| cnt3 == 4 ) return true ;
8736	return false	N/A	N/A	return false ;	return false ;
8737	DUMMY	0.0	0.0	}	DUMMY
8738	DUMMY	0.0	0.0	int main() {	DUMMY
8739	for integer i = 0 to 4 exclusive	N/A	N/A	for ( int i = 0 ; i < 4 ; i ++ )	for ( int i = 0 ; i < 4 ; i ++ )
8740	declare string variable s	N/A	N/A	string s ;	string s ;
8741	read s	N/A	N/A	cin >> s ;	cin >> s ;
8742	for integer j = 0 to 4 exclusive , set m [ i ] [ j ] to s [ j ]	N/A	N/A	for ( int j = 0 ; j < 4 ; j ++ ) { m [ i ] [ j ] = s [ j ] ; }	for ( int j = 0 ; j < 4 ; j ++ ) { m [ i ] [ j ] = s [ ++ j ] ; }
8743	DUMMY	0.0	0.0	}	DUMMY
8744	declare boolean variable sol = false	N/A	N/A	bool sol = false ;	bool sol = false ;
8745	for integer i = 0 to 3 exclusive	N/A	N/A	for ( int i = 0 ; i < 3 ; i ++ )	for ( int i = 0 ; i < 3 ; i ++ )
8746	for j = 0 to 3 exclusive	N/A	N/A	for ( int j = 0 ; j < 3 ; j ++ )	for ( int j = 0 ; j < 3 ; j ++ )
8747	if check ( i , j ) is true , set sol to true	N/A	N/A	if ( check ( i , j ) ) sol = true ;	if ( check ( i, j ) ) sol = true ;
8748	DUMMY	0.0	0.0	}	DUMMY
8749	DUMMY	0.0	0.0	}	DUMMY
8750	if sol is true	N/A	N/A	if ( sol )	if ( sol )
8751	print " YES \ n "	N/A	N/A	cout << " YES\n " ;	cout << " YES\n " ;
8752	else	N/A	N/A	else	else
8753	print " NO \ n "	N/A	N/A	cout << " NO\n " ;	cout << " NO\n " ;
8754	DUMMY	0.0	0.0	}	DUMMY
8755	DUMMY	0.0	0.0	return 0;	DUMMY
8756	DUMMY	0.0	0.0	}	DUMMY
8757	num = array of 225 integers	N/A	N/A	int num [ 225 ] ;	int num [ 225 ] ;
8758	DUMMY	0.0	0.0	int main() {	DUMMY
8759	n , m , i , j , k = integers	N/A	N/A	int n , m , i , j , k ;	int n, m, i, j, k ;
8760	read n and k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
8761	set a index of num to k	N/A	N/A	num [ ' a ' ] = k ;	a = find ( num, k ) ;
8762	for i = 1 to k exclusive increment num [ ' a ' + i ]	N/A	N/A	for ( i = 1 ; i < k ; i ++ ) num [ ' a ' + i ] ++ ;	for ( i = 1 ; i < k ; i ++ ) num ['a'+ i ] ++ ;
8763	if k > n	N/A	N/A	if ( k > n )	if ( k > n )
8764	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
8765	else if n is 1	N/A	N/A	else if ( n == 1 )	else if ( n == 1 )
8766	print a	N/A	N/A	cout << ' a ' << endl ;	cout << a << endl ;
8767	else if k is 1 and n > 1	N/A	N/A	else if ( k == 1 && n > 1 )	else if ( k == 1 && n > 1 )
8768	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
8769	else	N/A	N/A	else	else
8770	set f to 1	N/A	N/A	int f = 1 ;	f = 1 ;
8771	for i = 1 to n - ( k - 2 ) inclusive	N/A	N/A	for ( i = 1 ; i <= n - ( k - 2 ) ; i ++ )	for ( int i = 1 ; i <= n - ( k - 2 ) ; i ++ )
8772	if i modulo 2	N/A	N/A	if ( i % 2 )	if ( i % 2 )
8773	print a	N/A	N/A	cout << ' a ' ;	cout << a << endl ;
8774	else	N/A	N/A	else	else
8775	print b	N/A	N/A	cout << ' b ' ;	cout << b << endl ;
8776	DUMMY	0.0	0.0	}	DUMMY
8777	for i = 1 to k - 2 inclusive print ( char ) ( ' b ' + i )	N/A	N/A	for ( i = 1 ; i <= k - 2 ; i ++ ) { cout << ( char ) ( ' b ' + i ) ; }	for ( int i = 1 ; i <= k - 2 ; i ++ ) cout << ( char ) ('b'+ i ) << endl ;
8778	print a new line	N/A	N/A	cout << endl ;	cout << endl ;
8779	DUMMY	0.0	0.0	}	DUMMY
8780	DUMMY	0.0	0.0	return 0;	DUMMY
8781	DUMMY	0.0	0.0	}	DUMMY
8782	DUMMY	0.0	0.0	int main() {	DUMMY
8783	create integers n , k , sig with sig = 0	N/A	N/A	int n , k , sig = 0 ;	int n, k, sig = 0 ;
8784	create string s	N/A	N/A	string s ;	string s ;
8785	read n read k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
8786	if k is 1 and n is greater than 1	N/A	N/A	if ( k == 1 && n > 1 )	if ( k == 1 && n > 1 )
8787	print " - 1 \ n "	N/A	N/A	cout << " -1\n " ;	cout << " -1\n " ;
8788	else if k is greater than n	N/A	N/A	else if ( k > n )	else if ( k > n )
8789	print " - 1 \ n "	N/A	N/A	cout << " -1\n " ;	cout << " -1\n " ;
8790	else if n is 1 and k is 1	N/A	N/A	else if ( n == 1 && k == 1 )	else if ( n == 1 && k == 1 )
8791	print " a \ n "	N/A	N/A	cout << " a\n " ;	cout << " a\n " ;
8792	else	N/A	N/A	else	else
8793	create integers i , j with j = n - k + 1	N/A	N/A	int i , j = n - k + 1 ;	int i, j = n - k + 1 ;
8794	if ( j bitwise and 1 ) is 0 , decrement j , set sig to 1	N/A	N/A	if ( ( j & 1 ) == 0 ) { j -- , sig = 1 ; }	if (! ( j & 1 ) ) j --, sig = 1 ;
8795	for i = 0 to j inclusive , increment i by 2 , increment s by " ab "	N/A	N/A	for ( i = 0 ; i <= j ; i += 2 ) s += " ab " ;	for ( i = 0 ; i <= j ; i += 2 ) s += " ab " ;
8796	if sig is true , increment s by " a " , set a to j + 2	N/A	N/A	if ( sig ) { s += " a " , i = j + 2 ; }	if ( sig ) s += " a ", a = j + 2 ;
8797	create character c with c = ' b '	N/A	N/A	char c = ' b ' ;	char c ='b';
8798	for i is less than n , incrementing i , increment s by character casted ( c + 1 ) , set c to s [ i ]	N/A	N/A	for ( ; i < n ; i ++ ) s += ( char ) ( c + 1 ) , c = s [ i ] ;	for ( ; i < n ; i ++ ) s += char ( c + 1 ), c = s [ i ] ;
8799	print s print newline	N/A	N/A	cout << s << endl ;	cout << s << endl ;
8800	DUMMY	0.0	0.0	}	DUMMY
8801	DUMMY	0.0	0.0	return 0;	DUMMY
8802	DUMMY	0.0	0.0	}	DUMMY
8803	DUMMY	0.0	0.0	int main() {	DUMMY
8804	create integers n and k	N/A	N/A	int n , k ;	int n, k ;
8805	read n and k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
8806	if n < k or ( k = 1 and n ! = 1 )	N/A	N/A	if ( n < k || ( k == 1 && n != 1 ) )	if ( n < k || ( k == 1 && n!= 1 ) )
8807	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
8808	else if k = 1 and n = 1	N/A	N/A	else if ( k == 1 && n == 1 )	else if ( k == 1 && n == 1 )
8809	print ' a '	N/A	N/A	cout << ' a ' << endl ;	cout <<'a';
8810	else	N/A	N/A	else	else
8811	for i = 1 to n - ( k - 2 ) inclusive	N/A	N/A	for ( int i = 1 ; i <= n - ( k - 2 ) ; i ++ )	for ( int i = 1 ; i <= n - ( k - 2 ) ; i ++ )
8812	if i & 1	N/A	N/A	if ( i & 1 )	if ( i & 1 )
8813	print ' a '	N/A	N/A	cout << ' a ' ;	cout <<'a';
8814	else	N/A	N/A	else	else
8815	print ' b '	N/A	N/A	cout << ' b ' ;	cout <<'b';
8816	DUMMY	0.0	0.0	}	DUMMY
8817	declare integer variable x = n - ( k - 2 )	N/A	N/A	int x = n - ( k - 2 ) ;	int x = n - ( k - 2 ) ;
8818	declare character ch = ' c '	N/A	N/A	char ch = ' c ' ;	char ch ='c';
8819	for i = 1 to k - 2 inclusive print ch and increment it	N/A	N/A	for ( int i = 1 ; i <= k - 2 ; i ++ ) { cout << ch ++ ; }	for ( int i = 1 ; i <= k - 2 ; i ++ ) cout << ch, it ++ ;
8820	print new line	N/A	N/A	cout << endl ;	cout << endl ;
8821	DUMMY	0.0	0.0	}	DUMMY
8822	DUMMY	0.0	0.0	return 0;	DUMMY
8823	DUMMY	0.0	0.0	}	DUMMY
8824	DUMMY	0.0	0.0	int main() {	DUMMY
8825	create n , k and zzz	N/A	N/A	int n , k , zzz ;	int n, k, zzz ;
8826	read n , k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
8827	if n < k or k = 1 and n is different from 1	N/A	N/A	if ( n < k || ( k == 1 && n != 1 ) )	if ( n < k || k == 1 && n!= 1 )
8828	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
8829	else if k = 1 and n = 1	N/A	N/A	else if ( k == 1 && n == 1 )	else if ( k == 1 && n == 1 )
8830	print a and a new line	N/A	N/A	cout << ' a ' << endl ;	cout << a << endl ;
8831	else	N/A	N/A	else	else
8832	for i = 1 to n - k - 2 inclusive	N/A	N/A	for ( int i = 1 ; i <= n - ( k - 2 ) ; i ++ )	for ( int i = 1 ; i <= n - k - 2 ; i ++ )
8833	if i is odd	N/A	N/A	if ( i & 1 )	if ( i % 2!= 0 )
8834	print a	N/A	N/A	cout << ' a ' ;	cout << a << endl ;
8835	els	N/A	N/A	else	els ;
8836	print b and a new line	N/A	N/A	cout << ' b ' ;	cout << b << endl ;
8837	DUMMY	0.0	0.0	}	DUMMY
8838	set x to n - k - 2	N/A	N/A	int x = n - ( k - 2 ) ;	x = n - k - 2 ;
8839	assign c to ch	N/A	N/A	char ch = ' c ' ;	char ch = c ;
8840	for i = 1 to k inclusive , print increment ch	N/A	N/A	for ( int i = 1 ; i <= k - 2 ; i ++ ) { cout << ch ++ ; }	for ( int i = 1 ; i <= k ; i ++ ) { cout << ch ++ ; }
8841	print a new line	N/A	N/A	cout << endl ;	cout << endl ;
8842	DUMMY	0.0	0.0	}	DUMMY
8843	DUMMY	0.0	0.0	return 0;	DUMMY
8844	DUMMY	0.0	0.0	}	DUMMY
8845	DUMMY	0.0	0.0	int main() {	DUMMY
8846	declare long long variables n and k	N/A	N/A	long long n , k ;	long long n, k ;
8847	read n and k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
8848	if k > n | | ( k = 1 & & n > 1 )	N/A	N/A	if ( k > n || ( k == 1 && n > 1 ) )	if ( k > n || ( k == 1 && n > 1 ) )
8849	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
8850	else if k = 1	N/A	N/A	else if ( k == 1 )	else if ( k == 1 )
8851	print ' a '	N/A	N/A	cout << ' a ' << endl ;	cout <<'a';
8852	else	N/A	N/A	else	else
8853	declare long long x = n - ( k - 2 )	N/A	N/A	long long x = n - ( k - 2 ) ;	long long x = n - ( k - 2 ) ;
8854	declare string str = " "	N/A	N/A	string str = " " ;	string str = " " ;
8855	declare long long variable i = 0	N/A	N/A	long long i = 0 ;	long long i = 0 ;
8856	while i is less than x	N/A	N/A	while ( i < x )	while ( i < x )
8857	if i is even	N/A	N/A	if ( i % 2 == 0 )	if ( i % 2 == 0 )
8858	append " a " to str	N/A	N/A	str += " a " ;	str += " a " ;
8859	else	N/A	N/A	else	else
8860	append " b " to str	N/A	N/A	str += " b " ;	str += " b " ;
8861	increase i	N/A	N/A	i ++ ;	i ++ ;
8862	DUMMY	0.0	0.0	}	DUMMY
8863	for long long i = 2 to k exclusive	N/A	N/A	for ( long long i = 2 ; i < k ; i ++ )	for ( long long i = 2 ; i < k ; i ++ )
8864	declare character ch = ( i + ' a ' )	N/A	N/A	char ch = ( i + ' a ' ) ;	char ch = ( i +'a') ;
8865	append ch to str	N/A	N/A	str += ch ;	str. push_back ( ch ) ;
8866	DUMMY	0.0	0.0	}	DUMMY
8867	print str	N/A	N/A	cout << str << endl ;	cout << str << endl ;
8868	DUMMY	0.0	0.0	}	DUMMY
8869	DUMMY	0.0	0.0	return 0;	DUMMY
8870	DUMMY	0.0	0.0	}	DUMMY
8871	let n , k be ints	N/A	N/A	int n , k ;	int n, k ;
8872	DUMMY	0.0	0.0	int main() {	DUMMY
8873	read n , k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
8874	if k is less than n do the following	N/A	N/A	if ( k > n )	while ( k < n )
8875	print - 1 and one newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
8876	DUMMY	0.0	0.0	return 0;	DUMMY
8877	DUMMY	0.0	0.0	}	DUMMY
8878	if ke equals 1 do the following	N/A	N/A	if ( k == 1 )	if ( ke == 1 )
8879	if n equals 1 do the following	N/A	N/A	if ( n == 1 )	if ( n == 1 )
8880	print a and one newline	N/A	N/A	cout << ' a ' << endl ;	cout << a << endl ;
8881	else	N/A	N/A	else	else
8882	print - 1 and one newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
8883	DUMMY	0.0	0.0	return 0;	DUMMY
8884	DUMMY	0.0	0.0	}	DUMMY
8885	if k equals 2 do the following	N/A	N/A	if ( k == 2 )	if ( k == 2 )
8886	for int = 0 to n exclusive print char ( ' a ' + ( i & 1 ) )	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cout << char ( ' a ' + ( i & 1 ) ) ; }	for ( int i = 0 ; i < n ; i ++ ) { cout << char ('a'+ ( i & 1 ) ) ; }
8887	print one newline	N/A	N/A	cout << endl ;	cout << endl ;
8888	DUMMY	0.0	0.0	return 0;	DUMMY
8889	DUMMY	0.0	0.0	}	DUMMY
8890	for i = 0 to n - k + 2 exclusive print char ( ' a ' + ( i & 1 ) )	N/A	N/A	for ( int i = 0 ; i < n - k + 2 ; i ++ ) { cout << char ( ' a ' + ( i & 1 ) ) ; }	for ( int i = 0 ; i < n - k + 2 ; i ++ ) { cout << char ('a'+ ( i & 1 ) ) ; }
8891	for i = 0 to k - 2 exclusive print char ( ' c ' + i )	N/A	N/A	for ( int i = 0 ; i < k - 2 ; i ++ ) { cout << char ( ' c ' + i ) ; }	for ( int i = 0 ; i < k - 2 ; i ++ ) { cout << char ('c'+ i ) ; }
8892	print one newline	N/A	N/A	cout << endl ;	cout << endl ;
8893	DUMMY	0.0	0.0	}	DUMMY
8894	DUMMY	0.0	0.0	int main() {	DUMMY
8895	declare integer variables i , j , k , l , n and m	N/A	N/A	int i , j , k , l , n , m ;	int i, j, k, l, n, m ;
8896	read n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
8897	k = m	N/A	N/A	k = m ;	k = m ;
8898	if n < m or ( m = 1 and n is greater than 1 )	N/A	N/A	if ( n < m || ( m == 1 && n > 1 ) )	if ( n < m || ( m == 1 && n > 1 ) )
8899	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
8900	DUMMY	0.0	0.0	return 0;	DUMMY
8901	DUMMY	0.0	0.0	}	DUMMY
8902	create a map from integers to characters called mm	N/A	N/A	map < int , char > mm ;	map < int, char > mm ;
8903	create character h = ' a '	N/A	N/A	char h = ' a ' ;	char h ='a';
8904	for i = 0 to 26 exclusive	N/A	N/A	for ( i = 0 ; i < 26 ; i ++ )	for ( int i = 0 ; i < 26 ; i ++ )
8905	set value of mm [ i ] to h	N/A	N/A	mm [ i ] = h ;	mm [ i ] = h ;
8906	increase h by one	N/A	N/A	h ++ ;	h ++ ;
8907	DUMMY	0.0	0.0	}	DUMMY
8908	declare string variable st = " "	N/A	N/A	string st = " " ;	string st = " " ;
8909	if n = m	N/A	N/A	if ( n == m )	if ( n == m )
8910	for i = 0 to n exclusive , apped mm [ i ] to st	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { st += mm [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { st = mm [ i ] ; }
8911	print st	N/A	N/A	cout << st << endl ;	cout << st << endl ;
8912	DUMMY	0.0	0.0	return 0;	DUMMY
8913	DUMMY	0.0	0.0	}	DUMMY
8914	for i = 0 to n - ( m - 2 ) exclusive	N/A	N/A	for ( i = 0 ; i < n - ( m - 2 ) ; i ++ )	for ( int i = 0 ; i < n - ( m - 2 ) ; i ++ )
8915	if i is even	N/A	N/A	if ( i % 2 == 0 )	if ( i % 2 == 0 )
8916	append mm [ 0 ] to st	N/A	N/A	st += mm [ 0 ] ;	st += mm [ 0 ] ;
8917	else	N/A	N/A	else	else
8918	append mm [ 1 ] to st	N/A	N/A	st += mm [ 1 ] ;	st += mm [ 1 ] ;
8919	DUMMY	0.0	0.0	}	DUMMY
8920	for i = 0 to m - 2 exclusive , append mm [ i + 2 ] to st	N/A	N/A	for ( i = 0 ; i < m - 2 ; i ++ ) { st += mm [ i + 2 ] ; }	for ( int i = 0 ; i < m - 2 ; i ++ ) { st += mm [ i + 2 ] ; }
8921	print st	N/A	N/A	cout << st << endl ;	cout << st << endl ;
8922	DUMMY	0.0	0.0	return 0;	DUMMY
8923	DUMMY	0.0	0.0	}	DUMMY
8924	DUMMY	0.0	0.0	int main() {	DUMMY
8925	declare integers a and b	N/A	N/A	int a , b ;	int a, b ;
8926	while read a and b	N/A	N/A	while ( cin >> a >> b )	while ( cin >> a >> b )
8927	declare integer i	N/A	N/A	int i ;	int i ;
8928	if a = 1	N/A	N/A	if ( a == 1 )	if ( a == 1 )
8929	if b is greater than 1	N/A	N/A	if ( b > 1 )	if ( b > 1 )
8930	print " - 1 "	N/A	N/A	cout << " -1 " << endl ;	cout << " -1 " << endl ;
8931	else	N/A	N/A	else	else
8932	print " a "	N/A	N/A	cout << ' a ' << endl ;	cout << " a " ;
8933	DUMMY	0.0	0.0	}	DUMMY
8934	else	N/A	N/A	else	else
8935	declare character variable q = ' c '	N/A	N/A	char q = ' c ' ;	char q ='c';
8936	declare integer pl = 0	N/A	N/A	int pl = 0 ;	int pl = 0 ;
8937	if b > a or ( b = 1 and a > 1 )	N/A	N/A	if ( b > a || ( b == 1 && a > 1 ) )	if ( b > a || ( b == 1 && a > 1 ) )
8938	print " - 1 "	N/A	N/A	cout << " -1 " << endl ;	cout << " -1 " << endl ;
8939	else	N/A	N/A	else	else
8940	for i = 0 to a - ( b - 2 ) exclusive	N/A	N/A	for ( i = 0 ; i < a - ( b - 2 ) ; i ++ )	for ( int i = 0 ; i < a - ( b - 2 ) ; i ++ )
8941	if pl is even	N/A	N/A	if ( pl % 2 == 0 )	if ( pl % 2 == 0 )
8942	increase pl by one	N/A	N/A	pl ++ ;	pl ++ ;
8943	print ' a '	N/A	N/A	cout << ' a ' ;	cout <<'a';
8944	else	N/A	N/A	else	else
8945	increment pl	N/A	N/A	pl ++ ;	pl ++ ;
8946	print ' b '	N/A	N/A	cout << ' b ' ;	cout <<'b';
8947	DUMMY	0.0	0.0	}	DUMMY
8948	DUMMY	0.0	0.0	}	DUMMY
8949	for i = 0 to b - 2 exclusive	N/A	N/A	for ( i = 0 ; i < b - 2 ; i ++ ) { cout << q ++ ; }	for ( int i = 0 ; i < b - 2 ; i ++ )
8950	print new line	N/A	N/A	cout << endl ;	cout << endl ;
8951	DUMMY	0.0	0.0	}	DUMMY
8952	DUMMY	0.0	0.0	}	DUMMY
8953	DUMMY	0.0	0.0	}	DUMMY
8954	DUMMY	0.0	0.0	return 0;	DUMMY
8955	DUMMY	0.0	0.0	}	DUMMY
8956	DUMMY	0.0	0.0	int main() {	DUMMY
8957	let s , s1 be strings	N/A	N/A	string s , s1 ;	string s, s1 ;
8958	let n , k be integers	N/A	N/A	int n , k ;	int n, k ;
8959	read n , k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
8960	if ( k is greater than n or ( k is equal to 1 and n is greater than 1 ) ) , and print - 1 and endline , return 0	N/A	N/A	if ( k > n || ( k == 1 && n > 1 ) ) return cout << " -1 " << endl , 0 ;	if ( k > n || ( k == 1 && n > 1 ) ) return cout << - 1 << endl, 0 ;
8961	if ( k is equal to 1 ) print a and endline , return 0	N/A	N/A	if ( k == 1 ) return cout << " a " << endl , 0 ;	if ( k == 1 ) return cout << a << endl, 0 ;
8962	for ( i = 1 to k - 2 inclusive ) , s is equal to s + b + i	N/A	N/A	for ( int i = 1 ; i <= k - 2 ; i ++ ) s += ' b ' + i ;	for ( int i = 1 ; i <= k - 2 ; i ++ ) s += b + i ;
8963	for ( i = 1 to n - k + 2 inclusive ) , s1 = s1 + ( if i modulus 2 ) ? a else b	N/A	N/A	for ( int i = 1 ; i <= n - k + 2 ; i ++ ) s1 += i % 2 ? ' a ' : ' b ' ;	for ( int i = 1 ; i <= n - k + 2 ; i ++ ) s1 += ( i % 2? a : b ) ;
8964	print s1 and s and newline	N/A	N/A	cout << s1 << s << endl ;	cout << s1 << " " << s << endl ;
8965	DUMMY	0.0	0.0	}	DUMMY
8966	let xx be a char array of length 1000002	N/A	N/A	char xx [ 1000002 ] ;	char xx [ 1000002 ] ;
8967	DUMMY	0.0	0.0	int main() {	DUMMY
8968	n , k = integers	N/A	N/A	int n , k ;	int n, k ;
8969	while n and k are read	N/A	N/A	while ( cin >> n >> k )	while ( cin >> n >> k )
8970	if n is equal to or greater than 2 and k is less than 2 , or n is less than k	N/A	N/A	if ( n < k || ( n >= 2 && k < 2 ) )	if ( n >= 2 && k < 2 || n < k )
8971	print - 1 and a new line	N/A	N/A	cout << " -1 " << endl ;	cout << - 1 << endl ;
8972	otherwise	N/A	N/A	else	else
8973	set integer a equal to k - 2	N/A	N/A	int a = k - 2 ;	int a = k - 2 ;
8974	set t = 0	N/A	N/A	int t = 0 ;	int t = 0 ;
8975	set all contents of xx to 0	N/A	N/A	memset ( xx , 0 , sizeof ( xx ) ) ;	memset ( xx, 0, sizeof ( xx ) ) ;
8976	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
8977	if i is less than n - ( k - 2 )	N/A	N/A	if ( i < n - ( k - 2 ) )	if ( i < n - ( k - 2 ) )
8978	if i modulo 2 equal to 0	N/A	N/A	if ( i % 2 == 0 )	if ( i % 2 == 0 )
8979	set xx [ i ] = a	N/A	N/A	xx [ i ] = ' a ' ;	xx [ i ] = a ;
8980	otherwise	N/A	N/A	else	else
8981	set xx [ i ] equal to b	N/A	N/A	xx [ i ] = ' b ' ;	xx [ i ] = b ;
8982	otherwise	N/A	N/A	else	else
8983	if i is less than n	N/A	N/A	if ( i < n )	if ( i < n )
8984	set xx [ i ] = 99 + t	N/A	N/A	xx [ i ] = 99 + t ;	xx [ i ] = 99 + t ;
8985	increment t	N/A	N/A	t ++ ;	t ++ ;
8986	DUMMY	0.0	0.0	}	DUMMY
8987	DUMMY	0.0	0.0	}	DUMMY
8988	DUMMY	0.0	0.0	}	DUMMY
8989	print xx and a new line	N/A	N/A	cout << xx << endl ;	cout << xx << endl ;
8990	DUMMY	0.0	0.0	}	DUMMY
8991	DUMMY	0.0	0.0	}	DUMMY
8992	DUMMY	0.0	0.0	return 0;	DUMMY
8993	DUMMY	0.0	0.0	}	DUMMY
8994	DUMMY	0.0	0.0	int main() {	DUMMY
8995	create integers n and k	N/A	N/A	int n , k ;	int n, k ;
8996	read n , k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
8997	if n < k or k equal to 1 and n different from 1	N/A	N/A	if ( n < k || ( k == 1 && n != 1 ) )	if ( n < k || k == 1 && n!= 1 )
8998	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
8999	otherwise	N/A	N/A	else	else
9000	if n equal to or greater than 2	N/A	N/A	if ( n >= 2 )	if ( n >= 2 )
9001	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n - k ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
9002	if 1 modulo 2 equal to 0	N/A	N/A	if ( i % 2 == 0 )	if ( 1 % 2 == 0 )
9003	print b	N/A	N/A	cout << " b " ;	cout << b << endl ;
9004	other	N/A	N/A	else	else
9005	print a	N/A	N/A	cout << " a " ;	cout << a << endl ;
9006	if n - k mod 2 = 0	N/A	N/A	if ( ( n - k ) % 2 == 0 )	if ( n - k % 2 == 0 )
9007	print ab	N/A	N/A	cout << " ab " ;	cout << ab << endl ;
9008	for i = 3 to k inclusive , print i + a - 1	N/A	N/A	for ( int i = 3 ; i <= k ; i ++ ) cout << char ( i + ' a ' - 1 ) ;	for ( int i = 3 ; i <= k ; i ++ ) cout << i + a - 1 << endl ;
9009	else	N/A	N/A	else	else
9010	print ba	N/A	N/A	cout << " ba " ;	cout << ba << endl ;
9011	for i = 3 to k inclusive , print i + a - 1	N/A	N/A	for ( int i = 3 ; i <= k ; i ++ ) cout << char ( i + ' a ' - 1 ) ;	for ( int i = 3 ; i <= k ; i ++ ) cout << i + a - 1 << endl ;
9012	DUMMY	0.0	0.0	}	DUMMY
9013	print a new line	N/A	N/A	cout << endl ;	cout << endl ;
9014	otherwise	N/A	N/A	else	else
9015	print a and a new line	N/A	N/A	cout << " a " << endl ;	cout << a << endl ;
9016	DUMMY	0.0	0.0	}	DUMMY
9017	DUMMY	0.0	0.0	return 0;	DUMMY
9018	DUMMY	0.0	0.0	}	DUMMY
9019	let b , d , sum , i , n , resh , ans1 , ans2 , ans3 , ans4 , j and k be long longs and a be long long array with length 10001	N/A	N/A	long long a [ 10001 ] , b , d , sum , i , n , resh , ans1 , ans2 , ans3 , ans4 , j , k ;	long long a [ 10001 ], b, d, sum, i, n, resh, ans1, ans2, ans3, ans4, j, k ;
9020	create strings s and s1	N/A	N/A	string s , s1 ;	string s, s1 ;
9021	create char array c with length 10001	N/A	N/A	char c [ 10001 ] ;	char c [ 10001 ] ;
9022	DUMMY	0.0	0.0	int main() {	DUMMY
9023	read n and k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
9024	if ( n is smaller than k ) or ( k is equal to 1 and n is greater than 1 ) return 0 and print - 1	N/A	N/A	if ( n < k or ( k == 1 and n > 1 ) ) return cout << - 1 << " \n " , 0 ;	if ( n < k || ( k == 1 && n > 1 ) ) return puts ( " 0 " ), - 1 ;
9025	if n is equal to 1 return 0 and print a and newline	N/A	N/A	if ( n == 1 ) return cout << " a\n " , 0 ;	if ( n == 1 ) return cout << a << endl, 0 ;
9026	for i = 0 to ( n - ( k - 2 ) ) / 2 exclusive print " ab "	N/A	N/A	for ( int i = 0 ; i < ( n - ( k - 2 ) ) / 2 ; ++ i ) cout << " ab " ;	for ( int i = 0 ; i < ( n - ( k - 2 ) ) / 2 ; i ++ ) cout << " ab " << endl ;
9027	if ( n - ( k - 2 ) mod 2 ) print " a "	N/A	N/A	if ( ( n - ( k - 2 ) ) % 2 ) cout << " a " ;	if ( n - ( k - 2 ) % 2 ) cout << " a " << endl ;
9028	for i = 0 to k - 2 exclusive print char ( i + ' c ' )	N/A	N/A	for ( int i = 0 ; i < k - 2 ; ++ i ) cout << char ( i + ' c ' ) ;	for ( int i = 0 ; i < k - 2 ; i ++ ) { cout << char ( i +'c') ; }
9029	print newline	N/A	N/A	cout << " \n " ;	cout << endl ;
9030	DUMMY	0.0	0.0	return 0;	DUMMY
9031	DUMMY	0.0	0.0	}	DUMMY
9032	create character array ab with size 2 , with ab = { ' a ' , ' b ' }	N/A	N/A	char ab [ 2 ] = { ' a ' , ' b ' } ;	char ab [ 2 ] = {'a ','b'} ;
9033	DUMMY	0.0	0.0	int main() {	DUMMY
9034	create integers n , k	N/A	N/A	int n , k ;	int n, k ;
9035	read n read k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
9036	if ( k is 1 and n is not 1 ) or ( k is greater than n )	N/A	N/A	if ( ( k == 1 && n != 1 ) || ( k > n ) )	if ( ( k == 1 && n!= 1 ) || ( k > n ) )
9037	print - 1 print newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
9038	DUMMY	0.0	0.0	return 0;	DUMMY
9039	DUMMY	0.0	0.0	}	DUMMY
9040	create integer frst with frst = n - k + 2	N/A	N/A	int frst = n - k + 2 ;	int frst = n - k + 2 ;
9041	create boolean flag with flag = 0	N/A	N/A	bool flag = 0 ;	bool flag = 0 ;
9042	create integer i with i = 0	N/A	N/A	int i = 0 ;	int i = 0 ;
9043	for i is less than frst and i is less than n , incrementing i	N/A	N/A	for ( ; i < frst && i < n ; i ++ )	for ( ; i < frst && i < n ; i ++ )
9044	print ab [ flag ]	N/A	N/A	cout << ab [ flag ] ;	cout << ab [ flag ] ;
9045	set flag to ( not flag bitwise and 1 )	N/A	N/A	flag = ( ! flag & 1 ) ;	flag = (! flag & 1 ) ;
9046	DUMMY	0.0	0.0	}	DUMMY
9047	create character c with c = ' c '	N/A	N/A	char c = ' c ' ;	char c ='c';
9048	for i is less than n , incrementing i	N/A	N/A	for ( ; i < n ; i ++ )	for ( ; i < n ; i ++ )
9049	print c	N/A	N/A	cout << c ;	cout << c << endl ;
9050	increment c	N/A	N/A	c ++ ;	c ++ ;
9051	DUMMY	0.0	0.0	}	DUMMY
9052	print newline	N/A	N/A	cout << endl ;	cout << endl ;
9053	DUMMY	0.0	0.0	return 0;	DUMMY
9054	DUMMY	0.0	0.0	}	DUMMY
9055	create integers n and k	N/A	N/A	int n , k ;	int n, k ;
9056	DUMMY	0.0	0.0	int main() {	DUMMY
9057	read n and k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
9058	if n * ( n - 1 ) / 2 < = k	N/A	N/A	if ( n * ( n - 1 ) / 2 <= k )	if ( n * ( n - 1 ) / 2 <= k )
9059	print " no solution \ n "	N/A	N/A	cout << " no solution\n " ;	cout << " no solution\n " ;
9060	else	N/A	N/A	else	else
9061	print " 0 " , n and " \ n	N/A	N/A	for ( ; n -- ; ) cout << " 0 " << n << " \n " ;	cout << " 0 " << n << " \n " ;
9062	DUMMY	0.0	0.0	}	DUMMY
9063	DUMMY	0.0	0.0	int main() {	DUMMY
9064	declare integers n and k	N/A	N/A	int n , k ;	int n, k ;
9065	while reading n and k	N/A	N/A	while ( cin >> n >> k )	while ( cin >> n >> k )
9066	create long long temp = 0	N/A	N/A	long long temp = 0 ;	long long temp = 0 ;
9067	declare long long variable a	N/A	N/A	long long a ;	long long a ;
9068	declare integer j = 1	N/A	N/A	int j = 1 ;	int j = 1 ;
9069	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
9070	read a	N/A	N/A	cin >> a ;	cin >> a ;
9071	if temp - ( i - 1 ) * ( n - i ) * a is less than k	N/A	N/A	if ( temp - ( i - 1 ) * ( n - i ) * a < k )	if ( temp - ( i - 1 ) * ( n - i ) * a < k )
9072	print j	N/A	N/A	cout << j << endl ;	cout << j << endl ;
9073	decrease i and n	N/A	N/A	i -- , n -- ;	i --, n -- ;
9074	else	N/A	N/A	else	else
9075	increase temp by ( i - 1 ) * a	N/A	N/A	temp += ( i - 1 ) * a ;	temp += ( i - 1 ) * a ;
9076	increase j	N/A	N/A	j ++ ;	j ++ ;
9077	DUMMY	0.0	0.0	}	DUMMY
9078	DUMMY	0.0	0.0	}	DUMMY
9079	DUMMY	0.0	0.0	return 0;	DUMMY
9080	DUMMY	0.0	0.0	}	DUMMY
9081	DUMMY	0.0	0.0	int main() {	DUMMY
9082	create long long integers n , i , k , x , b , with x = 1 to b = 0	N/A	N/A	long long int n , i , k , x = 1 , b = 0 ;	long long int n, i, k, x = 1, b = 0 ;
9083	read n read k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
9084	create long long integer array a with size n	N/A	N/A	long long int a [ n ] ;	long long int a [ n ] ;
9085	for i = 0 to n exclusive , read a [ i ]	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;	for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }
9086	for i = 1 to n exclusive	N/A	N/A	for ( i = 1 ; i < n ; i ++ )	for ( i = 1 ; i < n ; i ++ )
9087	if b - x * a [ i ] * ( n - i - 1 ) is less than k	N/A	N/A	if ( b - x * a [ i ] * ( n - i - 1 ) < k )	if ( b - x * a [ i ] * ( n - i - 1 ) < k )
9088	print i + 1 print newline	N/A	N/A	cout << i + 1 << endl ;	cout << i + 1 << endl ;
9089	else	N/A	N/A	else	else
9090	increment by by x * a [ i ]	N/A	N/A	b += x * a [ i ] ;	x += x * a [ i ] ;
9091	increment x	N/A	N/A	x ++ ;	x ++ ;
9092	DUMMY	0.0	0.0	}	DUMMY
9093	DUMMY	0.0	0.0	}	DUMMY
9094	DUMMY	0.0	0.0	return 0;	DUMMY
9095	DUMMY	0.0	0.0	}	DUMMY
9096	DUMMY	0.0	0.0	int main() {	DUMMY
9097	create long longs n , k	N/A	N/A	long long n , k ;	long long n, k ;
9098	read n readk	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
9099	create long long sum with sum = 0	N/A	N/A	long long sum = 0 ;	long long sum = 0 ;
9100	create long long pos with pos = 1	N/A	N/A	long long pos = 1 ;	long long pos = 1 ;
9101	for i = 1 to n inclusive	N/A	N/A	for ( long long i = 1 ; i <= n ; i ++ )	for ( long long i = 1 ; i <= n ; i ++ )
9102	create long long x	N/A	N/A	long long x ;	long long x ;
9103	read x	N/A	N/A	cin >> x ;	cin >> x ;
9104	create long long d with d = sum - ( pos - 1 ) * ( n - i ) * x	N/A	N/A	long long d = sum - ( pos - 1 ) * ( n - i ) * x ;	long long d = sum - ( pos - 1 ) * ( n - i ) * x ;
9105	if d is less than k	N/A	N/A	if ( d < k )	if ( d < k )
9106	print i print ' \ n '	N/A	N/A	cout << i << ' \n ' ;	cout << i <<'\n';
9107	else	N/A	N/A	else	else
9108	increment sum by x * ( pos - 1 )	N/A	N/A	sum += x * ( pos - 1 ) ;	sum += x * ( pos - 1 ) ;
9109	increment pos	N/A	N/A	pos ++ ;	++ pos ;
9110	DUMMY	0.0	0.0	}	DUMMY
9111	DUMMY	0.0	0.0	}	DUMMY
9112	DUMMY	0.0	0.0	return 0;	DUMMY
9113	DUMMY	0.0	0.0	}	DUMMY
9114	DUMMY	0.0	0.0	int main() {	DUMMY
9115	create long longs n , k , sum , cur with sum = 0 , cur = 0	N/A	N/A	long long n , k , sum = 0 , cur = 0 ;	long long n, k, sum = 0, cur = 0 ;
9116	read n read k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
9117	for i = 1 to n inclusive	N/A	N/A	for ( long long i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
9118	create integer a	N/A	N/A	int a ;	int a ;
9119	read a	N/A	N/A	cin >> a ;	cin >> a ;
9120	if i is greater than 1 and sum - ( i - cur - 1 ) * ( n - 1 ) * a is less than k	N/A	N/A	if ( i > 1 && sum - ( i - cur - 1 ) * ( n - i ) * a < k )	if ( i > 1 && ( sum - ( i - cur - 1 ) * ( n - i ) * a < k )
9121	print i print newline	N/A	N/A	cout << i << endl ;	cout << i << endl ;
9122	increment cur	N/A	N/A	cur ++ ;	cur ++ ;
9123	else	N/A	N/A	else	else
9124	increment sum by a * ( i - cur - 1 )	N/A	N/A	sum += a * ( i - cur - 1 ) ;	sum += a * ( i - cur - 1 ) ;
9125	DUMMY	0.0	0.0	}	DUMMY
9126	DUMMY	0.0	0.0	}	DUMMY
9127	DUMMY	0.0	0.0	int main() {	DUMMY
9128	let n , k be integers	N/A	N/A	int n , k ;	int n, k ;
9129	while ( read the values of n and k )	N/A	N/A	while ( cin >> n >> k )	while ( cin >> n >> k )
9130	let temp be a long integer with value as 0	N/A	N/A	long long temp = 0 ;	long long temp = 0 ;
9131	let a be a long integer	N/A	N/A	long long a ;	long long a ;
9132	let j be a integer with value as 1	N/A	N/A	int j = 1 ;	int j = 1 ;
9133	for integer i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
9134	read a	N/A	N/A	cin >> a ;	cin >> a ;
9135	if ( temp - ( i - 1 ) * ( n - i ) * a is less than k )	N/A	N/A	if ( temp - ( i - 1 ) * ( n - i ) * a < k )	if ( temp - ( i - 1 ) * ( n - i ) * a < k )
9136	print j and newline	N/A	N/A	cout << j << endl ;	cout << j << endl ;
9137	decrease the value of i by 1 , decrease the value of n by 1	N/A	N/A	i -- , n -- ;	i --, n -- ;
9138	else do the following	N/A	N/A	else	else
9139	temp is equal to temp + ( i - 1 ) * a	N/A	N/A	temp += ( i - 1 ) * a ;	temp += ( i - 1 ) * a ;
9140	increase j value by 1	N/A	N/A	j ++ ;	j ++ ;
9141	DUMMY	0.0	0.0	}	DUMMY
9142	DUMMY	0.0	0.0	}	DUMMY
9143	DUMMY	0.0	0.0	return 0;	DUMMY
9144	DUMMY	0.0	0.0	}	DUMMY
9145	DUMMY	0.0	0.0	int main() {	DUMMY
9146	create integer T with T = 1	N/A	N/A	int T = 1 ;	int T = 1 ;
9147	while decrement T is true	N/A	N/A	while ( T -- )	while ( T -- )
9148	create integers n , k	N/A	N/A	int n , k ;	int n, k ;
9149	read n read k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
9150	create long long integer vector arr initialized with n + 1	N/A	N/A	vector < long long int > arr ( n + 1 ) ;	vector < long long int > arr ( n + 1 ) ;
9151	set arr [ 0 ] to 0	N/A	N/A	arr [ 0 ] = 0 ;	arr [ 0 ] = 0 ;
9152	for i = 0 to n exclusive , read arr [ i + 1 ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i + 1 ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i + 1 ] ; }
9153	create long long integer c with c = 1	N/A	N/A	long long int c = 1 ;	long long int c = 1 ;
9154	create integer p_1 with p_1 = 1	N/A	N/A	int p_i = 1 ;	int p_1 = 1 ;
9155	create long long integers cur_d , prev_d , di , with cur_d = 0 , prev_d = 0 , di = 0	N/A	N/A	long long int cur_d = 0 , prev_d = 0 , di = 0 ;	long long int cur_d == 0, prev_d = 0, di = 0 ;
9156	for i = 2 to n inclusive	N/A	N/A	for ( int i = 2 ; i <= n ; i ++ )	for ( long long int i = 2 ; i <= n ; i ++ )
9157	set cur_d to prev_d + 1LL * arr [ p_i ] * ( c - 1 )	N/A	N/A	cur_d = prev_d + 1LL * arr [ p_i ] * ( c - 1 ) ;	cur_d += 1LL * arr [ p_i ] * ( c - 1 ) ;
9158	set di to cur_d - 1LL * ( n - i ) * ( c ) * arr [ i ]	N/A	N/A	di = cur_d - 1LL * ( n - i ) * ( c ) * arr [ i ] ;	di = cur_d - 1LL * ( n - i ) * ( c ) * arr [ i ] ;
9159	if di is less than k	N/A	N/A	if ( di < k )	if ( di < k )
9160	print i print ' \ n '	N/A	N/A	cout << i << ' \n ' ;	cout << i <<'\n';
9161	else	N/A	N/A	else	else
9162	increment c	N/A	N/A	c ++ ;	c ++ ;
9163	set p_i to i	N/A	N/A	p_i = i ;	p_i = i ;
9164	set prev_d to cur_d	N/A	N/A	prev_d = cur_d ;	prev_d = cur_d ;
9165	DUMMY	0.0	0.0	}	DUMMY
9166	DUMMY	0.0	0.0	}	DUMMY
9167	DUMMY	0.0	0.0	}	DUMMY
9168	DUMMY	0.0	0.0	return 0;	DUMMY
9169	DUMMY	0.0	0.0	}	DUMMY
9170	create long long vector v	N/A	N/A	vector < long long > v ;	vector < long long > v ;
9171	DUMMY	0.0	0.0	int main() {	DUMMY
9172	create long longs n , k , a , s , j , p , i with s = 0 , j = 2	N/A	N/A	long long n , k , a , s = 0 , j = 2 , p , i ;	long long n, k, a, s = 0, j = 2, p, i ;
9173	read n read k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
9174	create long long m with m = n	N/A	N/A	long long m = n ;	long long m = n ;
9175	read a	N/A	N/A	cin >> a ;	cin >> a ;
9176	for i = 2 to n inclusive	N/A	N/A	for ( i = 2 ; i <= n ; i ++ )	for ( i = 2 ; i <= n ; i ++ )
9177	read a	N/A	N/A	cin >> a ;	cin >> a ;
9178	set p to s - ( j - 1 ) * ( m - j ) * a	N/A	N/A	p = s - ( j - 1 ) * ( m - j ) * a ;	long long p = s - ( j - 1 ) * ( m - j ) * a ;
9179	if p is less than k	N/A	N/A	if ( p < k )	if ( p < k )
9180	add element i to end of v	N/A	N/A	v . push_back ( i ) ;	v. push_back ( i ) ;
9181	set m to m - 1	N/A	N/A	m = m - 1 ;	m = m - 1 ;
9182	else	N/A	N/A	else	else
9183	set s to s + ( j - 1 ) * a	N/A	N/A	s = s + ( j - 1 ) * a ;	s = s + ( j - 1 ) * a ;
9184	set j to j + 1	N/A	N/A	j = j + 1 ;	j = j + 1 ;
9185	DUMMY	0.0	0.0	}	DUMMY
9186	DUMMY	0.0	0.0	}	DUMMY
9187	for i = 0 to size of v exclusive , print v [ i ] print newline	N/A	N/A	for ( i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << endl ;	for ( int i = 0 ; i < v. size ( ) ; i ++ ) { cout << v [ i ] << endl ; }
9188	DUMMY	0.0	0.0	return 0;	DUMMY
9189	DUMMY	0.0	0.0	}	DUMMY
9190	create long longs n , k , a , sum and l	N/A	N/A	long long n , k , a , sum , l ;	long long n, k, a, sum, l ;
9191	DUMMY	0.0	0.0	int main() {	DUMMY
9192	read n and k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
9193	for long long i = 1 to n inclusive	N/A	N/A	for ( long long i = 1 ; i <= n ; i ++ )	for ( long long i = 1 ; i <= n ; i ++ )
9194	read a	N/A	N/A	cin >> a ;	cin >> a ;
9195	if i ! = 1	N/A	N/A	if ( i != 1 )	if ( i!= 1 )
9196	if sum - ( n - i ) * ( i - 1 ) * a is less than k	N/A	N/A	if ( sum - ( n - i ) * ( i - 1 ) * a < k )	if ( sum - ( n - i ) * ( i - 1 ) * a < k )
9197	print i + l	N/A	N/A	cout << i + l << endl ;	cout << i + l << endl ;
9198	decrease i	N/A	N/A	i -- ;	i -- ;
9199	decrease n by one	N/A	N/A	n -- ;	n -- ;
9200	increment l	N/A	N/A	l ++ ;	l ++ ;
9201	else	N/A	N/A	else	else
9202	increase sum by a * ( i - 1 )	N/A	N/A	sum += a * ( i - 1 ) ;	sum += a * ( i - 1 ) ;
9203	DUMMY	0.0	0.0	}	DUMMY
9204	DUMMY	0.0	0.0	}	DUMMY
9205	DUMMY	0.0	0.0	}	DUMMY
9206	declare prn with integer pos as argument , returning void	N/A	N/A	void prn ( int pos )	void prn ( int pos )
9207	print pos print " \ n "	N/A	N/A	cout << pos << " \n " ;	cout << pos << " \n " ;
9208	DUMMY	0.0	0.0	}	DUMMY
9209	DUMMY	0.0	0.0	int main() {	DUMMY
9210	create long longs n , k	N/A	N/A	long long n , k ;	long long n, k ;
9211	read n read k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
9212	create long long sz with sz = n	N/A	N/A	long long sz = n ;	long long sz = n ;
9213	create integer pos with pos = 1	N/A	N/A	int pos = 1 ;	int pos = 1 ;
9214	create long long ai	N/A	N/A	long long ai ;	long long ai ;
9215	read ai	N/A	N/A	cin >> ai ;	cin >> ai ;
9216	create long long sum with sum = 0	N/A	N/A	long long sum = 0 ;	long long sum = 0 ;
9217	for i = 2 to sz inclusive	N/A	N/A	for ( int i = 2 ; i <= sz ; ++ i )	for ( long long i = 2 ; i <= sz ; i ++ )
9218	increment pos	N/A	N/A	++ pos ;	pos ++ ;
9219	read ai	N/A	N/A	cin >> ai ;	cin >> ai ;
9220	create long long d with d = sum - ( n - pos ) * ( pos - 1 ) * ai	N/A	N/A	long long d = sum - ( n - pos ) * ( pos - 1 ) * ai ;	long long d = sum - ( n - pos ) * ( pos - 1 ) * ai ;
9221	if d is less than k	N/A	N/A	if ( d < k )	if ( d < k )
9222	run prn with i as argument	N/A	N/A	prn ( i ) ;	prn ( i ) ;
9223	decrement pos	N/A	N/A	-- pos ;	pos -- ;
9224	decrement n	N/A	N/A	-- n ;	n -- ;
9225	else	N/A	N/A	else	else
9226	increment sum by ai * ( pos - 1 )	N/A	N/A	sum += ai * ( pos - 1 ) ;	sum += ai * ( pos - 1 ) ;
9227	DUMMY	0.0	0.0	}	DUMMY
9228	DUMMY	0.0	0.0	}	DUMMY
9229	DUMMY	0.0	0.0	return 0;	DUMMY
9230	DUMMY	0.0	0.0	}	DUMMY
9231	create long longs n , k , a , sum , l	N/A	N/A	long long n , k , a , sum , l ;	long long n, k, a, sum, l ;
9232	DUMMY	0.0	0.0	int main() {	DUMMY
9233	read n read k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
9234	for i = 1 to n inclusive	N/A	N/A	for ( long long i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
9235	read a	N/A	N/A	cin >> a ;	cin >> a ;
9236	if i is not 1	N/A	N/A	if ( i != 1 )	if ( i!= 1 )
9237	if sum - ( n - 1 ) * ( i - 1 ) * a is less than k	N/A	N/A	if ( sum - ( n - i ) * ( i - 1 ) * a < k )	if ( sum - ( n - i ) * ( i - 1 ) * a < k )
9238	print i + l print newline	N/A	N/A	cout << i + l << endl ;	cout << i + l << endl ;
9239	decrement i	N/A	N/A	i -- ;	i -- ;
9240	decrement n	N/A	N/A	n -- ;	n -- ;
9241	increment l	N/A	N/A	l ++ ;	l ++ ;
9242	else	N/A	N/A	else	else
9243	increment sum by a * ( i - 1 )	N/A	N/A	sum += a * ( i - 1 ) ;	sum += a * ( i - 1 ) ;
9244	DUMMY	0.0	0.0	}	DUMMY
9245	DUMMY	0.0	0.0	}	DUMMY
9246	DUMMY	0.0	0.0	}	DUMMY
9247	integer function Get	N/A	N/A	int Get ( )	int Get ( )
9248	declare character c	N/A	N/A	char c ;	char c ;
9249	read c from the input , then loop , while c is not a digit or ' - '	N/A	N/A	while ( c = getchar ( ) , ( c < ' 0 ' || c > ' 9 ' ) && ( c != ' - ' ) )	while ( c = getchar ( ) )
9250	DUMMY	0.0	0.0	;	DUMMY
9251	create boolean Flag = true if c = ' - ' , or false otherwise	N/A	N/A	bool Flag = ( c == ' - ' ) ;	bool Flag = c =='-';
9252	if Flag is true , read c from the input	N/A	N/A	if ( Flag ) c = getchar ( ) ;	if ( Flag ) c = getchar ( ) ;
9253	create int X = 0	N/A	N/A	int X = 0 ;	int X = 0 ;
9254	while c > = ' 0 ' & & c < = ' 9 '	N/A	N/A	while ( c >= ' 0 ' && c <= ' 9 ' )	while ( c >='0'&& c <='9')
9255	set X to X * 10 + c - 48	N/A	N/A	X = X * 10 + c - 48 ;	X = X * 10 + c - 48 ;
9256	read c from the input	N/A	N/A	c = getchar ( ) ;	c = getchar ( ) ;
9257	DUMMY	0.0	0.0	}	DUMMY
9258	return - X if Flag if set , else return X	N/A	N/A	return Flag ? - X : X ;	return Flag? - X : X ;
9259	DUMMY	0.0	0.0	}	DUMMY
9260	function Output with int argument X	N/A	N/A	void Output ( int X )	void Output ( int X )
9261	if X is less than 0	N/A	N/A	if ( X < 0 )	if ( X < 0 )
9262	print ' - '	N/A	N/A	putchar ( ' - ' ) ;	cout <<'-';
9263	invert the sign of X	N/A	N/A	X = - X ;	X = - X ;
9264	DUMMY	0.0	0.0	}	DUMMY
9265	declare int Len = 0 and int array Data with size 10	N/A	N/A	int Len = 0 , Data [ 10 ] ;	int Data [ 10 ], Len = 0 ;
9266	while X is not 0	N/A	N/A	while ( X )	while ( X )
9267	set Data [ Len ] to X % 10 and increment Len	N/A	N/A	Data [ Len ++ ] = X % 10 ;	Data [ Len ++ ] = X % 10 ;
9268	divide X by 10	N/A	N/A	X /= 10 ;	X /= 10 ;
9269	DUMMY	0.0	0.0	}	DUMMY
9270	if Len is false , change Data [ Len ] to 0 and increment Len	N/A	N/A	if ( ! Len ) Data [ Len ++ ] = 0 ;	if (! Len ) Data [ Len ++ ] = 0 ;
9271	decrement Len and loop further , while Len ! = 0 , printing Data [ Len ] + 48 on each iteration	N/A	N/A	while ( Len -- ) putchar ( Data [ Len ] + 48 ) ;	while ( Len -- ) { cout << Data [ Len ] + 48 ; }
9272	print ' \ n '	N/A	N/A	putchar ( ' \n ' ) ;	cout <<'\n';
9273	DUMMY	0.0	0.0	}	DUMMY
9274	DUMMY	0.0	0.0	int main() {	DUMMY
9275	declare integer N = Get ( )	N/A	N/A	int N = Get ( ) ;	int N = Get ( ) ;
9276	create long longs Sum = 0 and K = Get ( )	N/A	N/A	long long K = Get ( ) , Sum = 0 ;	long long Sum = 0, K = Get ( ) ;
9277	declare integers Top and Number = 0 and Total = N	N/A	N/A	int Top = 0 , Total = N , Number = 0 ;	int Top, Number = 0, Total = N ;
9278	for integer i = 0 to N exclusive	N/A	N/A	for ( int i = 0 ; i < N ; i ++ )	for ( int i = 0 ; i < N ; i ++ )
9279	declare long long X = Get ( )	N/A	N/A	long long X = Get ( ) ;	long long X = Get ( ) ;
9280	if Sum - X * Number * ( Total - Number - 1 ) < K	N/A	N/A	if ( Sum - X * Number * ( Total - Number - 1 ) < K )	if ( Sum - X * Number * ( Total - Number - 1 ) < K )
9281	call Output of i + 1	N/A	N/A	Output ( i + 1 ) ;	Output ( i + 1 ) ;
9282	decrement Total	N/A	N/A	Total -- ;	Total -- ;
9283	else	N/A	N/A	else	else
9284	increase Sum by Number * X	N/A	N/A	Sum += Number * X ;	Sum += Number * X ;
9285	increment Number	N/A	N/A	Number ++ ;	Number ++ ;
9286	DUMMY	0.0	0.0	}	DUMMY
9287	DUMMY	0.0	0.0	}	DUMMY
9288	DUMMY	0.0	0.0	return 0;	DUMMY
9289	DUMMY	0.0	0.0	}	DUMMY
9290	DUMMY	0.0	0.0	int main() {	DUMMY
9291	integers = n , a , b , c , d , w , h , x1 = 2e9 , y1 = 2e9 , x2 = 0 , y2 = 0 , area = 0	N/A	N/A	int n , a , b , c , d , w , h , x1 = 2e9 , y1 = 2e9 , x2 = 0 , y2 = 0 , area = 0 ;	int n, a, b, c, d, w, h, x1 = 2e9, y2 = 0, y1 = 1, area = 0 ;
9292	read n	N/A	N/A	cin >> n ;	cin >> n ;
9293	if n is true do the following	N/A	N/A	while ( n -- )	while ( n -- )
9294	read a , b , c , d	N/A	N/A	cin >> a >> b >> c >> d ;	cin >> a >> b >> c >> d ;
9295	set w to c - a	N/A	N/A	w = c - a ;	w = c - a ;
9296	set h to d - b	N/A	N/A	h = d - b ;	h = d - b ;
9297	area equals area plus w * h	N/A	N/A	area += w * h ;	area += w * h ;
9298	set x1 to min ( x1 , a )	N/A	N/A	x1 = min ( x1 , a ) ;	x1 = min ( x1, a ) ;
9299	set y1 to min ( y1 , b )	N/A	N/A	y1 = min ( y1 , b ) ;	y1 = min ( y1, b ) ;
9300	set x2 to max ( x2 , c )	N/A	N/A	x2 = max ( x2 , c ) ;	x2 = max ( x2, c ) ;
9301	set y2 to max ( y2 , d )	N/A	N/A	y2 = max ( y2 , d ) ;	y2 = max ( y2, d ) ;
9302	DUMMY	0.0	0.0	}	DUMMY
9303	set w to x2 - x1	N/A	N/A	w = x2 - x1 ;	w = x2 - x1 ;
9304	set h to y2 - y1	N/A	N/A	h = y2 - y1 ;	h = y2 - y1 ;
9305	if w = h and area = w * h print YES else NO )	N/A	N/A	cout << ( w == h && area == w * h ? " YES " : " NO " ) << endl ;	cout << ( w == h && area == w * h? " YES " : " NO " ) << endl ;
9306	DUMMY	0.0	0.0	return 0;	DUMMY
9307	DUMMY	0.0	0.0	}	DUMMY
9308	DUMMY	0.0	0.0	int main() {	DUMMY
9309	declare integer variable n	N/A	N/A	int n ;	int n ;
9310	read n	N/A	N/A	cin >> n ;	cin >> n ;
9311	declare integers x0 , y0 , x1 , y1 and a with a = 0	N/A	N/A	int x0 , y0 , x1 , y1 , a = 0 ;	int x0, y0, x1, y1, a = 0 ;
9312	change x0 and y0 to 1e9 + 87	N/A	N/A	x0 = y0 = 1e9 + 87 ;	x0 = y0 = 1e9 + 87 ;
9313	change x1 and y1 to - 9e8	N/A	N/A	x1 = y1 = - 9e8 ;	x1 = y1 = - 9e8 ;
9314	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
9315	declare ints l , b , r and u	N/A	N/A	int l , b , r , u ;	int l, b, r, u ;
9316	read l , b , r and u	N/A	N/A	cin >> l >> b >> r >> u ;	cin >> l >> b >> r >> u ;
9317	add ( r - l ) * ( u - b ) to a	N/A	N/A	a += ( r - l ) * ( u - b ) ;	a += ( r - l ) * ( u - b ) ;
9318	change x0 to min of x0 and l	N/A	N/A	x0 = min ( x0 , l ) ;	x0 = min ( x0, l ) ;
9319	change x1 to max of x1 and r	N/A	N/A	x1 = max ( x1 , r ) ;	x1 = max ( x1, r ) ;
9320	change y0 to min of y0 and b	N/A	N/A	y0 = min ( y0 , b ) ;	y0 = min ( y0, b ) ;
9321	change y1 to max of y1 and u	N/A	N/A	y1 = max ( y1 , u ) ;	y1 = max ( y1, u ) ;
9322	DUMMY	0.0	0.0	}	DUMMY
9323	subtract x0 from x1	N/A	N/A	x1 -= x0 ;	x1 -= x0 ;
9324	decrease y1 by y0	N/A	N/A	y1 -= y0 ;	y1 -= y0 ;
9325	print " YES \ n " if x1 = y1 and x1 * y1 = a , or " NO \ n " otherwise	N/A	N/A	cout << ( x1 == y1 && x1 * y1 == a ? " YES\n " : " NO\n " ) ;	cout << ( ( x1 == y1 && x1 * y1 == a )? " YES\n " : " NO\nt " ) ;
9326	DUMMY	0.0	0.0	}	DUMMY
9327	declare integer n	N/A	N/A	int n ;	int n ;
9328	DUMMY	0.0	0.0	int main() {	DUMMY
9329	read n	N/A	N/A	cin >> n ;	cin >> n ;
9330	create integers xmin and ymin = 1000000000 and xmax and ymax = - 1	N/A	N/A	int xmin = 1000000000 , xmax = - 1 , ymin = 1000000000 , ymax = - 1 ;	int xmin = 1000000000, ymin = 1e9, xmax = - 1 ;
9331	create integer act = 0	N/A	N/A	int act = 0 ;	int act = 0 ;
9332	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
9333	create ints a , b , c and d	N/A	N/A	int a , b , c , d ;	int a, b, c, d ;
9334	read a , b , c and d	N/A	N/A	cin >> a >> b >> c >> d ;	cin >> a >> b >> c >> d ;
9335	set xmin to min of xmin and a	N/A	N/A	xmin = min ( xmin , a ) ;	xmin = min ( xmin, a ) ;
9336	set xmin to min of xmin and c	N/A	N/A	xmin = min ( xmin , c ) ;	xmin = min ( xmin, c ) ;
9337	set xmax to min of xmax and a	N/A	N/A	xmax = max ( xmax , a ) ;	xmax = min ( xmax, a ) ;
9338	set xmax to max of xmax and a	N/A	N/A	xmax = max ( xmax , c ) ;	xmax = max ( xmax, a ) ;
9339	set ymin to min of ymin and b	N/A	N/A	ymin = min ( ymin , b ) ;	ymin = min ( ymin, b ) ;
9340	set ymin to min of ymin and d	N/A	N/A	ymin = min ( ymin , d ) ;	ymin = min ( ymin, d ) ;
9341	set ymax to max of ymax and b	N/A	N/A	ymax = max ( ymax , b ) ;	ymax = max ( ymax, b ) ;
9342	set ymax to max of ymax and d	N/A	N/A	ymax = max ( ymax , d ) ;	ymax = max ( ymax, d ) ;
9343	add abs ( a - c ) * abs ( b - d ) to act	N/A	N/A	act += ( abs ( a - c ) * abs ( b - d ) ) ;	act += abs ( a - c ) * abs ( b - d ) ;
9344	DUMMY	0.0	0.0	}	DUMMY
9345	if ymax - ymin = xmax - xmin and act = ( ( ymax - ymin ) * ( xmax - xmin ) )	N/A	N/A	if ( ymax - ymin == xmax - xmin && act == ( ( ymax - ymin ) * ( xmax - xmin ) ) )	if ( ymax - ymin == xmax - xmin && act == ( ( ymin - yMin ) * ( xmax + xmin ) ) )
9346	print " YES \ n "	N/A	N/A	cout << " YES\n " ;	cout << " YES\n " ;
9347	else	N/A	N/A	else	else
9348	print " NO \ n "	N/A	N/A	cout << " NO\n " ;	cout << " NO\n " ;
9349	DUMMY	0.0	0.0	return 0;	DUMMY
9350	DUMMY	0.0	0.0	}	DUMMY
9351	DUMMY	0.0	0.0	int main() {	DUMMY
9352	declare integer variable n	N/A	N/A	int n ;	int n ;
9353	read n	N/A	N/A	cin >> n ;	cin >> n ;
9354	x1 , y1 , x2 , y2 and sum are long long ints where sum = 0	N/A	N/A	long long int x1 , y1 , x2 , y2 , sum = 0 ;	long long int x1, y1, x2, y2, sum = 0 ;
9355	declare long long int minmum = INT_MIN , maxmum = INT_MIN , p = INT_MAX and q = INT_MAX	N/A	N/A	long long int minmum = INT_MIN , maxmum = INT_MIN , p = INT_MAX , q = INT_MAX ;	long long int minmum = INT_MIN, maxmum= INT_MAX, p = INTPMAX, q = INT-MAX ;
9356	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
9357	read input to x1 , y1 , x2 and y2	N/A	N/A	cin >> x1 >> y1 >> x2 >> y2 ;	cin >> x1 >> y1 >> x2 >> y2 ;
9358	change maxmum to max of maxmum and max ( x2 and x1 )	N/A	N/A	maxmum = max ( maxmum , max ( x2 , x1 ) ) ;	maxmum = max ( maxmum, max ( x2, x1 ) ) ;
9359	change minmum to max of minmum and max ( y2 and y1 )	N/A	N/A	minmum = max ( minmum , max ( y2 , y1 ) ) ;	minmum = max ( minmum, max ( y2, y1 ) ) ;
9360	assign min of p and min ( y2 and y1 ) to p	N/A	N/A	p = min ( p , min ( y2 , y1 ) ) ;	p = min ( p, min ( y2, y1 ) ) ;
9361	set q to min of q and min ( x2 and x1 )	N/A	N/A	q = min ( q , min ( x2 , x1 ) ) ;	q = min ( q, min ( x2, x1 ) ) ;
9362	add fabs ( x2 - x1 ) * fabs ( y2 - y1 ) to sum	N/A	N/A	sum += fabs ( x2 - x1 ) * fabs ( y2 - y1 ) ;	sum += fabs ( x2 - x1 ) * fabs [ y2 - y1 ] ;
9363	DUMMY	0.0	0.0	}	DUMMY
9364	if sum = ( ( minmum - p ) * ( maxmum - q ) ) and ( maxmum - q ) = = ( minmum - p )	N/A	N/A	if ( sum == ( ( minmum - p ) * ( maxmum - q ) ) && ( maxmum - q ) == ( minmum - p ) )	if ( ( sum == ( ( minmum - p ) * ( maxmum- q ) ) && ( maxMum - q ) == ( minpum - x1 ) )
9365	print " YES "	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
9366	else	N/A	N/A	else	else
9367	print " NO \ n "	N/A	N/A	cout << " NO\n " ;	cout << " NO\n " ;
9368	DUMMY	0.0	0.0	return 0;	DUMMY
9369	DUMMY	0.0	0.0	}	DUMMY
9370	DUMMY	0.0	0.0	int main() {	DUMMY
9371	integers = i , n , x1 , x2 , y1 , y2 , mx = 99999 , my = 99999 , Mx = - 1 , My = - 1 , R = 0	N/A	N/A	int i , n , x1 , x2 , y1 , y2 , mx = 99999 , my = 99999 , Mx = - 1 , My = - 1 , R = 0 ;	const int i, n, x1, x2, y1, y2, mx = 99999, my = - 1, Mx = - 2, R = 0 ;
9372	read n	N/A	N/A	cin >> n ;	cin >> n ;
9373	for = 0 to less than n do the following	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
9374	read x1 , y1 , x2 , y2	N/A	N/A	cin >> x1 >> y1 >> x2 >> y2 ;	cin >> x1 >> y1 >> x2 >> y2 ;
9375	R equals R plus ( x2 - x1 ) * ( y2 - y1 )	N/A	N/A	R += ( x2 - x1 ) * ( y2 - y1 ) ;	R += ( x2 - x1 ) * ( y2 - y1 ) ;
9376	if Mx is less than x2 then do the following Mx = x2	N/A	N/A	if ( Mx < x2 ) Mx = x2 ;	if ( Mx < x2 ) Mx = x2 ;
9377	if My is less than y2 then do the following My = y2	N/A	N/A	if ( My < y2 ) My = y2 ;	if ( My < y2 ) { My = y2 ; }
9378	if mx is greater than x1 then do the following mx = x1	N/A	N/A	if ( mx > x1 ) mx = x1 ;	if ( mx > x1 ) mx = x1 ;
9379	if my is greater than y1 then do the following my = y1	N/A	N/A	if ( my > y1 ) my = y1 ;	if ( my > y1 ) my = y1 ;
9380	DUMMY	0.0	0.0	}	DUMMY
9381	if is R and Mx - mx equals My - my then do the following	N/A	N/A	if ( ( Mx - mx ) * ( My - my ) == R && Mx - mx == My - my )	if ( R == R && Mx - mx == My - my )
9382	output YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
9383	else	N/A	N/A	else	else
9384	output NO	N/A	N/A	cout << " NO " << endl ;	cout << " NO\n " ;
9385	DUMMY	0.0	0.0	return 0;	DUMMY
9386	DUMMY	0.0	0.0	}	DUMMY
9387	DUMMY	0.0	0.0	int main() {	DUMMY
9388	n = integer	N/A	N/A	int n ;	int n ;
9389	S = integer array of size 10	N/A	N/A	int S [ 10 ] ;	int S [ 10 ] ;
9390	while read n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
9391	set all contents of S to 0	N/A	N/A	memset ( S , 0 , sizeof ( S ) ) ;	memset ( S, 0, sizeof ( S ) ) ;
9392	maxx , maxy = integers with maxx = 0 , maxy = 0	N/A	N/A	int maxx = 0 , maxy = 0 ;	int maxx = 0, maxy = 0 ;
9393	minx , miny = integers with minx = 10000000 , miny = 10000000	N/A	N/A	int minx = 10000000 , miny = 10000000 ;	int minx = 10000000, miny = 1e9 ;
9394	C = integer with C = 0	N/A	N/A	int C = 0 ;	int C = 0 ;
9395	x1 , x2 , y1 , y2 = integers	N/A	N/A	int x1 , x2 , y1 , y2 ;	int x1, x2, y1, y2 ;
9396	for i = 1 to n	N/A	N/A	for ( int i = 1 ; i <= n ; ++ i )	for ( int i = 1 ; i <= n ; i ++ )
9397	read x1 , x2 , y1 , y2	N/A	N/A	cin >> x1 >> y1 >> x2 >> y2 ;	cin >> x1 >> x2 >> y1 >> y2 ;
9398	S [ i ] = ( x2 - x1 ) * ( y2 - y1 )	N/A	N/A	S [ i ] = ( x2 - x1 ) * ( y2 - y1 ) ;	S [ i ] = ( x2 - x1 ) * ( y2 - y1 ) ;
9399	C = C + S [ i ]	N/A	N/A	C += S [ i ] ;	C += S [ i ] ;
9400	if x1 < minx , minx = x1	N/A	N/A	if ( x1 < minx ) minx = x1 ;	if ( x1 < minx ) minx = x1 ;
9401	if x2 > maxx , maxx = x2	N/A	N/A	if ( x2 > maxx ) maxx = x2 ;	if ( x2 > maxx ) maxx = x2 ;
9402	if y1 < miny , miny = y1	N/A	N/A	if ( y1 < miny ) miny = y1 ;	if ( y1 < miny ) miny = y1 ;
9403	if y2 > maxy , maxy = y2	N/A	N/A	if ( y2 > maxy ) maxy = y2 ;	if ( y2 > maxy ) maxy = y2 ;
9404	DUMMY	0.0	0.0	}	DUMMY
9405	if C is ( maxx - minx ) * ( maxy - miny ) and ( maxx - minx ) is ( maxy - miny )	N/A	N/A	if ( C == ( maxx - minx ) * ( maxy - miny ) && ( maxx - minx ) == ( maxy - miny ) )	if ( ( C == ( maxx - minx ) * ( maxy - miny ) ) && ( Maxx - Minx ) == ( mxy - minxy ) )
9406	print YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
9407	else	N/A	N/A	else	else
9408	print NO	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
9409	DUMMY	0.0	0.0	}	DUMMY
9410	DUMMY	0.0	0.0	return 0;	DUMMY
9411	DUMMY	0.0	0.0	}	DUMMY
9412	DUMMY	0.0	0.0	int main() {	DUMMY
9413	change output format flag to ios : : fixed	N/A	N/A	cout . setf ( ios :: fixed ) ;	cout << flag << ios :: fixed ;
9414	change output precision to 20	N/A	N/A	cout . precision ( 20 ) ;	cout. precision ( 20 ) ;
9415	declare ints n , x1 , y1 , x2 and y2	N/A	N/A	int n , x1 , y1 , x2 , y2 ;	int n, x1, y1, x2, y2 ;
9416	declare int variables xl and yl = 2139062143 and xr and yr = - 2139062143	N/A	N/A	int xl = 2139062143 , xr = - 2139062143 , yl = 2139062143 , yr = - 2139062143 ;	int xl = 2139062143, xr = - 213946-143, yl = y2 ;
9417	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
9418	declare long long area = 0	N/A	N/A	long long area = 0 ;	long long area = 0 ;
9419	loop , decrementing n , while it is not 0	N/A	N/A	while ( n -- )	while ( n -- )
9420	read x1 , y1 , x2 and y2	N/A	N/A	cin >> x1 >> y1 >> x2 >> y2 ;	cin >> x1 >> y1 >> x2 >> y2 ;
9421	set xl to min of xl and x1	N/A	N/A	xl = min ( xl , x1 ) ;	kl = min ( xl, x1 ) ;
9422	change xr to xr if xr > x2 , else to x2	N/A	N/A	xr = ( xr > x2 ? xr : x2 ) ;	r = xr > x2? xr : x2 ;
9423	set yl to min of yl and y1	N/A	N/A	yl = min ( yl , y1 ) ;	l = min ( yl, y1 ) ;
9424	change yr to yr if yr > y2 , else to y2	N/A	N/A	yr = ( yr > y2 ? yr : y2 ) ;	yr = ( yr > y2 )? yr : y2 ;
9425	add 1LL * ( x2 - x1 ) * ( y2 - y1 ) to area	N/A	N/A	area += 1LL * ( x2 - x1 ) * ( y2 - y1 ) ;	area += 1LL * ( x2 - x1 ) * ( y2 - y1 ) ;
9426	DUMMY	0.0	0.0	}	DUMMY
9427	if xr - xl = yr - yl and area = 1LL * ( xr - xl ) * ( yr - yl )	N/A	N/A	if ( xr - xl == yr - yl && area == 1LL * ( xr - xl ) * ( yr - yl ) )	if ( ( xr - xl ) == yr - yl && area == 1LL * ( xl - x1 ) * ( yr - Yl ) )
9428	print " YES " to stdout	N/A	N/A	puts ( " YES " ) ;	puts ( " YES " ) ;
9429	else	N/A	N/A	else	else
9430	print " NO " to stdout	N/A	N/A	puts ( " NO " ) ;	puts ( " NO " ) ;
9431	DUMMY	0.0	0.0	return 0;	DUMMY
9432	DUMMY	0.0	0.0	}	DUMMY
9433	DUMMY	0.0	0.0	int main() {	DUMMY
9434	let n be a integer	N/A	N/A	int n ;	int n ;
9435	read n	N/A	N/A	cin >> n ;	cin >> n ;
9436	create ints x0 , y0 , x1 , y1 , a with a = 0	N/A	N/A	int x0 , y0 , x1 , y1 , a = 0 ;	int x0, y0, x1, y1, a = 0 ;
9437	set x0 and y0 to 1e9 + 87	N/A	N/A	x0 = y0 = 1e9 + 87 ;	x0 = y0 = 1e9 + 87 ;
9438	assign - 9e8 to y1 and x1	N/A	N/A	x1 = y1 = - 9e8 ;	y1 = x1 = - 9e8 ;
9439	for n iterations	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
9440	create integers l , b , r , u	N/A	N/A	int l , b , r , u ;	int l, b, r, u ;
9441	read l , b , r and u	N/A	N/A	cin >> l >> b >> r >> u ;	cin >> l >> b >> r >> u ;
9442	add a to ( r - l ) * ( u - b ) and assign the result to a	N/A	N/A	a += ( r - l ) * ( u - b ) ;	a += ( r - l ) * ( u - b ) ;
9443	set x0 to min ( x0 , l )	N/A	N/A	x0 = min ( x0 , l ) ;	x0 = min ( x0, l ) ;
9444	assign the greater of x1 and r to x1	N/A	N/A	x1 = max ( x1 , r ) ;	x1 = max ( x1, r ) ;
9445	set y0 to min ( y0 , b )	N/A	N/A	y0 = min ( y0 , b ) ;	y0 = min ( y0, b ) ;
9446	set y1 to max of y1 and u	N/A	N/A	y1 = max ( y1 , u ) ;	y1 = max ( y1, u ) ;
9447	DUMMY	0.0	0.0	}	DUMMY
9448	x1 = x1 - x0	N/A	N/A	x1 -= x0 ;	x1 = x1 - x0 ;
9449	set y1 to y1 - y0	N/A	N/A	y1 -= y0 ;	y1 = y1 - y0 ;
9450	print ( x1 = = y1 & & x1 * y1 = = a ? " YES \ n " : " NO \ n " )	N/A	N/A	cout << ( x1 == y1 && x1 * y1 == a ? " YES\n " : " NO\n " ) ;	cout << ( x1 == y1 && x1 * y1 == a? " YES\n " : " NO\nt " ) << endl ;
9451	DUMMY	0.0	0.0	}	DUMMY
9452	DUMMY	0.0	0.0	int main() {	DUMMY
9453	mn , mn2 = integers with mn = 50000 , mn2 = mn	N/A	N/A	int mn = 50000 , mn2 = mn ;	int mn = 50000, mn2 = mn ;
9454	N , mx , mx2 , Ar = integers with mx = - 1 , mx2 = mx , Ar = 0	N/A	N/A	int N , mx = - 1 , mx2 = mx , Ar = 0 ;	int N, mx = - 1, mxb2 = mx, Ar = 0 ;
9455	read N	N/A	N/A	cin >> N ;	cin >> N ;
9456	for i = 1 to N	N/A	N/A	for ( int i = 1 ; i <= N ; ++ i )	for ( int i = 1 ; i <= N ; i ++ )
9457	a , b , x , y = integers	N/A	N/A	int a , b , x , y ;	int a, b, x, y ;
9458	read a , b , x , y	N/A	N/A	cin >> a >> b >> x >> y ;	cin >> a >> b >> x >> y ;
9459	Ar = Ar + ( x - a ) * ( y - b )	N/A	N/A	Ar += ( x - a ) * ( y - b ) ;	Ar += ( x - a ) * ( y - b ) ;
9460	mn = min of mn and min ( a , x )	N/A	N/A	mn = min ( mn , min ( a , x ) ) ;	mn = min ( mn, min ( a, x ) ) ;
9461	mn2 = min of mn2 and min ( b , y )	N/A	N/A	mn2 = min ( mn2 , min ( b , y ) ) ;	mn2 = min ( mn2, min ( b, y ) ) ;
9462	mx = max of mx and max ( a , x )	N/A	N/A	mx = max ( mx , max ( a , x ) ) ;	mx = max ( mx, max ( a, x ) ) ;
9463	mx2 = max of mx2 and max ( b , y )	N/A	N/A	mx2 = max ( mx2 , max ( b , y ) ) ;	mx2 = max ( mx2, max ( b, y ) ) ;
9464	DUMMY	0.0	0.0	}	DUMMY
9465	if ( mx - mn is mx2 - mn2 and Ar is ( mx - mn ) * ( mx2 - mn2 ) )	N/A	N/A	if ( mx - mn == mx2 - mn2 && Ar == ( mx - mn ) * ( mx2 - mn2 ) )	if ( mx - mn == mx2 - mnn2 && Ar == ( m x - mm ) * ( mxb2 - nn2 ) )
9466	print YES	N/A	N/A	cout << " YES\n " ;	cout << " YES " << endl ;
9467	else	N/A	N/A	else	else
9468	print NO	N/A	N/A	cout << " NO\n " ;	cout << " NO " << endl ;
9469	DUMMY	0.0	0.0	return 0;	DUMMY
9470	DUMMY	0.0	0.0	}	DUMMY
9471	DUMMY	0.0	0.0	int main() {	DUMMY
9472	create long long n	N/A	N/A	long long n ;	long long n ;
9473	read n	N/A	N/A	cin >> n ;	cin >> n ;
9474	while n % 3 is 0 , set n to n / 3	N/A	N/A	while ( n % 3 == 0 ) n /= 3 ;	while ( n % 3 == 0 ) { n /= 3 ; }
9475	print n / 3 + 1 print newline	N/A	N/A	cout << n / 3 + 1 << endl ;	cout << n / 3 + 1 << endl ;
9476	DUMMY	0.0	0.0	return 0;	DUMMY
9477	DUMMY	0.0	0.0	}	DUMMY
9478	DUMMY	0.0	0.0	int main() {	DUMMY
9479	create unsigned long long n , t , coi with coi = 1	N/A	N/A	unsigned long long n , t , coi = 1 ;	unsigned long long n, t, coi = 1 ;
9480	read n	N/A	N/A	cin >> n ;	cin >> n ;
9481	while n % 3 is 0 , set n to n / 3	N/A	N/A	while ( n % 3 == 0 ) n /= 3 ;	while ( n % 3 == 0 ) n /= 3 ;
9482	print ( n - 1 ) / 3 + 1 print ' \ n '	N/A	N/A	cout << ( n - 1 ) / 3 + 1 << ' \n ' ;	cout << ( n - 1 ) / 3 + 1 <<'\n';
9483	DUMMY	0.0	0.0	}	DUMMY
9484	n , ans = long long with ans = 0	N/A	N/A	long long n , ans = 0 ;	long long n, ans = 0 ;
9485	DUMMY	0.0	0.0	int main() {	DUMMY
9486	read n	N/A	N/A	cin >> n ;	cin >> n ;
9487	while n modulo 3 is 0 , n = n / 3	N/A	N/A	while ( n % 3 == 0 ) n /= 3 ;	while ( n % 3 == 0 ) { n /= 3 ; }
9488	ans = n / 3 + 1	N/A	N/A	ans = n / 3 + 1 ;	ans = n / 3 + 1 ;
9489	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
9490	DUMMY	0.0	0.0	return 0;	DUMMY
9491	DUMMY	0.0	0.0	}	DUMMY
9492	in function cil taking two long longs x and y and returning a long long	N/A	N/A	long long cil ( long long x , long long y )	long long cil ( long long x, long long y )
9493	if x is a multiple if y	N/A	N/A	if ( x % y == 0 )	if ( x % y == 0 )
9494	return x / y	N/A	N/A	return x / y ;	return x / y ;
9495	else	N/A	N/A	else	else
9496	return x / y + 1	N/A	N/A	return x / y + 1 ;	return x / y + 1 ;
9497	DUMMY	0.0	0.0	}	DUMMY
9498	DUMMY	0.0	0.0	int main() {	DUMMY
9499	n , i , j = long long with j = 0	N/A	N/A	long long n , i , j = 0 ;	long long n, i, j = 0 ;
9500	read n	N/A	N/A	cin >> n ;	cin >> n ;
9501	set i to n	N/A	N/A	i = n ;	i = n ;
9502	loop while n is a multiple of 3 and greater than 0	N/A	N/A	while ( n % 3 == 0 && n > 0 )	while ( n % 3 == 0 && i > 0 )
9503	increment j	N/A	N/A	j ++ ;	j ++ ;
9504	set n to n / 3	N/A	N/A	n /= 3 ;	n /= 3 ;
9505	DUMMY	0.0	0.0	}	DUMMY
9506	l = long long with l = pow of 3 and j + 1	N/A	N/A	long long l = pow ( 3 , j + 1 ) ;	long long l = pow ( 3, j + 1 ) ;
9507	print cil of i and l	N/A	N/A	cout << cil ( i , l ) << endl ;	cout << cil ( i, l ) << endl ;
9508	DUMMY	0.0	0.0	}	DUMMY
9509	DUMMY	0.0	0.0	int main() {	DUMMY
9510	let n be a long integer	N/A	N/A	long long n ;	long long n ;
9511	read n	N/A	N/A	cin >> n ;	cin >> n ;
9512	let sum , x be long integers with x = 3	N/A	N/A	long long sum , x = 3 ;	long long sum, x = 3 ;
9513	while n modulo x is equal to 0 , x is equal to x * 3	N/A	N/A	while ( n % x == 0 ) { x *= 3 ; }	while ( n % x == 0 ) x *= 3 ;
9514	n / x + 1 is assigned to sum	N/A	N/A	sum = n / x + 1 ;	sum = n / x + 1 ;
9515	print sum and newline	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
9516	DUMMY	0.0	0.0	return 0;	DUMMY
9517	DUMMY	0.0	0.0	}	DUMMY
9518	DUMMY	0.0	0.0	int main() {	DUMMY
9519	define integers i , j , k , and n	N/A	N/A	long long i , j , k , n ;	int i, j, k, n ;
9520	read n	N/A	N/A	cin >> n ;	cin >> n ;
9521	define j and set to 3 ; for i from 1 to 35 , set j to itself * 3	N/A	N/A	for ( i = 1 , j = 3 ; i <= 35 ; i ++ , j *= 3 )	for ( j = 1 ; j <= 35 ; j = i * 3 )
9522	if n modulo j isn ' t 0 , then break out	N/A	N/A	if ( n % j != 0 ) break ;	if ( n % j!= 0 ) break ;
9523	DUMMY	0.0	0.0	}	DUMMY
9524	print n / j + 1 and a newline	N/A	N/A	cout << ( n / j ) + 1 << endl ;	cout << n / j + 1 << " \n " ;
9525	DUMMY	0.0	0.0	}	DUMMY
9526	create FILE pointer stream	N/A	N/A	FILE * stream ;	<< " FILE * " ;
9527	DUMMY	0.0	0.0	int main() {	DUMMY
9528	create long long n	N/A	N/A	long long n ;	long long n ;
9529	read n	N/A	N/A	cin >> n ;	cin >> n ;
9530	create long long x with x = 1	N/A	N/A	long long x = 1 ;	long long x = 1 ;
9531	while n % x is 0 , set x to x * 3	N/A	N/A	while ( n % x == 0 ) { x *= 3 ; }	while ( n % x == 0 ) x *= 3 ;
9532	print ( n / x ) + 1 print newline	N/A	N/A	cout << ( n / x ) + 1 << endl ;	cout << ( n / x ) + 1 << endl ;
9533	DUMMY	0.0	0.0	}	DUMMY
9534	DUMMY	0.0	0.0	int main() {	DUMMY
9535	n = integer	N/A	N/A	long long n ;	int n ;
9536	while reading values n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
9537	while n modulo 3 is 0 , then set n to n / 3	N/A	N/A	while ( n % 3 == 0 ) n /= 3 ;	while ( n % 3 == 0 ) { n /= 3 ; }
9538	print n / 3 + 1 and a new line	N/A	N/A	cout << n / 3 + 1 << endl ;	cout << n / 3 + 1 << endl ;
9539	DUMMY	0.0	0.0	}	DUMMY
9540	DUMMY	0.0	0.0	return 0;	DUMMY
9541	DUMMY	0.0	0.0	}	DUMMY
9542	set first 4 elements of dx to 0 , 0 , - 1 , 1	N/A	N/A	int dx [ 4 ] = { 0 , 0 , - 1 , 1 } ;	for ( int i = 0 ; i < 4 ; i ++ ) { dx [ i ] = 0, 0, - 1, 1 ; }
9543	assign 1 , - 1 , 0 , 0 to first 4 elements of dy	N/A	N/A	int dy [ 4 ] = { 1 , - 1 , 0 , 0 } ;	for ( int i = 1 ; i <= 4 ; i ++ ) { dy [ i ] = 1, - 1, 0, 0 ; }
9544	DUMMY	0.0	0.0	int main() {	DUMMY
9545	create long long int n	N/A	N/A	long long int n ;	long long int n ;
9546	read n	N/A	N/A	cin >> n ;	cin >> n ;
9547	set x and ans to 1	N/A	N/A	long long int x = 1 , ans = 1 ;	long long int x = 1, ans = 1 ;
9548	while x less than n	N/A	N/A	while ( x < n )	while ( x < n )
9549	if n mod x different from 0 , set ans = max of ans and n / x + 1	N/A	N/A	if ( n % x != 0 ) ans = max ( ans , n / x + 1 ) ;	if ( n % x!= 0 ) ans = max ( ans, n / x + 1 ) ;
9550	set x = x * 3	N/A	N/A	x = x * 3 ;	x *= 3 ;
9551	DUMMY	0.0	0.0	}	DUMMY
9552	print ans and a newline	N/A	N/A	cout << ans << ' \n ' ;	cout << ans <<'\n';
9553	DUMMY	0.0	0.0	}	DUMMY
9554	DUMMY	0.0	0.0	int main() {	DUMMY
9555	create long long n	N/A	N/A	long long n ;	long long n ;
9556	read n and loop further	N/A	N/A	while ( cin >> n )	while ( cin >> n )
9557	declare long long a	N/A	N/A	long long a ;	long long a ;
9558	declare long long t = 3	N/A	N/A	long long t = 3 ;	long long t = 3 ;
9559	while n % t = 0 , multiply t by 3	N/A	N/A	while ( ! ( n % t ) ) t *= 3 ;	while ( n % t == 0 ) t *= 3 ;
9560	print n / t + 1	N/A	N/A	cout << n / t + 1 << endl ;	cout << n / t + 1 << endl ;
9561	DUMMY	0.0	0.0	}	DUMMY
9562	DUMMY	0.0	0.0	return 0;	DUMMY
9563	DUMMY	0.0	0.0	}	DUMMY
9564	DUMMY	0.0	0.0	int main() {	DUMMY
9565	create long longs n and a	N/A	N/A	long long n , a ;	long long n, a ;
9566	read n and keep looping	N/A	N/A	while ( cin >> n )	while ( cin >> n )
9567	set a to 3	N/A	N/A	a = 3 ;	a = 3 ;
9568	while n modulo a is 0	N/A	N/A	while ( n % a == 0 ) a *= 3 ;	while ( n % a == 0 )
9569	print n / a + 1	N/A	N/A	cout << n / a + 1 << endl ;	cout << n / a + 1 << endl ;
9570	DUMMY	0.0	0.0	}	DUMMY
9571	DUMMY	0.0	0.0	return 0;	DUMMY
9572	DUMMY	0.0	0.0	}	DUMMY
9573	cil is a long long function with long long arguments x and y	N/A	N/A	long long cil ( long long x , long long y )	long long cil ( long long x, long long y )
9574	if x % y is equal to 0	N/A	N/A	if ( x % y == 0 )	if ( x % y == 0 )
9575	return x / y	N/A	N/A	return x / y ;	return x / y ;
9576	else	N/A	N/A	else	else
9577	return x / y + 1	N/A	N/A	return x / y + 1 ;	return x / y + 1 ;
9578	DUMMY	0.0	0.0	}	DUMMY
9579	DUMMY	0.0	0.0	int main() {	DUMMY
9580	declare long long variables n , i and j with j = 0	N/A	N/A	long long n , i , j = 0 ;	long long n, i, j = 0 ;
9581	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
9582	change i to n	N/A	N/A	i = n ;	i = n ;
9583	while n % 3 is 0 and n > 0	N/A	N/A	while ( n % 3 == 0 && n > 0 )	while ( n % 3 == 0 && n > 0 )
9584	increment j	N/A	N/A	j ++ ;	j ++ ;
9585	divide n by 3	N/A	N/A	n /= 3 ;	n /= 3 ;
9586	DUMMY	0.0	0.0	}	DUMMY
9587	create long long l = 3 raised to power j + 1	N/A	N/A	long long l = pow ( 3 , j + 1 ) ;	long long l = pow ( 3, j + 1 ) ;
9588	print cil ( i , l )	N/A	N/A	cout << cil ( i , l ) << endl ;	cout << cil ( i, l ) << endl ;
9589	DUMMY	0.0	0.0	}	DUMMY
9590	DUMMY	0.0	0.0	int main() {	DUMMY
9591	create long longs n , m , i , j , k	N/A	N/A	long long n , m , i , j , k ;	long long n, m, i, j, k ;
9592	read n	N/A	N/A	cin >> n ;	cin >> n ;
9593	set k to 3	N/A	N/A	k = 3 ;	k = 3 ;
9594	while 1 is true	N/A	N/A	while ( 1 )	while ( 1 )
9595	if n % k is not 0	N/A	N/A	if ( n % k != 0 )	if ( n % k!= 0 )
9596	set m to ( n / k ) + 1	N/A	N/A	m = ( n / k ) + 1 ;	m = ( n / k ) + 1 ;
9597	break loop	N/A	N/A	break ;	break ;
9598	DUMMY	0.0	0.0	}	DUMMY
9599	set value of k to 3	N/A	N/A	k *= 3 ;	k = 3 ;
9600	DUMMY	0.0	0.0	}	DUMMY
9601	print m print newline	N/A	N/A	cout << m << endl ;	cout << m << endl ;
9602	DUMMY	0.0	0.0	}	DUMMY
9603	declare const int maxn = 100001	N/A	N/A	const int maxn = 100001 ;	const int maxn = 100001 ;
9604	declare long long n	N/A	N/A	long long n ;	long long n ;
9605	DUMMY	0.0	0.0	int main() {	DUMMY
9606	read n	N/A	N/A	cin >> n ;	cin >> n ;
9607	while n modulo 3 = 0 , divide n by 3	N/A	N/A	while ( n % 3 == 0 ) n /= 3 ;	while ( n % 3 == 0 ) n /= 3 ;
9608	print n / 3 + 1	N/A	N/A	cout << n / 3 + 1 << endl ;	cout << n / 3 + 1 << endl ;
9609	DUMMY	0.0	0.0	}	DUMMY
9610	in function power_of_two taking int n and returning bool	N/A	N/A	bool power_of_two ( int n )	bool power_of_two ( int n )
9611	m = int	N/A	N/A	int m ;	int m ;
9612	set m to n - 1	N/A	N/A	m = n - 1 ;	m = n - 1 ;
9613	if not n bitwise - and m	N/A	N/A	if ( ! n & m )	if (! ( n & m ) )
9614	return true	N/A	N/A	return true ;	return true ;
9615	else	N/A	N/A	else	else
9616	return false	N/A	N/A	return false ;	return false ;
9617	DUMMY	0.0	0.0	}	DUMMY
9618	DUMMY	0.0	0.0	int main() {	DUMMY
9619	n , m , a , mn = int with mn = 10000	N/A	N/A	int n , m , a , mn = 10000 ;	int n, m, a, mn = 10000 ;
9620	read n then m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
9621	v = int vector	N/A	N/A	vector < int > v ;	vector < int > v ;
9622	for i = 0 to m	N/A	N/A	for ( int i = 0 ; i < m ; i ++ )	for ( int i = 0 ; i < m ; i ++ )
9623	read a	N/A	N/A	cin >> a ;	cin >> a ;
9624	append a to v	N/A	N/A	v . push_back ( a ) ;	v. push_back ( a ) ;
9625	DUMMY	0.0	0.0	}	DUMMY
9626	sort v	N/A	N/A	sort ( v . begin ( ) , v . end ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
9627	for i = n - 1 to m set mn to min of mn and v [ i ] - v [ i - n + 1 ]	N/A	N/A	for ( int i = n - 1 ; i < m ; i ++ ) { mn = min ( mn , v [ i ] - v [ i - n + 1 ] ) ; }	for ( int i = n - 1 ; i < m ; i ++ ) { mn = min ( mn, v [ i ] - v [ 1 - n + 1 ] ) ; }
9628	print mn	N/A	N/A	cout << mn << endl ;	cout << mn << endl ;
9629	DUMMY	0.0	0.0	}	DUMMY
9630	DUMMY	0.0	0.0	int main() {	DUMMY
9631	let integers n , m , i , and ans = INT_MAX and int array a of size 1000	N/A	N/A	int n , m , a [ 1000 ] , i , ans = INT_MAX ;	int n, m, i, a [ 1000 ], ans = INT_MAX ;
9632	read n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
9633	for i = 0 to m exclusive , read a [ i ]	N/A	N/A	for ( i = 0 ; i < m ; i ++ ) cin >> a [ i ] ;	for ( i = 0 ; i < m ; i ++ ) cin >> a [ i ] ;
9634	sort array a	N/A	N/A	sort ( a , a + m ) ;	sort ( a, a + m ) ;
9635	for i = 0 to m - n , set ans to the min of ans and a [ i + n - 1 ] - a [ i ]	N/A	N/A	for ( i = 0 ; i <= m - n ; i ++ ) ans = min ( ans , a [ i + n - 1 ] - a [ i ] ) ;	for ( i = 0 ; i < m - n ; i ++ ) { ans = min ( ans, a [ i + n - 1 ] - a [ 1 ] ) ; }
9636	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
9637	DUMMY	0.0	0.0	}	DUMMY
9638	DUMMY	0.0	0.0	int main() {	DUMMY
9639	let n , m , and f with 1000 indices be int	N/A	N/A	int n , m , f [ 1000 ] ;	int n, m, f [ 1000 ] ;
9640	read n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
9641	read f of i i times from 0 to m exclusive	N/A	N/A	for ( int i = 0 ; i < m ; ++ i ) { cin >> f [ i ] ; }	for ( int i = 0 ; i < m ; i ++ ) { cin >> f [ i ] ; }
9642	sort f and f plus m	N/A	N/A	sort ( f , f + m ) ;	sort ( f, f + m ) ;
9643	let least be f [ n - 1 ] - f [ 0 ]	N/A	N/A	int least = f [ n - 1 ] - f [ 0 ] ;	int least = f [ n - 1 ] - f [ 0 ] ;
9644	for i from to 1 m - n inclusive	N/A	N/A	for ( int i = 1 ; i <= m - n ; ++ i )	for ( int i = 1 ; i <= m - n ; i ++ )
9645	if f [ i + n - 1 ] - f [ i ] < least set least to least = f [ i + n - 1 ] - f [ i ]	N/A	N/A	if ( f [ i + n - 1 ] - f [ i ] < least ) { least = f [ i + n - 1 ] - f [ i ] ; }	if ( ( f [ i + n - 1 ] - f [ 1 ] ) < least ) least = ( long long ) f [ ( n - i - 1 ) - ( long double ) f. at ( i ) ;
9646	DUMMY	0.0	0.0	}	DUMMY
9647	print least	N/A	N/A	cout << least << endl ;	cout << least << endl ;
9648	DUMMY	0.0	0.0	return 0;	DUMMY
9649	DUMMY	0.0	0.0	}	DUMMY
9650	create integers array dx initialized with 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1	N/A	N/A	int dx [ ] = { 1 , 0 , - 1 , 0 , 1 , 1 , - 1 , - 1 } ;	int dx [ ] = { 1, 0, - 1, - 0, 1, 1 } ;
9651	create integers array dy initialized with 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1	N/A	N/A	int dy [ ] = { 0 , 1 , 0 , - 1 , 1 , - 1 , 1 , - 1 } ;	int dy [ ] = { 0, 1, 0, - 1, 1 } ;
9652	in the function fast	N/A	N/A	void fast ( ) { }	void fast ( ) { }
9653	declare const long long md = 1e9 + 7	N/A	N/A	const long long md = 1e9 + 7 ;	const long long md = 1e9 + 7 ;
9654	DUMMY	0.0	0.0	int main() {	DUMMY
9655	call fast ( )	N/A	N/A	fast ( ) ;	fast ( ) ;
9656	create long longs n and m	N/A	N/A	long long n , m ;	long long n, m ;
9657	read n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
9658	declare an array of long longs a with m + 5 elements	N/A	N/A	long long a [ m + 5 ] ;	long long a [ m + 5 ] ;
9659	read a from the input m times	N/A	N/A	for ( int i = 0 ; i < m ; i ++ ) cin >> a [ i ] ;	for ( long long i = 0 ; i < m ; i ++ ) cin >> a [ i ] ;
9660	sort first m elements of a	N/A	N/A	sort ( a , a + m ) ;	sort ( a, a + m ) ;
9661	declare long long variable ans = LLONG_MAX	N/A	N/A	long long ans = LLONG_MAX ;	long long ans = LLONG_MAX ;
9662	for i from 0 to m - n inclusive , change ans to min of ans and a [ i + ( n - 1 ) ] - a [ i ]	N/A	N/A	for ( int i = 0 ; i <= m - n ; i ++ ) { ans = min ( ans , a [ i + ( n - 1 ) ] - a [ i ] ) ; }	for ( long long i = 0 ; i <= m - n ; i ++ ) ans = min ( ans, a [ i + ( n - 1 ) ] - a [ 1 ] ) ;
9663	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
9664	DUMMY	0.0	0.0	return 0;	DUMMY
9665	DUMMY	0.0	0.0	}	DUMMY
9666	DUMMY	0.0	0.0	int main() {	DUMMY
9667	n , m = integers	N/A	N/A	int n , m ;	int n, m ;
9668	read n , m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
9669	arr = integer array of size 100000	N/A	N/A	int arr [ 100000 ] ;	int arr [ 100000 ] ;
9670	for i = 0 to m exclusive , read arr [ i ]	N/A	N/A	for ( int i = 0 ; i < m ; ++ i ) { cin >> arr [ i ] ; }	for ( int i = 0 ; i < m ; i ++ ) { cin >> arr [ i ] ; }
9671	sort arr and arr + m	N/A	N/A	sort ( arr , arr + m ) ;	sort ( arr, arr + m ) ;
9672	mindiff = integer with mindiff = INT_MAX	N/A	N/A	int mindiff = INT_MAX ;	int mindiff = INT_MAX ;
9673	for i = 0 to m - ( n - 1 ) exclusive	N/A	N/A	for ( int i = 0 ; i < m - ( n - 1 ) ; i ++ )	for ( int i = 0 ; i < m - ( n - 1 ) ; i ++ )
9674	diff = integer with diff = arr [ i + n - 1 ] - arr [ i ]	N/A	N/A	int diff = arr [ i + n - 1 ] - arr [ i ] ;	int diff = arr [ i + n - 1 ] - arr [ 1 ] ;
9675	if diff < mindiff , mindiff = diff	N/A	N/A	if ( diff < mindiff ) { mindiff = diff ; }	if ( diff < mindiff ) { mindiff = diff ; }
9676	DUMMY	0.0	0.0	}	DUMMY
9677	print mindiff	N/A	N/A	cout << mindiff << endl ;	cout << mindiff << endl ;
9678	DUMMY	0.0	0.0	return 0;	DUMMY
9679	DUMMY	0.0	0.0	}	DUMMY
9680	DUMMY	0.0	0.0	int main() {	DUMMY
9681	create new variables n , m , i , j , total , val , diff and mini be ints with total = 0 and mini = 10000	N/A	N/A	int n , m , i , j , total = 0 , val , diff , mini = 10000 ;	int n, m, i, j, total = 0, val, diff, mini = 10000 ;
9682	declare new vector of integers called v	N/A	N/A	vector < int > v ;	vector < int > v ;
9683	read variables n and m from the input	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
9684	for i = 0 to m exclusive	N/A	N/A	for ( i = 0 ; i < m ; i ++ )	for ( i = 0 ; i < m ; i ++ )
9685	read val	N/A	N/A	cin >> val ;	cin >> val ;
9686	push val to the end of v	N/A	N/A	v . push_back ( val ) ;	v. push_back ( val ) ;
9687	DUMMY	0.0	0.0	}	DUMMY
9688	sort v	N/A	N/A	sort ( v . begin ( ) , v . end ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
9689	start for loop from i = 0 to m - n inclusive incrementing i	N/A	N/A	for ( i = 0 ; i <= m - n ; i ++ )	for ( int i = 0 ; i <= m - n ; i ++ )
9690	change val to abs ( v [ i ] - v [ i + n - 1 ] )	N/A	N/A	val = abs ( v [ i ] - v [ i + n - 1 ] ) ;	val = abs ( v [ i ] - v [ j + n - 1 ] ) ;
9691	change mini to min of mini and val	N/A	N/A	mini = min ( mini , val ) ;	mini = min ( mini, val ) ;
9692	DUMMY	0.0	0.0	}	DUMMY
9693	print mini	N/A	N/A	cout << mini << endl ;	cout << mini << endl ;
9694	DUMMY	0.0	0.0	}	DUMMY
9695	DUMMY	0.0	0.0	int main() {	DUMMY
9696	create integers n and m , and an array of integers f with size 1000	N/A	N/A	int n , m , f [ 1000 ] ;	int n, m, f [ 1000 ] ;
9697	read input to n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
9698	for integer i = 0 to m exclusive , read input to f [ i ]	N/A	N/A	for ( int i = 0 ; i < m ; ++ i ) { cin >> f [ i ] ; }	for ( int i = 0 ; i < m ; i ++ ) cin >> f [ i ] ;
9699	sort m elements of f	N/A	N/A	sort ( f , f + m ) ;	sort ( f, f + m ) ;
9700	create integer least = f [ n - 1 ] - f [ 0 ]	N/A	N/A	int least = f [ n - 1 ] - f [ 0 ] ;	int least = f [ n - 1 ] - f [ 0 ] ;
9701	for i from 1 to m - n inclusive	N/A	N/A	for ( int i = 1 ; i <= m - n ; ++ i )	for ( int i = 1 ; i <= m - n ; i ++ )
9702	if f [ i + n - 1 ] - f [ i ] is less than least , assign f [ i + n - 1 ] - f [ i ] to least	N/A	N/A	if ( f [ i + n - 1 ] - f [ i ] < least ) { least = f [ i + n - 1 ] - f [ i ] ; }	if ( ( f [ i + n - 1 ] - f [ 1 ] ) < least ) least = f [ ( i + ( n - i ] - F [ i ] ) ;
9703	DUMMY	0.0	0.0	}	DUMMY
9704	print least	N/A	N/A	cout << least << endl ;	cout << least << endl ;
9705	DUMMY	0.0	0.0	return 0;	DUMMY
9706	DUMMY	0.0	0.0	}	DUMMY
9707	DUMMY	0.0	0.0	int main() {	DUMMY
9708	let n , m , mn be integers wtih mn = 1005 and a be an integer array of size 60	N/A	N/A	int n , m , a [ 60 ] , mn = 1005 ;	int n, m, mn = 1005, a [ 60 ] ;
9709	input n	N/A	N/A	cin >> n ;	cin >> n ;
9710	input m	N/A	N/A	cin >> m ;	cin >> m ;
9711	input m number of items into a	N/A	N/A	for ( int i = 0 ; i < m ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < m ; i ++ ) cin >> a [ i ] ;
9712	call sort with parameters a , a + m	N/A	N/A	sort ( a , a + m ) ;	sort ( a, a + m ) ;
9713	for i = 0 to m - n	N/A	N/A	for ( int i = 0 ; i < m - n + 1 ; i ++ )	for ( int i = 0 ; i < m - n ; i ++ )
9714	set integer d to a [ i + n - 1 ] - a [ i ]	N/A	N/A	int d = a [ i + n - 1 ] - a [ i ] ;	int d = a [ i + n - 1 ] - a [ 1 ] ;
9715	if d < mn set mn = d	N/A	N/A	if ( d < mn ) mn = d ;	if ( d < mn ) mn = d ;
9716	DUMMY	0.0	0.0	}	DUMMY
9717	print mn	N/A	N/A	cout << mn << endl ;	cout << mn << endl ;
9718	DUMMY	0.0	0.0	return 0;	DUMMY
9719	DUMMY	0.0	0.0	}	DUMMY
9720	DUMMY	0.0	0.0	int main() {	DUMMY
9721	declare x , y as integers	N/A	N/A	int x , y ;	int x, y ;
9722	read x , y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
9723	declare integer array m size y	N/A	N/A	int m [ y ] ;	int m [ y ] ;
9724	declare integer array arr size y	N/A	N/A	int arr [ y ] ;	int arr [ y ] ;
9725	for i = 0 to y exclusive , read arr [ i ]	N/A	N/A	for ( int i = 0 ; i < y ; i ++ ) { cin >> arr [ i ] ; }	for ( int i = 0 ; i < y ; i ++ ) { cin >> arr [ i ] ; }
9726	sort elements from arr to arr + y	N/A	N/A	sort ( arr , arr + y ) ;	sort ( arr, arr + y ) ;
9727	declare integer k with k = 0	N/A	N/A	int k = 0 ;	int k = 0 ;
9728	for i = 0 to y - x + 1 exclusive	N/A	N/A	for ( int i = 0 ; i < y - x + 1 ; i ++ )	for ( int i = 0 ; i < y - x + 1 ; i ++ )
9729	let m [ k ] be arr [ x - 1 + i ] - arr [ i ]	N/A	N/A	m [ k ] = arr [ x - 1 + i ] - arr [ i ] ;	m [ k ] = arr [ x - 1 + i ] - arr [ i ] ;
9730	increment k	N/A	N/A	k ++ ;	k ++ ;
9731	DUMMY	0.0	0.0	}	DUMMY
9732	let integer min be 99999	N/A	N/A	int min = 99999 ;	int min = 99999 ;
9733	for j = 0 to k exclusive	N/A	N/A	for ( int j = 0 ; j < k ; j ++ )	for ( int j = 0 ; j < k ; j ++ )
9734	if min is greater than m [ j ] , let min be m [ j ]	N/A	N/A	if ( min > m [ j ] ) min = m [ j ] ;	if ( min > m [ j ] ) { min = m [ i ] ; }
9735	DUMMY	0.0	0.0	}	DUMMY
9736	print min , newline	N/A	N/A	cout << min << endl ;	cout << min << endl ;
9737	DUMMY	0.0	0.0	return 0;	DUMMY
9738	DUMMY	0.0	0.0	}	DUMMY
9739	DUMMY	0.0	0.0	int main() {	DUMMY
9740	let i , a , b , j , s , c , d be integers with c = array of integers of length 1000 , d = array of integers of length 1000	N/A	N/A	int i , a , b , j , s , c [ 1000 ] , d [ 1000 ] ;	int i, a, b, j, s, c [ 1000 ], d [ 100 ] ;
9741	read a , b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
9742	for i = 0 to b exclusive , read c [ i ]	N/A	N/A	for ( i = 0 ; i < b ; i ++ ) { cin >> c [ i ] ; }	for ( i = 0 ; i < b ; i ++ ) cin >> c [ i ] ;
9743	sort the values c and c + b	N/A	N/A	sort ( c , c + b ) ;	sort ( c, c + b ) ;
9744	for i = 0 , j = 0 , i is less than b - a + 1 , increment i , j by 1 , d [ j ] is equal to c [ i + a - 1 ] - c [ i ]	N/A	N/A	for ( i = 0 , j = 0 ; i < b - a + 1 ; i ++ , j ++ ) { d [ j ] = c [ i + a - 1 ] - c [ i ] ; }	for ( i = 0, j = 0 ; i < b - a + 1 ; i ++, j ++ ) { d [ j ] = c [ i + a - 1 ] - c [ 1 ] ; }
9745	sort the values d , d + b - a + 1	N/A	N/A	sort ( d , d + b - a + 1 ) ;	sort ( d, d + b - a + 1 ) ;
9746	print d [ 0 ] and newline	N/A	N/A	cout << d [ 0 ] << endl ;	cout << d [ 0 ] << endl ;
9747	DUMMY	0.0	0.0	}	DUMMY
9748	create int array A of size 1000100	N/A	N/A	int A [ 100010 ] ;	int A [ 1000100 ] ;
9749	DUMMY	0.0	0.0	int main() {	DUMMY
9750	let ints n and m	N/A	N/A	int n , m ;	int n, m ;
9751	read n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
9752	for i = 0 to m exclusive , read A [ i ]	N/A	N/A	for ( int i = 0 ; i < m ; i ++ ) cin >> A [ i ] ;	for ( int i = 0 ; i < m ; i ++ ) cin >> A [ i ] ;
9753	sort A	N/A	N/A	sort ( A , A + m ) ;	sort ( A, A + n ) ;
9754	create ints high = n - 1 and low = 0	N/A	N/A	int high = n - 1 , low = 0 ;	int high = n - 1, low = 0 ;
9755	let int mini = A [ high ] - A [ low ]	N/A	N/A	int mini = A [ high ] - A [ low ] ;	int mini = A [ high ] - A [ low ] ;
9756	while high is less than m	N/A	N/A	while ( high < m )	while ( high < m )
9757	increment low	N/A	N/A	low ++ ;	low ++ ;
9758	increment high	N/A	N/A	high ++ ;	high ++ ;
9759	if high is less than m , set mini to the min of mini and A [ high ] - A [ low ]	N/A	N/A	if ( high < m ) mini = min ( mini , A [ high ] - A [ low ] ) ;	if ( high < m ) mini = min ( mini, A [ high ] - A [ low ] ) ;
9760	DUMMY	0.0	0.0	}	DUMMY
9761	print mini	N/A	N/A	cout << mini << ' \n ' ;	cout << mini << endl ;
9762	DUMMY	0.0	0.0	}	DUMMY
9763	DUMMY	0.0	0.0	int main() {	DUMMY
9764	create ints num and buy	N/A	N/A	int num , buy ;	int num, buy ;
9765	create int vector v	N/A	N/A	vector < int > v ;	vector < int > v ;
9766	read num and buy	N/A	N/A	cin >> num >> buy ;	cin >> num >> buy ;
9767	for i = 0 to buy exclusive	N/A	N/A	for ( int i = 0 ; i < buy ; i ++ )	for ( int i = 0 ; i < buy ; i ++ )
9768	let int x	N/A	N/A	int x ;	int x ;
9769	read x	N/A	N/A	cin >> x ;	cin >> x ;
9770	append x to vector v	N/A	N/A	v . push_back ( x ) ;	v. push_back ( x ) ;
9771	DUMMY	0.0	0.0	}	DUMMY
9772	sort vector v	N/A	N/A	sort ( v . begin ( ) , v . end ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
9773	let ints max = 0 , min = 0 , and differ = 1000000	N/A	N/A	int max = 0 , min = 0 , differ = 1000000 ;	int max = 0, min ( 0 ), differ = 1000000 ;
9774	for i = 0 to size of v exclusive	N/A	N/A	for ( int i = 0 ; i < v . size ( ) ; i ++ )	for ( int i = 0 ; i < v. size ( ) ; i ++ )
9775	if i + num is greater than the size of v	N/A	N/A	if ( ( i + num ) > v . size ( ) )	if ( i + num > v. size ( ) )
9776	break loop	N/A	N/A	break ;	break ;
9777	otherwise do	N/A	N/A	else	else
9778	set min to the min value in v	N/A	N/A	min = min_element ( v . begin ( ) + i , v . begin ( ) + ( i + num ) ) - v . begin ( ) ;	min = v. size ( ) ;
9779	set max to the max value in v	N/A	N/A	max = max_element ( v . begin ( ) + i , v . begin ( ) + ( i + num ) ) - v . begin ( ) ;	max = v. size ( ) ;
9780	if v . at ( max ) - v . at ( min ) is less than differ , set differ to v . at ( max ) - v . at ( min )	N/A	N/A	if ( ( v . at ( max ) - v . at ( min ) ) < differ ) { differ = v . at ( max ) - v . at ( min ) ; }	if ( v. [ max ] - v. at ( min ) < differ ) { differ = v.. [ ( max ) - ( v ) [ min ] ] ; }
9781	DUMMY	0.0	0.0	}	DUMMY
9782	DUMMY	0.0	0.0	}	DUMMY
9783	for i = 0 to size of v exclusive	N/A	N/A	for ( int i = 0 ; i < v . size ( ) ; i ++ )	for ( int i = 0 ; i < v. size ( ) ; i ++ )
9784	let int total = count ( v . begin ( ) , v . end ( ) , v . at ( i ) ) ;	N/A	N/A	int total = count ( v . begin ( ) , v . end ( ) , v . at ( i ) ) ;	int total = count ( v. begin ( ), v. end ( ), v. at ( i ) ) ;
9785	if total is greater than or equal to num	N/A	N/A	if ( total >= num )	if ( total >= num )
9786	set differ to 0	N/A	N/A	differ = 0 ;	differ = 0 ;
9787	break loop	N/A	N/A	break ;	break ;
9788	DUMMY	0.0	0.0	}	DUMMY
9789	DUMMY	0.0	0.0	}	DUMMY
9790	print differ	N/A	N/A	cout << differ << endl ;	cout << differ << endl ;
9791	DUMMY	0.0	0.0	}	DUMMY
9792	DUMMY	0.0	0.0	int main() {	DUMMY
9793	let n , m be integers	N/A	N/A	int n , m ;	int n, m ;
9794	read n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
9795	a = array of integers of length m	N/A	N/A	int a [ m ] ;	int a [ m ] ;
9796	for i = 0 to m exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < m ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < m ; i ++ ) { cin >> a [ i ] ; }
9797	sort the values a and a + m	N/A	N/A	sort ( a , a + m ) ;	sort ( a, a + m ) ;
9798	let min be a integer with min = 1000000	N/A	N/A	int min = 1000000 ;	int min = 1000000 ;
9799	for i = 0 to m - n + 1 exclusive	N/A	N/A	for ( int i = 0 ; i < m - n + 1 ; i ++ )	for ( int i = 0 ; i < m - n + 1 ; i ++ )
9800	if a [ i + n - 1 ] - a [ i ] is less than min , the value of min is equal to a [ i + n - 1 ] - a [ i ]	N/A	N/A	if ( ( a [ i + n - 1 ] - a [ i ] ) < min ) { min = a [ i + n - 1 ] - a [ i ] ; }	if ( ( a [ i + n - 1 ] - a [ 1 ] ) < min ) min = a [ j + ( n - i ] - b [ i ] ) ;
9801	DUMMY	0.0	0.0	}	DUMMY
9802	if min is equal to 1000000	N/A	N/A	if ( min == 1000000 )	if ( min == 1000000 )
9803	print 0 and newline	N/A	N/A	cout << " 0\n " ;	cout << 0 << endl ;
9804	else do the following	N/A	N/A	else	else
9805	print min and newline	N/A	N/A	cout << min << " \n " ;	cout << min << endl ;
9806	DUMMY	0.0	0.0	}	DUMMY
9807	DUMMY	0.0	0.0	int main() {	DUMMY
9808	set precision to 10	N/A	N/A	cout . precision ( 10 ) ;	cout. precision ( 10 ) ;
9809	print fixed	N/A	N/A	cout << fixed ;	cout << fixed ;
9810	n , m = integers	N/A	N/A	int n , m ;	int n, m ;
9811	read n , m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
9812	v = vector of integer with v = m	N/A	N/A	vector < int > v ( m ) ;	vector < int > v ( m ) ;
9813	for i = 0 to m exclusive , print v [ i ]	N/A	N/A	for ( int i = 0 ; i < m ; i ++ ) cin >> v [ i ] ;	for ( int i = 0 ; i < m ; i ++ ) { cout << v [ i ] ; }
9814	sort v . begin ( ) and v . end ( )	N/A	N/A	sort ( v . begin ( ) , v . end ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
9815	diff = vector of integer	N/A	N/A	vector < int > diff ;	vector < int > diff ;
9816	for i = 0 to m - n + 1 exclusive , append ( abs ( v [ i ] - v [ n + i - 1 ] ) ) in diff	N/A	N/A	for ( int i = 0 ; i < m - n + 1 ; i ++ ) { diff . push_back ( abs ( v [ i ] - v [ n + i - 1 ] ) ) ; }	for ( int i = 0 ; i < m - n + 1 ; i ++ ) diff. push_back ( abs ( v [ i ] - v [ n + i - 1 ] ) ) ;
9817	print pointer min_element ( diff . begin ( ) , diff . end ( ) )	N/A	N/A	cout << * min_element ( diff . begin ( ) , diff . end ( ) ) << endl ;	cout << * min_element ( diff. begin ( ), diff. end ( ) ) << endl ;
9818	DUMMY	0.0	0.0	}	DUMMY
9819	DUMMY	0.0	0.0	int main() {	DUMMY
9820	declare int variables n and m	N/A	N/A	int n , m ;	int n, m ;
9821	read n and m from the input	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
9822	arr is a new array ofintegers with m elements	N/A	N/A	int arr [ m ] ;	int arr [ m ] ;
9823	in the for loop , change i from 0 to m exclusive , reading variable arr [ i ] from the input	N/A	N/A	for ( int i = 0 ; i < m ; ++ i ) cin >> arr [ i ] ;	for ( int i = 0 ; i < m ; i ++ ) cin >> arr [ i ] ;
9824	sort arr from index 0 to m exclusive	N/A	N/A	sort ( arr , arr + m ) ;	sort ( arr, arr + m ) ;
9825	declare integer mn = 1e9	N/A	N/A	int mn = 1e9 ;	int mn = 1e9 ;
9826	for i = 0 to m - n inclusive , change mn to min of mn and arr [ i + n - 1 ] - arr [ i ]	N/A	N/A	for ( int i = 0 ; i <= m - n ; ++ i ) mn = min ( mn , arr [ i + n - 1 ] - arr [ i ] ) ;	for ( int i = 0 ; i <= m - n ; i ++ ) { mn = min ( mn, arr [ i + n - 1 ] - arr [ 1 ] ) ; }
9827	print mn to the standard output	N/A	N/A	cout << mn << endl ;	cout << mn << endl ;
9828	DUMMY	0.0	0.0	}	DUMMY
9829	DUMMY	0.0	0.0	int main() {	DUMMY
9830	numbuy = int	N/A	N/A	int num , buy ;	int numbuy ;
9831	v = vector of int	N/A	N/A	vector < int > v ;	vector < int > v ;
9832	read num , buy	N/A	N/A	cin >> num >> buy ;	cin >> num >> buy ;
9833	for i = 0 to buy exclusive	N/A	N/A	for ( int i = 0 ; i < buy ; i ++ )	for ( int i = 0 ; i < buy ; i ++ )
9834	x = int	N/A	N/A	int x ;	int x ;
9835	read x	N/A	N/A	cin >> x ;	cin >> x ;
9836	add x at end of v	N/A	N/A	v . push_back ( x ) ;	v. push_back ( x ) ;
9837	DUMMY	0.0	0.0	}	DUMMY
9838	sort v	N/A	N/A	sort ( v . begin ( ) , v . end ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
9839	max , min = 0 , differ = 1000000	N/A	N/A	int max = 0 , min = 0 , differ = 1000000 ;	int max, min = 0, differ = 1000000 ;
9840	for i = 0 to size of v exclusive	N/A	N/A	for ( int i = 0 ; i < v . size ( ) ; i ++ )	for ( int i = 0 ; i < v. size ( ) ; i ++ )
9841	if i + num > size of v	N/A	N/A	if ( ( i + num ) > v . size ( ) )	if ( i + num > v. size ( ) )
9842	break	N/A	N/A	break ;	break ;
9843	else	N/A	N/A	else	else
9844	min = min_element ( first item of v + i , first item of v + i + num ) - first item of v	N/A	N/A	min = min_element ( v . begin ( ) + i , v . begin ( ) + ( i + num ) ) - v . begin ( ) ;	min = min_element ( v. begin ( ) + i, v. first + i + num ) - v. end ( ) ;
9845	max = max_element ( first item of v + i , first item of v + i + num ) - first item of v	N/A	N/A	max = max_element ( v . begin ( ) + i , v . begin ( ) + ( i + num ) ) - v . begin ( ) ;	max = max_element ( v. begin ( ) + i, v. first + i + num ) - v. end ( ) ;
9846	if pos of max in v - pos of min in v < differ differ = pos of max in v - pos of min in v	N/A	N/A	if ( ( v . at ( max ) - v . at ( min ) ) < differ ) { differ = v . at ( max ) - v . at ( min ) ; }	if ( v. find ( max ) - v. rend ( min ) < differ ) differ = pos ( max in v. begin ( ), v. end ( ) ) - pos ( minin. begin_ ) ;
9847	DUMMY	0.0	0.0	}	DUMMY
9848	DUMMY	0.0	0.0	}	DUMMY
9849	for i = 0 to size of v exclusive	N/A	N/A	for ( int i = 0 ; i < v . size ( ) ; i ++ )	for ( int i = 0 ; i < v. size ( ) ; i ++ )
9850	total = count ( occurrences of i in v )	N/A	N/A	int total = count ( v . begin ( ) , v . end ( ) , v . at ( i ) ) ;	total = count ( v. begin ( ), v. end ( ) + i ) ;
9851	if total > = num	N/A	N/A	if ( total >= num )	if ( total >= num )
9852	differ = 0	N/A	N/A	differ = 0 ;	differ = 0 ;
9853	break	N/A	N/A	break ;	break ;
9854	DUMMY	0.0	0.0	}	DUMMY
9855	DUMMY	0.0	0.0	}	DUMMY
9856	print differ	N/A	N/A	cout << differ << endl ;	cout << differ << endl ;
9857	DUMMY	0.0	0.0	}	DUMMY
9858	DUMMY	0.0	0.0	int main() {	DUMMY
9859	declare integers n , m	N/A	N/A	int n , m ;	int n, m ;
9860	read n , m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
9861	declare integer array a size m	N/A	N/A	int a [ m ] ;	int a [ m ] ;
9862	for i = 0 to m exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < m ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < m ; i ++ ) { cin >> a [ i ] ; }
9863	sort from a to a + m	N/A	N/A	sort ( a , a + m ) ;	sort ( a, a + m ) ;
9864	declare integers i = 0 , j = n - 1	N/A	N/A	int i = 0 , j = n - 1 ;	int i = 0, j = n - 1 ;
9865	declare psum = a [ j ] - a [ i ] as integer	N/A	N/A	int psum = a [ j ] - a [ i ] ;	int psum = a [ j ] - a [ i ] ;
9866	while j is less than m	N/A	N/A	while ( j < m )	while ( j < m )
9867	declare sum = a [ j ] - a [ i ] as integer	N/A	N/A	int sum = a [ j ] - a [ i ] ;	int sum = a [ j ] - a [ i ] ;
9868	if sum is less than or equal to psum , let psum = sum	N/A	N/A	if ( sum <= psum ) psum = sum ;	if ( sum <= psum ) psum = sum ;
9869	increment i	N/A	N/A	i ++ ;	i ++ ;
9870	increment j	N/A	N/A	j ++ ;	j ++ ;
9871	DUMMY	0.0	0.0	}	DUMMY
9872	print psum , " \ n "	N/A	N/A	cout << psum << " \n " ;	cout << psum << " \n " ;
9873	DUMMY	0.0	0.0	}	DUMMY
9874	DUMMY	0.0	0.0	int main() {	DUMMY
9875	noOfStudents , noOfprizes , minimum = int with minimum = 100000	N/A	N/A	int noOfStudents , noOfprizes , minimum = 100000 ;	int noOfStudents, noOfprizes, minimum = 100000 ;
9876	read noOfStudents then noOfprizes	N/A	N/A	cin >> noOfStudents >> noOfprizes ;	cin >> noOfStudents >> NoOfprizes ;
9877	a = int array of size noOfprizes	N/A	N/A	int a [ noOfprizes ] ;	int a [ noOfprizes ] ;
9878	read noOfprizes values into a	N/A	N/A	for ( int i = 0 ; i < noOfprizes ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < noOfprizes ; i ++ ) { cin >> a [ i ] ; }
9879	sort a	N/A	N/A	sort ( a , a + noOfprizes ) ;	sort ( a, a + n ) ;
9880	for i = 0 to noOfprizes - noOfStudents + 1 set minimum to min of a [ i + noOfStudents - 1 ] - a [ i ] , minimum	N/A	N/A	for ( int i = 0 ; i + noOfStudents - 1 < noOfprizes ; i ++ ) { minimum = min ( a [ i + noOfStudents - 1 ] - a [ i ] , minimum ) ; }	for ( int i = 0 ; i < noOfprizes - noOfStudents + 1 ; i ++ ) { minimum = min ( a [ i + noOf students - 1 ] - a [ 1 ], minimum ) ; }
9881	print minimum	N/A	N/A	cout << minimum << endl ;	cout << minimum << endl ;
9882	DUMMY	0.0	0.0	return 0;	DUMMY
9883	DUMMY	0.0	0.0	}	DUMMY
9884	create long long ans = 1000000	N/A	N/A	long long ans = 1000000 ;	long long ans = 1000000 ;
9885	DUMMY	0.0	0.0	int main() {	DUMMY
9886	declare long long int variables n and m	N/A	N/A	long long int n , m ;	long long int n, m ;
9887	read input to n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
9888	declare long long int array a with m + 2 elements	N/A	N/A	long long int a [ m + 2 ] ;	long long int a [ m + 2 ] ;
9889	for integer i = 0 to m exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < m ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < m ; i ++ ) cin >> a [ i ] ;
9890	sort m elements of a	N/A	N/A	sort ( a , a + m ) ;	sort ( a, a + m ) ;
9891	declare long long int k = m - n	N/A	N/A	long long int k = m - n ;	long long int k = m - n ;
9892	for i from 0 to k inclusive , assign min of ans and a [ i + ( n - 1 ) ] - a [ i ] to ans	N/A	N/A	for ( int i = 0 ; i <= k ; i ++ ) { ans = min ( ans , a [ i + ( n - 1 ) ] - a [ i ] ) ; }	for ( int i = 0 ; i <= k ; i ++ ) ans = min ( ans, a [ i + ( n - 1 ) ] - a [ 1 ] ) ;
9893	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
9894	DUMMY	0.0	0.0	return 0;	DUMMY
9895	DUMMY	0.0	0.0	}	DUMMY
9896	DUMMY	0.0	0.0	int main() {	DUMMY
9897	n , m = int	N/A	N/A	int n , m ;	int n, m ;
9898	while read n , m	N/A	N/A	while ( cin >> n >> m )	while ( cin >> n >> m )
9899	a = array of 55 int	N/A	N/A	int a [ 55 ] ;	int a [ 55 ] ;
9900	for i = 0 to m exclusive read a [ i ]	N/A	N/A	for ( int i = 0 ; i < m ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < m ; i ++ ) cin >> a [ i ] ;
9901	sort first m items of a	N/A	N/A	sort ( a , a + m ) ;	sort ( a, a + m ) ;
9902	min2 = 999999999 , t = int	N/A	N/A	int min2 = 999999999 , t ;	int min2 = 999999999, t ;
9903	for i = n - 1 to m exclusive	N/A	N/A	for ( int i = n - 1 ; i < m ; i ++ )	for ( int i = n - 1 ; i < m ; i ++ )
9904	t = a [ i ] - a [ i - n + 1 ]	N/A	N/A	t = a [ i ] - a [ i - n + 1 ] ;	t = int ( a [ i ] - int ( i - n + 1 ] ) ) ;
9905	if min2 > t min2 = t	N/A	N/A	if ( min2 > t ) min2 = t ;	if ( min2 > t ) min2 = t ;
9906	DUMMY	0.0	0.0	}	DUMMY
9907	print min2	N/A	N/A	cout << min2 << endl ;	cout << min2 << endl ;
9908	DUMMY	0.0	0.0	}	DUMMY
9909	DUMMY	0.0	0.0	}	DUMMY
9910	DUMMY	0.0	0.0	int main() {	DUMMY
9911	create long longs n , m	N/A	N/A	long long n , m ;	long long n, m ;
9912	read n read m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
9913	create long long vector a initialized with ( m , 0 )	N/A	N/A	vector < long long > a ( m , 0 ) ;	vector < long long > a ( m, 0 ) ;
9914	for i = 0 to m exclusive , read a [ i ]	N/A	N/A	for ( long long i = 0 ; i < m ; i ++ ) { cin >> a [ i ] ; }	for ( long long i = 0 ; i < m ; i ++ ) { cin >> a [ i ] ; }
9915	sort elements from beginning of a to end of a	N/A	N/A	sort ( a . begin ( ) , a . end ( ) ) ;	sort ( a. begin ( ), a. end ( ) ) ;
9916	create long longs l , r	N/A	N/A	long long l , r ;	long long l, r ;
9917	set l to r to 0	N/A	N/A	l = r = 0 ;	l = r = 0 ;
9918	set r to n - 1	N/A	N/A	r = n - 1 ;	r = n - 1 ;
9919	create long long mn with mn = a [ m - 1 ] - a [ 0 ]	N/A	N/A	long long mn = a [ m - 1 ] - a [ 0 ] ;	long long mn = a [ m - 1 ] - a [ 0 ] ;
9920	while r is not m	N/A	N/A	while ( r != m )	while ( r!= m )
9921	set mn to minimum of ( mn and a [ r ] - a [ l ] )	N/A	N/A	mn = min ( mn , a [ r ] - a [ l ] ) ;	mn = min ( mn, a [ r ] - a [ l ] ) ;
9922	increment l	N/A	N/A	l ++ ;	l ++ ;
9923	increment r	N/A	N/A	r ++ ;	r ++ ;
9924	DUMMY	0.0	0.0	}	DUMMY
9925	print mn print newline	N/A	N/A	cout << mn << endl ;	cout << mn << endl ;
9926	DUMMY	0.0	0.0	return 0;	DUMMY
9927	DUMMY	0.0	0.0	}	DUMMY
9928	DUMMY	0.0	0.0	int main() {	DUMMY
9929	let n , m be integers	N/A	N/A	int n , m ;	int n, m ;
9930	read n and m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
9931	arr = vector	N/A	N/A	vector < int > arr ;	vector < int > arr ;
9932	while m is greater than 0	N/A	N/A	while ( m > 0 )	while ( m > 0 )
9933	let i be int	N/A	N/A	int i ;	int i ;
9934	read i	N/A	N/A	cin >> i ;	cin >> i ;
9935	push_back i onto r	N/A	N/A	arr . push_back ( i ) ;	r. push_back ( i ) ;
9936	decrement m	N/A	N/A	m -- ;	m -- ;
9937	DUMMY	0.0	0.0	}	DUMMY
9938	sort with functions arr . begin and arr . end	N/A	N/A	sort ( arr . begin ( ) , arr . end ( ) ) ;	sort ( arr. begin ( ), arr. end ( ) ) ;
9939	let distance be integer with value 1e9	N/A	N/A	int distance = 1e9 ;	int distance = 1e9 ;
9940	for i from 0 to arr size minus n + 1 exclusive	N/A	N/A	for ( int i = 0 ; i < arr . size ( ) - n + 1 ; i ++ )	for ( int i = 0 ; i < arr. size ( ) - n + 1 ; i ++ )
9941	if arr [ i + n - 1 ] - arr [ i ] < distance then set distance to arr [ i + n - 1 ] - arr [ i ]	N/A	N/A	if ( arr [ i + n - 1 ] - arr [ i ] < distance ) { distance = arr [ i + n - 1 ] - arr [ i ] ; }	if ( ( arr [ i + n - 1 ] - arr [ 1 ] ) < distance ) distance = ( int ) arr [ ( i ) + ( n - i ] ) - ( n + 1 ) ;
9942	DUMMY	0.0	0.0	}	DUMMY
9943	print distance	N/A	N/A	cout << distance << endl ;	cout << distance << endl ;
9944	DUMMY	0.0	0.0	return 0;	DUMMY
9945	DUMMY	0.0	0.0	}	DUMMY
9946	DUMMY	0.0	0.0	int main() {	DUMMY
9947	declare integers k , d and i	N/A	N/A	int k , d , i ;	int k, d, i ;
9948	read k and d	N/A	N/A	cin >> k >> d ;	cin >> k >> d ;
9949	if d = 0	N/A	N/A	if ( d == 0 )	if ( d == 0 )
9950	if k = 1	N/A	N/A	if ( k == 1 )	if ( k == 1 )
9951	print 0 and a new line	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
9952	else	N/A	N/A	else	else
9953	print " No solution \ n "	N/A	N/A	cout << " No solution\n " ;	cout << " No solution\n " ;
9954	DUMMY	0.0	0.0	}	DUMMY
9955	else	N/A	N/A	else	else
9956	print d	N/A	N/A	cout << d ;	cout << d << endl ;
9957	for i = 1 to k exclusive , print 0	N/A	N/A	for ( i = 1 ; i < k ; i ++ ) { cout << 0 ; }	for ( int i = 1 ; i < k ; i ++ ) { cout << 0 ; }
9958	print new line	N/A	N/A	cout << endl ;	cout << endl ;
9959	DUMMY	0.0	0.0	}	DUMMY
9960	DUMMY	0.0	0.0	return 0;	DUMMY
9961	DUMMY	0.0	0.0	}	DUMMY
9962	DUMMY	0.0	0.0	int main() {	DUMMY
9963	create integers k , d	N/A	N/A	int k , d ;	int k, d ;
9964	read k read d	N/A	N/A	cin >> k >> d ;	cin >> k >> d ;
9965	if d is 0 and k is greater than 1	N/A	N/A	if ( d == 0 && k > 1 )	if ( d == 0 && k > 1 )
9966	print " No solution \ n "	N/A	N/A	cout << " No solution\n " ;	cout << " No solution\n " ;
9967	DUMMY	0.0	0.0	return 0;	DUMMY
9968	DUMMY	0.0	0.0	}	DUMMY
9969	print d	N/A	N/A	cout << d ;	cout << d ;
9970	decrement k	N/A	N/A	k -- ;	k -- ;
9971	while decrement k is true , print 0	N/A	N/A	while ( k -- ) cout << 0 ;	while ( k -- ) cout << 0 << endl ;
9972	print newline	N/A	N/A	cout << endl ;	cout << endl ;
9973	DUMMY	0.0	0.0	}	DUMMY
9974	DUMMY	0.0	0.0	int main() {	DUMMY
9975	k and d = integers	N/A	N/A	int k , d ;	int k, d ;
9976	read k and d	N/A	N/A	cin >> k >> d ;	cin >> k >> d ;
9977	if d = 0	N/A	N/A	if ( d == 0 )	if ( d == 0 )
9978	if k = 1	N/A	N/A	if ( k == 1 )	if ( k == 1 )
9979	print " 0 " and a new line	N/A	N/A	cout << " 0 " << endl ;	cout << " 0 " << endl ;
9980	else	N/A	N/A	else	else
9981	print " No solution " and a new line	N/A	N/A	cout << " No solution " << endl ;	cout << " No solution " << endl ;
9982	else	N/A	N/A	else	else
9983	print d	N/A	N/A	cout << d ;	cout << d ;
9984	print " 0 " k - 1 times	N/A	N/A	for ( int i = 0 ; i < k - 1 ; ++ i ) { cout << " 0 " ; }	for ( int i = 0 ; i < k ; i ++ ) { cout << " 0 " ; }
9985	print new line	N/A	N/A	cout << endl ;	<< " \n " ;
9986	DUMMY	0.0	0.0	}	DUMMY
9987	DUMMY	0.0	0.0	return 0;	DUMMY
9988	DUMMY	0.0	0.0	}	DUMMY
9989	DUMMY	0.0	0.0	int main() {	DUMMY
9990	let k be a integer	N/A	N/A	int k ;	int k ;
9991	let d be a character	N/A	N/A	char d ;	char d ;
9992	read the values k and d	N/A	N/A	cin >> k >> d ;	cin >> k >> d ;
9993	if ( d is equal to 0 and k is greater than 1 )	N/A	N/A	if ( d == ' 0 ' && k > 1 )	if ( d == 0 && k > 1 )
9994	print No solution and newline	N/A	N/A	cout << " No solution " << endl ;	cout << " No solution " << endl ;
9995	DUMMY	0.0	0.0	return 0;	DUMMY
9996	DUMMY	0.0	0.0	}	DUMMY
9997	let temp be a string	N/A	N/A	string temp ;	string temp ;
9998	push temp vector to back when element d is given ( temp . push_back ( d ) )	N/A	N/A	temp . push_back ( d ) ;	back. push_back ( temp ) ;
9999	for ( int i is equal to 1 , i is less than k ; increment i value by 1 ) , temp . push_back ( ' 0 ' )	N/A	N/A	for ( int i = 1 ; i < k ; i ++ ) temp . push_back ( ' 0 ' ) ;	for ( int i = 1 ; i < k ; i ++ ) { temp. push_back ('0') ; }
10000	print temp and newline	N/A	N/A	cout << temp << endl ;	cout << temp << endl ;
10001	DUMMY	0.0	0.0	return 0;	DUMMY
10002	DUMMY	0.0	0.0	}	DUMMY
10003	DUMMY	0.0	0.0	int main() {	DUMMY
10004	create integers k , d	N/A	N/A	int k , d ;	int k, d ;
10005	read k read d	N/A	N/A	cin >> k >> d ;	cin >> k >> d ;
10006	if k is 1 and d is 0	N/A	N/A	if ( k == 1 && d == 0 )	if ( k == 1 && d == 0 )
10007	print " 0 " print newline	N/A	N/A	cout << " 0 " << endl ;	cout << " 0 " << endl ;
10008	else if k is greater than 1 and d is 0	N/A	N/A	else if ( k > 1 && d == 0 )	else if ( k > 1 && d == 0 )
10009	print " No solution " print newline	N/A	N/A	cout << " No solution " << endl ;	cout << " No solution " << endl ;
10010	else	N/A	N/A	else	else
10011	print d	N/A	N/A	cout << d ;	cout << d ;
10012	for i = 0 to k - 1 exclusive , print " 0 "	N/A	N/A	for ( int i = 0 ; i < k - 1 ; i ++ ) { cout << " 0 " ; }	for ( int i = 0 ; i < k - 1 ; i ++ ) cout << " 0 " ;
10013	print newline	N/A	N/A	cout << endl ;	cout << endl ;
10014	DUMMY	0.0	0.0	}	DUMMY
10015	DUMMY	0.0	0.0	return 0;	DUMMY
10016	DUMMY	0.0	0.0	}	DUMMY
10017	DUMMY	0.0	0.0	int main() {	DUMMY
10018	k , d = integers	N/A	N/A	int k , d ;	int k, d ;
10019	Read k and d	N/A	N/A	cin >> k >> d ;	cin >> k >> d ;
10020	if d is equal to 0 and k is greater than 1	N/A	N/A	if ( d == 0 && k > 1 )	if ( d == 0 && k > 1 )
10021	print No solution and a new line	N/A	N/A	cout << " No solution " << endl ;	cout << " No " << endl ;
10022	else do the following	N/A	N/A	else	else
10023	print d	N/A	N/A	cout << d ;	cout << d ;
10024	for i = 1 to k , exclusive , print 0	N/A	N/A	for ( int i = 1 ; i < k ; i ++ ) cout << 0 ;	for ( int i = 1 ; i <= k ; i ++ ) cout << 0 ;
10025	print a new line	N/A	N/A	cout << endl ;	cout << endl ;
10026	DUMMY	0.0	0.0	}	DUMMY
10027	DUMMY	0.0	0.0	return 0;	DUMMY
10028	DUMMY	0.0	0.0	}	DUMMY
10029	DUMMY	0.0	0.0	int main() {	DUMMY
10030	k , d = integers	N/A	N/A	int k , d ;	int k, d ;
10031	Read k , d	N/A	N/A	cin >> k >> d ;	cin >> k >> d ;
10032	if d is equal to 0 and k is greater than 1	N/A	N/A	if ( d == 0 && k > 1 )	if ( d == 0 && k > 1 )
10033	print No solution and a new line	N/A	N/A	cout << " No solution " << endl ;	cout << " No " << endl ;
10034	DUMMY	0.0	0.0	return 0;	DUMMY
10035	DUMMY	0.0	0.0	}	DUMMY
10036	print d	N/A	N/A	cout << d ;	cout << d << endl ;
10037	for j = 1 to k exclusive , print 0	N/A	N/A	for ( int i = 1 ; i < k ; i ++ ) { cout << 0 ; }	for ( int j = 1 ; j <= k ; j ++ ) { cout << 0 ; }
10038	print a new line	N/A	N/A	cout << endl ;	<< " \n " ;
10039	DUMMY	0.0	0.0	}	DUMMY
10040	DUMMY	0.0	0.0	int main() {	DUMMY
10041	k , d , i , j = integers	N/A	N/A	int k , d , i , j ;	int k, d, i, j ;
10042	Read k and d	N/A	N/A	cin >> k >> d ;	cin >> k >> d ;
10043	if d is equal to 0	N/A	N/A	if ( d == 0 )	if ( d == 0 )
10044	if k is greater than 1	N/A	N/A	if ( k > 1 )	if ( k > 1 )
10045	print No solution and a new line	N/A	N/A	cout << " No solution " << endl ;	cout << " No solution " << endl ;
10046	else do the following	N/A	N/A	else	else
10047	print 0 and a new line	N/A	N/A	cout << 0 << endl ;	cout << " 0 " << endl ;
10048	DUMMY	0.0	0.0	return 0;	DUMMY
10049	DUMMY	0.0	0.0	}	DUMMY
10050	print d	N/A	N/A	cout << d ;	cout << d ;
10051	for i = 0 to k exclusive , print 0	N/A	N/A	for ( i = 1 ; i < k ; i ++ ) cout << 0 ;	for ( int i = 0 ; i < k ; i ++ ) { cout << 0 ; }
10052	print a new line	N/A	N/A	cout << endl ;	cout << endl ;
10053	DUMMY	0.0	0.0	}	DUMMY
10054	DUMMY	0.0	0.0	int main() {	DUMMY
10055	k , d = integers	N/A	N/A	int k , d ;	int k, d ;
10056	read k and d	N/A	N/A	cin >> k >> d ;	cin >> k >> d ;
10057	if k is greater than 1 and d is 0	N/A	N/A	if ( k > 1 && d == 0 )	if ( k > 1 && d == 0 )
10058	print No solution	N/A	N/A	cout << " No solution\n " ;	cout << " No " << endl ;
10059	DUMMY	0.0	0.0	return 0;	DUMMY
10060	DUMMY	0.0	0.0	}	DUMMY
10061	print d	N/A	N/A	cout << d ;	cout << d ;
10062	for i = 1 to k exclusive print 0	N/A	N/A	for ( int i = 1 ; i < k ; i ++ ) { cout << 0 ; }	for ( int i = 1 ; i < k ; i ++ ) cout << 0 << endl ;
10063	print new line	N/A	N/A	cout << endl ;	cout << endl ;
10064	DUMMY	0.0	0.0	}	DUMMY
10065	DUMMY	0.0	0.0	int main() {	DUMMY
10066	d = large long	N/A	N/A	long long k , d ;	long long d ;
10067	read k and d	N/A	N/A	cin >> k >> d ;	cin >> k >> d ;
10068	if d = 0 and k > 1	N/A	N/A	if ( d == 0 && k > 1 )	if ( d == 0 && k > 1 )
10069	print No Solution	N/A	N/A	cout << " No solution " << endl ;	cout << " No Solution " << endl ;
10070	else	N/A	N/A	else	else
10071	print d	N/A	N/A	cout << d ;	cout << d << endl ;
10072	increment k	N/A	N/A	k -- ;	k ++ ;
10073	while k > -	N/A	N/A	while ( k )	while ( k > - 1 )
10074	print 0	N/A	N/A	cout << 0 ;	cout << 0 << endl ;
10075	decrement k	N/A	N/A	k -- ;	k -- ;
10076	DUMMY	0.0	0.0	}	DUMMY
10077	print newline	N/A	N/A	cout << endl ;	cout << endl ;
10078	DUMMY	0.0	0.0	}	DUMMY
10079	DUMMY	0.0	0.0	return 0;	DUMMY
10080	DUMMY	0.0	0.0	}	DUMMY
10081	declare desperate_optimization with integer precision as argument , returning void	N/A	N/A	void desperate_optimization ( int precision )	void desperate_optimization ( int precision )
10082	set cout stream flag ios : : fixed	N/A	N/A	cout . setf ( ios :: fixed ) ;	cout. setf ( ios :: fixed ) ;
10083	set cout stream flag ios : : showpoint	N/A	N/A	cout . setf ( ios :: showpoint ) ;	cout. setf ( ios :: showpoint ) ;
10084	set cout floating point precision to precision	N/A	N/A	cout . precision ( precision ) ;	cout. precision ( precision ) ;
10085	DUMMY	0.0	0.0	}	DUMMY
10086	DUMMY	0.0	0.0	int main() {	DUMMY
10087	run desperate_optimization with 10 as argument	N/A	N/A	desperate_optimization ( 10 ) ;	desperate_optimization ( 10 ) ;
10088	create integers n , k	N/A	N/A	int n , k ;	int n, k ;
10089	read n read k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
10090	if k is 0 and n is not 1	N/A	N/A	if ( k == 0 && n != 1 )	if ( k == 0 && n!= 1 )
10091	print " No solution " print ' \ n '	N/A	N/A	cout << " No solution " << ' \n ' ;	cout << " No solution " <<'\n';
10092	DUMMY	0.0	0.0	return 0;	DUMMY
10093	DUMMY	0.0	0.0	}	DUMMY
10094	if k is 0	N/A	N/A	if ( k == 0 )	if ( k == 0 )
10095	print 0 print ' \ n	N/A	N/A	cout << 0 << ' \n ' ;	cout << 0 <<'\n';
10096	else	N/A	N/A	else	else
10097	print k	N/A	N/A	cout << k ;	cout << k ;
10098	for i = 1 to n exclusive , print 0	N/A	N/A	for ( int i = 1 ; i < n ; i ++ ) cout << 0 ;	for ( int i = 1 ; i < n ; i ++ ) cout << 0 ;
10099	print ' \ n '	N/A	N/A	cout << ' \n ' ;	cout <<'\n';
10100	DUMMY	0.0	0.0	}	DUMMY
10101	DUMMY	0.0	0.0	return 0;	DUMMY
10102	DUMMY	0.0	0.0	}	DUMMY
10103	create integers k , d	N/A	N/A	int k , d ;	int k, d ;
10104	DUMMY	0.0	0.0	int main() {	DUMMY
10105	read k read d	N/A	N/A	cin >> k >> d ;	cin >> k >> d ;
10106	if d is 0 and k is greater than 1	N/A	N/A	if ( d == 0 && k > 1 )	if ( d == 0 && k > 1 )
10107	print " No solution " print newline	N/A	N/A	cout << " No solution " << endl ;	cout << " No solution " << endl ;
10108	DUMMY	0.0	0.0	return 0;	DUMMY
10109	DUMMY	0.0	0.0	}	DUMMY
10110	print d	N/A	N/A	cout << d ;	cout << d ;
10111	decrement k	N/A	N/A	k -- ;	k -- ;
10112	while decrement k is true , print 0	N/A	N/A	while ( k -- ) cout << 0 ;	while ( k -- ) cout << 0 ;
10113	print newline	N/A	N/A	cout << endl ;	<< " \n " ;
10114	DUMMY	0.0	0.0	return 0;	DUMMY
10115	DUMMY	0.0	0.0	}	DUMMY
10116	DUMMY	0.0	0.0	int main() {	DUMMY
10117	create integers k , q , with q = 1	N/A	N/A	int k , q = 1 ;	int k, q = 1 ;
10118	create character d	N/A	N/A	char d ;	char d ;
10119	create string s with s = " "	N/A	N/A	string s = " " ;	string s = " " ;
10120	read k read d	N/A	N/A	cin >> k >> d ;	cin >> k >> d ;
10121	if d - ' 0 ' is 0	N/A	N/A	if ( d - ' 0 ' == 0 )	if ( d -'0'== 0 )
10122	if k is 1	N/A	N/A	if ( k == 1 )	if ( k == 1 )
10123	print 0 print newline	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
10124	else	N/A	N/A	else	else
10125	print " No solution " print newline	N/A	N/A	cout << " No solution " << endl ;	cout << " No solution " << endl ;
10126	else	N/A	N/A	else	else
10127	increment s by d	N/A	N/A	s += d ;	s += d ;
10128	for i = 1 to k exclusive , increment s by " 0 "	N/A	N/A	for ( int i = 1 ; i < k ; i ++ ) s += " 0 " ;	for ( int i = 1 ; i < k ; i ++ ) { s += " 0 " ; }
10129	print s print newline	N/A	N/A	cout << s << endl ;	cout << s << endl ;
10130	DUMMY	0.0	0.0	}	DUMMY
10131	DUMMY	0.0	0.0	return 0;	DUMMY
10132	DUMMY	0.0	0.0	}	DUMMY
10133	DUMMY	0.0	0.0	int main() {	DUMMY
10134	declare integers k and d	N/A	N/A	int k , d ;	int k, d ;
10135	read k and d	N/A	N/A	cin >> k >> d ;	cin >> k >> d ;
10136	if k is greater than 1 and d is 0	N/A	N/A	if ( k > 1 && ! d )	if ( k > 1 && d == 0 )
10137	print " No solution " and a new line	N/A	N/A	cout << " No solution " << endl ;	cout << " No solution " << endl ;
10138	DUMMY	0.0	0.0	return 0;	DUMMY
10139	DUMMY	0.0	0.0	}	DUMMY
10140	print d	N/A	N/A	cout << d ;	cout << d ;
10141	decrease k by one	N/A	N/A	k -- ;	k -- ;
10142	print 0 in the loop while decrementing k	N/A	N/A	while ( k -- ) cout << 0 ;	for ( ; k ; k -- ) { cout << 0 ; }
10143	print new line	N/A	N/A	cout << endl ;	cout << endl ;
10144	DUMMY	0.0	0.0	return 0;	DUMMY
10145	DUMMY	0.0	0.0	}	DUMMY
10146	Mod = const int with Mod = 1e9 + 7	N/A	N/A	const int Mod = 1e9 + 7 ;	const int Mod = 1e9 + 7 ;
10147	n , p = integers	N/A	N/A	int n , p ;	int n, p ;
10148	choose , ans = long long with choose = 2d array of 30025 rows and 600 columns , ans = 1	N/A	N/A	long long choose [ 30000 + 25 ] [ 600 ] , ans = 1 ;	long long choose [ 30025 ] [ 600 ], ans = 1 ;
10149	Pedy = map from int to int	N/A	N/A	map < int , int > Pedy ;	map < int, int > Pedy ;
10150	DUMMY	0.0	0.0	int main() {	DUMMY
10151	read n	N/A	N/A	cin >> n ;	cin >> n ;
10152	index 0 , 0 of choose = 1	N/A	N/A	choose [ 0 ] [ 0 ] = 1 ;	for ( int i = 0 ; i < n ; i ++ ) choose [ i ] = 1 ;
10153	for i = 1 to 30024	N/A	N/A	for ( int i = 1 ; i < 30000 + 25 ; i ++ )	for ( int i = 1 ; i <= 30024 ; i ++ )
10154	index i and 0 of choose = 1	N/A	N/A	choose [ i ] [ 0 ] = 1 ;	for ( int i = 0 ; i < n ; i ++ ) { choose [ i ] = 1 ; }
10155	for j = 1 to n index i and j of choose = ( choose [ i - 1 ] [ j - 1 ] + choose [ i - 1 ] [ j ] ) modulo Mod	N/A	N/A	for ( int j = 1 ; j <= n ; j ++ ) choose [ i ] [ j ] = ( choose [ i - 1 ] [ j - 1 ] + choose [ i - 1 ] [ j ] ) % Mod ;	for ( int j = 1 ; j <= n ; j ++ ) { choose [ i ] [ j ] = ( choose [ ( i - 1 ]. j - 1 ) + choose [ 1 ] [ ++ j ] ) % Mod ; }
10156	DUMMY	0.0	0.0	}	DUMMY
10157	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
10158	read p	N/A	N/A	cin >> p ;	cin >> p ;
10159	for j = 2 to j * j < = p	N/A	N/A	for ( int j = 2 ; j * j <= p ; j ++ )	for ( int j = 2 ; j * j <= p ; j ++ )
10160	if p modulo j is 0	N/A	N/A	if ( p % j == 0 )	if ( p % j == 0 )
10161	while not ( p modulo j )	N/A	N/A	while ( not ( p % j ) )	while (! ( p % j ) )
10162	p = p / j	N/A	N/A	p /= j ;	p /= j ;
10163	increment Pedy [ j ]	N/A	N/A	Pedy [ j ] ++ ;	Pedy [ j ] ++ ;
10164	DUMMY	0.0	0.0	}	DUMMY
10165	DUMMY	0.0	0.0	}	DUMMY
10166	if p > 1 , increment Pedy [ p ]	N/A	N/A	if ( p > 1 ) Pedy [ p ] ++ ;	if ( p > 1 ) Pedy [ p ] ++ ;
10167	DUMMY	0.0	0.0	}	DUMMY
10168	for it = Pedy . begin ( ) to it is not Pedy . end ( )	N/A	N/A	for ( map < int , int > :: iterator it = Pedy . begin ( ) ; it != Pedy . end ( ) ; it ++ )	for ( map < char, int > :: iterator it = Pedy. begin ( ) ; ++ it )
10169	p = second in it	N/A	N/A	p = it -> second ;	p = it -> second ;
10170	ans = ( ans * choose [ p + n - 1 ] [ n - 1 ] ) modulo Mod	N/A	N/A	ans = ( ans * choose [ p + n - 1 ] [ n - 1 ] ) % Mod ;	ans = ( ans * choose [ p + n - i ] [ n - 1 ] ) % Mod ;
10171	DUMMY	0.0	0.0	}	DUMMY
10172	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
10173	DUMMY	0.0	0.0	return 0;	DUMMY
10174	DUMMY	0.0	0.0	}	DUMMY
10175	me is a map of long long to long long	N/A	N/A	map < long long , long long > me ;	map < long long, long long > me ;
10176	create long long array fine with 100000 + 5 elements	N/A	N/A	long long fine [ 100000 + 5 ] ;	long long fine [ 100000 + 5 ] ;
10177	pre is a void function	N/A	N/A	void pre ( )	void pre ( )
10178	for long long i = 2 to 100000 inclusive	N/A	N/A	for ( long long i = 2 ; i <= 100000 ; i ++ )	for ( long long i = 2 ; i <= 100000 ; i ++ )
10179	if fine [ i ] is equal to 0	N/A	N/A	if ( fine [ i ] == 0 )	if ( fine [ i ] == 0 )
10180	for j from 2 * i to 100000 inclusive increasing j by i , assign 1 to fine [ j ]	N/A	N/A	for ( long long j = 2 * i ; j <= 100000 ; j += i ) { fine [ j ] = 1 ; }	for ( long long j = 2 * i ; j <= 100000 ; j += i ) { fine [ j ] = 1 ; }
10181	DUMMY	0.0	0.0	}	DUMMY
10182	DUMMY	0.0	0.0	}	DUMMY
10183	DUMMY	0.0	0.0	}	DUMMY
10184	create an arrays of long longs fact and invfact with 100000 elements each	N/A	N/A	long long fact [ 100000 ] , invfact [ 100000 ] ;	long long fact [ 100000 ] = { 0 }, invfact ( 100000 ) = { 1 } ;
10185	pow is a long long function with long long arguments a , b and m	N/A	N/A	long long pow ( long long a , long long b , long long m )	long long pow ( long long a [ ], long long b [ ] and long long m )
10186	declare long long variable ans = 1	N/A	N/A	long long ans = 1 ;	long long ans = 1 ;
10187	while b is not 1	N/A	N/A	while ( b )	while ( b!= 1 )
10188	if b & 1 is not 0 , assign ( ans * a ) % m to ans	N/A	N/A	if ( b & 1 ) ans = ( ans * a ) % m ;	if ( b & 1 ) ans = ( ans * a ) % m ;
10189	divide b by 2	N/A	N/A	b /= 2 ;	b /= 2 ;
10190	change a to ( a * a ) % m	N/A	N/A	a = ( a * a ) % m ;	a = ( a * a ) % m ;
10191	DUMMY	0.0	0.0	}	DUMMY
10192	return ans	N/A	N/A	return ans ;	return ans ;
10193	DUMMY	0.0	0.0	}	DUMMY
10194	long long function modinv with long long argument k	N/A	N/A	long long modinv ( long long k )	long long modinv ( long long k )
10195	return pow ( k , 1000000007 - 2 , 1000000007 )	N/A	N/A	return pow ( k , 1000000007 - 2 , 1000000007 ) ;	return pow ( k, 1000000007 - 2, 10000000007 ) ;
10196	DUMMY	0.0	0.0	}	DUMMY
10197	define function precompute	N/A	N/A	void precompute ( )	void precompute ( )
10198	set fact [ 0 ] to set fact [ 1 ] to 1	N/A	N/A	fact [ 0 ] = fact [ 1 ] = 1 ;	fact [ 0 ] = fact [ 1 ] = 1 ;
10199	for i from 2 to 100000 exclusive	N/A	N/A	for ( long long i = 2 ; i < 100000 ; i ++ )	for ( long long i = 2 ; i < 100000 ; i ++ )
10200	assign fact [ i - 1 ] * i to fact [ i ]	N/A	N/A	fact [ i ] = fact [ i - 1 ] * i ;	fact [ i ] = fact [ i - 1 ] * i ;
10201	fact [ i ] % = 1000000007	N/A	N/A	fact [ i ] %= 1000000007 ;	fact [ i ] %= 1000000007 ;
10202	DUMMY	0.0	0.0	}	DUMMY
10203	set invfact [ 100000 - 1 ] to modinv ( fact [ 100000 - 1 ] )	N/A	N/A	invfact [ 100000 - 1 ] = modinv ( fact [ 100000 - 1 ] ) ;	invfact [ 100000 - 1 ] = modinv ( fact [ 1000000 - 1 + 1 ] ) ;
10204	for i from 100000 - 2 to 0 inclusive decrementing i	N/A	N/A	for ( long long i = 100000 - 2 ; i >= 0 ; i -- )	for ( int i = 100000 - 2 ; i >= 0 ; i -- )
10205	change invfact [ i ] to invfact [ i + 1 ] * ( i + 1 )	N/A	N/A	invfact [ i ] = invfact [ i + 1 ] * ( i + 1 ) ;	invfact [ i ] *= ( i + 1 ) ;
10206	invfact [ i ] % = 1000000007	N/A	N/A	invfact [ i ] %= 1000000007 ;	invfact [ i ] %= 1000000007 ;
10207	DUMMY	0.0	0.0	}	DUMMY
10208	DUMMY	0.0	0.0	}	DUMMY
10209	function nCr with long long arguments x and y that returns long long	N/A	N/A	long long nCr ( long long x , long long y )	long long nCr ( long long x, long long y )
10210	if y is greater than x , return 0	N/A	N/A	if ( y > x ) return 0 ;	if ( y > x ) return 0 ;
10211	set long long num to fact [ x ]	N/A	N/A	long long num = fact [ x ] ;	long long num = fact [ x ] ;
10212	multiply num by invfact [ y ]	N/A	N/A	num *= invfact [ y ] ;	num *= invfact [ y ] ;
10213	num % = 1000000007	N/A	N/A	num %= 1000000007 ;	num %= 1000000007 ;
10214	multiply num by invfact [ x - y ]	N/A	N/A	num *= invfact [ x - y ] ;	num *= invfact [ x - y ] ;
10215	num % = 1000000007	N/A	N/A	num %= 1000000007 ;	num %= 1000000007 ;
10216	return num	N/A	N/A	return num ;	return num ;
10217	DUMMY	0.0	0.0	}	DUMMY
10218	DUMMY	0.0	0.0	int main() {	DUMMY
10219	create long long n	N/A	N/A	long long n ;	long long n ;
10220	read n	N/A	N/A	cin >> n ;	cin >> n ;
10221	call precompute ( )	N/A	N/A	precompute ( ) ;	precompute ( ) ;
10222	call pre ( )	N/A	N/A	pre ( ) ;	pre ( ) ;
10223	loop i from 1 to n inclusive	N/A	N/A	for ( long long i = 1 ; i <= n ; i ++ )	for ( long long i = 1 ; i <= n ; i ++ )
10224	create long long temp	N/A	N/A	long long temp ;	long long temp ;
10225	read temp	N/A	N/A	cin >> temp ;	cin >> temp ;
10226	for j = 2 to 100000 inclusive	N/A	N/A	for ( long long j = 2 ; j <= 100000 ; j ++ )	for ( long long j = 2 ; j <= 100000 ; j ++ )
10227	create long long cur = 0	N/A	N/A	long long cur = 0 ;	long long cur = 0 ;
10228	if temp < = 1 , stop the loop	N/A	N/A	if ( temp <= 1 ) break ;	if ( temp <= 1 ) break ;
10229	while temp modulo j = 0 & & temp > 1	N/A	N/A	while ( temp % j == 0 && temp > 1 )	while ( temp % j == 0 && temp > 1 )
10230	increment cur	N/A	N/A	cur ++ ;	cur ++ ;
10231	divide temp by j	N/A	N/A	temp /= j ;	temp /= j ;
10232	DUMMY	0.0	0.0	}	DUMMY
10233	if cur ! = 0 , increase me [ j ] by cur	N/A	N/A	if ( cur != 0 ) me [ j ] += cur ;	if ( cur!= 0 ) me [ j ] += cur ;
10234	DUMMY	0.0	0.0	}	DUMMY
10235	if temp ! = 1 , increase me [ temp ] by 1	N/A	N/A	if ( temp != 1 ) me [ temp ] += 1 ;	if ( temp!= 1 ) me [ temp ] += 1 ;
10236	DUMMY	0.0	0.0	}	DUMMY
10237	create map iterator it	N/A	N/A	map < long long , long long > :: iterator it ;	map < string, int > :: iterator it ;
10238	declare long long ans = 1	N/A	N/A	long long ans = 1 ;	long long ans = 1 ;
10239	move it through me in a loop	N/A	N/A	for ( it = me . begin ( ) ; it != me . end ( ) ; it ++ )	for ( it = me. begin ( ) ; it!= me. end ( ) - 1 ; it ++ )
10240	declare long long variable temp = it - > second	N/A	N/A	long long temp = it -> second ;	long long temp = it -> second ;
10241	multiply ans by nCr ( temp + n - 1 , temp )	N/A	N/A	ans *= nCr ( temp + n - 1 , temp ) ;	ans *= nCr ( temp + n - 1, temp ) ;
10242	ans % = 1000000007	N/A	N/A	ans %= 1000000007 ;	ans %= 1000000007 ;
10243	DUMMY	0.0	0.0	}	DUMMY
10244	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
10245	DUMMY	0.0	0.0	return 0;	DUMMY
10246	DUMMY	0.0	0.0	}	DUMMY
10247	DUMMY	0.0	0.0	int main() {	DUMMY
10248	n , l , r , a , b , sum = int with sum = 0 and my = int array of size 105 with all values set to 0	N/A	N/A	int n , my [ 105 ] = { 0 } , l , r , a , b , sum = 0 ;	int n, l, r, a, b, my [ 105 ] = { 0 }, sum = 0 ;
10249	read n	N/A	N/A	cin >> n ;	cin >> n ;
10250	read l then r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
10251	for i = 0 to n - 1	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
10252	read a then b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
10253	for j = a + 1 to b inclusive set m [ j ] to 1	N/A	N/A	for ( int j = a + 1 ; j <= b ; j ++ ) my [ j ] = 1 ;	for ( int j = a + 1 ; j <= b ; j ++ ) m [ j ] = 1 ;
10254	DUMMY	0.0	0.0	}	DUMMY
10255	for i = l + 1 to r inclusive	N/A	N/A	for ( int i = l + 1 ; i <= r ; i ++ )	for ( int i = l + 1 ; i <= r ; i ++ )
10256	if m [ i ] is 0 increment sum	N/A	N/A	if ( my [ i ] == 0 ) sum ++ ;	if ( m [ i ] == 0 ) sum ++ ;
10257	print sum	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
10258	DUMMY	0.0	0.0	return 0;	DUMMY
10259	DUMMY	0.0	0.0	}	DUMMY
10260	create integer array arrx with size 101	N/A	N/A	int arrx [ 101 ] ;	int arrx [ 101 ] ;
10261	DUMMY	0.0	0.0	int main() {	DUMMY
10262	create integer n	N/A	N/A	int n ;	int n ;
10263	read n	N/A	N/A	cin >> n ;	cin >> n ;
10264	create integers l , r	N/A	N/A	int l , r ;	int l, r ;
10265	read l read r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
10266	for i = 1 to n exclusive	N/A	N/A	for ( int i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
10267	create integers a , b	N/A	N/A	int a , b ;	int a, b ;
10268	read a read b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
10269	for j = a to b exclusive , set arrx [ j ] to 1	N/A	N/A	for ( int j = a ; j < b ; j ++ ) arrx [ j ] = 1 ;	for ( int j = a ; j < b ; j ++ ) arrx [ j ] = 1 ;
10270	DUMMY	0.0	0.0	}	DUMMY
10271	create integer total with total = 0	N/A	N/A	int total = 0 ;	int total = 0 ;
10272	for i = l to r exclusive , increment total by 0 if arrx [ i ] is true , else 1	N/A	N/A	for ( int i = l ; i < r ; i ++ ) { total += arrx [ i ] ? 0 : 1 ; }	for ( int i = l ; i < r ; i ++ ) { total += arrx [ i ]? 0 : 1 ; }
10273	print total print newline	N/A	N/A	cout << total << endl ;	cout << total << endl ;
10274	DUMMY	0.0	0.0	}	DUMMY
10275	declare constant integer N = 100 + 5	N/A	N/A	const int N = 100 + 5 ;	const int N = 100 + 5 ;
10276	declare boolean array mark with N elements	N/A	N/A	bool mark [ N ] ;	bool mark [ N ] ;
10277	DUMMY	0.0	0.0	int main() {	DUMMY
10278	declare int variables n , st and en	N/A	N/A	int n , st , en ;	int n, st, en ;
10279	read input to n , st and en	N/A	N/A	cin >> n >> st >> en ;	cin >> n >> st >> en ;
10280	for i = 1 to n exclusive	N/A	N/A	for ( int i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
10281	create integers l and r	N/A	N/A	int l , r ;	int l, r ;
10282	read l and r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
10283	for j from l to r exclusive , set mark [ j ] to true	N/A	N/A	for ( int j = l ; j < r ; j ++ ) mark [ j ] = true ;	for ( int j = l ; j < r ; j ++ ) mark [ j ] = true ;
10284	DUMMY	0.0	0.0	}	DUMMY
10285	create int ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
10286	for i = st to en exclusive , increase ans by ! mark [ i ]	N/A	N/A	for ( int i = st ; i < en ; i ++ ) ans += ! mark [ i ] ;	for ( int i = st ; i < en ; i ++ ) { ans +=! mark [ i ] ; }
10287	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
10288	DUMMY	0.0	0.0	return 0;	DUMMY
10289	DUMMY	0.0	0.0	}	DUMMY
10290	N = 105	N/A	N/A	const int N = 105 ;	const int N = 105 ;
10291	mm = array of N bool	N/A	N/A	bool mm [ N ] ;	bool mm [ N ] ;
10292	DUMMY	0.0	0.0	int main() {	DUMMY
10293	n = int	N/A	N/A	int n ;	int n ;
10294	read n	N/A	N/A	cin >> n ;	cin >> n ;
10295	k1 , k2 = int	N/A	N/A	int k1 , k2 ;	int k1, k2 ;
10296	read k1 , k2	N/A	N/A	cin >> k1 >> k2 ;	cin >> k1 >> k2 ;
10297	fill mm with false	N/A	N/A	memset ( mm , false , sizeof ( mm ) ) ;	memset ( mm, false, sizeof ( mm ) ) ;
10298	for i = k1 to k2 exclusive mm [ i ] = true	N/A	N/A	for ( int i = int ( k1 ) ; i < int ( k2 ) ; ++ i ) mm [ i ] = true ;	for ( int i = k1 ; i < k2 ; i ++ ) mm [ i ] = true ;
10299	for i = 0 to n - 1 exclusive	N/A	N/A	for ( int i = int ( 0 ) ; i < int ( n - 1 ) ; ++ i )	for ( int i = 0 ; i < n - 1 ; i ++ )
10300	read k1 , k2	N/A	N/A	cin >> k1 >> k2 ;	cin >> k1 >> k2 ;
10301	for j = k1 to k2 exclusive mm [ j ] = false	N/A	N/A	for ( int j = int ( k1 ) ; j < int ( k2 ) ; ++ j ) mm [ j ] = false ;	for ( int j = k1 ; j < k2 ; j ++ ) mm [ j ] = false ;
10302	DUMMY	0.0	0.0	}	DUMMY
10303	ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
10304	for i = 0 to 101 exclusive	N/A	N/A	for ( int i = int ( 0 ) ; i < int ( 101 ) ; ++ i )	for ( int i = 0 ; i < 101 ; i ++ )
10305	if mm [ i ] increment ans	N/A	N/A	if ( mm [ i ] ) ans ++ ;	if ( mm [ i ] ) ans ++ ;
10306	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
10307	DUMMY	0.0	0.0	return 0;	DUMMY
10308	DUMMY	0.0	0.0	}	DUMMY
10309	create int arr [ 1000 ]	N/A	N/A	int arr [ 1000 ] ;	int arr [ 1000 ] ;
10310	DUMMY	0.0	0.0	int main() {	DUMMY
10311	let n be int	N/A	N/A	int n ;	int n ;
10312	read n	N/A	N/A	cin >> n ;	cin >> n ;
10313	create int l and r	N/A	N/A	int l , r ;	int l, r ;
10314	read l , r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
10315	decrement n	N/A	N/A	n -- ;	n -- ;
10316	while decrement n	N/A	N/A	while ( n -- )	while ( n -- )
10317	create integers x and y	N/A	N/A	int x , y ;	int x, y ;
10318	read x , y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
10319	for i = x to y exclusive , increment arr [ i ]	N/A	N/A	for ( int i = x ; i < y ; i ++ ) arr [ i ] ++ ;	for ( int i = x ; i < y ; i ++ ) arr [ i ] ++ ;
10320	DUMMY	0.0	0.0	}	DUMMY
10321	assign 0 to ans	N/A	N/A	int ans = 0 ;	int ans = 0 ;
10322	for i = l to r exclusive	N/A	N/A	for ( int i = l ; i < r ; i ++ )	for ( int i = l ; i < r ; i ++ )
10323	if arr [ i ] = 0 , add 1 to ans	N/A	N/A	if ( arr [ i ] == 0 ) ans ++ ;	if ( arr [ i ] == 0 ) ans ++ ;
10324	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
10325	DUMMY	0.0	0.0	return 0;	DUMMY
10326	DUMMY	0.0	0.0	}	DUMMY
10327	create int n , l , r , a [ 200 ] , x , y , ans , z , w , set ans to 0	N/A	N/A	int n , l , r , a [ 200 ] , x , y , ans = 0 , z , w ;	int n, l, r, a [ 200 ], x, y, ans = 0, z, w ;
10328	DUMMY	0.0	0.0	int main() {	DUMMY
10329	read n	N/A	N/A	cin >> n ;	cin >> n ;
10330	read x and y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
10331	for i = 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
10332	read l and r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
10333	for j = l to r exclusive , set a [ j ] to 1	N/A	N/A	for ( int j = l ; j < r ; j ++ ) a [ j ] = 1 ;	for ( int j = l ; j < r ; j ++ ) a [ j ] = 1 ;
10334	DUMMY	0.0	0.0	}	DUMMY
10335	for i = x to y exclusive	N/A	N/A	for ( int i = x ; i < y ; i ++ )	for ( int i = x ; i < y ; i ++ )
10336	if a [ i ] is 0 , increment ans	N/A	N/A	if ( ! a [ i ] ) ans ++ ;	if ( a [ i ] == 0 ) ans ++ ;
10337	DUMMY	0.0	0.0	}	DUMMY
10338	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
10339	DUMMY	0.0	0.0	return 0;	DUMMY
10340	DUMMY	0.0	0.0	}	DUMMY
10341	DUMMY	0.0	0.0	int main() {	DUMMY
10342	n = int	N/A	N/A	int n ;	int n ;
10343	l , r = int	N/A	N/A	int l , r ;	int l, r ;
10344	vis = array of 101 int	N/A	N/A	int vis [ 101 ] ;	int vis [ 101 ] ;
10345	while read n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
10346	fill vis with 0	N/A	N/A	memset ( vis , 0 , sizeof ( vis ) ) ;	memset ( vis, 0, sizeof ( vis ) ) ;
10347	read l , r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
10348	for i = l + 1 to r inclusive vis [ i ] = 1	N/A	N/A	for ( int i = l + 1 ; i <= r ; i ++ ) { vis [ i ] = 1 ; }	for ( int i = l + 1 ; i <= r ; i ++ ) vis [ i ] = 1 ;
10349	x , y = int	N/A	N/A	int x , y ;	int x, y ;
10350	for i = 1 to n - 1 inclusive	N/A	N/A	for ( int i = 1 ; i <= n - 1 ; i ++ )	for ( int i = l ; i <= n - 1 ; i ++ )
10351	read x , y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
10352	for j = x + 1 to y inclusive vis [ j ] = 0	N/A	N/A	for ( int j = x + 1 ; j <= y ; j ++ ) { vis [ j ] = 0 ; }	for ( int j = x + 1 ; j <= y ; j ++ ) vis [ j ] = 0 ;
10353	DUMMY	0.0	0.0	}	DUMMY
10354	cnt = 0	N/A	N/A	int cnt = 0 ;	int cnt = 0 ;
10355	for i = l + 1 to r inclusive add vis [ i ] to cnt	N/A	N/A	for ( int i = l + 1 ; i <= r ; i ++ ) { cnt += vis [ i ] ; }	for ( int i = l + 1 ; i <= r ; i ++ ) cnt += vis [ i ] ;
10356	print cnt	N/A	N/A	cout << cnt << endl ;	cout << cnt << endl ;
10357	DUMMY	0.0	0.0	}	DUMMY
10358	DUMMY	0.0	0.0	}	DUMMY
10359	in int function miniel which takes an int vecotr v and an int x	N/A	N/A	int minel ( vector < int > v , int x )	int miniel ( int v, int x )
10360	let l = int = 11111111	N/A	N/A	int l = 11111111 ;	int l = 11111111 ;
10361	for i = 0 to x inclusive	N/A	N/A	for ( int i = 0 ; i <= x ; i ++ )	for ( int i = 0 ; i <= x ; i ++ )
10362	if v at i < l then set l = v at 1	N/A	N/A	if ( v [ i ] < l ) { l = v [ i ] ; }	if ( v [ i ] < l ) l = v [ 1 ] ;
10363	DUMMY	0.0	0.0	}	DUMMY
10364	return l	N/A	N/A	return l ;	return l ;
10365	DUMMY	0.0	0.0	}	DUMMY
10366	DUMMY	0.0	0.0	int main() {	DUMMY
10367	let n , s , e , p be integers	N/A	N/A	int n , s , e , p ;	int n, s, e, p ;
10368	read n , s , e	N/A	N/A	cin >> n >> s >> e ;	cin >> n >> s >> e ;
10369	let arr be an integer array of length 100 , with arr [ 0 ] = 0	N/A	N/A	int arr [ 100 ] = { 0 } ;	int arr [ 100 ] = { 0 } ;
10370	sum = int = 0	N/A	N/A	int sum = 0 ;	int sum = 0 ;
10371	l = int = - 111	N/A	N/A	int l = - 111 ;	int l = - 111 ;
10372	for i = 1 to n	N/A	N/A	for ( int i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
10373	let x , y be int	N/A	N/A	int x , y ;	int x, y ;
10374	read x and y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
10375	if e < = y	N/A	N/A	if ( e <= y )	if ( e <= y )
10376	set p to e	N/A	N/A	p = e ;	p = e ;
10377	else	N/A	N/A	else	else
10378	set p to y	N/A	N/A	p = y ;	p = y ;
10379	DUMMY	0.0	0.0	}	DUMMY
10380	for i = x to p , set arr [ i ] to arr [ i ] + 1	N/A	N/A	for ( int i = x ; i < p ; i ++ ) { arr [ i ] = arr [ i ] + 1 ; }	for ( int i = x ; i <= p ; i ++ ) { arr [ i ] += 1 ; }
10381	DUMMY	0.0	0.0	}	DUMMY
10382	for i = s to e	N/A	N/A	for ( int i = s ; i < e ; i ++ )	for ( int i = s ; i <= e ; i ++ )
10383	if arr at i is 0 then increment sum	N/A	N/A	if ( arr [ i ] == 0 ) { sum ++ ; }	if ( arr [ i ] == 0 ) sum ++ ;
10384	DUMMY	0.0	0.0	}	DUMMY
10385	print sum and new line	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
10386	DUMMY	0.0	0.0	return 0;	DUMMY
10387	DUMMY	0.0	0.0	}	DUMMY
10388	create int n , a , b , c , d , ans	N/A	N/A	int n , a , b , c , d , ans ;	int n, a, b, c, d, ans ;
10389	create int array dryer of length 101	N/A	N/A	int dryer [ 101 ] ;	int dryer [ 101 ] ;
10390	DUMMY	0.0	0.0	int main() {	DUMMY
10391	read n , a and b	N/A	N/A	cin >> n >> a >> b ;	cin >> n >> a >> b ;
10392	while pre decrement n	N/A	N/A	while ( -- n )	while ( n -- )
10393	read c and d	N/A	N/A	cin >> c >> d ;	cin >> c >> d ;
10394	for i = c to d exclusive , set dryer [ i ] to 1	N/A	N/A	for ( int i = c ; i < d ; i ++ ) { dryer [ i ] = 1 ; }	for ( int i = c ; i < d ; i ++ ) { dryer [ i ] = 1 ; }
10395	DUMMY	0.0	0.0	}	DUMMY
10396	for i = a to b exclusive	N/A	N/A	for ( int i = a ; i < b ; i ++ )	for ( int i = a ; i < b ; i ++ )
10397	if dryer [ i ] equal to 0 , increment ans	N/A	N/A	if ( dryer [ i ] == 0 ) { ans ++ ; }	if ( dryer [ i ] == 0 ) ans ++ ;
10398	DUMMY	0.0	0.0	}	DUMMY
10399	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
10400	DUMMY	0.0	0.0	return 0;	DUMMY
10401	DUMMY	0.0	0.0	}	DUMMY
10402	create const int maxn = 100 + 10	N/A	N/A	const int maxn = 100 + 10 ;	const int maxn = 100 + 10 ;
10403	let bool array mark size of maxn	N/A	N/A	bool mark [ maxn ] ;	bool mark [ maxn ] ;
10404	DUMMY	0.0	0.0	int main() {	DUMMY
10405	let int n	N/A	N/A	int n ;	int n ;
10406	read n	N/A	N/A	cin >> n ;	cin >> n ;
10407	make ints L and R	N/A	N/A	int L , R ;	int L, R ;
10408	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
10409	let ints l and r	N/A	N/A	int l , r ;	int l, r ;
10410	read l and r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
10411	if i is greater than 0	N/A	N/A	if ( i > 0 )	if ( i > 0 )
10412	for j = l to r exclusive , set mark [ j ] to true	N/A	N/A	for ( int j = l ; j < r ; j ++ ) mark [ j ] = true ;	for ( int j = l ; j < r ; j ++ ) mark [ j ] = true ;
10413	else	N/A	N/A	else	else
10414	set L to l and R to r	N/A	N/A	L = l , R = r ;	L = l, R = r ;
10415	DUMMY	0.0	0.0	}	DUMMY
10416	make integer ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
10417	for i = 0 to maxn exclusive	N/A	N/A	for ( int i = 0 ; i < maxn ; i ++ )	for ( int i = 0 ; i < maxn ; i ++ )
10418	if ! mark [ i ] is truthy and L is less than or equal to i and i is less than R , increment ans	N/A	N/A	if ( ! mark [ i ] && L <= i && i < R ) ans ++ ;	if (! mark [ i ] && L <= i && i < R ) ans ++ ;
10419	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
10420	DUMMY	0.0	0.0	return 0;	DUMMY
10421	DUMMY	0.0	0.0	}	DUMMY
10422	DUMMY	0.0	0.0	int main() {	DUMMY
10423	b , a , n , i , c , d , m , j = integers	N/A	N/A	int b , a , n , i , c , d , m , j ;	int b, a, n, i, c, d, m, j ;
10424	v = integer array of size 110	N/A	N/A	int v [ 110 ] ;	int v [ 110 ] ;
10425	while read n , c , d	N/A	N/A	while ( cin >> n >> c >> d )	while ( cin >> n >> c >> d )
10426	m = 0	N/A	N/A	m = 0 ;	m = 0 ;
10427	for i = 0 to 100 , v [ i ] = 0	N/A	N/A	for ( i = 0 ; i < 101 ; i ++ ) v [ i ] = 0 ;	for ( i = 0 ; i < 100 ; i ++ ) { v [ i ] ='0'; }
10428	for i = 0 to n - 1 exclusive	N/A	N/A	for ( i = 0 ; i < n - 1 ; i ++ )	for ( i = 0 ; i < n - 1 ; i ++ )
10429	read a , b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
10430	for j = a + 1 to b , v [ j ] = - 1	N/A	N/A	for ( j = a + 1 ; j <= b ; j ++ ) v [ j ] = - 1 ;	for ( int j = a + 1 ; j <= b ; j ++ ) v [ j ] = - 1 ;
10431	DUMMY	0.0	0.0	}	DUMMY
10432	for i = c + 1 to d	N/A	N/A	for ( i = c + 1 ; i <= d ; i ++ )	for ( int i = c + 1 ; i <= d ; i ++ )
10433	if v [ i ] is 0 , increment m	N/A	N/A	if ( v [ i ] == 0 ) m ++ ;	if ( v [ i ] == 0 ) m ++ ;
10434	print m	N/A	N/A	cout << m << endl ;	cout << m << endl ;
10435	DUMMY	0.0	0.0	}	DUMMY
10436	DUMMY	0.0	0.0	return 0;	DUMMY
10437	DUMMY	0.0	0.0	}	DUMMY
10438	N = 100011	N/A	N/A	const int N = 1e5 + 11 ;	const int N = 100011 ;
10439	use = array of N bool	N/A	N/A	bool use [ N ] ;	bool use [ N ] ;
10440	DUMMY	0.0	0.0	int main() {	DUMMY
10441	n = int	N/A	N/A	int n ;	int n ;
10442	read n	N/A	N/A	cin >> n ;	cin >> n ;
10443	l , r = int	N/A	N/A	int l , r ;	int l, r ;
10444	read l , r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
10445	for i = 1 to n exclusive	N/A	N/A	for ( int i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
10446	l , r = int	N/A	N/A	int l , r ;	int l, r ;
10447	read l , r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
10448	for j = l to r exclusive use [ j ] = 1	N/A	N/A	for ( int j = l ; j < r ; j ++ ) use [ j ] = 1 ;	for ( int j = l ; j < r ; j ++ ) { use [ j ] = 1 ; }
10449	DUMMY	0.0	0.0	}	DUMMY
10450	ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
10451	for i = l to r exclusive	N/A	N/A	for ( int i = l ; i < r ; i ++ )	for ( int i = l ; i < r ; i ++ )
10452	if use [ i ] is 0 increment ans	N/A	N/A	if ( use [ i ] == 0 ) ans ++ ;	if ( use [ i ] == 0 ) { ans ++ ; }
10453	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
10454	DUMMY	0.0	0.0	}	DUMMY
10455	DUMMY	0.0	0.0	int main() {	DUMMY
10456	n = int	N/A	N/A	int n ;	int n ;
10457	read n	N/A	N/A	cin >> n ;	cin >> n ;
10458	i = int	N/A	N/A	int i ;	int i ;
10459	x = int vector of size n	N/A	N/A	vector < int > x ( n ) ;	vector < int > x ( n ) ;
10460	y = int vector of size n	N/A	N/A	vector < int > y ( n ) ;	vector < int > y ( n ) ;
10461	z = int vector of size 101 with all values set to 1	N/A	N/A	vector < int > z ( 101 , 1 ) ;	vector < int > z ( 101, 1 ) ;
10462	read n values into x then y	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { cin >> x [ i ] >> y [ i ] ; }	for ( i = 0 ; i < n ; i ++ ) { cin >> x [ i ] >> y [ ++ i ] ; }
10463	k = int	N/A	N/A	int k ;	int k ;
10464	for i = 1 to n	N/A	N/A	for ( i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
10465	for j = x [ i ] to y [ i ] set z [ k ] to 0	N/A	N/A	for ( k = x [ i ] ; k < y [ i ] ; k ++ ) { z [ k ] = 0 ; }	for ( size_t j = x [ i ] ; j <= y [ 1 ] ; ++ j ) z [ k ] = 0 ;
10466	DUMMY	0.0	0.0	}	DUMMY
10467	ct = int with ct = 0	N/A	N/A	int ct = 0 ;	int ct = 0 ;
10468	for i = x [ 0 ] to y [ 0 ]	N/A	N/A	for ( i = x [ 0 ] ; i < y [ 0 ] ; i ++ )	for ( int i = x [ 0 ] ; i <= y [ 1 ] ; ++ i )
10469	if z [ i ] is 1 increment ct	N/A	N/A	if ( z [ i ] == 1 ) { ct ++ ; }	if ( z [ i ] == 1 ) ct ++ ;
10470	DUMMY	0.0	0.0	}	DUMMY
10471	print ct	N/A	N/A	cout << ct << endl ;	cout << ct << endl ;
10472	DUMMY	0.0	0.0	return 0;	DUMMY
10473	DUMMY	0.0	0.0	}	DUMMY
10474	DUMMY	0.0	0.0	int main() {	DUMMY
10475	let n be a integer	N/A	N/A	int n ;	int n ;
10476	read n	N/A	N/A	cin >> n ;	cin >> n ;
10477	let x , y be integers	N/A	N/A	int x , y ;	int x, y ;
10478	read x , y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
10479	let d be a integer with d = y - x	N/A	N/A	int d = y - x ;	int d = y - x ;
10480	a = array of integers of length d	N/A	N/A	int a [ d ] ;	int a [ d ] ;
10481	for i = 0 to d exclusive , the value of a [ i ] is equal to 1	N/A	N/A	for ( int i = 0 ; i < d ; i ++ ) a [ i ] = 1 ;	for ( int i = 0 ; i < d ; i ++ ) { a [ i ] = 1 ; }
10482	for i = 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
10483	let m , n be integers	N/A	N/A	int m , n ;	int m, n ;
10484	read m , n	N/A	N/A	cin >> m >> n ;	cin >> m >> n ;
10485	decrement n by 1	N/A	N/A	n -- ;	n -- ;
10486	for p = m to n inclusive	N/A	N/A	for ( int p = m ; p <= n ; p ++ )	for ( int p = m ; p <= n ; p ++ )
10487	if p > = y or p is less than x , proceed to next	N/A	N/A	if ( p >= y || p < x ) continue ;	if ( p >= y || p < x ) continue ;
10488	the value of a [ p - x ] is equal to 0	N/A	N/A	a [ p - x ] = 0 ;	a [ p - x ] = 0 ;
10489	DUMMY	0.0	0.0	}	DUMMY
10490	DUMMY	0.0	0.0	}	DUMMY
10491	let sum be a integer with sum = 0	N/A	N/A	int sum = 0 ;	int sum = 0 ;
10492	for j = 0 to d exclusive , increment sum by a [ j ]	N/A	N/A	for ( int j = 0 ; j < d ; j ++ ) sum += a [ j ] ;	for ( int j = 0 ; j < d ; j ++ ) { sum += a [ j ] ; }
10493	print sum and newline	N/A	N/A	cout << sum << " \n " ;	cout << sum << endl ;
10494	DUMMY	0.0	0.0	return 0;	DUMMY
10495	DUMMY	0.0	0.0	}	DUMMY
10496	create int array v [ 105 ]	N/A	N/A	int v [ 105 ] ;	int v [ 105 ] ;
10497	DUMMY	0.0	0.0	int main() {	DUMMY
10498	create long long n and sum , set sum to 0	N/A	N/A	long long n , sum = 0 ;	long long n, sum = 0 ;
10499	read n	N/A	N/A	cin >> n ;	cin >> n ;
10500	let x and y be int	N/A	N/A	int x , y ;	int x, y ;
10501	read x , y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
10502	for i = 2 to n inclusive	N/A	N/A	for ( int i = 2 ; i <= n ; ++ i )	for ( int i = 2 ; i <= n ; i ++ )
10503	create int a and b	N/A	N/A	int a , b ;	int a, b ;
10504	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
10505	for j = a + 1 to b inclusive , set v [ j ] to 1	N/A	N/A	for ( int j = a + 1 ; j <= b ; ++ j ) v [ j ] = 1 ;	for ( int j = a + 1 ; j <= b ; j ++ ) v [ j ] = 1 ;
10506	DUMMY	0.0	0.0	}	DUMMY
10507	for i = x + 1 to y inclusive , assign sum + 1 - v [ i ] to sum	N/A	N/A	for ( int i = x + 1 ; i <= y ; ++ i ) sum += 1 - v [ i ] ;	for ( int i = x + 1 ; i <= y ; i ++ ) sum += 1 - v [ i ] ;
10508	print sum and a newline	N/A	N/A	cout << sum << ' \n ' ;	cout << sum <<'\n';
10509	DUMMY	0.0	0.0	return 0;	DUMMY
10510	DUMMY	0.0	0.0	}	DUMMY
10511	create int array a of length 105	N/A	N/A	int a [ 105 ] ;	int a [ 105 ] ;
10512	create integers n , x , y , i , l , r	N/A	N/A	int n , x , y , i , l , r ;	int n, x, y, i, l, r ;
10513	let sum and j be integers	N/A	N/A	int sum , j ;	int sum, j ;
10514	DUMMY	0.0	0.0	int main() {	DUMMY
10515	read n	N/A	N/A	cin >> n ;	cin >> n ;
10516	read x and y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
10517	for i = 1 to n exclusive	N/A	N/A	for ( i = 1 ; i < n ; i ++ )	for ( i = 1 ; i < n ; i ++ )
10518	read l and r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
10519	for j = l to r exclusive , set a [ j ] to 1	N/A	N/A	for ( j = l ; j < r ; j ++ ) { a [ j ] = 1 ; }	for ( j = l ; j < r ; j ++ ) { a [ j ] = 1 ; }
10520	DUMMY	0.0	0.0	}	DUMMY
10521	assign 0 to sum	N/A	N/A	sum = 0 ;	sum = 0 ;
10522	for i = x to y exclusive	N/A	N/A	for ( i = x ; i < y ; i ++ )	for ( int i = x ; i < y ; i ++ )
10523	if a [ i ] equal to 0 , sum = sum + 1	N/A	N/A	if ( a [ i ] == 0 ) sum ++ ;	if ( a [ i ] == 0 ) sum += 1 ;
10524	DUMMY	0.0	0.0	}	DUMMY
10525	print sum	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
10526	DUMMY	0.0	0.0	}	DUMMY
10527	DUMMY	0.0	0.0	int main() {	DUMMY
10528	n , i , j , sum , alexeyI and alexeyJ are integers with sum = 0	N/A	N/A	int n , i , j , sum = 0 , alexeyI , alexeyJ ;	int n, i, j, sum = 0, alexeyI, aeseyJ ;
10529	create int array dryer with size 101	N/A	N/A	int dryer [ 101 ] ;	int dryer [ 101 ] ;
10530	call fill_n ( dryer , 101 , 1 )	N/A	N/A	fill_n ( dryer , 101 , 1 ) ;	fill_n ( dryer, 101, 1 ) ;
10531	read n	N/A	N/A	cin >> n ;	cin >> n ;
10532	read input to alexeyI and alexeyJ	N/A	N/A	cin >> alexeyI >> alexeyJ ;	cin >> alexeyI >> aeseyJ ;
10533	for integer l = 0 to n - 1 exclusive	N/A	N/A	for ( int l = 0 ; l < n - 1 ; l ++ )	for ( int l = 0 ; l < n - 1 ; l ++ )
10534	read i and j	N/A	N/A	cin >> i >> j ;	cin >> i >> j ;
10535	for k from i to j exclusive , set dryer [ k ] to 0	N/A	N/A	for ( int k = i ; k < j ; k ++ ) { dryer [ k ] = 0 ; }	for ( int k = i ; k < j ; k ++ ) { dryer [ k ] = 0 ; }
10536	DUMMY	0.0	0.0	}	DUMMY
10537	for k from alexeyI to alexeyJ exclusive , add dryer [ k ] to sum	N/A	N/A	for ( int k = alexeyI ; k < alexeyJ ; k ++ ) { sum += dryer [ k ] ; }	for ( int k = alexeyI ; k < alexeiJ ; k ++ ) { sum += dryer [ k ] ; }
10538	print sum	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
10539	DUMMY	0.0	0.0	return 0;	DUMMY
10540	DUMMY	0.0	0.0	}	DUMMY
10541	create int array arr with size 1000	N/A	N/A	int arr [ 1000 ] ;	int arr [ 1000 ] ;
10542	DUMMY	0.0	0.0	int main() {	DUMMY
10543	declare integer variable n	N/A	N/A	int n ;	int n ;
10544	read n	N/A	N/A	cin >> n ;	cin >> n ;
10545	create integers l and r	N/A	N/A	int l , r ;	int l, r ;
10546	read l and r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
10547	decrement n by one	N/A	N/A	n -- ;	n -- ;
10548	while n ! = 0 , decrement it and continue the loop	N/A	N/A	while ( n -- )	while ( n -- )
10549	create ints x and y	N/A	N/A	int x , y ;	int x, y ;
10550	read input to x and y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
10551	for i = y to x exclusive counting down , increment arr [ i ] by one	N/A	N/A	for ( int i = y ; i > x ; i -- ) arr [ i ] ++ ;	for ( int i = y ; i > x ; i -- ) { arr [ i ] ++ ; }
10552	DUMMY	0.0	0.0	}	DUMMY
10553	declare int variable ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
10554	for i = r to l exclusive counting down	N/A	N/A	for ( int i = r ; i > l ; i -- )	for ( int i = r ; i > l ; i -- )
10555	if arr [ i ] is equal to 0 , increment ans by one	N/A	N/A	if ( arr [ i ] == 0 ) ans ++ ;	if ( arr [ i ] == 0 ) ans ++ ;
10556	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
10557	DUMMY	0.0	0.0	return 0;	DUMMY
10558	DUMMY	0.0	0.0	}	DUMMY
10559	in function File	N/A	N/A	void File ( )	void File ( )
10560	call freopen of " output . txt " , " w " and stdout	N/A	N/A	freopen ( " output.txt " , " w " , stdout ) ;	freopen ( " output.txt ", " w ", stdout ) ;
10561	call freopen of " input . txt " , " r " and stdin	N/A	N/A	freopen ( " input.txt " , " r " , stdin ) ;	freopen ( " input.txt ", " r ", stdin ) ;
10562	DUMMY	0.0	0.0	}	DUMMY
10563	define empty function fast	N/A	N/A	void fast ( ) { }	void fast ( ) { }
10564	pi = const double with pi = 2 * acos of 0 . 0	N/A	N/A	const double pi = 2 * acos ( 0.0 ) ;	const double pi = 2 * acos ( 0.0 ) ;
10565	nn = const int with nn = 2e5 + 5	N/A	N/A	const int nn = 2e5 + 5 ;	const int nn = 2e5 + 5 ;
10566	oo = const int with oo = 0x3f3f3f3f	N/A	N/A	const int oo = 0x3f3f3f3f ;	const int oo = ( 0x3f3f )3f ;
10567	DUMMY	0.0	0.0	int main() {	DUMMY
10568	call fast	N/A	N/A	fast ( ) ;	fast ( ) ;
10569	n , b , e , ans = int with ans = 0	N/A	N/A	int n , b , e , ans = 0 ;	int n, b, e, ans = 0 ;
10570	arr = int array of size nn	N/A	N/A	int arr [ nn ] = { } ;	int arr [ nn ] ;
10571	read n	N/A	N/A	cin >> n ;	cin >> n ;
10572	read b then e	N/A	N/A	cin >> b >> e ;	cin >> b >> e ;
10573	for i = 0 to n - 1	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
10574	x , y = int	N/A	N/A	int x , y ;	int x, y ;
10575	read x then y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
10576	for j = x to y increment arr [ j ]	N/A	N/A	for ( int j = x ; j < y ; j ++ ) arr [ j ] ++ ;	for ( int j = x ; j <= y ; j ++ ) arr [ j ] ++ ;
10577	DUMMY	0.0	0.0	}	DUMMY
10578	for i = b to e	N/A	N/A	for ( int i = b ; i < e ; i ++ )	for ( int i = b ; i <= e ; i ++ )
10579	if arr8i ] is 0 increment ans	N/A	N/A	if ( ! arr [ i ] ) ans ++ ;	if ( arr [ i ] == 0 ) ans ++ ;
10580	print ans	N/A	N/A	cout << ans << " \n " ;	cout << ans << endl ;
10581	DUMMY	0.0	0.0	return 0;	DUMMY
10582	DUMMY	0.0	0.0	}	DUMMY
10583	create long longs A , B , ans with ans = - 0x7fffffff	N/A	N/A	long long A , B , ans = - 0x7fffffff ;	long long A, B, ans = - 0x7fffffff ;
10584	create long longs bxb , bex , bob , bpb	N/A	N/A	long long bxb , bex , bob , bpb ;	long long bxb, bex, bob, bpb ;
10585	DUMMY	0.0	0.0	int main() {	DUMMY
10586	read A read B	N/A	N/A	cin >> A >> B ;	cin >> A >> B ;
10587	if B is 0	N/A	N/A	if ( B == 0 )	if ( B == 0 )
10588	print A * A print newline	N/A	N/A	cout << A * A << endl ;	cout << A * A << endl ;
10589	for i = 0 to A exclusive print " o "	N/A	N/A	for ( int i = 0 ; i < A ; i ++ ) cout << " o " ;	for ( int i = 0 ; i < A ; i ++ ) { cout << " o " ; }
10590	print newline	N/A	N/A	cout << endl ;	cout << endl ;
10591	DUMMY	0.0	0.0	return 0;	DUMMY
10592	DUMMY	0.0	0.0	}	DUMMY
10593	if B is 1	N/A	N/A	if ( B == 1 )	if ( B == 1 )
10594	print A * A - 1 print newline	N/A	N/A	cout << A * A - 1 << endl ;	cout << A * A - 1 << endl ;
10595	for i = 0 to A exclusive , print " o "	N/A	N/A	for ( int i = 0 ; i < A ; i ++ ) cout << " o " ;	for ( int i = 0 ; i < A ; i ++ ) { cout << " o " ; }
10596	print " x " print newline	N/A	N/A	cout << " x " << endl ;	cout << " x " << endl ;
10597	DUMMY	0.0	0.0	return 0;	DUMMY
10598	DUMMY	0.0	0.0	}	DUMMY
10599	if A is 0	N/A	N/A	if ( A == 0 )	if ( A == 0 )
10600	print - B * B print newline	N/A	N/A	cout << - B * B << endl ;	cout << - B * B << endl ;
10601	for i = 0 to B exclusive , print " x '	N/A	N/A	for ( int i = 0 ; i < B ; i ++ ) cout << " x " ;	for ( int i = 0 ; i < B ; i ++ ) { cout << " x " ; }
10602	print newline	N/A	N/A	cout << endl ;	cout << endl ;
10603	DUMMY	0.0	0.0	return 0;	DUMMY
10604	DUMMY	0.0	0.0	}	DUMMY
10605	for xb = 2 to minimum of ( B and A + 1 ) inclusive	N/A	N/A	for ( int xb = 2 ; xb <= min ( B , A + 1 ) ; xb ++ )	for ( int xb = 2 ; xb <= min ( B, A + 1 ) ; ++ xb )
10606	create integer ob with ob = xb - 1	N/A	N/A	int ob = xb - 1 ;	int ob = xb - 1 ;
10607	create long long score with score = ob - 1	N/A	N/A	long long score = ob - 1 ;	long long score = ob - 1 ;
10608	increment score by ( A - ( ob - 1 ) ) * ( A - ( ob - 1 ) )	N/A	N/A	score += ( A - ( ob - 1 ) ) * ( A - ( ob - 1 ) ) ;	score = score + ( A - ( ob - 1 ) ) * ( A- (ob - 1.0 ) ) ;
10609	end statement	N/A	N/A	;	;
10610	create long long pb with pb = B / xb	N/A	N/A	long long pb = B / xb ;	long long pb = B / xb ;
10611	create long long ex with ex = B % xb	N/A	N/A	long long ex = B % xb ;	long long ex = B % xb ;
10612	decrement score by ( xb - ex ) * pb * pb	N/A	N/A	score -= ( xb - ex ) * pb * pb ;	score -= ( xb - ex ) * ( pb * pb ) ;
10613	decrement score by ex * ( pb + 1 ) * ( pb + 1 )	N/A	N/A	score -= ex * ( pb + 1 ) * ( pb + 1 ) ;	score -= ex * ( pb + 1 ) * ( Pb + 2 ) ;
10614	if score is greater than ans	N/A	N/A	if ( score > ans )	if ( score > ans )
10615	set ans to score	N/A	N/A	ans = score ;	ans = score ;
10616	set bxb to xb	N/A	N/A	bxb = xb ;	xb = xb ;
10617	set bex to ex	N/A	N/A	bex = ex ;	xd = ex ;
10618	set bob to ob	N/A	N/A	bob = ob ;	bob = ob ;
10619	set bpb to pb	N/A	N/A	bpb = pb ;	bb = pb ;
10620	DUMMY	0.0	0.0	}	DUMMY
10621	DUMMY	0.0	0.0	}	DUMMY
10622	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
10623	for i = 0 to bxb exclusive	N/A	N/A	for ( int i = 0 ; i < bxb ; i ++ )	for ( int i = 0 ; i < bxb ; i ++ )
10624	for j = 0 to bpb exclusive , print " x "	N/A	N/A	for ( int j = 0 ; j < bpb ; j ++ ) cout << " x " ;	for ( int j = 0 ; j < bpb ; j ++ ) { cout << " x " ; }
10625	if i is less than bex , print " x "	N/A	N/A	if ( i < bex ) cout << " x " ;	if ( i < bex ) cout << " x " ;
10626	if i is 0	N/A	N/A	if ( i == 0 )	if ( i == 0 )
10627	for j = 0 to A - ( bob - 1 ) exclusive , print " o "	N/A	N/A	for ( int j = 0 ; j < A - ( bob - 1 ) ; j ++ ) cout << " o " ;	for ( int j = 0 ; j < A - ( bob - 1 ) ; j ++ ) cout << " o " ;
10628	else if i + 1 is less than bxb	N/A	N/A	else if ( i + 1 < bxb )	else if ( i + 1 < bxb )
10629	print " o "	N/A	N/A	cout << " o " ;	cout << " o " ;
10630	DUMMY	0.0	0.0	}	DUMMY
10631	print newline	N/A	N/A	cout << endl ;	cout << endl ;
10632	DUMMY	0.0	0.0	return 0;	DUMMY
10633	DUMMY	0.0	0.0	}	DUMMY
10634	declare integer variables co and cx	N/A	N/A	int co , cx ;	int co, cx ;
10635	create const long long inf = - 1e16	N/A	N/A	const long long inf = - 1e16 ;	const long long inf = - 1e16 ;
10636	inlined long long function gox with int argument num	N/A	N/A	inline long long gox ( int num )	inline long long gox ( int num )
10637	return inf if num is greater than cx	N/A	N/A	if ( num > cx ) return inf ;	if ( num > cx ) return inf ;
10638	declare int ex = cx % num	N/A	N/A	int ex = cx % num ;	int ex = cx % num ;
10639	declare int variable anch = cx / num	N/A	N/A	int anch = cx / num ;	int anch = cx / num ;
10640	declare long long variable ans = 1LL * ( anch + 1 ) * ( anch + 1 ) * ex	N/A	N/A	long long ans = 1LL * ( anch + 1 ) * ( anch + 1 ) * ex ;	long long ans = 1LL * ( anch + 1 ) * ( ( ( int ) ( ( anch ++ 1 ) ) * ex ) ) ;
10641	increase ans by 1LL * anch * anch * ( num - ex )	N/A	N/A	ans += 1LL * anch * anch * ( num - ex ) ;	ans += 1LL * ( anch * ( num - ex ) ) ;
10642	return - ans	N/A	N/A	return - ans ;	return - ans ;
10643	DUMMY	0.0	0.0	}	DUMMY
10644	inlined long long function goo with int argument num	N/A	N/A	inline long long goo ( int num )	inline long long goo ( int num )
10645	if num is greater than co	N/A	N/A	if ( num > co ) return inf ;	if ( num > co )
10646	declare int variable juntos = co - num + 1	N/A	N/A	int juntos = co - num + 1 ;	int juntos = co - num + 1 ;
10647	create long long ans = 1LL * juntos * juntos	N/A	N/A	long long ans = 1LL * juntos * juntos ;	long long ans = ( 1LL * juntos ) * ( junto ) ;
10648	increase ans by num - 1	N/A	N/A	ans += num - 1 ;	ans += num - 1 ;
10649	return ans	N/A	N/A	return ans ;	return ans ;
10650	DUMMY	0.0	0.0	}	DUMMY
10651	inlined void function build with int arguments x and o	N/A	N/A	inline void build ( int x , int o )	inline void build ( int x, int o )
10652	create string s	N/A	N/A	string s ;	string s ;
10653	declare integer xx = cx / x	N/A	N/A	int xx = cx / x ;	int xx = cx / x ;
10654	create bool flag = true if x > o , else false	N/A	N/A	bool flag = ( x > o ) ;	bool flag = x > o ;
10655	declare bool variable fst = true	N/A	N/A	bool fst = true ;	bool fst = true ;
10656	create integer ex = cx % x	N/A	N/A	int ex = cx % x ;	int ex = cx % x ;
10657	declare integer prim = co - o + 1	N/A	N/A	int prim = co - o + 1 ;	int prim = co - o + 1 ;
10658	while either x or o is true	N/A	N/A	while ( x || o )	while ( x || o )
10659	if flag is true	N/A	N/A	if ( flag )	if ( flag )
10660	push ' x ' into s xx times	N/A	N/A	for ( int i = int ( 0 ) ; i < int ( xx ) ; ++ i ) s . push_back ( ' x ' ) ;	for ( int i = 0 ; i < xx ; i ++ ) s. push_back ('x') ;
10661	if ex is greater than 0 , push ' x ' into s and decrement ex	N/A	N/A	if ( ex > 0 ) s . push_back ( ' x ' ) , ex -- ;	if ( ex > 0 ) s. push ('x'), ex -- ;
10662	decrement x	N/A	N/A	x -- ;	x -- ;
10663	else	N/A	N/A	else	else
10664	if fst is true	N/A	N/A	if ( fst )	if ( fst )
10665	push ' o ' into s prim times	N/A	N/A	for ( int i = int ( 0 ) ; i < int ( prim ) ; ++ i ) s . push_back ( ' o ' ) ;	for ( int j = 0 ; j < prim ; j ++ ) s. push_back ('o') ;
10666	set fst to false	N/A	N/A	fst = false ;	fff = false ;
10667	else	N/A	N/A	else	else
10668	push ' o ' into s	N/A	N/A	s . push_back ( ' o ' ) ;	s. push_back ('o') ;
10669	decrement o	N/A	N/A	o -- ;	o -- ;
10670	DUMMY	0.0	0.0	}	DUMMY
10671	invert the value of flag	N/A	N/A	flag = ( ! flag ) ;	flag = - flag ;
10672	DUMMY	0.0	0.0	}	DUMMY
10673	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
10674	DUMMY	0.0	0.0	}	DUMMY
10675	DUMMY	0.0	0.0	int main() {	DUMMY
10676	read co and cx	N/A	N/A	cin >> co >> cx ;	cin >> co >> cx ;
10677	if co is 0 or cx is 0	N/A	N/A	if ( co == 0 || cx == 0 )	if ( co == 0 || cx == 0 )
10678	if co is greater than 0	N/A	N/A	if ( co > 0 )	if ( co > 0 )
10679	print 1LL * co * co	N/A	N/A	cout << 1LL * co * co << endl ;	cout << 1LL * co * co << endl ;
10680	print ' o ' co times	N/A	N/A	for ( int i = int ( 0 ) ; i < int ( co ) ; ++ i ) cout << ' o ' ;	for ( int j = 0 ; j < co ; j ++ ) cout <<'o';
10681	print a new line	N/A	N/A	cout << endl ;	cout << endl ;
10682	DUMMY	0.0	0.0	}	DUMMY
10683	if cx is greater than 0	N/A	N/A	if ( cx > 0 )	if ( cx > 0 )
10684	print - 1LL * cx * cx	N/A	N/A	cout << - 1LL * cx * cx << endl ;	cout << - 1LL * cx * cx << endl ;
10685	print ' x ' cx times	N/A	N/A	for ( int i = int ( 0 ) ; i < int ( cx ) ; ++ i ) cout << ' x ' ;	for ( int j = 0 ; j < cx ; j ++ ) { cout <<'x'; }
10686	print	N/A	N/A	cout << endl ;	cout << endl ;
10687	DUMMY	0.0	0.0	}	DUMMY
10688	DUMMY	0.0	0.0	return 0;	DUMMY
10689	DUMMY	0.0	0.0	}	DUMMY
10690	declare int lim = min of co and cx	N/A	N/A	int lim = min ( co , cx ) ;	int lim = min ( co, cx ) ;
10691	create long long ans = LLONG_MIN	N/A	N/A	long long ans = LLONG_MIN ;	long long ans = LLONG_MIN ;
10692	pos is a pair of integers	N/A	N/A	pair < int , int > pos ;	pair < int, int > pos ;
10693	for integer i = 1 to lim + 1 exclusive	N/A	N/A	for ( int i = int ( 1 ) ; i < int ( lim + 1 ) ; ++ i )	for ( int i = 1 ; i < lim + 1 ; ++ i )
10694	if ans is less than gox ( i ) + goo ( i )	N/A	N/A	if ( ans < gox ( i ) + goo ( i ) )	if ( ans < gox ( i ) + goo ( i. ) )
10695	assign gox ( i ) + goo ( i ) to ans	N/A	N/A	ans = gox ( i ) + goo ( i ) ;	ans = gox ( i ) + goo ( j ) ;
10696	pos = { i , i }	N/A	N/A	pos = { i , i } ;	pos = { i, i } ;
10697	DUMMY	0.0	0.0	}	DUMMY
10698	DUMMY	0.0	0.0	}	DUMMY
10699	for i = 2 to cx + 1 exclusive	N/A	N/A	for ( int i = int ( 2 ) ; i < int ( cx + 1 ) ; ++ i )	for ( int i = 2 ; i < cx + 1 ; i ++ )
10700	if ans is less than gox ( i ) + goo ( i - 1 )	N/A	N/A	if ( ans < gox ( i ) + goo ( i - 1 ) )	if ( ans < gox ( i ) + goo ( i - 1 ) )
10701	change ans to gox ( i ) + goo ( i - 1 )	N/A	N/A	ans = gox ( i ) + goo ( i - 1 ) ;	ans = gox ( i ) + goo ( i - 1 ) ;
10702	pos = { i , i - 1 }	N/A	N/A	pos = { i , i - 1 } ;	pos = { i, i - 1 } ;
10703	DUMMY	0.0	0.0	}	DUMMY
10704	DUMMY	0.0	0.0	}	DUMMY
10705	for i = 2 to co + 1 exclusive	N/A	N/A	for ( int i = int ( 2 ) ; i < int ( co + 1 ) ; ++ i )	for ( int i = 2 ; i < co + 1 ; i ++ )
10706	if ans is less than gox ( i - 1 ) + goo ( i )	N/A	N/A	if ( ans < gox ( i - 1 ) + goo ( i ) )	if ( ans < gox ( i - 1 ) + goo ( i ) )
10707	set ans to gox ( i - 1 ) + goo ( i )	N/A	N/A	ans = gox ( i - 1 ) + goo ( i ) ;	ans = gox ( i - 1 ) + goo ( i ) ;
10708	pos = { i - 1 , i }	N/A	N/A	pos = { i - 1 , i } ;	pos = { i - 1, i } ;
10709	DUMMY	0.0	0.0	}	DUMMY
10710	DUMMY	0.0	0.0	}	DUMMY
10711	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
10712	call build with arguments pos . first and pos . second	N/A	N/A	build ( pos . first , pos . second ) ;	build ( pos. first, pos. second ) ;
10713	DUMMY	0.0	0.0	return 0;	DUMMY
10714	DUMMY	0.0	0.0	}	DUMMY
10715	DUMMY	0.0	0.0	int main() {	DUMMY
10716	create long long a and b	N/A	N/A	long long a , b ;	long long a, b ;
10717	read a , b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
10718	if a equal to 0	N/A	N/A	if ( a == 0 )	if ( a == 0 )
10719	print - 1 * b * b	N/A	N/A	cout << - 1 * b * b << endl ;	cout << - 1 * b * b << endl ;
10720	for i = 0 to b exclusive , print x	N/A	N/A	for ( int ( i ) = ( 0 ) ; ( i ) < ( b ) ; ++ ( i ) ) cout << ' x ' ;	for ( long long i = 0 ; i < b ; i ++ ) { cout << x ; }
10721	print a newline	N/A	N/A	cout << endl ;	cout << endl ;
10722	else if b = 0	N/A	N/A	else if ( b == 0 )	else if ( b == 0 )
10723	print a * a	N/A	N/A	cout << a * a << endl ;	cout << a * a << endl ;
10724	for i = 0 to a exclusive , print o	N/A	N/A	for ( int ( i ) = ( 0 ) ; ( i ) < ( a ) ; ++ ( i ) ) cout << ' o ' ;	for ( int i = 0 ; i < a ; i ++ ) { cout << o ; }
10725	print a newline	N/A	N/A	cout << endl ;	cout << endl ;
10726	else if b equal to 1	N/A	N/A	else if ( b == 1 )	else if ( b == 1 )
10727	print a * a - 1	N/A	N/A	cout << a * a - 1 << endl ;	cout << a * a - 1 << endl ;
10728	for i = 0 to a exclusive , print o	N/A	N/A	for ( int ( i ) = ( 0 ) ; ( i ) < ( a ) ; ++ ( i ) ) cout << ' o ' ;	for ( int i = 0 ; i < a ; i ++ ) { cout << o ; }
10729	print x	N/A	N/A	cout << ' x ' ;	cout << x << endl ;
10730	print a newline	N/A	N/A	cout << endl ;	cout << endl ;
10731	else	N/A	N/A	else	else
10732	ser ret to LLONG_MIN	N/A	N/A	long long ret = LLONG_MIN ;	cerr << LLONG_MIN ;
10733	set foo = 0	N/A	N/A	long long foo = 0 ;	int foo = 0 ;
10734	for j = 1 to min of b - 1 and a	N/A	N/A	for ( long long j = 1 ; j <= min ( b - 1 , a ) ; j ++ )	for ( int j = 1 ; j <= min ( b - 1, a ) ; j ++ )
10735	assign ( a - j + 1 ) * ( a - j + 1 ) + ( j - 1 ) to pos	N/A	N/A	long long pos = ( a - j + 1 ) * ( a - j + 1 ) + ( j - 1 ) ;	long long pos = ( a - j + 1 ) * ( ( long long ) ( ( ( double ) a + j + 2 ) ) + ( j - 1 ) ) ;
10736	set q = b / ( j + 1 ) and r to b % ( j + 1 )	N/A	N/A	long long q = b / ( j + 1 ) , r = b % ( j + 1 ) ;	long long q = b / ( j + 1 ), r = b % ( long long ) j + i ;
10737	set neg = r * ( q + 1 ) * ( q + 1 ) + ( j + 1 - r ) * q * q	N/A	N/A	long long neg = r * ( q + 1 ) * ( q + 1 ) + ( j + 1 - r ) * q * q ;	long long neg = r * ( q + 1 ) * ( Q + i ) + ( j + 1 - r ) * q * q ;
10738	if pos - neg greater than ret	N/A	N/A	if ( pos - neg > ret )	if ( pos - neg > ret )
10739	ret = pos - neg	N/A	N/A	ret = pos - neg ;	ret = pos - neg ;
10740	assign j + 1 to foo	N/A	N/A	foo = j + 1 ;	long long foo = j + 1 ;
10741	DUMMY	0.0	0.0	}	DUMMY
10742	DUMMY	0.0	0.0	}	DUMMY
10743	print ret	N/A	N/A	cout << ret << endl ;	cout << ret << endl ;
10744	set q = b / foo , r = b % foo	N/A	N/A	long long q = b / foo , r = b % foo ;	q = b / foo, r = b % foo ;
10745	assign ( a - ( foo - 1 ) + 1 ) to g	N/A	N/A	long long g = ( a - ( foo - 1 ) + 1 ) ;	g = ( a - ( foo - 1 ) + 1 ) ;
10746	for j = 1 to foo + 1 exclusive	N/A	N/A	for ( int ( j ) = ( 1 ) ; ( j ) < ( foo + 1 ) ; ++ ( j ) )	for ( int j = 1 ; j < foo + 1 ; ++ j )
10747	for i = 0 to q exclusive , print x	N/A	N/A	for ( int ( i ) = ( 0 ) ; ( i ) < ( q ) ; ++ ( i ) ) cout << ' x ' ;	for ( int i = 0 ; i < q ; i ++ ) cout << x ;
10748	if < = r , print x	N/A	N/A	if ( j <= r ) cout << ' x ' ;	if ( i <= r ) cout << x << endl ;
10749	if j different from foo	N/A	N/A	if ( j != foo )	if ( j!= foo )
10750	if j equal to 1	N/A	N/A	if ( j == 1 )	if ( j == 1 )
10751	for i = 0 to g exclusive , print o	N/A	N/A	for ( int ( i ) = ( 0 ) ; ( i ) < ( g ) ; ++ ( i ) ) cout << ' o ' ;	for ( int i = 0 ; i < g ; i ++ ) cout << o ;
10752	else	N/A	N/A	else	else
10753	print o	N/A	N/A	cout << ' o ' ;	cout << o << endl ;
10754	DUMMY	0.0	0.0	}	DUMMY
10755	DUMMY	0.0	0.0	}	DUMMY
10756	print a newline	N/A	N/A	cout << endl ;	cout << endl ;
10757	DUMMY	0.0	0.0	}	DUMMY
10758	DUMMY	0.0	0.0	return 0;	DUMMY
10759	DUMMY	0.0	0.0	}	DUMMY
10760	create integer vector v	N/A	N/A	vector < int > v ;	vector < int > v ;
10761	DUMMY	0.0	0.0	int main() {	DUMMY
10762	create integers n , p , k	N/A	N/A	int n , p , k ;	int n, p, k ;
10763	read n read p read k	N/A	N/A	cin >> n >> p >> k ;	cin >> n >> p >> k ;
10764	for x = p - k to p + k inclusive	N/A	N/A	for ( int x = p - k ; x <= p + k ; x ++ )	for ( int x = p - k ; x <= p + k ; ++ x )
10765	if x is less than 1 , break current loop iteration	N/A	N/A	if ( x < 1 ) continue ;	if ( x < 1 ) continue ;
10766	if x is greater than n , break current loop iteration	N/A	N/A	if ( x > n ) continue ;	if ( x > n ) continue ;
10767	add element x to end of v	N/A	N/A	v . push_back ( x ) ;	v. push_back ( x ) ;
10768	DUMMY	0.0	0.0	}	DUMMY
10769	if v [ 0 ] is not 1 , print " < < "	N/A	N/A	if ( v [ 0 ] != 1 ) cout << " << " ;	if ( v [ 0 ]!= 1 ) cout << " << " << endl ;
10770	for i = 0 to integer casted size of v exclusive	N/A	N/A	for ( int ( i ) = ( 0 ) ; ( i ) < ( ( ( int ) v . size ( ) ) ) ; ++ ( i ) )	for ( int i = 0 ; i < ( int ) v. size ( ) ; i ++ )
10771	if v [ i ] is p , print " ( "	N/A	N/A	if ( v [ i ] == p ) cout << " ( " ;	if ( v [ i ] == p ) cout << " ( " ;
10772	print v [ i ]	N/A	N/A	cout << v [ i ] ;	cout << v [ i ] << endl ;
10773	if v [ i ] is p , print " ) "	N/A	N/A	if ( v [ i ] == p ) cout << " ) " ;	if ( v [ i ] == p ) cout << " ) " << endl ;
10774	if i is integer casted size of v - 1	N/A	N/A	if ( i == ( ( int ) v . size ( ) ) - 1 )	if ( i == ( int ) v. size ( ) - 1 )
10775	if v [ i ] is less than n	N/A	N/A	if ( v [ i ] < n )	if ( v [ i ] < n )
10776	print " > > " print newline	N/A	N/A	cout << " >> " << endl ;	cout << " > " << endl ;
10777	else	N/A	N/A	else	else
10778	print newline	N/A	N/A	cout << endl ;	cout << endl ;
10779	else	N/A	N/A	else	else
10780	print " "	N/A	N/A	cout << " " ;	cout << " " ;
10781	DUMMY	0.0	0.0	}	DUMMY
10782	DUMMY	0.0	0.0	return 0;	DUMMY
10783	DUMMY	0.0	0.0	}	DUMMY
10784	create integer queue q	N/A	N/A	queue < int > q ;	queue < int > q ;
10785	create boolean array p with size 10000 with p = { }	N/A	N/A	bool p [ 10000 ] = { } ;	bool p [ 10000 ] = { } ;
10786	create integer pe	N/A	N/A	int pe ;	int pe ;
10787	declare print with integers c , a , b as arguments , returning void	N/A	N/A	void print ( int c , int a , int b )	void print ( int c, int a, int b )
10788	if a is less than c or a is greater than b or p [ a ] or a is greater than pe or a is less than 1 , return from function	N/A	N/A	if ( a < c || a > b || p [ a ] || a > pe || a < 1 ) return ;	if ( a < c || a > b || p [ a ] or a > pe || a < 1 ) return ;
10789	set p [ a ] to true	N/A	N/A	p [ a ] = true ;	p [ a ] = true ;
10790	run print with c , a - 1 , b as arguments	N/A	N/A	print ( c , a - 1 , b ) ;	print ( c, a - 1, b ) ;
10791	add element a to end of q	N/A	N/A	q . push ( a ) ;	q. push ( a ) ;
10792	run print with c , a + 1 , b as arguments	N/A	N/A	print ( c , a + 1 , b ) ;	print ( c, a + 1, b ) ;
10793	DUMMY	0.0	0.0	}	DUMMY
10794	DUMMY	0.0	0.0	int main() {	DUMMY
10795	create integers n , k	N/A	N/A	int n , k ;	int n, k ;
10796	read pe read n read k	N/A	N/A	cin >> pe >> n >> k ;	cin >> pe >> n >> k ;
10797	if n - k is greater than 1 , print " < < "	N/A	N/A	if ( n - k > 1 ) { cout << " << " ; }	if ( n - k > 1 ) cout << " << " << endl ;
10798	run print with n - k , n , n + k as arguments	N/A	N/A	print ( n - k , n , n + k ) ;	print ( n - k, n, n + k ) ;
10799	while q is not empty	N/A	N/A	while ( ! q . empty ( ) )	while ( q. empty ( ) )
10800	if size of q is not 1 and front of q is not n	N/A	N/A	if ( q . size ( ) != 1 && q . front ( ) != n )	if (! q. size ( ) && q. front ( )!= n )
10801	print front of q print " "	N/A	N/A	cout << q . front ( ) << " " ;	cout << q. front ( ) << " " ;
10802	else if front of q is n	N/A	N/A	else if ( q . front ( ) == n )	else if ( q. front ( ) == n )
10803	print " ( " print front of q	N/A	N/A	cout << " ( " << q . front ( ) ;	cout << " ( " << q. front ( ) ) << endl ;
10804	if size of q is not 1	N/A	N/A	if ( q . size ( ) != 1 )	if ( q. size ( )!= 1 )
10805	print " ) "	N/A	N/A	cout << " ) " ;	cout << " ) "
10806	else	N/A	N/A	else	else
10807	print " ) "	N/A	N/A	cout << " ) " ;	cout << " ) "
10808	else	N/A	N/A	else	else
10809	print front of q	N/A	N/A	cout << q . front ( ) ;	cout << q. front ( ) << endl ;
10810	remove element from end of q	N/A	N/A	q . pop ( ) ;	q. pop ( ) ;
10811	DUMMY	0.0	0.0	}	DUMMY
10812	if n + k is less than pe , print " > > "	N/A	N/A	if ( n + k < pe ) { cout << " >> " ; }	if ( n + k < pe ) cout << " >> " << endl ;
10813	print newline	N/A	N/A	cout << endl ;	cout << endl ;
10814	DUMMY	0.0	0.0	}	DUMMY
10815	in the function desperate_optimization	N/A	N/A	void desperate_optimization ( int precision )	void desperate_optimization ( )
10816	set format flag ios : : fixed of the output	N/A	N/A	cout . setf ( ios :: fixed ) ;	cout << fixed << ios :: fixed ;
10817	set format flag ios : : showpoint of the output	N/A	N/A	cout . setf ( ios :: showpoint ) ;	cout << flag. setf ( ios :: showpoint ) << endl ;
10818	set output precision to precision	N/A	N/A	cout . precision ( precision ) ;	cout. precision ( precision ) ;
10819	DUMMY	0.0	0.0	}	DUMMY
10820	DUMMY	0.0	0.0	int main() {	DUMMY
10821	call desperate_optimization ( 10 )	N/A	N/A	desperate_optimization ( 10 ) ;	desperate_optimization ( 10 ) ;
10822	let n , p and k be integers	N/A	N/A	int n , p , k ;	int n, p, k ;
10823	read n , p and k	N/A	N/A	cin >> n >> p >> k ;	cin >> n >> p >> k ;
10824	if p - k is greater than 1	N/A	N/A	if ( p - k > 1 ) cout << " << " ;	if ( p - k > 1 )
10825	for i = max of 1 and p - k to p exclusive , print i and " "	N/A	N/A	for ( int i = max ( 1 , p - k ) ; i < p ; i ++ ) { cout << i << " " ; }	for ( int i = max ( 1, p - k ) ; i < p ; i ++ ) cout << i << " " ;
10826	print " ( " , p and " ) "	N/A	N/A	cout << " ( " << p << " ) " ;	cout << " ( " << p << " " ) << endl ;
10827	for i = p + 1 to min of n and p + k inclusive , print " " and i	N/A	N/A	for ( int i = p + 1 ; i <= min ( n , p + k ) ; i ++ ) { cout << " " << i ; }	for ( int i = p + 1 ; i <= min ( n, p + k ) ; i ++ ) cout << " " << i << endl ;
10828	if p + k is less than n , print " > > "	N/A	N/A	if ( p + k < n ) cout << " >> " ;	if ( p + k < n ) cout << " > " << endl ;
10829	print ' \ n '	N/A	N/A	cout << ' \n ' ;	cout <<'\n';
10830	DUMMY	0.0	0.0	return 0;	DUMMY
10831	DUMMY	0.0	0.0	}	DUMMY
10832	DUMMY	0.0	0.0	int main() {	DUMMY
10833	create integers n , p , k	N/A	N/A	int n , p , k ;	int n, p, k ;
10834	create booleans start , end with start = 1 , end = 0	N/A	N/A	bool start = 1 , end = 0 ;	bool start = 1, end = 0 ;
10835	read n read p read k	N/A	N/A	cin >> n >> p >> k ;	cin >> n >> p >> k ;
10836	for i = p - k to p + k inclusive	N/A	N/A	for ( int i = p - k ; i <= p + k ; i ++ )	for ( int i = p - k ; i <= p + k ; ++ i )
10837	if start is true	N/A	N/A	if ( start )	if ( start )
10838	if i is less than or equal to 1	N/A	N/A	if ( i <= 1 )	if ( i <= 1 )
10839	if p is 1	N/A	N/A	if ( p == 1 )	if ( p == 1 )
10840	print " ( " print 1 print " ) "	N/A	N/A	cout << " ( " << 1 << " ) " ;	cout << " ( " << 1 << " ) " << endl ;
10841	else	N/A	N/A	else	else
10842	print 1	N/A	N/A	cout << 1 ;	cout << 1 << endl ;
10843	set i to 1	N/A	N/A	i = 1 ;	i = 1 ;
10844	else	N/A	N/A	else	else
10845	print " < < " print i	N/A	N/A	cout << " << " << i ;	cout << " << " << i << endl ;
10846	set start to 0	N/A	N/A	start = 0 ;	start = 0 ;
10847	break current loop iteration	N/A	N/A	continue ;	continue ;
10848	DUMMY	0.0	0.0	}	DUMMY
10849	if i is greater than or equal to n	N/A	N/A	if ( i >= n )	if ( i >= n )
10850	set end to 1	N/A	N/A	end = 1 ;	end = 1 ;
10851	if p is n	N/A	N/A	if ( p == n )	if ( p == n )
10852	print " ( " print n print " ) "	N/A	N/A	cout << " ( " << n << " ) " ;	cout << " ( " << n << " ) " << endl ;
10853	else	N/A	N/A	else	else
10854	print " " print n	N/A	N/A	cout << " " << n ;	cout << " " << n << endl ;
10855	break loop	N/A	N/A	break ;	break ;
10856	DUMMY	0.0	0.0	}	DUMMY
10857	if i is p	N/A	N/A	if ( i == p )	if ( i == p )
10858	print " ( " print i print " ) "	N/A	N/A	cout << " ( " << i << " ) " ;	cout << " ( " << i << " ) " << endl ;
10859	else	N/A	N/A	else	else
10860	print " " print i	N/A	N/A	cout << " " << i ;	cout << " " << i << endl ;
10861	DUMMY	0.0	0.0	}	DUMMY
10862	DUMMY	0.0	0.0	}	DUMMY
10863	if not end print " > > "	N/A	N/A	if ( ! end ) cout << " >> " ;	if (! end ) cout << " >> " << endl ;
10864	print ' \ n '	N/A	N/A	cout << ' \n ' ;	cout <<'\n';
10865	DUMMY	0.0	0.0	}	DUMMY
10866	pi = const double with pi = 3 . 14159265359	N/A	N/A	const double pi = 3.14159265359 ;	const double pi = 3.14159265359 ;
10867	MOD = const long long with MOD = 1000 * 1000 * 1000 + 7	N/A	N/A	const long long MOD = 1000 * 1000 * 1000 + 7 ;	const long long MOD = 1000 + 1000 * 1000 + 7 ;
10868	N = const int with N = 200 * 1000 + 10	N/A	N/A	const int N = 200 * 1000 + 10 ;	const int N = 200 * 1000 + 10 ;
10869	DUMMY	0.0	0.0	int main() {	DUMMY
10870	a , b = int	N/A	N/A	int a , b ;	int a, b ;
10871	read a then b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
10872	aa , bb = int with aa = a * a and bb = b * b	N/A	N/A	int aa = a * a , bb = b * b ;	int aa = a * a, bb = b * b ;
10873	as = int vector	N/A	N/A	vector < int > as ;	vector < int > as ;
10874	bs = int vector	N/A	N/A	vector < int > bs ;	vector < int > bs ;
10875	for i = 1 to aa	N/A	N/A	for ( int i = 1 ; i < aa ; i ++ )	for ( int i = 1 ; i <= aa ; i ++ )
10876	int sq = sqrt of aa - i * -	N/A	N/A	int sq = sqrt ( aa - i * i ) ;	int sq = sqrt ( aa - i * -- ) ;
10877	if sq * sq + i * i is aa then append i to as	N/A	N/A	if ( sq * sq + i * i == aa ) as . push_back ( i ) ;	if ( sq * sqrt ( i * i ) == aa ) as. push_back ( i ) ;
10878	DUMMY	0.0	0.0	}	DUMMY
10879	for i = 1 to bb	N/A	N/A	for ( int i = 1 ; i < bb ; i ++ )	for ( int i = 1 ; i <= bb ; i ++ )
10880	sq = int with sq = sqrt of bb - i * i	N/A	N/A	int sq = sqrt ( bb - i * i ) ;	int sq = sqrt ( bb - i * i ) ;
10881	if sq * sq + i * i is bb then append i to bs	N/A	N/A	if ( sq * sq + i * i == bb ) bs . push_back ( i ) ;	if ( sq * sq + i * i == bb ) bs. push_back ( i ) ;
10882	DUMMY	0.0	0.0	}	DUMMY
10883	for i = 0 to size of as	N/A	N/A	for ( int i = 0 ; i < as . size ( ) ; i ++ )	for ( int i = 0 ; i < as. size ( ) ; i ++ )
10884	for j = 0 to size of bs	N/A	N/A	for ( int j = 0 ; j < bs . size ( ) ; j ++ )	for ( int j = 0 ; j < bs. size ( ) ; j ++ )
10885	xa = int with xa = as [ i ]	N/A	N/A	int xa = as [ i ] ;	int xa = as [ i ] ;
10886	ya = int with ya = sqrt of aa - xa * xa	N/A	N/A	int ya = sqrt ( aa - xa * xa ) ;	int ya = sqrt ( aa - xa * xa ) ;
10887	xb = int with xb = bs [ j ]	N/A	N/A	int xb = bs [ j ] ;	int xb = bs [ j ] ;
10888	yb = int with yb = sqrt of bb - xb * xb	N/A	N/A	int yb = sqrt ( bb - xb * xb ) ;	int yb = sqrt ( bb ) - xb * xb ;
10889	if ( xb - xa ) * ( xb - xa ) + ( ya + yb ) * ( ya + yb ) is aa + bb and xb is not xa	N/A	N/A	if ( ( xb - xa ) * ( xb - xa ) + ( ya + yb ) * ( ya + yb ) == aa + bb && xb != xa )	if ( ( xb - xa ) * ( xa - xb ) + ( ya + yb ) * db == aa + bb && xb!= xa)
10890	print " YES "	N/A	N/A	cout << " YES\n " ;	cout << " YES\n " ;
10891	print xa and ya	N/A	N/A	cout << xa << " " << ya << ' \n ' ;	cout << xa << " " << ya << endl ;
10892	print xb and - yb	N/A	N/A	cout << xb << " " << - yb << ' \n ' ;	cout << xb << " " << - yb << endl ;
10893	print 0 and 0	N/A	N/A	cout << 0 << " " << 0 << ' \n ' ;	cout << " 0 " << 0 << endl ;
10894	DUMMY	0.0	0.0	return 0;	DUMMY
10895	DUMMY	0.0	0.0	}	DUMMY
10896	DUMMY	0.0	0.0	}	DUMMY
10897	DUMMY	0.0	0.0	}	DUMMY
10898	print " NO "	N/A	N/A	cout << " NO\n " ;	puts ( " NO " ) ;
10899	DUMMY	0.0	0.0	}	DUMMY
10900	DUMMY	0.0	0.0	int main() {	DUMMY
10901	create integers n and v	N/A	N/A	int n , v ;	int n, v ;
10902	read n and v	N/A	N/A	cin >> n >> v ;	cin >> n >> v ;
10903	a is an array of doubles with size n	N/A	N/A	double a [ n ] ;	double a [ n ] ;
10904	read n elements into array a	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
10905	declare double called minvalue = INT_MAX	N/A	N/A	double minvalue = INT_MAX ;	double minvalue = INT_MAX ;
10906	b is an array of doubles with size n	N/A	N/A	double b [ n ] ;	double b [ n ] ;
10907	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
10908	read b [ i ]	N/A	N/A	cin >> b [ i ] ;	cin >> b [ i ] ;
10909	assign value of min of minvalue and b [ i ] to the minvalue	N/A	N/A	minvalue = min ( minvalue , b [ i ] ) ;	minvalue = min ( minvalue, b [ i ] ) ;
10910	DUMMY	0.0	0.0	}	DUMMY
10911	l is double = 0	N/A	N/A	double l = 0 ;	double l = 0 ;
10912	let r be double = 1e18	N/A	N/A	double r = 1e18 ;	double r = 1e18 ;
10913	answer is double = 0	N/A	N/A	double answer = 0 ;	double answer = 0 ;
10914	for integer i = 1 to 100 inclusive	N/A	N/A	for ( int i = 1 ; i <= 100 ; i ++ )	for ( int i = 1 ; i <= 100 ; i ++ )
10915	double mid = ( l + ( r - l ) / 2 )	N/A	N/A	double mid = ( l + ( r - l ) / 2 ) ;	double mid = ( l + ( r - l ) / 2 ) ;
10916	sum is double = 0	N/A	N/A	double sum = 0 ;	double sum = 0 ;
10917	flag is integer = 0	N/A	N/A	int flag = 0 ;	int flag = 0 ;
10918	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
10919	set double value to a [ i ] * mid	N/A	N/A	double value = a [ i ] * mid ;	double mid = a [ i ] * mid ;
10920	if value is greater than b [ i ]	N/A	N/A	if ( value > b [ i ] )	if ( value > b [ i ] )
10921	set flag to 1	N/A	N/A	flag = 1 ;	flag = 1 ;
10922	break the loop	N/A	N/A	break ;	break ;
10923	else	N/A	N/A	else	else
10924	increase sum by ( a [ i ] * mid )	N/A	N/A	sum += ( a [ i ] * mid ) ;	sum += ( a [ i ] * mid ) ;
10925	DUMMY	0.0	0.0	}	DUMMY
10926	if flag = 1	N/A	N/A	if ( flag == 1 )	if ( flag == 1 )
10927	set value of r to mid - 1	N/A	N/A	r = mid - 1 ;	r = mid - 1 ;
10928	skip the rest of the loop	N/A	N/A	continue ;	continue ;
10929	DUMMY	0.0	0.0	}	DUMMY
10930	if sum < = v	N/A	N/A	if ( sum <= v )	if ( sum <= v )
10931	set answer to sum	N/A	N/A	answer = sum ;	answer = sum ;
10932	l = mid + 1	N/A	N/A	l = mid + 1 ;	l = mid + 1 ;
10933	else	N/A	N/A	else	else
10934	r = mid - 1	N/A	N/A	r = mid - 1 ;	r = mid - 1 ;
10935	DUMMY	0.0	0.0	}	DUMMY
10936	DUMMY	0.0	0.0	}	DUMMY
10937	print setprecision ( 6 ) , fixed , answer and " \ n "	N/A	N/A	cout << setprecision ( 6 ) << fixed << answer << " \n " ;	cout << setprecision ( 6 ) << fixed << answer << " \n " ;
10938	DUMMY	0.0	0.0	return 0;	DUMMY
10939	DUMMY	0.0	0.0	}	DUMMY
10940	DUMMY	0.0	0.0	int main() {	DUMMY
10941	declare integer variable n	N/A	N/A	int n ;	int n ;
10942	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
10943	let A be integer array with size n	N/A	N/A	int A [ n ] ;	int A [ n ] ;
10944	read n elements into A	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> A [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> A [ i ] ;
10945	create integer ansf = 1	N/A	N/A	int ansf = 1 ;	int ansf = 1 ;
10946	create integer j = 0	N/A	N/A	int j = 0 ;	int j = 0 ;
10947	create integer ch = 0	N/A	N/A	int ch = 0 ;	int ch = 0 ;
10948	create integer max1 = 1	N/A	N/A	int max1 = 1 ;	int max1 = 1 ;
10949	create integer x = 1	N/A	N/A	int x = 0 ;	int x = 1 ;
10950	declare integer array dp with size n filled with 0	N/A	N/A	int dp [ n ] = { 0 } ;	int dp [ n ] = { 0 } ;
10951	for integer i = 1 to n exclusive incrementing i	N/A	N/A	for ( int i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
10952	if A [ i ] is greater than A [ i - 1 ]	N/A	N/A	if ( A [ i ] > A [ i - 1 ] )	if ( A [ i ] > a [ i - 1 ] )
10953	change dp [ i ] to dp [ i - 1 ] + 1	N/A	N/A	dp [ i ] = dp [ i - 1 ] + 1 ;	dp [ i ] = dp [ i - 1 ] + 1 ;
10954	else	N/A	N/A	else	else
10955	assign 0 to dp [ i ]	N/A	N/A	dp [ i ] = 0 ;	dp [ i ] = 0 ;
10956	DUMMY	0.0	0.0	}	DUMMY
10957	DUMMY	0.0	0.0	}	DUMMY
10958	loop i from 1 to n exclusive	N/A	N/A	for ( int i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
10959	if A [ i ] is greater than A [ i - 1 ]	N/A	N/A	if ( A [ i ] > A [ i - 1 ] )	if ( A [ i ] > A [ j - 1 ] )
10960	increment ansf by one	N/A	N/A	ansf ++ ;	ansf ++ ;
10961	else	N/A	N/A	else	else
10962	if ch is 0	N/A	N/A	if ( ch == 0 )	if ( ch == 0 )
10963	assign A [ i ] to x	N/A	N/A	x = A [ i ] ;	x = A [ i ] ;
10964	assign A [ i - 1 ] + 1 to A [ i ]	N/A	N/A	A [ i ] = A [ i - 1 ] + 1 ;	A [ i ] = A [ i - 1 ] + 1 ;
10965	change j to i	N/A	N/A	j = i ;	j = i ;
10966	assign 1 to ch	N/A	N/A	ch = 1 ;	ch = 1 ;
10967	increment ansf by one	N/A	N/A	ansf ++ ;	ansf ++ ;
10968	else	N/A	N/A	else	else
10969	assign i - j to ansf	N/A	N/A	ansf = i - j ;	ansf = i - j ;
10970	change A [ j ] to x	N/A	N/A	A [ j ] = x ;	A [ j ] = x ;
10971	if ansf = 1	N/A	N/A	if ( ansf == 1 )	if ( ansf == 1 )
10972	if A [ i ] is greater than A [ i - 1 ]	N/A	N/A	if ( A [ i ] > A [ i - 1 ] )	if ( A [ j ] > A [ i - 1 ] )
10973	increment ansf by one	N/A	N/A	ansf ++ ;	ansf ++ ;
10974	change x to A [ i - 2 ]	N/A	N/A	x = A [ i - 2 ] ;	x = A [ i - 2 ] ;
10975	increment ansf by one	N/A	N/A	ansf ++ ;	ansf ++ ;
10976	assign i - 2 to j	N/A	N/A	j = i - 2 ;	j = i - 2 ;
10977	change A [ i - 2 ] to A [ i - 1 ] - 1	N/A	N/A	A [ i - 2 ] = A [ i - 1 ] - 1 ;	A [ i - 2 ] -= 1 ;
10978	if i > = 3 and A [ i - 2 ] > A [ i - 3 ] , increase ansf by dp [ i - 2 ]	N/A	N/A	if ( i >= 3 && A [ i - 2 ] > A [ i - 3 ] ) ansf = ansf + dp [ i - 2 ] ;	if ( i >= 3 && A [ i - 2 ] > A [ j - 3 ] ) { ansf += dp [ i + 2 ] ; }
10979	else	N/A	N/A	else	else
10980	increment ansf	N/A	N/A	ansf ++ ;	ansf ++ ;
10981	assign A [ i - 1 ] to x	N/A	N/A	x = A [ i - 1 ] ;	x = A [ i - 1 ] ;
10982	assign i - 1 to j	N/A	N/A	j = i - 1 ;	j = i - 1 ;
10983	change A [ i - 1 ] to A [ i ] - 1	N/A	N/A	A [ i - 1 ] = A [ i ] - 1 ;	A [ i - 1 ] -= 1 ;
10984	if A [ i - 1 ] is greater than A [ i - 2 ] , increase ansf by dp [ i - 1 ]	N/A	N/A	if ( A [ i - 1 ] > A [ i - 2 ] ) ansf = ansf + dp [ i - 1 ] ;	if ( A [ i - 1 ] > A [ j - 2 ] ) { ansf += dp [ i ] ; }
10985	DUMMY	0.0	0.0	}	DUMMY
10986	else	N/A	N/A	else	else
10987	if A [ j ] is less than A [ j + 1 ] , increment ansf	N/A	N/A	if ( A [ j ] < A [ j + 1 ] ) ansf ++ ;	if ( A [ j ] < A [ i + 1 ] ) ansf ++ ;
10988	change x to A [ i ]	N/A	N/A	x = A [ i ] ;	x = A [ i ] ;
10989	set j to i	N/A	N/A	j = i ;	j = i ;
10990	change A [ i ] to A [ i - 1 ] + 1	N/A	N/A	A [ i ] = A [ i - 1 ] + 1 ;	A [ i ] = A [ i - 1 ] + 1 ;
10991	DUMMY	0.0	0.0	}	DUMMY
10992	DUMMY	0.0	0.0	}	DUMMY
10993	DUMMY	0.0	0.0	}	DUMMY
10994	change max1 to max of max1 and ansf	N/A	N/A	max1 = max ( max1 , ansf ) ;	max1 = max ( max1, ansf ) ;
10995	DUMMY	0.0	0.0	}	DUMMY
10996	print max1 and " \ n "	N/A	N/A	cout << max1 << " \n " ;	cout << max1 << " \n " ;
10997	DUMMY	0.0	0.0	return 0;	DUMMY
10998	DUMMY	0.0	0.0	}	DUMMY
10999	v = vector array of long long of size 100005	N/A	N/A	vector < long long > v [ 100005 ] ;	vector < long long > v [ 100005 ] ;
11000	in the function solve	N/A	N/A	void solve ( )	void solve ( )
11001	n , x , b , y , ans = long long with x = 0 , ans = 0	N/A	N/A	long long n , x = 0 , b , y , ans = 0 ;	long long n, x = 0, b, y, ans = 0 ;
11002	read n	N/A	N/A	cin >> n ;	cin >> n ;
11003	a = array of long long of size n	N/A	N/A	long long a [ n ] ;	long long a [ n ] ;
11004	for i = 0 to n exclusive	N/A	N/A	for ( long long i = 0 ; i < n ; i ++ )	for ( long long i = 0 ; i < n ; i ++ )
11005	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
11006	if i is 0	N/A	N/A	if ( i == 0 )	if ( i == 0 )
11007	append a [ i ] in v [ x ]	N/A	N/A	v [ x ] . push_back ( a [ i ] ) ;	v [ x ]. push_back ( a [ i ] ) ;
11008	continue iteration	N/A	N/A	continue ;	continue ;
11009	DUMMY	0.0	0.0	}	DUMMY
11010	if a [ i ] < = a [ i - 1 ] , increment x	N/A	N/A	if ( a [ i ] <= a [ i - 1 ] ) x ++ ;	if ( a [ i ] <= v [ i - 1 ] ) x ++ ;
11011	append a [ i ] in v [ x ]	N/A	N/A	v [ x ] . push_back ( a [ i ] ) ;	v [ x ]. push_back ( a [ i ] ) ;
11012	DUMMY	0.0	0.0	}	DUMMY
11013	if x is 0	N/A	N/A	if ( x == 0 )	if ( x == 0 )
11014	print v [ 0 ] . size ( )	N/A	N/A	cout << v [ 0 ] . size ( ) << ' \n ' ;	cout << v [ 0 ]. size ( ) << endl ;
11015	return	N/A	N/A	return ;	return ;
11016	DUMMY	0.0	0.0	}	DUMMY
11017	for i = 0 to x + 1	N/A	N/A	for ( long long i = 0 ; i < x + 1 ; i ++ )	for ( int i = 0 ; i < x + 1 ; i ++ )
11018	if i is x	N/A	N/A	if ( i == x )	if ( i == x )
11019	y = v [ i ] . size ( ) + 1	N/A	N/A	y = v [ i ] . size ( ) + 1 ;	y = v [ i ]. size ( ) + 1 ;
11020	else	N/A	N/A	else	else
11021	n = long long with n = v [ i ] . size ( )	N/A	N/A	long long n = v [ i ] . size ( ) ;	long long n = v [ i ]. size ( ) ;
11022	m = long long with m = v [ i + 1 ] . size ( )	N/A	N/A	long long m = v [ i + 1 ] . size ( ) ;	long long m = v [ i + 1 ]. size ( ) ;
11023	if m is 1	N/A	N/A	if ( m == 1 )	if ( m == 1 )
11024	y = n + 1 ;	N/A	N/A	y = n + 1 ;	y = n + 1 ;
11025	else if n is 1	N/A	N/A	else if ( n == 1 )	else if ( n == 1 )
11026	y = m + 1	N/A	N/A	y = m + 1 ;	y = m + 1 ;
11027	else if v [ i + 1 ] [ 1 ] - v [ i ] [ n - 1 ] > 1	N/A	N/A	else if ( v [ i + 1 ] [ 1 ] - v [ i ] [ n - 1 ] > 1 )	else if ( ( v [ i + 1 ] [ 1 ] ) - v [ j ] [ n - 1 ] > 1 )
11028	y = n + m	N/A	N/A	y = n + m ;	y = n + m ;
11029	else if v [ i + 1 ] [ 0 ] - v [ i ] [ n - 2 ] > 1	N/A	N/A	else if ( v [ i + 1 ] [ 0 ] - v [ i ] [ n - 2 ] > 1 )	else if ( V [ i + 1 ] [ 0 ] - v [ i ] [ n - 2 ] > 1 )
11030	y = n + m	N/A	N/A	y = n + m ;	y = n + m ;
11031	else	N/A	N/A	else	else
11032	y = n + 1	N/A	N/A	y = n + 1 ;	y = n + 1 ;
11033	DUMMY	0.0	0.0	}	DUMMY
11034	ans = max of ans and y	N/A	N/A	ans = max ( ans , y ) ;	ans = max ( ans, y ) ;
11035	DUMMY	0.0	0.0	}	DUMMY
11036	print ans	N/A	N/A	cout << ans << ' \n ' ;	cout << ans << endl ;
11037	return	N/A	N/A	return ;	return ;
11038	DUMMY	0.0	0.0	}	DUMMY
11039	DUMMY	0.0	0.0	int main() {	DUMMY
11040	TESTS = long long with TESTS = 1	N/A	N/A	long long TESTS = 1 ;	long long TESTS = 1 ;
11041	while postfix decrement TESTS , call solve	N/A	N/A	while ( TESTS -- ) { solve ( ) ; }	while ( TESTS -- ) solve ( ) ;
11042	DUMMY	0.0	0.0	return 0;	DUMMY
11043	DUMMY	0.0	0.0	}	DUMMY
11044	create constant integer max4 with max4 = 10004	N/A	N/A	const int max4 = 10004 ;	const int max4 = 10004 ;
11045	create constant integer maxx with maxx = 200005	N/A	N/A	const int maxx = 200005 ;	const int maxx = 200005 ;
11046	create constant integer max6 with max6 = 1000006	N/A	N/A	const int max6 = 1000006 ;	const int max6 = 1000006 ;
11047	create constant integer lg5 with lg5 = 17	N/A	N/A	const int lg5 = 17 ;	const int lg5 = 17 ;
11048	create constant integer INF with INF = 1000000007	N/A	N/A	const int INF = 1000000007 ;	const int INF = 1000000007 ;
11049	create constant long long INFLL with INFLL = 4LL * 1000000000 * 1000000000	N/A	N/A	const long long INFLL = 4LL * 1000000000 * 1000000000 ;	const long long INFLL = ( long long ) 4LL * 1000000000 * ( 1000000000 ) ;
11050	declare powmod with integers a , b , mod as arguments , returning integer	N/A	N/A	int powmod ( int a , int b , int mod )	int powmod ( int a, int b, int mod )
11051	create integer res with res = 1	N/A	N/A	int res = 1 ;	int res = 1 ;
11052	set a to a % mod	N/A	N/A	a %= mod ;	a %= mod ;
11053	for b , setting b to b bitshift right 1	N/A	N/A	for ( ; b ; b >>= 1 )	for ( ; b ; b >>= 1 )
11054	if b bitwise and 1 , set res to 1LL * res * a % mod	N/A	N/A	if ( b & 1 ) { res = 1LL * res * a % mod ; }	if ( b & 1 ) res = 1LL * res * a % mod ;
11055	set a to 1LL * a * a % mod	N/A	N/A	a = 1LL * a * a % mod ;	a = 1LL * a * a % mod ;
11056	DUMMY	0.0	0.0	}	DUMMY
11057	return res from function	N/A	N/A	return res ;	return res ;
11058	DUMMY	0.0	0.0	}	DUMMY
11059	declare gcd with integers a , b as arguments , returning integer	N/A	N/A	int gcd ( int a , int b )	int gcd ( int a, int b )
11060	while b is greater than 0	N/A	N/A	while ( b > 0 )	while ( b > 0 )
11061	create integer t with t = a % b	N/A	N/A	int t = a % b ;	int t = a % b ;
11062	set a to b , set b to t	N/A	N/A	a = b , b = t ;	a = b, b = t ;
11063	DUMMY	0.0	0.0	}	DUMMY
11064	return a from function	N/A	N/A	return a ;	return a ;
11065	DUMMY	0.0	0.0	}	DUMMY
11066	declare lcm with integers a , b as arguments , returning integer	N/A	N/A	int lcm ( int a , int b )	int lcm ( int a, int b )
11067	return ( a / ( result of run gcd with a , b as arguments ) ) * b	N/A	N/A	return ( a / gcd ( a , b ) ) * b ;	return ( a / gcd ( a, b ) ) * b ;
11068	DUMMY	0.0	0.0	}	DUMMY
11069	declare is_prime with integer n as argument , returning integer	N/A	N/A	int is_prime ( int n )	int is_prime ( int n )
11070	if n is less than or equal to 1 or n is greater than 3 and ( n % 2 is 0 or n % 3 is 0 ) , return 0 from function	N/A	N/A	if ( n <= 1 || n > 3 && ( n % 2 == 0 || n % 3 == 0 ) ) return 0 ;	if ( n <= 1 || n > 3 && ( n % 2 == 0 || n % 3 == 0 ) ) return 0 ;
11071	for i = 5 , t = 2 to i * i is less than or equal to n , incrementing i by t , setting t to 6 - t	N/A	N/A	for ( int i = 5 , t = 2 ; i * i <= n ; i += t , t = 6 - t )	for ( int i = 5, t = 2 ; i * i <= n ; i += t ) t = 6 - t ;
11072	if n % i is 0 , return 0 from function	N/A	N/A	if ( n % i == 0 ) return 0 ;	if ( n % i == 0 ) return 0 ;
11073	return 1 from function	N/A	N/A	return 1 ;	return 1 ;
11074	DUMMY	0.0	0.0	}	DUMMY
11075	create integer n , create integer arrays arr , pref , suff , with arr size maxx , pref size maxx , suff size maxx	N/A	N/A	int n , arr [ maxx ] , pref [ maxx ] , suff [ maxx ] ;	int n, arr [ maxx ] = { 0 }, pref [ Maxx ], suff [ maxax ] ;
11076	DUMMY	0.0	0.0	int main() {	DUMMY
11077	read n	N/A	N/A	cin >> n ;	cin >> n ;
11078	if n is 1 , return print 1 print ' \ n ' , 0 from function	N/A	N/A	if ( n == 1 ) { return cout << 1 << ' \n ' , 0 ; }	if ( n == 1 ) return cout << 1 <<'\n ', 0 ;
11079	for i = 1 to n inclusive , read arr [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }	for ( int i = 1 ; i <= n ; i ++ ) cin >> arr [ i ] ;
11080	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
11081	if arr [ i ] is greater than arr [ i - 1 ]	N/A	N/A	if ( arr [ i ] > arr [ i - 1 ] )	if ( arr [ 1 ] > arr [ i - 1 ] )
11082	set pref [ i ] to pref [ i - 1 ] + 1	N/A	N/A	pref [ i ] = pref [ i - 1 ] + 1 ;	pref [ i ] = pref [ i - 1 ] + 1 ;
11083	else	N/A	N/A	else	else
11084	set pref [ i ] to 1	N/A	N/A	pref [ i ] = 1 ;	pref [ i ] = 1 ;
11085	DUMMY	0.0	0.0	}	DUMMY
11086	DUMMY	0.0	0.0	}	DUMMY
11087	for i = n to 1 inclusive , decrementing i	N/A	N/A	for ( int i = n ; i >= 1 ; i -- )	for ( int i = n ; i >= 1 ; i -- )
11088	if i is n or arr [ i ] is less than arr [ i + 1 ]	N/A	N/A	if ( i == n || arr [ i ] < arr [ i + 1 ] )	if ( i == n || arr [ i ] < arr [ 1 ] )
11089	set suff [ i ] to suff [ i + 1 ] + 1	N/A	N/A	suff [ i ] = suff [ i + 1 ] + 1 ;	suff [ i ] = suff [ i + 1 ] + 1 ;
11090	else	N/A	N/A	else	else
11091	set suff [ i ] to 1	N/A	N/A	suff [ i ] = 1 ;	suff [ i ] = 1 ;
11092	DUMMY	0.0	0.0	}	DUMMY
11093	DUMMY	0.0	0.0	}	DUMMY
11094	create integer res with res = 2	N/A	N/A	int res = 2 ;	int res = 2 ;
11095	for i = 2 to n exclusive	N/A	N/A	for ( int i = 2 ; i < n ; i ++ )	for ( int i = 2 ; i < n ; i ++ )
11096	if arr [ i + 1 ] is greater than arr [ i - 1 ] + 1 , set res to maximum of ( res and pref [ i - 1 ] + suff [ i + 1 ] + 1 )	N/A	N/A	if ( arr [ i + 1 ] > arr [ i - 1 ] + 1 ) { res = max ( res , pref [ i - 1 ] + suff [ i + 1 ] + 1 ) ; }	if ( arr [ i + 1 ] > arr [ 1 ] + 1 ) { res = max ( res, pref [ i - 1 ] - suff [ i ] + i ) ; }
11097	DUMMY	0.0	0.0	}	DUMMY
11098	for i = 2 to n exclusive , set res to maximum of ( res and maximum of ( pref [ i ] and suff [ i ] ) + 1 )	N/A	N/A	for ( int i = 2 ; i < n ; i ++ ) { res = max ( res , max ( pref [ i ] , suff [ i ] ) + 1 ) ; }	for ( int i = 2 ; i < n ; i ++ ) { res = max ( res, max ( pref [ i ], suff [ u ] ) + 1 ) ; }
11099	print res print ' \ n '	N/A	N/A	cout << res << ' \n ' ;	cout << res <<'\n';
11100	DUMMY	0.0	0.0	return 0;	DUMMY
11101	DUMMY	0.0	0.0	}	DUMMY
11102	create const long long inf = 1e9 + 7	N/A	N/A	const long long inf = 1e9 + 7 ;	const long long inf = 1e9 + 7 ;
11103	DUMMY	0.0	0.0	int main() {	DUMMY
11104	declare integer n	N/A	N/A	int n ;	int n ;
11105	read from the input to n	N/A	N/A	cin >> n ;	cin >> n ;
11106	create long long ans = 0 and long long arrays a , left and right with size n + 2	N/A	N/A	long long a [ n + 2 ] , left [ n + 2 ] , right [ n + 2 ] , ans = 0 ;	long long ans = 0, a [ n + 2 ] = { 0 }, left [ ( n + 3 ] ) = { 1 } ;
11107	change a [ 0 ] to - 1	N/A	N/A	a [ 0 ] = - 1 ;	a [ 0 ] = - 1 ;
11108	assign inf to a [ n + 1 ]	N/A	N/A	a [ n + 1 ] = inf ;	a [ n + 1 ] = inf ;
11109	loop i from 1 to n inclusive incrementing i	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;	for ( int i = 1 ; i <= n ; i ++ )
11110	set right [ 0 ] to 0	N/A	N/A	right [ 0 ] = 0 ;	right [ 0 ] = 0 ;
11111	loop i from 1 to n inclusive , change right [ i ] to right [ i - 1 ] + 1 if a [ i ] > a [ i - 1 ] , or else 1	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) right [ i ] = ( a [ i ] > a [ i - 1 ] ? right [ i - 1 ] + 1 : 1 ) ;	for ( long long i = 1 ; i <= n ; i ++ ) { right [ i ] = ( a [ 1 ] > a [ i - 1 ] )? 1 : 1 ; }
11112	set left [ n + 1 ] to 0	N/A	N/A	left [ n + 1 ] = 0 ;	left [ n + 1 ] = 0 ;
11113	loop i from n to 0 inclusive decrementing i , change left [ i ] to left [ i + 1 ] + 1 if a [ i ] < a [ i + 1 ] , or else 1	N/A	N/A	for ( int i = n ; i > 0 ; i -- ) left [ i ] = ( a [ i ] < a [ i + 1 ] ? left [ i + 1 ] + 1 : 1 ) ;	for ( int i = n ; i >= 0 ; i -- ) { left [ i ] = ( a [ j ] < a [ i + 1 ] )? 1 : 1 ; }
11114	loop i from 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
11115	if a [ i - 1 ] + 1 is less than a [ i + 1 ]	N/A	N/A	if ( a [ i - 1 ] + 1 < a [ i + 1 ] )	if ( a [ i - 1 ] + 1 < a [ n + 1 ] )
11116	set ans to max of ans and 1 + left [ i + 1 ] + right [ i - 1 ]	N/A	N/A	ans = max ( ans , 1 + left [ i + 1 ] + right [ i - 1 ] ) ;	ans = max ( ans, 1 + left [ i + 1 ] + right [ i - 1 ] ) ;
11117	else	N/A	N/A	else	else
11118	set ans to max of ans and ( max of left [ i ] and right [ i ] + 1 )	N/A	N/A	ans = max ( ans , max ( left [ i ] , right [ i ] ) + 1 ) ;	ans = max ( ans, max ( left [ i ], right [ 1 ] + 1 ) ) ;
11119	DUMMY	0.0	0.0	}	DUMMY
11120	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
11121	DUMMY	0.0	0.0	}	DUMMY
11122	maxn = const integer with maxn = 100005	N/A	N/A	const int maxn = 100005 ;	const int maxn = 100005 ;
11123	INF = const integer with INF = 0x3fffffff	N/A	N/A	const int INF = 0x3fffffff ;	const int INF = 0x3fffffff ;
11124	eps = double with eps = 1e - 8	N/A	N/A	double eps = 1e-8 ;	double eps = 1e-8 ;
11125	pi = double with pi = acos of - 1	N/A	N/A	double pi = acos ( - 1 ) ;	double pi = acos ( - 1 ) ;
11126	f = integer array of size maxn	N/A	N/A	int f [ maxn ] ;	int f [ maxn ] ;
11127	g = integer array of size maxn	N/A	N/A	int g [ maxn ] ;	int g [ maxn ] ;
11128	a = integer array of size maxn	N/A	N/A	int a [ maxn ] ;	int a [ maxn ] ;
11129	n = integer	N/A	N/A	int n ;	int n ;
11130	DUMMY	0.0	0.0	int main() {	DUMMY
11131	read n	N/A	N/A	cin >> n ;	cin >> n ;
11132	for i = 1 to n , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
11133	for i = 1 to n	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
11134	if a [ i ] > a [ i - 1 ]	N/A	N/A	if ( a [ i ] > a [ i - 1 ] )	if ( a [ i ] > a [ j - 1 ] )
11135	f [ i ] = f [ i - 1 ] + 1	N/A	N/A	f [ i ] = f [ i - 1 ] + 1 ;	f [ i ] = f [ i - 1 ] + 1 ;
11136	else	N/A	N/A	else	else
11137	f [ i ] = 1	N/A	N/A	f [ i ] = 1 ;	f [ i ] = 1 ;
11138	DUMMY	0.0	0.0	}	DUMMY
11139	for i = n down to 1	N/A	N/A	for ( int i = n ; i >= 1 ; i -- )	for ( i = n ; i >= 1 ; i -- )
11140	if a [ i ] < a [ i + 1 ]	N/A	N/A	if ( a [ i ] < a [ i + 1 ] )	if ( a [ i ] < a [ j + 1 ] )
11141	g [ i ] = g [ i + 1 ] + 1	N/A	N/A	g [ i ] = g [ i + 1 ] + 1 ;	g [ i ] = g [ i + 1 ] + 1 ;
11142	else	N/A	N/A	else	else
11143	g [ i ] = 1	N/A	N/A	g [ i ] = 1 ;	g [ i ] = 1 ;
11144	DUMMY	0.0	0.0	}	DUMMY
11145	ans = integer with ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
11146	for i = 1 to n	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
11147	if a [ i + 1 ] - a [ i - 1 ] > 1	N/A	N/A	if ( a [ i + 1 ] - a [ i - 1 ] > 1 )	if ( a [ i + 1 ] - a [ 1 ] > 1 )
11148	ans = max of ans and f [ i - 1 ] + g [ i + 1 ] + 1	N/A	N/A	ans = max ( ans , f [ i - 1 ] + g [ i + 1 ] + 1 ) ;	ans = max ( ans, f [ i - 1 ] + g [ i + 1 ] ) ;
11149	else	N/A	N/A	else	else
11150	ans = max of ans and max ( f [ i - 1 ] + 1 , g [ i + 1 ] + 1 )	N/A	N/A	ans = max ( ans , max ( f [ i - 1 ] + 1 , g [ i + 1 ] + 1 ) ) ;	ans = max ( ans, max ( f [ i - 1 ] + 1, g [ i + 1 ] ) ) ;
11151	DUMMY	0.0	0.0	}	DUMMY
11152	DUMMY	0.0	0.0	}	DUMMY
11153	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
11154	DUMMY	0.0	0.0	}	DUMMY
11155	a , dp1 , dp2 = int array of size 100005 each	N/A	N/A	int a [ 100005 ] , dp1 [ 100005 ] , dp2 [ 100005 ] ;	int a [ 100005 ] = { }, dp1 [ 100000 ] ={ }, bp2 [ 100500 ] = ( 100000 ) ;
11156	DUMMY	0.0	0.0	int main() {	DUMMY
11157	n = int	N/A	N/A	int n ;	int n ;
11158	read n	N/A	N/A	cin >> n ;	cin >> n ;
11159	for i = 1 to n inclusive read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
11160	set a [ 0 ] to 0x3f3f3f3f	N/A	N/A	a [ 0 ] = 0x3f3f3f3f ;	a [ 0 ] = 0x3f3f2f ;
11161	set a [ n + 1 ] to 0x3f3f3f3f	N/A	N/A	a [ n + 1 ] = 0x3f3f3f3f ;	a [ n + 1 ] = 0x3f3f0f ;
11162	ans = int with ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
11163	for i = 1 to n inclusive set dp1 [ i ] and dp2 [ i ] to 1	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { dp1 [ i ] = dp2 [ i ] = 1 ; }	for ( int i = 1 ; i <= n ; i ++ ) dp1 [ i ] = dp2 [ 1 ] = 0 ;
11164	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
11165	if a [ i ] is greater than a [ i - 1 ] then set dp1 [ i ] to dp1 [ i - 1 ] + 1	N/A	N/A	if ( a [ i ] > a [ i - 1 ] ) { dp1 [ i ] = dp1 [ i - 1 ] + 1 ; }	if ( a [ i ] > a [ n - 1 ] ) dp1 [ 1 ] += 1 ;
11166	set ans to max of ans and dp1 [ i ]	N/A	N/A	ans = max ( ans , dp1 [ i ] ) ;	ans = max ( ans, dp1 [ i ] ) ;
11167	DUMMY	0.0	0.0	}	DUMMY
11168	for i = n to 0 decrementing i	N/A	N/A	for ( int i = n ; i > 0 ; i -- )	for ( int i = n ; i > 0 ; i -- )
11169	if a [ i ] is less than a [ i + 1 ] then set dp2 [ i ] to dp2 [ i + 1 ] + 1	N/A	N/A	if ( a [ i ] < a [ i + 1 ] ) { dp2 [ i ] = dp2 [ i + 1 ] + 1 ; }	if ( a [ i ] < a [ j + 1 ] ) { dp2 [ j ] += 1 ; }
11170	set ans to max of ans and dp2 [ i ]	N/A	N/A	ans = max ( ans , dp2 [ i ] ) ;	ans = max ( ans, dp2 [ i ] ) ;
11171	DUMMY	0.0	0.0	}	DUMMY
11172	for i = 2 to n inclusive set ans to max of ans and dp2 [ i ] + 1	N/A	N/A	for ( int i = 2 ; i <= n ; i ++ ) { ans = max ( ans , dp2 [ i ] + 1 ) ; }	for ( int i = 2 ; i <= n ; i ++ ) ans = max ( ans, dp2 [ i ] + 1 ) ;
11173	for i = 1 to n set ans to max of ans and dp1 [ i ] + 1	N/A	N/A	for ( int i = 1 ; i < n ; i ++ ) { ans = max ( ans , dp1 [ i ] + 1 ) ; }	for ( int i = 1 ; i <= n ; i ++ ) ans = max ( ans, dp1 [ i ] + 1 ) ;
11174	for i = 2 to n	N/A	N/A	for ( int i = 2 ; i < n ; i ++ )	for ( int i = 2 ; i <= n ; i ++ )
11175	if a [ i + 1 ] - a [ i - 1 ] is greater than 1 then set ans to max of ans and dp2 [ i + 1 ] + dp1 [ i - 1 ] + 1	N/A	N/A	if ( a [ i + 1 ] - a [ i - 1 ] > 1 ) { ans = max ( ans , dp2 [ i + 1 ] + dp1 [ i - 1 ] + 1 ) ; }	if ( ( a [ i + 1 ] - ( dp2 [ i - 1 ] ) > 1 ) { ans = max ( ans, dp3 [ i ] + dp1 [ i -- 1 ] + 1 ) ; }
11176	DUMMY	0.0	0.0	}	DUMMY
11177	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
11178	DUMMY	0.0	0.0	return 0;	DUMMY
11179	DUMMY	0.0	0.0	}	DUMMY
11180	DUMMY	0.0	0.0	int main() {	DUMMY
11181	a , n , b , c = int	N/A	N/A	int a , n , b , c ;	int a, n, b, c ;
11182	s = array of 8 char	N/A	N/A	char s [ 8 ] ;	char s [ 8 ] ;
11183	w = array of 8 char filled with " jolteon " , q = array of 8 char filled with " flareon "	N/A	N/A	char w [ 8 ] = " jolteon " , q [ 8 ] = " flareon " ;	char w [ 8 ] = { " jolteon ", q [ 7 ] ={ " flareon " } ;
11184	v = array of 8 char filled with " umbreon " , z = array of 8 char filled with " leafeon " , l = array of 8 char filled with " glaceeon " , m = array of 8 char filled with " sylveon "	N/A	N/A	char v [ 8 ] = " umbreon " , z [ 8 ] = " leafeon " , l [ 8 ] = " glaceon " , m [ 8 ] = " sylveon " ;	char v [ 8 ] = { " umbreon ", z [ 8, " leafeon " }, l [ 7 ] ={ " glaceeon ", m [ 8 > { " sylveon ", " w " } ;
11185	read n	N/A	N/A	cin >> n ;	cin >> n ;
11186	read s	N/A	N/A	cin >> s ;	cin >> s ;
11187	if n is 8	N/A	N/A	if ( n == 8 )	if ( n == 8 )
11188	print " vaporeon "	N/A	N/A	cout << " vaporeon " << endl ;	puts ( " vaporeon " ) ;
11189	else if n is 6	N/A	N/A	else if ( n == 6 )	else if ( n == 6 )
11190	print " espeon "	N/A	N/A	cout << " espeon " << endl ;	puts ( " espeon " ) ;
11191	else	N/A	N/A	else	else
11192	a = 0	N/A	N/A	a = 0 ;	a = 0 ;
11193	b = 0	N/A	N/A	b = 0 ;	b = 0 ;
11194	c = 0	N/A	N/A	c = 0 ;	int c = 0 ;
11195	d = 0	N/A	N/A	int d = 0 ;	d = 0 ;
11196	e = 0	N/A	N/A	int e = 0 ;	e = 0 ;
11197	f = 0	N/A	N/A	int f = 0 ;	f = 0 ;
11198	for i = 0 to 8 exclusive	N/A	N/A	for ( int i = 0 ; i < 8 ; i ++ )	for ( int i = 0 ; i < 8 ; i ++ )
11199	if s [ i ] is w [ i ] increment a	N/A	N/A	if ( s [ i ] == w [ i ] ) { a ++ ; }	if ( s [ i ] == w [ 1 ] ) a ++ ;
11200	DUMMY	0.0	0.0	}	DUMMY
11201	for i = 0 to 8 exclusive	N/A	N/A	for ( int i = 0 ; i < 8 ; i ++ )	for ( int i = 0 ; i < 8 ; i ++ )
11202	if s [ i ] is q [ i ] increment b	N/A	N/A	if ( s [ i ] == q [ i ] ) { b ++ ; }	if ( s [ i ] == q [ 1 ] ) b ++ ;
11203	DUMMY	0.0	0.0	}	DUMMY
11204	for i = 0 to 8 exclusive	N/A	N/A	for ( int i = 0 ; i < 8 ; i ++ )	for ( int i = 0 ; i < 8 ; i ++ )
11205	if s [ i ] is v [ i ] increment c	N/A	N/A	if ( s [ i ] == v [ i ] ) { c ++ ; }	if ( s [ i ] == v [ 1 ] ) c ++ ;
11206	DUMMY	0.0	0.0	}	DUMMY
11207	for i = 0 to 8 exclusive	N/A	N/A	for ( int i = 0 ; i < 8 ; i ++ )	for ( int i = 0 ; i < 8 ; i ++ )
11208	if s [ i ] is z [ i ] increment d	N/A	N/A	if ( s [ i ] == z [ i ] ) { d ++ ; }	if ( s [ i ] == z [ 1 ] ) d ++ ;
11209	DUMMY	0.0	0.0	}	DUMMY
11210	for i = 0 to 8 exclusive	N/A	N/A	for ( int i = 0 ; i < 8 ; i ++ )	for ( int i = 0 ; i < 8 ; i ++ )
11211	if s [ i ] is l [ i ] increment e	N/A	N/A	if ( s [ i ] == l [ i ] ) { e ++ ; }	if ( s [ i ] =='l'i ] ) { e ++ ; }
11212	DUMMY	0.0	0.0	}	DUMMY
11213	for i = 0 to 8 exclusive	N/A	N/A	for ( int i = 0 ; i < 8 ; i ++ )	for ( int i = 0 ; i < 8 ; i ++ )
11214	if s [ i ] is m [ i ] increment f	N/A	N/A	if ( s [ i ] == m [ i ] ) { f ++ ; }	if ( s [ i ] == m [ 1 ] ) { f ++ ; }
11215	DUMMY	0.0	0.0	}	DUMMY
11216	if a > b and a > c and a > d and a > e and a > f	N/A	N/A	if ( a > b && a > c && a > d && a > e && a > f )	if ( ( a > b && a > c ) && ( a >> d ) &&( a > e ) ) a > f ;
11217	print " jolteon "	N/A	N/A	cout << " jolteon " << endl ;	puts ( " jolteon " ) ;
11218	if b > a and b > c and b > d and b > e and b > f	N/A	N/A	else if ( b > a && b > c && b > d && b > e && b > f )	if ( b > a && b > c and b > d and b >> e && b >> f )
11219	print " flareon "	N/A	N/A	cout << " flareon " << endl ;	puts ( " flareon " ) ;
11220	if c > a and c > b and c > d and c > e and c > f	N/A	N/A	else if ( c > a && c > b && c > d && c > e && c > f )	if ( ( c > a && c > b ) && ( c >> d ) && c >> e ) &&( c > f ) )
11221	print " umbreon "	N/A	N/A	cout << " umbreon " << endl ;	cout << " umbreon " << endl ;
11222	if d > a and d > b and d > c and d > e and d > f	N/A	N/A	else if ( d > a && d > c && d > b && d > e && d > f )	if ( ( d > a && d > b ) && ( d >> c ) && c > e &&! d )
11223	print " leafeon "	N/A	N/A	cout << " leafeon " << endl ;	puts ( " leafeon " ) ;
11224	if e > a and e > b and e > c and e > d and e > f	N/A	N/A	else if ( e > a && e > c && e > d && e > b && e > f )	if ( ( e > a && e > b && e >> c ) && ( e >> d ) &&! e > f )
11225	print " glaceon "	N/A	N/A	cout << " glaceon " << endl ;	puts ( " glaceon " ) ;
11226	if f > a and f > b and f > c and f > d and f > e	N/A	N/A	else if ( f > a && f > c && f > d && f > e && f > b )	if ( ( f > a && f > b ) && ( f >> c ) &&! f &&! d &&! e )
11227	print " sylveon "	N/A	N/A	cout << " sylveon " << endl ;	puts ( " sylveon " ) ;
11228	DUMMY	0.0	0.0	}	DUMMY
11229	DUMMY	0.0	0.0	}	DUMMY
11230	DUMMY	0.0	0.0	return 0;	DUMMY
11231	DUMMY	0.0	0.0	}	DUMMY
11232	create pair of integer , integer array par with size 10001	N/A	N/A	pair < int , int > par [ 10001 ] ;	pair < int, int > par [ 10001 ] ;
11233	create string set str	N/A	N/A	set < string > str ;	set < string > str ;
11234	DUMMY	0.0	0.0	int main() {	DUMMY
11235	create string s	N/A	N/A	string s ;	string s ;
11236	create integers n , i	N/A	N/A	int n , i ;	int n, i ;
11237	read n read s	N/A	N/A	cin >> n >> s ;	cin >> n >> s ;
11238	if n is 8	N/A	N/A	if ( n == 8 )	if ( n == 8 )
11239	print " vaporeon " print newline	N/A	N/A	cout << " vaporeon " << endl ;	cout << " vaporeon " << endl ;
11240	else if n is 6	N/A	N/A	else if ( n == 6 )	else if ( n == 6 )
11241	print " espeon " print newline	N/A	N/A	cout << " espeon " << endl ;	cout << " espeon " << endl ;
11242	else if n is 7	N/A	N/A	else if ( n == 7 )	else if ( n == 7 )
11243	if s [ 0 ] is ' . '	N/A	N/A	if ( s [ 0 ] == ' . ' )	if ( s [ 0 ] == '.')
11244	if s [ 1 ] is ' o '	N/A	N/A	if ( s [ 1 ] == ' o ' )	if ( s [ 1 ] =='o')
11245	print " jolteon " print newline	N/A	N/A	cout << " jolteon " << endl ;	cout << " jolteon " << endl ;
11246	DUMMY	0.0	0.0	return 0;	DUMMY
11247	DUMMY	0.0	0.0	}	DUMMY
11248	if s [ 1 ] is ' m '	N/A	N/A	if ( s [ 1 ] == ' m ' )	if ( s [ 1 ] =='m')
11249	print " umbreon " print newline	N/A	N/A	cout << " umbreon " << endl ;	cout << " umbreon " << endl ;
11250	DUMMY	0.0	0.0	return 0;	DUMMY
11251	DUMMY	0.0	0.0	}	DUMMY
11252	if s [ 1 ] is ' e '	N/A	N/A	if ( s [ 1 ] == ' e ' )	if ( s [ 1 ] =='e')
11253	print " leafeon " print newline	N/A	N/A	cout << " leafeon " << endl ;	cout << " leafeon " << endl ;
11254	DUMMY	0.0	0.0	return 0;	DUMMY
11255	DUMMY	0.0	0.0	}	DUMMY
11256	if s [ 1 ] is ' y '	N/A	N/A	if ( s [ 1 ] == ' y ' )	if ( s [ 1 ] =='y')
11257	print " sylveon " print newline	N/A	N/A	cout << " sylveon " << endl ;	cout << " sylveon " << endl ;
11258	DUMMY	0.0	0.0	return 0;	DUMMY
11259	DUMMY	0.0	0.0	}	DUMMY
11260	if s [ 1 ] is ' l '	N/A	N/A	if ( s [ 1 ] == ' l ' )	if ( s [ 1 ] =='l')
11261	if s [ 3 ] is ' r '	N/A	N/A	if ( s [ 3 ] == ' r ' )	if ( s [ 3 ] =='r')
11262	print " flareon " print newline	N/A	N/A	cout << " flareon " << endl ;	cout << " flareon " << endl ;
11263	DUMMY	0.0	0.0	return 0;	DUMMY
11264	else	N/A	N/A	else	else
11265	print " glaceon " print newline	N/A	N/A	cout << " glaceon " << endl ;	cout << " glaceon " << endl ;
11266	DUMMY	0.0	0.0	return 0;	DUMMY
11267	DUMMY	0.0	0.0	}	DUMMY
11268	DUMMY	0.0	0.0	}	DUMMY
11269	if s [ 1 ] is ' . '	N/A	N/A	if ( s [ 1 ] == ' . ' )	if ( s [ 1 ] == '.')
11270	if s [ 2 ] is ' b '	N/A	N/A	if ( s [ 2 ] == ' b ' )	if ( s [ 2 ] =='b')
11271	print " umbreon " print newline	N/A	N/A	cout << " umbreon " << endl ;	cout << " umbreon " << endl ;
11272	DUMMY	0.0	0.0	return 0;	DUMMY
11273	DUMMY	0.0	0.0	}	DUMMY
11274	if s [ 2 ] is ' l '	N/A	N/A	if ( s [ 2 ] == ' l ' )	if ( s [ 2 ] =='l')
11275	if s [ 3 ] is ' t '	N/A	N/A	if ( s [ 3 ] == ' t ' )	if ( s [ 3 ] =='t')
11276	print " jolteon " print newline	N/A	N/A	cout << " jolteon " << endl ;	cout << " jolteon " << endl ;
11277	DUMMY	0.0	0.0	return 0;	DUMMY
11278	else	N/A	N/A	else	else
11279	print " sylveon " print newline	N/A	N/A	cout << " sylveon " << endl ;	cout << " sylveon " << endl ;
11280	DUMMY	0.0	0.0	return 0;	DUMMY
11281	DUMMY	0.0	0.0	}	DUMMY
11282	DUMMY	0.0	0.0	}	DUMMY
11283	if s [ 2 ] is ' a '	N/A	N/A	if ( s [ 2 ] == ' a ' )	if ( s [ 2 ] =='a')
11284	if s [ 3 ] is ' r '	N/A	N/A	if ( s [ 3 ] == ' r ' )	if ( s [ 3 ] =='r')
11285	print " flareon " print newline	N/A	N/A	cout << " flareon " << endl ;	cout << " flareon " << endl ;
11286	DUMMY	0.0	0.0	return 0;	DUMMY
11287	DUMMY	0.0	0.0	}	DUMMY
11288	if s [ 3 ] is ' c '	N/A	N/A	if ( s [ 3 ] == ' c ' )	if ( s [ 3 ] =='c')
11289	print " glaceon " print newline	N/A	N/A	cout << " glaceon " << endl ;	cout << " glaceon " << endl ;
11290	DUMMY	0.0	0.0	return 0;	DUMMY
11291	else	N/A	N/A	else	else
11292	print " leafeon " print newline	N/A	N/A	cout << " leafeon " << endl ;	cout << " leafeon " << endl ;
11293	DUMMY	0.0	0.0	return 0;	DUMMY
11294	DUMMY	0.0	0.0	}	DUMMY
11295	DUMMY	0.0	0.0	}	DUMMY
11296	if s [ 2 ] is ' . '	N/A	N/A	if ( s [ 2 ] == ' . ' )	if ( s [ 2 ] == '.')
11297	if s [ 3 ] is ' r '	N/A	N/A	if ( s [ 3 ] == ' r ' )	if ( s [ 3 ] =='r')
11298	print " flareon " print newline	N/A	N/A	cout << " flareon " << endl ;	cout << " flareon " << endl ;
11299	DUMMY	0.0	0.0	return 0;	DUMMY
11300	DUMMY	0.0	0.0	}	DUMMY
11301	if s [ 3 ] is ' c '	N/A	N/A	if ( s [ 3 ] == ' c ' )	if ( s [ 3 ] =='c')
11302	print " glaceon " print newline	N/A	N/A	cout << " glaceon " << endl ;	cout << " glaceon " << endl ;
11303	DUMMY	0.0	0.0	return 0;	DUMMY
11304	DUMMY	0.0	0.0	}	DUMMY
11305	if s [ 3 ] is ' f '	N/A	N/A	if ( s [ 3 ] == ' f ' )	if ( s [ 3 ] =='f')
11306	print " leafeon " print newline	N/A	N/A	cout << " leafeon " << endl ;	cout << " leafeon " << endl ;
11307	DUMMY	0.0	0.0	return 0;	DUMMY
11308	DUMMY	0.0	0.0	}	DUMMY
11309	if s [ 3 ] is ' t '	N/A	N/A	if ( s [ 3 ] == ' t ' )	if ( s [ 3 ] =='t')
11310	print " jolteon " print newline	N/A	N/A	cout << " jolteon " << endl ;	cout << " jolteon " << endl ;
11311	DUMMY	0.0	0.0	return 0;	DUMMY
11312	DUMMY	0.0	0.0	}	DUMMY
11313	if s [ 3 ] is ' v '	N/A	N/A	if ( s [ 3 ] == ' v ' )	if ( s [ 3 ] =='v')
11314	print " sylveon " print newline	N/A	N/A	cout << " sylveon " << endl ;	cout << " sylveon " << endl ;
11315	DUMMY	0.0	0.0	return 0;	DUMMY
11316	else	N/A	N/A	else	else
11317	print " umbreon " print newline	N/A	N/A	cout << " umbreon " << endl ;	cout << " umbreon " << endl ;
11318	DUMMY	0.0	0.0	return 0;	DUMMY
11319	DUMMY	0.0	0.0	}	DUMMY
11320	DUMMY	0.0	0.0	}	DUMMY
11321	DUMMY	0.0	0.0	}	DUMMY
11322	DUMMY	0.0	0.0	}	DUMMY
11323	if s [ 0 ] is ' j '	N/A	N/A	if ( s [ 0 ] == ' j ' )	if ( s [ 0 ] =='j')
11324	print " jolteon " print newline	N/A	N/A	cout << " jolteon " << endl ;	cout << " jolteon " << endl ;
11325	DUMMY	0.0	0.0	return 0;	DUMMY
11326	DUMMY	0.0	0.0	}	DUMMY
11327	if s [ 0 ] is ' f '	N/A	N/A	if ( s [ 0 ] == ' f ' )	if ( s [ 0 ] =='f')
11328	print ' flareon " print newline	N/A	N/A	cout << " flareon " << endl ;	cout << " flareon " << endl ;
11329	DUMMY	0.0	0.0	return 0;	DUMMY
11330	DUMMY	0.0	0.0	}	DUMMY
11331	if s [ 0 ] is ' u '	N/A	N/A	if ( s [ 0 ] == ' u ' )	if ( s [ 0 ] =='u')
11332	print " umbreon " print newline	N/A	N/A	cout << " umbreon " << endl ;	cout << " umbreon " << endl ;
11333	DUMMY	0.0	0.0	return 0;	DUMMY
11334	DUMMY	0.0	0.0	}	DUMMY
11335	if s [ 0 ] is ' l '	N/A	N/A	if ( s [ 0 ] == ' l ' )	if ( s [ 0 ] =='l')
11336	print " leafeon " print newline	N/A	N/A	cout << " leafeon " << endl ;	cout << " leafeon " << endl ;
11337	DUMMY	0.0	0.0	return 0;	DUMMY
11338	DUMMY	0.0	0.0	}	DUMMY
11339	if s [ 0 ] is ' g '	N/A	N/A	if ( s [ 0 ] == ' g ' )	if ( s [ 0 ] =='g')
11340	print " glaceon " print newline	N/A	N/A	cout << " glaceon " << endl ;	cout << " glaceon " << endl ;
11341	DUMMY	0.0	0.0	return 0;	DUMMY
11342	DUMMY	0.0	0.0	}	DUMMY
11343	if s [ 0 ] is ' s '	N/A	N/A	if ( s [ 0 ] == ' s ' )	if ( s [ 0 ] =='s')
11344	print " sylveon " print newline	N/A	N/A	cout << " sylveon " << endl ;	cout << " sylveon " << endl ;
11345	DUMMY	0.0	0.0	return 0;	DUMMY
11346	DUMMY	0.0	0.0	}	DUMMY
11347	DUMMY	0.0	0.0	}	DUMMY
11348	DUMMY	0.0	0.0	return 0;	DUMMY
11349	DUMMY	0.0	0.0	}	DUMMY
11350	DUMMY	0.0	0.0	int main() {	DUMMY
11351	str = string array of size 12	N/A	N/A	string str [ 12 ] ;	string str [ 12 ] ;
11352	n , i , j , ck = int	N/A	N/A	int n , i , j , ck ;	int n, i, j, ck ;
11353	read n then str [ 0 ]	N/A	N/A	cin >> n >> str [ 0 ] ;	cin >> n >> str [ 0 ] ;
11354	set str [ 1 ] to " vaporeon "	N/A	N/A	str [ 1 ] = " vaporeon " ;	str [ 1 ] = " vaporeon " ;
11355	set str [ 2 ] to " jolteon "	N/A	N/A	str [ 2 ] = " jolteon " ;	str [ 2 ] = " jolteon " ;
11356	set str [ 3 ] to " flareon "	N/A	N/A	str [ 3 ] = " flareon " ;	str [ 3 ] = " flareon " ;
11357	set str [ 4 ] to " espeon "	N/A	N/A	str [ 4 ] = " espeon " ;	str [ 4 ] = " espeon " ;
11358	set str [ 5 ] to " umbreon "	N/A	N/A	str [ 5 ] = " umbreon " ;	str [ 5 ] = " umbreon " ;
11359	set str [ 6 ] to " leafeon "	N/A	N/A	str [ 6 ] = " leafeon " ;	str [ 6 ] = " leafeon " ;
11360	set str [ 7 ] to " glaceon "	N/A	N/A	str [ 7 ] = " glaceon " ;	str [ 7 ] = " glaceon " ;
11361	set str [ 8 ] to " sylveon "	N/A	N/A	str [ 8 ] = " sylveon " ;	str [ 8 ] = " sylveon " ;
11362	for i = 1 to 8 inclusive	N/A	N/A	for ( i = 1 ; i <= 8 ; i ++ )	for ( int i = 1 ; i <= 8 ; i ++ )
11363	if size of str [ i ] is n	N/A	N/A	if ( str [ i ] . size ( ) == n )	if ( str [ i ]. size ( ) == n )
11364	set ck to 1	N/A	N/A	ck = 1 ;	ck = 1 ;
11365	for j = 0 to n	N/A	N/A	for ( j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
11366	if str [ 0 ] [ j ] > = ' a ' and str [ 0 ] [ j ] < = ' z '	N/A	N/A	if ( str [ 0 ] [ j ] >= ' a ' && str [ 0 ] [ j ] <= ' z ' )	if ( str [ 0 ] [ j ] >='a'&& str [ 1 ] [ i ] <='z')
11367	if str [ 0 ] [ j ] is not str [ i ] [ j ]	N/A	N/A	if ( str [ 0 ] [ j ] != str [ i ] [ j ] )	if ( str [ 0 ] [ j ]!= str [ i ] [ k ] )
11368	set ck to 0	N/A	N/A	ck = 0 ;	ck = 0 ;
11369	break	N/A	N/A	break ;	break ;
11370	DUMMY	0.0	0.0	}	DUMMY
11371	DUMMY	0.0	0.0	}	DUMMY
11372	DUMMY	0.0	0.0	}	DUMMY
11373	if ck is 1	N/A	N/A	if ( ck == 1 )	if ( ck == 1 )
11374	print str [ i ]	N/A	N/A	cout << str [ i ] << endl ;	cout << str [ i ] << endl ;
11375	DUMMY	0.0	0.0	return 0;	DUMMY
11376	DUMMY	0.0	0.0	}	DUMMY
11377	DUMMY	0.0	0.0	}	DUMMY
11378	DUMMY	0.0	0.0	}	DUMMY
11379	print newline	N/A	N/A	cout << endl ;	cout << endl ;
11380	DUMMY	0.0	0.0	return 0;	DUMMY
11381	DUMMY	0.0	0.0	}	DUMMY
11382	DUMMY	0.0	0.0	int main() {	DUMMY
11383	create integer N	N/A	N/A	int N ;	int N ;
11384	create string jolteon with jolteon = " jolteaon "	N/A	N/A	string jolteon = " jolteon " ;	string jolteon = " joltyaon " ;
11385	create integer jol with jol = 0	N/A	N/A	int jol = 0 ;	int jol = 0 ;
11386	create string flareon with flareon = " flareon "	N/A	N/A	string flareon = " flareon " ;	string flareon = " flareon " ;
11387	create integer fla with fla = 0	N/A	N/A	int fla = 0 ;	int fla = 0 ;
11388	create string umbreon with umbreon = " umbreon "	N/A	N/A	string umbreon = " umbreon " ;	string umbreon = " umbreon " ;
11389	create integer umb with umb = 0	N/A	N/A	int umb = 0 ;	int umb = 0 ;
11390	create string leafeon with leafeon = " leafeon "	N/A	N/A	string leafeon = " leafeon " ;	string leafon = " leafeon " ;
11391	create integer leaf with leaf = 0	N/A	N/A	int leaf = 0 ;	int leaf = 0 ;
11392	create string glaceon with glaceon = " glaceon "	N/A	N/A	string glaceon = " glaceon " ;	string glaceon = " glaseon " ;
11393	create integer gla with gla = 0	N/A	N/A	int gla = 0 ;	int gla = 0 ;
11394	create string sylveon with sylveon = " sylveon "	N/A	N/A	string sylveon = " sylveon " ;	string sylveon = " sylveston " ;
11395	create integer syl with syl = 0	N/A	N/A	int syl = 0 ;	int syl = 0 ;
11396	create string eevee	N/A	N/A	string eevee ;	string eevee ;
11397	read N	N/A	N/A	cin >> N ;	cin >> N ;
11398	read eevee	N/A	N/A	cin >> eevee ;	cin >> eevee ;
11399	if N is 8	N/A	N/A	if ( N == 8 )	if ( N == 8 )
11400	print " vaporeon \ n "	N/A	N/A	cout << " vaporeon\n " ;	cout << " vaporeon\n " ;
11401	else if N is 6	N/A	N/A	else if ( N == 6 )	else if ( N == 6 )
11402	print " espeon \ n "	N/A	N/A	cout << " espeon\n " ;	cout << " espeon\n " ;
11403	else	N/A	N/A	else	else
11404	for x = 0 to N exclusive	N/A	N/A	for ( int x = 0 ; x < N ; x ++ )	for ( int x = 0 ; x < N ; x ++ )
11405	if eevee [ x ] is not ' . '	N/A	N/A	if ( eevee [ x ] != ' . ' )	if ( eevee [ x ]!= '.')
11406	iif eevee [ x ] is flareon [ x ] and fla is 0	N/A	N/A	if ( eevee [ x ] == flareon [ x ] && fla == 0 )	if (! eevee [ x ] &&! fla )
11407	if x is not 2 , set leaf to 1	N/A	N/A	if ( x != 2 ) { leaf = 1 ; }	if ( x!= 2 ) leaf = 1 ;
11408	set jol to 1	N/A	N/A	jol = 1 ;	jol = 1 ;
11409	set syl to 1	N/A	N/A	syl = 1 ;	syl = 1 ;
11410	set umb to 1	N/A	N/A	umb = 1 ;	umb = 1 ;
11411	if x is not 1 and x is not 2 , set gla to 1	N/A	N/A	if ( x != 1 && x != 2 ) { gla = 1 ; }	if ( x!= 1 && x!= 2 ) gla = 1 ;
11412	DUMMY	0.0	0.0	}	DUMMY
11413	if eevee [ x ] is glaceon [ x ] and gla is 0	N/A	N/A	if ( eevee [ x ] == glaceon [ x ] && gla == 0 )	if ( eevee [ x ] == glaceon [ y ] && gla == 0 )
11414	if x is not 2 , set leaf to 1	N/A	N/A	if ( x != 2 ) { leaf = 1 ; }	if ( x!= 2 ) leaf = 1 ;
11415	set jol to 1	N/A	N/A	jol = 1 ;	jol = 1 ;
11416	set syl to 1	N/A	N/A	syl = 1 ;	syl = 1 ;
11417	set umb to 1	N/A	N/A	umb = 1 ;	umb = 1 ;
11418	if x is not 1 and x is not 2 , set fla to 1	N/A	N/A	if ( x != 1 && x != 2 ) { fla = 1 ; }	if ( x!= 1 && x!= 2 ) fla = 1 ;
11419	DUMMY	0.0	0.0	}	DUMMY
11420	if eevee [ x ] is leafeon [ x ] and leaf is 0	N/A	N/A	if ( eevee [ x ] == leafeon [ x ] && leaf == 0 )	if ( eevee [ x ] == leafeon [ x - 1 ] && leaf == 0 )
11421	if x is not 2	N/A	N/A	if ( x != 2 )	if ( x!= 2 )
11422	set fla to 1	N/A	N/A	fla = 1 ;	fla = 1 ;
11423	set gla to 1	N/A	N/A	gla = 1 ;	fla = 1 ;
11424	DUMMY	0.0	0.0	}	DUMMY
11425	set jol to 1	N/A	N/A	jol = 1 ;	jol = 1 ;
11426	set syl to 1	N/A	N/A	syl = 1 ;	syl = 1 ;
11427	set umb to 1	N/A	N/A	umb = 1 ;	umb = 1 ;
11428	DUMMY	0.0	0.0	}	DUMMY
11429	if eevee [ x ] is jolteon [ x ] and jol is 0	N/A	N/A	if ( eevee [ x ] == jolteon [ x ] && jol == 0 )	if ( eevee [ x ] == jolteon [ yol ] && jol == 0 )
11430	set leaf to 1	N/A	N/A	leaf = 1 ;	leaf = 1 ;
11431	set fla to 1	N/A	N/A	fla = 1 ;	fla = 1 ;
11432	if x is not 2 , set syl to 1	N/A	N/A	if ( x != 2 ) { syl = 1 ; }	if ( x!= 2 ) syl = 1 ;
11433	set umb to 1	N/A	N/A	umb = 1 ;	umb = 1 ;
11434	set gla to 1	N/A	N/A	gla = 1 ;	fla = 1 ;
11435	DUMMY	0.0	0.0	}	DUMMY
11436	if eevee [ x ] is umbreon [ x ] and umb is 0	N/A	N/A	if ( eevee [ x ] == umbreon [ x ] && umb == 0 )	if ( eevee [ x ] == umbreon [ 1 ] && umb == 0 )
11437	set leaf to 1	N/A	N/A	leaf = 1 ;	leaf = 1 ;
11438	set jol to 1	N/A	N/A	jol = 1 ;	jol = 1 ;
11439	set syl to 1	N/A	N/A	syl = 1 ;	syl = 1 ;
11440	set fla to 1	N/A	N/A	fla = 1 ;	fla = 1 ;
11441	set gla to 1	N/A	N/A	gla = 1 ;	fla = 1 ;
11442	DUMMY	0.0	0.0	}	DUMMY
11443	if eevee [ x ] is sylveon [ x ] and syl is 0	N/A	N/A	if ( eevee [ x ] == sylveon [ x ] && syl == 0 )	if ( eevee [ x ] == sylveon [ x - 1 ] && syl == 0 )
11444	set leaf to 1	N/A	N/A	leaf = 1 ;	leaf = 1 ;
11445	set fla to 1	N/A	N/A	fla = 1 ;	fla = 1 ;
11446	if x is not 2 , set jol to 1	N/A	N/A	if ( x != 2 ) { jol = 1 ; }	if ( x!= 2 ) jol = 1 ;
11447	set umb to 1	N/A	N/A	umb = 1 ;	umb = 1 ;
11448	set gla to 1	N/A	N/A	gla = 1 ;	fla = 1 ;
11449	DUMMY	0.0	0.0	}	DUMMY
11450	if syl + leaf + jol + umb + gla + fla is 5	N/A	N/A	if ( syl + leaf + jol + umb + gla + fla == 5 )	if ( syl + leaf + jol + umb + gla + fla == 5 )
11451	if syl is 0 , print sylveon print " \ n "	N/A	N/A	if ( syl == 0 ) { cout << sylveon << " \n " ; }	if ( syl == 0 ) cout << sylveon << " \n " ;
11452	if gla is 0 , print glaceon print " \ n "	N/A	N/A	if ( gla == 0 ) { cout << glaceon << " \n " ; }	if ( gla == 0 ) cout << glaceon << " \n " ;
11453	if fla is 0 , print flareon print " \ n "	N/A	N/A	if ( fla == 0 ) { cout << flareon << " \n " ; }	if ( fla == 0 ) { cout << flareon << " \n " ; }
11454	if jol is 0 , print jolteon print " \ n "	N/A	N/A	if ( jol == 0 ) { cout << jolteon << " \n " ; }	if ( jol == 0 ) cout << jolteon << " \n " ;
11455	if umb is 0 print umbreon print " \ n "	N/A	N/A	if ( umb == 0 ) { cout << umbreon << " \n " ; }	if ( umb == 0 ) { cout << umbreon << " \n " ; }
11456	if leaf is 0 print leafon print " \ n "	N/A	N/A	if ( leaf == 0 ) { cout << leafeon << " \n " ; }	if ( leaf == 0 ) { cout << leafon << " \n " ; }
11457	break loop	N/A	N/A	break ;	break ;
11458	DUMMY	0.0	0.0	}	DUMMY
11459	DUMMY	0.0	0.0	}	DUMMY
11460	DUMMY	0.0	0.0	}	DUMMY
11461	DUMMY	0.0	0.0	}	DUMMY
11462	DUMMY	0.0	0.0	}	DUMMY
11463	DUMMY	0.0	0.0	int main() {	DUMMY
11464	let n be an integer	N/A	N/A	int n ;	int n ;
11465	read n	N/A	N/A	cin >> n ;	cin >> n ;
11466	define n number of pair pr with two integer elements	N/A	N/A	pair < int , int > pr [ n ] ;	pair < int, int > pr [ n ] ;
11467	for i = 0 to n exclusive , read	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> pr [ i ] . first >> pr [ i ] . second ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> pr [ i ] ;
11468	sort pr , pr + n	N/A	N/A	sort ( pr , pr + n ) ;	sort ( pr, pr + n ) ;
11469	for j = 0 to n - 1 ( exclusive )	N/A	N/A	for ( int j = 0 ; j < n - 1 ; j ++ )	for ( int j = 0 ; j < n - 1 ; j ++ )
11470	if first element of jth pair is less than j + 1 th pair , and second element of jth pair is greater than j + 1th pair , do the following	N/A	N/A	if ( pr [ j ] . first < pr [ j + 1 ] . first && pr [ j ] . second > pr [ j + 1 ] . second )	if ( pr [ 0 ] < pr [ j + 1 ] && pr [ 1 ] > j + 2 )
11471	print Happy Alex and a new line	N/A	N/A	cout << " Happy Alex " << endl ;	cout << " Happy Alex " << endl ;
11472	DUMMY	0.0	0.0	return 0;	DUMMY
11473	DUMMY	0.0	0.0	}	DUMMY
11474	DUMMY	0.0	0.0	}	DUMMY
11475	print Poor Alex and a new line	N/A	N/A	cout << " Poor Alex " << endl ;	cout << " Poor Alex " << endl ;
11476	DUMMY	0.0	0.0	return 0;	DUMMY
11477	DUMMY	0.0	0.0	}	DUMMY
11478	DUMMY	0.0	0.0	int main() {	DUMMY
11479	t , a , b , h , p = int with h = 0 and p = 0	N/A	N/A	int t , a , b , h = 0 , p = 0 ;	int t, a, b, h = 0, p = 0 ;
11480	read t	N/A	N/A	cin >> t ;	cin >> t ;
11481	loop t times	N/A	N/A	while ( t -- )	while ( t -- )
11482	read a then b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
11483	if a is not equal to b increment p	N/A	N/A	if ( a != b ) p ++ ;	if ( a!= b ) p ++ ;
11484	DUMMY	0.0	0.0	}	DUMMY
11485	if p is not equal 0	N/A	N/A	if ( p != 0 )	if ( p!= 0 )
11486	print " Happy Alex "	N/A	N/A	cout << " Happy Alex " << endl ;	cout << " Happy Alex " << endl ;
11487	else	N/A	N/A	else	else
11488	print " Poor Alex "	N/A	N/A	cout << " Poor Alex " << endl ;	cout << " Poor Alex " << endl ;
11489	DUMMY	0.0	0.0	return 0;	DUMMY
11490	DUMMY	0.0	0.0	}	DUMMY
11491	DUMMY	0.0	0.0	int main() {	DUMMY
11492	declare integer variable n	N/A	N/A	int n ;	int n ;
11493	read n	N/A	N/A	cin >> n ;	cin >> n ;
11494	create doubles x and y	N/A	N/A	double x , y ;	double x, y ;
11495	create double z	N/A	N/A	double z ;	double z ;
11496	double pointer * arr points to new array of doubles with size n	N/A	N/A	double * arr = new double [ n ] ;	double * arr = new double [ n ] ;
11497	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
11498	read x and y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
11499	declare double variable q = x + ( y / 100000 )	N/A	N/A	double q = x + ( y / 100000 ) ;	double q = x + ( y / 100000 ) ;
11500	set value of arr [ i ] to q	N/A	N/A	arr [ i ] = q ;	arr [ i ] = q ;
11501	DUMMY	0.0	0.0	}	DUMMY
11502	sort arr	N/A	N/A	sort ( arr , arr + n ) ;	sort ( arr, arr + n ) ;
11503	for integer i = 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
11504	if arr [ i ] ! = arr [ i + 1 ]	N/A	N/A	if ( int ( arr [ i ] ) != int ( arr [ i + 1 ] ) )	if ( arr [ 1 ]!= arr [ i + 1 ] )
11505	if arr [ i + 1 ] - arr [ i ] is less than 1	N/A	N/A	if ( arr [ i + 1 ] - arr [ i ] < 1 )	if ( arr [ i + 1 ] - arr [ 1 ] < 1 )
11506	print " Happy Alex "	N/A	N/A	cout << " Happy Alex " << endl ;	cout << " Happy Alex " << endl ;
11507	DUMMY	0.0	0.0	return 0;	DUMMY
11508	DUMMY	0.0	0.0	}	DUMMY
11509	DUMMY	0.0	0.0	}	DUMMY
11510	DUMMY	0.0	0.0	}	DUMMY
11511	print " Poor Alex "	N/A	N/A	cout << " Poor Alex " << endl ;	cout << " Poor Alex\n " ;
11512	DUMMY	0.0	0.0	return 0;	DUMMY
11513	DUMMY	0.0	0.0	}	DUMMY
11514	DUMMY	0.0	0.0	int main() {	DUMMY
11515	count , i , j , n = int with count = 0 and a , b = int array of size 100001 each	N/A	N/A	int a [ 100001 ] , b [ 100001 ] , count = 0 , i , j , n ;	int count = 0, i, j, n, a [ 100001 ], b [ 1000001 ] ;
11516	read n	N/A	N/A	cin >> n ;	cin >> n ;
11517	read n values into a then b	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] >> b [ i ] ; }	for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] >> b [ ++ i ] ; }
11518	for j = 0 to n	N/A	N/A	for ( j = 0 ; j < n ; j ++ )	for ( j = 0 ; j < n ; j ++ )
11519	if a [ j ] is not b [ j ]	N/A	N/A	if ( a [ j ] != b [ j ] )	if ( a [ j ]!= b [ i ] )
11520	print " Happy Alex "	N/A	N/A	cout << " Happy Alex " << endl ;	cout << " Happy Alex " << endl ;
11521	set count to 1	N/A	N/A	count = 1 ;	count = 1 ;
11522	break loop	N/A	N/A	break ;	break ;
11523	DUMMY	0.0	0.0	}	DUMMY
11524	DUMMY	0.0	0.0	}	DUMMY
11525	if count is 0 then print " Poor Alex "	N/A	N/A	if ( count == 0 ) cout << " Poor Alex " << endl ;	if ( count == 0 ) { cout << " Poor Alex " << endl ; }
11526	DUMMY	0.0	0.0	return 0;	DUMMY
11527	DUMMY	0.0	0.0	}	DUMMY
11528	DUMMY	0.0	0.0	int main() {	DUMMY
11529	create integer n	N/A	N/A	int n ;	int n ;
11530	read n	N/A	N/A	cin >> n ;	cin >> n ;
11531	create pair array of integer , integer pr with size n	N/A	N/A	pair < int , int > pr [ n ] ;	pair < int, int > pr [ n ] ;
11532	for i = 0 to n exclusive , read first element of pr [ i ] read second element of pr [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> pr [ i ] . first >> pr [ i ] . second ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> pr [ i ]. first >> pr. second ; }
11533	sort elements from pr to pr + n	N/A	N/A	sort ( pr , pr + n ) ;	sort ( pr, pr + n ) ;
11534	for j = 0 to n - 1 exclusive	N/A	N/A	for ( int j = 0 ; j < n - 1 ; j ++ )	for ( int j = 0 ; j < n - 1 ; j ++ )
11535	if first element of pr [ j ] is less than first element of pr [ j + 1 ] and second element of pr [ j ] is greater than second element of pr [ j + 1 ]	N/A	N/A	if ( pr [ j ] . first < pr [ j + 1 ] . first && pr [ j ] . second > pr [ j + 1 ] . second )	if ( pr [ 0 ]. first < pr [ j + 1 ]. front ( ) && pr [ 2 ]. second > pr [ 3 + i ]. back ( ) )
11536	print " Happy Alex " print newline	N/A	N/A	cout << " Happy Alex " << endl ;	cout << " Happy Alex " << endl ;
11537	DUMMY	0.0	0.0	return 0;	DUMMY
11538	DUMMY	0.0	0.0	}	DUMMY
11539	DUMMY	0.0	0.0	}	DUMMY
11540	print " Poor Alex " print newline	N/A	N/A	cout << " Poor Alex " << endl ;	cout << " Poor Alex " << endl ;
11541	DUMMY	0.0	0.0	return 0;	DUMMY
11542	DUMMY	0.0	0.0	}	DUMMY
11543	DUMMY	0.0	0.0	int main() {	DUMMY
11544	declare integer variables n , a and b	N/A	N/A	int n , a , b ;	int n, a, b ;
11545	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
11546	for integer i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
11547	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
11548	if a ! = b	N/A	N/A	if ( a != b )	if ( a!= b )
11549	print " Happy Alex "	N/A	N/A	cout << " Happy Alex " << endl ;	cout << " Happy Alex\n " ;
11550	DUMMY	0.0	0.0	return 0;	DUMMY
11551	DUMMY	0.0	0.0	}	DUMMY
11552	DUMMY	0.0	0.0	}	DUMMY
11553	print " Poor Alex "	N/A	N/A	cout << " Poor Alex " << endl ;	cout << " Poor Alex " << endl ;
11554	DUMMY	0.0	0.0	return 0;	DUMMY
11555	DUMMY	0.0	0.0	}	DUMMY
11556	create constant integer MAXN with MAXN = 100000 + 10	N/A	N/A	const int MAXN = 100000 + 10 ;	const int MAXN = 100000 + 10 ;
11557	create constant long double eps with eps = 1e - 10	N/A	N/A	const long double eps = 1e-10 ;	const long double eps = 1e-10 ;
11558	create integer array cnt with size MAXN	N/A	N/A	int cnt [ MAXN ] ;	int cnt [ MAXN ] ;
11559	declare check with integer n as argument , returning integer	N/A	N/A	int check ( int n )	int check ( int n )
11560	for i = 0 to i + 2 is less than n , incrementing i	N/A	N/A	for ( int i = 0 ; i + 2 < n ; i ++ )	for ( int i = 0 ; i + 2 < n ; i ++ )
11561	if cnt [ i ] is 0 , break current loop iteration	N/A	N/A	if ( cnt [ i ] == 0 ) continue ;	if ( cnt [ i ] == 0 ) continue ;
11562	if cnt [ i ] is greater than or equal to 2 and cnt [ i + 1 ] is greater than or equal to 0 , return 1 from function	N/A	N/A	if ( cnt [ i ] >= 2 && cnt [ i + 1 ] >= 0 ) return 1 ;	if ( ( cnt [ i ] >= 2 ) && ( ( int ) cnt ( i + 1 ) ) >= 0 ) { return 1 ; }
11563	if cnt [ i ] is less than or equal to - 2 and cnt [ i + 1 ] is less than or equal to 0 , return - 1 from function	N/A	N/A	if ( cnt [ i ] <= - 2 && cnt [ i + 1 ] <= 0 ) return - 1 ;	if ( ( cnt [ i ] <= - 2 ) && ( ( int ) cnt. at ( i + 1 ) <= 0 ) ) return - 1 ;
11564	increment cnt [ i + 1 ] by cnt [ i ]	N/A	N/A	cnt [ i + 1 ] += cnt [ i ] ;	cnt [ i + 1 ] += cnt [ 1 ] ;
11565	increment cnt [ i + 2 ] by cnt [ i ]	N/A	N/A	cnt [ i + 2 ] += cnt [ i ] ;	cnt [ i + 2 ] += cnt [ 1 ] ;
11566	DUMMY	0.0	0.0	}	DUMMY
11567	create long double p with p = square root of ( long double casted 5 ) + 1	N/A	N/A	long double p = sqrt ( ( long double ) 5 ) + 1 ;	long double p = sqrt ( ( long double ) 5 ) + 1 ;
11568	set p to p / 2	N/A	N/A	p /= 2 ;	p /= 2 ;
11569	create long double ret with ret = p * cnt [ n - 2 ] + cnt [ n - 1 ]	N/A	N/A	long double ret = p * cnt [ n - 2 ] + cnt [ n - 1 ] ;	long double ret = ( p * cnt [ n - 2 ] ) + ( p - 1 ] ) ;
11570	if absolute value of ret is less than eps , return 0 from function	N/A	N/A	if ( fabs ( ret ) < eps ) return 0 ;	if ( abs ( ret ) < eps ) return 0 ;
11571	if ret is greater than 0 , return 1 from function	N/A	N/A	if ( ret > 0 ) return 1 ;	if ( ret > 0 ) return 1 ;
11572	return - 1 from function	N/A	N/A	return - 1 ;	return - 1 ;
11573	DUMMY	0.0	0.0	}	DUMMY
11574	DUMMY	0.0	0.0	int main() {	DUMMY
11575	create strings s1 , s2	N/A	N/A	string s1 , s2 ;	string s1, s2 ;
11576	read s1 read s2	N/A	N/A	cin >> s1 >> s2 ;	cin >> s1 >> s2 ;
11577	create integer n with n = maximum of size of s1 and size of s2	N/A	N/A	int n = max ( s1 . size ( ) , s2 . size ( ) ) ;	int n = max ( ( int ) s1. size ( ), ( long long ) ( s2 ) ) ;
11578	if size of s1 is less than n , set s1 to string initialized with ( n - size of s1 , ' 0 ' ) + s1	N/A	N/A	if ( s1 . size ( ) < n ) s1 = string ( n - s1 . size ( ) , ' 0 ' ) + s1 ;	if ( s1. size ( ) < n ) { s1 = string ( n - s2. length ( ),'0') + s1 ; }
11579	if size of s2 is less than n , set s2 to string initialized with ( n - size of s2 , ' 0 ' ) + s2	N/A	N/A	if ( s2 . size ( ) < n ) s2 = string ( n - s2 . size ( ) , ' 0 ' ) + s2 ;	if ( s2. size ( ) < n ) { s2 = string ( n - ( ( long long ) s2 ),'0') + s2 ; }
11580	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
11581	create integer a with a = s1 [ i ] - ' 0 '	N/A	N/A	int a = s1 [ i ] - ' 0 ' ;	int a = s1 [ i ] -'0';
11582	create integer b with b = s2 [ i ] - ' 0 '	N/A	N/A	int b = s2 [ i ] - ' 0 ' ;	int b = s2 [ i ] -'0';
11583	set cnt [ i ] to a - b	N/A	N/A	cnt [ i ] = a - b ;	cnt [ i ] = a - b ;
11584	DUMMY	0.0	0.0	}	DUMMY
11585	create integer ret with ret = result of run check with n as argument	N/A	N/A	int ret = check ( n ) ;	int ret = check ( n ) ;
11586	if ret is 0	N/A	N/A	if ( ret == 0 )	if ( ret == 0 )
11587	print " = " print newline	N/A	N/A	cout << " = " << endl ;	cout << " = " << endl ;
11588	else if ret is - 1	N/A	N/A	else if ( ret == - 1 )	else if ( ret == - 1 )
11589	print " < " print newline	N/A	N/A	cout << " < " << endl ;	cout << " < " << endl ;
11590	else	N/A	N/A	else	else
11591	print " > " print newline	N/A	N/A	cout << " > " << endl ;	cout << " > " << endl ;
11592	DUMMY	0.0	0.0	return 0;	DUMMY
11593	DUMMY	0.0	0.0	}	DUMMY
11594	s1 , s2 = string	N/A	N/A	string s1 , s2 ;	string s1, s2 ;
11595	DUMMY	0.0	0.0	int main() {	DUMMY
11596	read a line into s1 using cin	N/A	N/A	getline ( cin , s1 ) ;	getline ( cin, s1, cin ) ;
11597	read a line into s2 using cin	N/A	N/A	getline ( cin , s2 ) ;	getline ( cin, s2 ) ;
11598	sz1 = int with sz1 = size of s1	N/A	N/A	int sz1 = s1 . size ( ) ;	int sz1 = s1. size ( ) ;
11599	sz2 = int with sz2 = size of s2	N/A	N/A	int sz2 = s2 . size ( ) ;	int sz2 = s2. size ( ) ;
11600	swaped = bool with swaped = false	N/A	N/A	bool swaped = 0 ;	bool swaped = false ;
11601	if sz1 is less than sz2	N/A	N/A	if ( sz1 < sz2 )	if ( sz1 < sz2 )
11602	call swap on s1 and s2	N/A	N/A	swap ( s1 , s2 ) ;	swap ( s1, s2 ) ;
11603	call swap on sz1 and sz2	N/A	N/A	swap ( sz1 , sz2 ) ;	swap ( sz1, sz2 ) ;
11604	set swaped to true	N/A	N/A	swaped = 1 ;	swaped = true ;
11605	DUMMY	0.0	0.0	}	DUMMY
11606	if sz1 is greater than sz2	N/A	N/A	if ( sz1 > sz2 )	if ( sz1 > sz2 )
11607	aux = string with aux = " "	N/A	N/A	string aux = " " ;	string aux = " " ;
11608	for i = 1 to sz1 - sz2 inclusive append " 0 " to aux	N/A	N/A	for ( int i = 1 ; i + sz2 <= sz1 ; ++ i ) { aux += " 0 " ; }	for ( int i = 1 ; i <= sz1 - sz2 ; i ++ ) aux += " 0 " ;
11609	prepend aux to s2	N/A	N/A	s2 = aux + s2 ;	s2 = aux + s2 ;
11610	DUMMY	0.0	0.0	}	DUMMY
11611	prepend " 0 " to s1	N/A	N/A	s1 = " 0 " + s1 ;	s1 = " 0 " + s1 ;
11612	prepend " 0 " to s2	N/A	N/A	s2 = " 0 " + s2 ;	s2 += " 0 " ;
11613	increment sz1	N/A	N/A	sz1 ++ ;	sz1 ++ ;
11614	for i = 1 to sz1 - 1	N/A	N/A	for ( int i = 1 ; i + 1 < sz1 ; ++ i )	for ( int i = 1 ; i <= sz1 - 1 ; ++ i )
11615	if s1 [ i ] and s1 [ i + 1 ] are both ' 1 '	N/A	N/A	if ( s1 [ i ] == ' 1 ' and s1 [ i + 1 ] == ' 1 ' )	if ( ( s1 [ i ] =='1') && ( s2 [ i + 1 ] == " 1 " ) )
11616	set s1 [ i - 1 ] to ' 1 '	N/A	N/A	s1 [ i - 1 ] = ' 1 ' ;	s1 [ i - 1 ] ='1';
11617	set s1 [ i ] to ' 0 '	N/A	N/A	s1 [ i ] = ' 0 ' ;	s1 [ i ] ='0';
11618	set s1 [ i + 1 ] to ' 0 '	N/A	N/A	s1 [ i + 1 ] = ' 0 ' ;	s1 [ i + 1 ] ='0';
11619	j = int with j = i - 2	N/A	N/A	int j = i - 2 ;	int j = i - 2 ;
11620	loop while j is greater than 0 and s1 [ j ] is ' 1 '	N/A	N/A	while ( j - 1 >= 0 and s1 [ j ] == ' 1 ' )	while ( j > 0 && s1 [ j ] =='1')
11621	set s1 [ j - 1 ] to ' 1 '	N/A	N/A	s1 [ j - 1 ] = ' 1 ' ;	s1 [ j - 1 ] ='1';
11622	set s1 [ j ] to ' 0 '	N/A	N/A	s1 [ j ] = ' 0 ' ;	s1 [ j ] ='0';
11623	set s1 [ j + 1 ] to ' 0 '	N/A	N/A	s1 [ j + 1 ] = ' 0 ' ;	s1 [ j + 1 ] ='0';
11624	decrement j by 2	N/A	N/A	j -= 2 ;	j -= 2 ;
11625	DUMMY	0.0	0.0	}	DUMMY
11626	DUMMY	0.0	0.0	}	DUMMY
11627	if s2 [ i ] and s2 [ i + 1 ] are both ' 1 '	N/A	N/A	if ( s2 [ i ] == ' 1 ' and s2 [ i + 1 ] == ' 1 ' )	if ( ( s2 [ i ] =='1') &&! ( s1 [ i + 1 ] ) )
11628	set s2 [ i - 1 ] to ' 1 '	N/A	N/A	s2 [ i - 1 ] = ' 1 ' ;	s2 [ i - 1 ] ='1';
11629	set s2 [ i ] to ' 0 '	N/A	N/A	s2 [ i ] = ' 0 ' ;	s2 [ i ] ='0';
11630	set s2 [ i + 1 ] to ' 0 '	N/A	N/A	s2 [ i + 1 ] = ' 0 ' ;	s2 [ i + 1 ] ='0';
11631	j = int with j = i - 2	N/A	N/A	int j = i - 2 ;	int j = i - 2 ;
11632	loop while j is greater than 0 and s2 [ j ] is ' 1 '	N/A	N/A	while ( j - 1 >= 0 and s2 [ j ] == ' 1 ' )	while ( j > 0 && s2 [ j ] =='1')
11633	set s2 [ j - 1 ] to ' 1 '	N/A	N/A	s2 [ j - 1 ] = ' 1 ' ;	s2 [ j - 1 ] ='1';
11634	set s2 [ j ] to ' 0 '	N/A	N/A	s2 [ j ] = ' 0 ' ;	s2 [ j ] ='0';
11635	set s2 [ j + 1 ] to ' 0 '	N/A	N/A	s2 [ j + 1 ] = ' 0 ' ;	s2 [ j + 1 ] ='0';
11636	decrement j by 2	N/A	N/A	j -= 2 ;	j -= 2 ;
11637	DUMMY	0.0	0.0	}	DUMMY
11638	DUMMY	0.0	0.0	}	DUMMY
11639	DUMMY	0.0	0.0	}	DUMMY
11640	for i = 0 to sz1	N/A	N/A	for ( int i = 0 ; i < sz1 ; ++ i )	for ( int i = 0 ; i < sz1 ; i ++ )
11641	if s1 [ i ] is greater than s2 [ i ]	N/A	N/A	if ( s1 [ i ] > s2 [ i ] )	if ( s1 [ i ] > s2 [ j ] )
11642	if swaped is false	N/A	N/A	if ( ! swaped )	if (! swaped )
11643	print ' > '	N/A	N/A	cout << ' > ' << ' \n ' ;	cout <<'>'<< endl ;
11644	else	N/A	N/A	else	else
11645	print ' < '	N/A	N/A	cout << ' < ' << ' \n ' ;	cout <<'<'<< endl ;
11646	DUMMY	0.0	0.0	}	DUMMY
11647	DUMMY	0.0	0.0	return 0;	DUMMY
11648	if s18i ] is less than s2 [ i ]	N/A	N/A	else if ( s1 [ i ] < s2 [ i ] )	if ( s18i ] < s2 [ i ] )
11649	if swaped is false	N/A	N/A	if ( ! swaped )	if (! swaped )
11650	print ' < '	N/A	N/A	cout << ' < ' << ' \n ' ;	cout <<'<'<< endl ;
11651	else	N/A	N/A	else	else
11652	print ' > '	N/A	N/A	cout << ' > ' << ' \n ' ;	cout <<'>'<< endl ;
11653	DUMMY	0.0	0.0	}	DUMMY
11654	DUMMY	0.0	0.0	return 0;	DUMMY
11655	DUMMY	0.0	0.0	}	DUMMY
11656	DUMMY	0.0	0.0	}	DUMMY
11657	print ' = '	N/A	N/A	cout << ' = ' << ' \n ' ;	cout <<'='<< endl ;
11658	DUMMY	0.0	0.0	return 0;	DUMMY
11659	DUMMY	0.0	0.0	}	DUMMY
11660	create constant double PI with PI = 3 . 14159265358979323846264338327	N/A	N/A	const double PI = 3.14159265358979323846264338327 ;	const double PI = 3.14159265358979323846264338327 ;
11661	DUMMY	0.0	0.0	int main() {	DUMMY
11662	create strings a , b	N/A	N/A	string a , b ;	string a, b ;
11663	read a read b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
11664	create integer vectors a1 , b1 with a1 initialized with 100020 , b1 initialized with 100020	N/A	N/A	vector < int > a1 ( 100020 ) , b1 ( 100020 ) ;	vector < int > a1 ( 100020 ), b1 ( 1000000 + 20 ) ;
11665	for i = size of a - 1 to 0 inclusive , decrementing i , set a1 [ size of a - 1 - i ] to a [ i ] - ' 0 '	N/A	N/A	for ( int i = a . size ( ) - 1 ; i >= 0 ; i -- ) a1 [ a . size ( ) - 1 - i ] = a [ i ] - ' 0 ' ;	for ( size_t i = a. size ( ) - 1 ; i >= 0 ; i -- ) { a1 [ a. resize ( a - 1 - i ] ) -'0'; }
11666	for i = size of b - 1 to 0 inclusive , decrementing i , set b1 [ size of b - 1 - i ] to b [ i ] - ' 0 '	N/A	N/A	for ( int i = b . size ( ) - 1 ; i >= 0 ; i -- ) b1 [ b . size ( ) - 1 - i ] = b [ i ] - ' 0 ' ;	for ( int i = b. size ( ) - 1 ; i >= 0 ; i -- ) b1 [ b. length ( ) + 1 - i ] = b [ i ] -'0';
11667	for i = 100010 to 0 inclusive , decrementing i	N/A	N/A	for ( int i = 100010 ; i >= 0 ; i -- )	for ( int i = 100010 ; i >= 0 ; i -- )
11668	for j = i to a1 [ j ] and a1 [ j + 1 ] , incrementing j by 2 , set a1 [ j ] to a1 [ j + 1 ] to 0 , set a1 [ j + 2 ] to 1	N/A	N/A	for ( int j = i ; a1 [ j ] && a1 [ j + 1 ] ; j += 2 ) a1 [ j ] = a1 [ j + 1 ] = 0 , a1 [ j + 2 ] = 1 ;	for ( int j = i ; j < a1 [ j ] && ( a2 [ j + 1 ] ) ; j += 2 ) { a1. at ( j ) = a2. + 1 ; }
11669	for j = i to b1 [ j ] and b1 [ j + 1 ] , incrementing j by 2 , set b1 [ j ] to b1 [ j + 1 ] to 0 , set b1 [ j + 2 ] to 1	N/A	N/A	for ( int j = i ; b1 [ j ] && b1 [ j + 1 ] ; j += 2 ) b1 [ j ] = b1 [ j + 1 ] = 0 , b1 [ j + 2 ] = 1 ;	for ( int j = i ; j < b1 [ j ] ; j += 2 ) b1. j ] = a1. + 1 ], b2. push_back ( j + 2 ) ;
11670	DUMMY	0.0	0.0	}	DUMMY
11671	for i = 100010 to 0 inclusive , decrementing i	N/A	N/A	for ( int i = 100010 ; i >= 0 ; i -- )	for ( i = 100010 ; i >= 0 ; i -- )
11672	if a1 [ i ] is less than b1 [ i ] , return print ' < ' print newline , 0 from function	N/A	N/A	if ( a1 [ i ] < b1 [ i ] ) return cout << ' < ' << endl , 0 ;	if ( a1 [ i ] < b1 [ j ] ) return cout <<'<'<< endl, 0 ;
11673	if a1 [ i ] is greater than b1 [ i ] , return print ' > ' print newline , 0	N/A	N/A	if ( a1 [ i ] > b1 [ i ] ) return cout << ' > ' << endl , 0 ;	if ( a1 [ i ] > b1 [ j ] ) return cout <<'>'<< endl, 0 ;
11674	DUMMY	0.0	0.0	}	DUMMY
11675	print ' = ' print newline	N/A	N/A	cout << ' = ' << endl ;	cout <<'='<< endl ;
11676	DUMMY	0.0	0.0	return 0;	DUMMY
11677	DUMMY	0.0	0.0	}	DUMMY
11678	create a map from integers to strings with name m	N/A	N/A	map < int , string > m ;	map < int, string > m ;
11679	create iterator it for map of int to strings	N/A	N/A	map < int , string > :: iterator it ;	map < int, string > :: iterator it ;
11680	DUMMY	0.0	0.0	int main() {	DUMMY
11681	s = array of characters of size 20	N/A	N/A	char s [ 20 ] ;	char s [ 20 ] ;
11682	declare integer variable n	N/A	N/A	int n ;	int n ;
11683	m [ 0 ] = " January "	N/A	N/A	m [ 0 ] = " January " ;	m [ 0 ] = " January " ;
11684	m [ 1 ] = " February "	N/A	N/A	m [ 1 ] = " February " ;	m [ 1 ] = " February " ;
11685	m [ 2 ] = " March "	N/A	N/A	m [ 2 ] = " March " ;	m [ 2 ] = " March " ;
11686	m [ 3 ] = " April "	N/A	N/A	m [ 3 ] = " April " ;	m [ 3 ] = " April " ;
11687	m [ 4 ] = " May "	N/A	N/A	m [ 4 ] = " May " ;	m [ 4 ] = " May " ;
11688	m [ 5 ] = " June "	N/A	N/A	m [ 5 ] = " June " ;	m [ 5 ] = " June " ;
11689	m [ 6 ] = " July "	N/A	N/A	m [ 6 ] = " July " ;	m [ 6 ] = " July " ;
11690	m [ 7 ] = " August "	N/A	N/A	m [ 7 ] = " August " ;	m [ 7 ] = " August " ;
11691	m [ 8 ] = " September "	N/A	N/A	m [ 8 ] = " September " ;	m [ 8 ] = " September " ;
11692	m [ 9 ] = " October "	N/A	N/A	m [ 9 ] = " October " ;	m [ 9 ] = " October " ;
11693	m [ 10 ] = " November "	N/A	N/A	m [ 10 ] = " November " ;	m [ 10 ] = " November " ;
11694	m [ 11 ] = " December "	N/A	N/A	m [ 11 ] = " December " ;	m [ 11 ] = " December " ;
11695	while cin > > s > > n	N/A	N/A	while ( cin >> s >> n )	while ( cin >> s >> n )
11696	create integer j with value 0	N/A	N/A	int j = 0 ;	int j = 0 ;
11697	move it through m from the beginning	N/A	N/A	for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ )	for ( it = m. begin ( ) ; it!= m. end ( ) - 1 ; it ++ )
11698	increment j	N/A	N/A	++ j ;	j ++ ;
11699	if it - > second = s . break	N/A	N/A	if ( it -> second == s ) break ;	if ( it -> second == s. break ( ) )
11700	DUMMY	0.0	0.0	}	DUMMY
11701	print m [ ( j + n - 1 ) % 12 ] and a new line	N/A	N/A	cout << m [ ( j + n - 1 ) % 12 ] << endl ;	cout << m [ ( j + n - 1 ) % 12 ] << endl ;
11702	DUMMY	0.0	0.0	}	DUMMY
11703	DUMMY	0.0	0.0	return 0;	DUMMY
11704	DUMMY	0.0	0.0	}	DUMMY
11705	create map m from integer to string	N/A	N/A	map < int , string > m ;	map < int, string > m ;
11706	create map iterator it from integer to string	N/A	N/A	map < int , string > :: iterator it ;	map < int, string > :: iterator it ;
11707	DUMMY	0.0	0.0	int main() {	DUMMY
11708	create character array s with size 20	N/A	N/A	char s [ 20 ] ;	char s [ 20 ] ;
11709	create integer n	N/A	N/A	int n ;	int n ;
11710	set m [ 0 ] to " January "	N/A	N/A	m [ 0 ] = " January " ;	m [ 0 ] = " January " ;
11711	set m [ 1 ] to " February "	N/A	N/A	m [ 1 ] = " February " ;	m [ 1 ] = " February " ;
11712	set m [ 2 ] to " March "	N/A	N/A	m [ 2 ] = " March " ;	m [ 2 ] = " March " ;
11713	set m [ 3 ] to " April "	N/A	N/A	m [ 3 ] = " April " ;	m [ 3 ] = " April " ;
11714	set m [ 4 ] to " May "	N/A	N/A	m [ 4 ] = " May " ;	m [ 4 ] = " May " ;
11715	set m [ 5 ] to " June "	N/A	N/A	m [ 5 ] = " June " ;	m [ 5 ] = " June " ;
11716	set m [ 6 ] to " July "	N/A	N/A	m [ 6 ] = " July " ;	m [ 6 ] = " July " ;
11717	set m [ 7 ] to " August "	N/A	N/A	m [ 7 ] = " August " ;	m [ 7 ] = " August " ;
11718	set m [ 8 ] to " September "	N/A	N/A	m [ 8 ] = " September " ;	m [ 8 ] = " September " ;
11719	set m [ 9 ] to " October "	N/A	N/A	m [ 9 ] = " October " ;	m [ 9 ] = " October " ;
11720	set m [ 10 ] to " November "	N/A	N/A	m [ 10 ] = " November " ;	m [ 10 ] = " November " ;
11721	set m [ 11 ] to " December "	N/A	N/A	m [ 11 ] = " December " ;	m [ 11 ] = " December " ;
11722	while read s read n	N/A	N/A	while ( cin >> s >> n )	while ( cin >> s >> n )
11723	create integer j with j = 0	N/A	N/A	int j = 0 ;	int j = 0 ;
11724	for it = beginning of m to it is not end of m , incrementing it	N/A	N/A	for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ )	for ( it = m. begin ( ) ; it!= m. end ( ) - 1 ; it ++ )
11725	increment j	N/A	N/A	++ j ;	j ++ ;
11726	if second element of it is s , break loop	N/A	N/A	if ( it -> second == s ) break ;	if ( it -> second == s ) break ;
11727	DUMMY	0.0	0.0	}	DUMMY
11728	print m [ ( j + n - 1 ) % 12 ] print newline	N/A	N/A	cout << m [ ( j + n - 1 ) % 12 ] << endl ;	cout << m [ ( j + n - 1 ) % 12 ] << endl ;
11729	DUMMY	0.0	0.0	}	DUMMY
11730	DUMMY	0.0	0.0	return 0;	DUMMY
11731	DUMMY	0.0	0.0	}	DUMMY
11732	DUMMY	0.0	0.0	int main() {	DUMMY
11733	let a be string	N/A	N/A	string a ;	string a ;
11734	s = integer	N/A	N/A	int s ;	int s ;
11735	read a and s	N/A	N/A	cin >> a >> s ;	cin >> a >> s ;
11736	declare integer variable d	N/A	N/A	int d ;	int d ;
11737	if a is equal to " January "	N/A	N/A	if ( a == " January " )	if ( a == " January " )
11738	set d to 1	N/A	N/A	d = 1 ;	d = 1 ;
11739	else if a is equal to " February "	N/A	N/A	else if ( a == " February " )	else if ( a == " February " )
11740	set value of d to 2	N/A	N/A	d = 2 ;	d = 2 ;
11741	else if a is equal to " March "	N/A	N/A	else if ( a == " March " )	else if ( a == " March " )
11742	set value of d to 3	N/A	N/A	d = 3 ;	d = 3 ;
11743	else if a is equal to " April "	N/A	N/A	else if ( a == " April " )	else if ( a == " April " )
11744	set value of d to 4	N/A	N/A	d = 4 ;	d = 4 ;
11745	else if a is equal to " May "	N/A	N/A	else if ( a == " May " )	else if ( a == " May " )
11746	set d to 5	N/A	N/A	d = 5 ;	d = 5 ;
11747	else if a is equal to " June "	N/A	N/A	else if ( a == " June " )	else if ( a == " June " )
11748	set value of d to 6	N/A	N/A	d = 6 ;	d = 6 ;
11749	else if a is equal to " July "	N/A	N/A	else if ( a == " July " )	else if ( a == " July " )
11750	set value of d to 7	N/A	N/A	d = 7 ;	d = 7 ;
11751	else if a is equal to " August "	N/A	N/A	else if ( a == " August " )	else if ( a == " August " )
11752	set value of d to 8	N/A	N/A	d = 8 ;	d = 8 ;
11753	else if a is equal to " September "	N/A	N/A	else if ( a == " September " )	else if ( a == " September " )
11754	set d to 9	N/A	N/A	d = 9 ;	d = 9 ;
11755	else if a is equal to " October "	N/A	N/A	else if ( a == " October " )	else if ( a == " October " )
11756	set d to 10	N/A	N/A	d = 10 ;	d = 10 ;
11757	else if a is equal to " November "	N/A	N/A	else if ( a == " November " )	else if ( a == " November " )
11758	d = 11	N/A	N/A	d = 11 ;	d = 11 ;
11759	else	N/A	N/A	else	else
11760	d = 12	N/A	N/A	d = 12 ;	d = 12 ;
11761	decrease d by one	N/A	N/A	d -- ;	d -- ;
11762	d = d + s	N/A	N/A	d = d + s ;	d += s ;
11763	d = d % 12	N/A	N/A	d = d % 12 ;	d %= 12 ;
11764	if d is equal to 0	N/A	N/A	if ( d == 0 )	if ( d == 0 )
11765	a = " January "	N/A	N/A	a = " January " ;	a = " January " ;
11766	else if d is equal to 1	N/A	N/A	else if ( d == 1 )	else if ( d == 1 )
11767	a = " February "	N/A	N/A	a = " February " ;	a = " February " ;
11768	else if d is equal to 2	N/A	N/A	else if ( d == 2 )	else if ( d == 2 )
11769	a = " March "	N/A	N/A	a = " March " ;	a = " March " ;
11770	else if d is equal to 3	N/A	N/A	else if ( d == 3 )	else if ( d == 3 )
11771	a = " April "	N/A	N/A	a = " April " ;	a = " April " ;
11772	else if d is equal to 4	N/A	N/A	else if ( d == 4 )	else if ( d == 4 )
11773	a = " May "	N/A	N/A	a = " May " ;	a = " May " ;
11774	else if d is equal to 5	N/A	N/A	else if ( d == 5 )	else if ( d == 5 )
11775	a = " June "	N/A	N/A	a = " June " ;	a = " June " ;
11776	else if d is equal to 6	N/A	N/A	else if ( d == 6 )	else if ( d == 6 )
11777	a = " July "	N/A	N/A	a = " July " ;	a = " July " ;
11778	else if d is equal to 7	N/A	N/A	else if ( d == 7 )	else if ( d == 7 )
11779	a = " August "	N/A	N/A	a = " August " ;	a = " August " ;
11780	else if d is equal to 8	N/A	N/A	else if ( d == 8 )	else if ( d == 8 )
11781	a = " September "	N/A	N/A	a = " September " ;	a = " September " ;
11782	else if d is equal to 9	N/A	N/A	else if ( d == 9 )	else if ( d == 9 )
11783	a = " October "	N/A	N/A	a = " October " ;	a = " October " ;
11784	else if d is equal to 10	N/A	N/A	else if ( d == 10 )	else if ( d == 10 )
11785	a = " November "	N/A	N/A	a = " November " ;	a = " November " ;
11786	else	N/A	N/A	else	else
11787	a = " December "	N/A	N/A	a = " December " ;	a = " December " ;
11788	print a and a new line	N/A	N/A	cout << a << endl ;	cout << a << endl ;
11789	DUMMY	0.0	0.0	}	DUMMY
11790	DUMMY	0.0	0.0	int main() {	DUMMY
11791	v is a vector of strings with 120 elements	N/A	N/A	vector < string > v ( 120 ) ;	vector < string > v ( 120 ) ;
11792	for integer i = 0 to 120 exclusive	N/A	N/A	for ( int i = 0 ; i < 120 ; i += 12 )	for ( int i = 0 ; i < 120 ; i ++ )
11793	v [ i ] = " January "	N/A	N/A	v [ i ] = " January " ;	v [ i ] = " January " ;
11794	v [ i + 1 ] = " February "	N/A	N/A	v [ i + 1 ] = " February " ;	v [ i + 1 ] = " February " ;
11795	v [ i + 2 ] = " March "	N/A	N/A	v [ i + 2 ] = " March " ;	v [ i + 2 ] = " March " ;
11796	v [ i + 3 ] = " April "	N/A	N/A	v [ i + 3 ] = " April " ;	v [ i + 3 ] = " April " ;
11797	v [ i + 4 ] = " May "	N/A	N/A	v [ i + 4 ] = " May " ;	v [ i + 4 ] = " May " ;
11798	v [ i + 5 ] = " June "	N/A	N/A	v [ i + 5 ] = " June " ;	v [ i + 5 ] = " June " ;
11799	v [ i + 6 ] = " July "	N/A	N/A	v [ i + 6 ] = " July " ;	v [ i + 6 ] = " July " ;
11800	v [ i + 7 ] = " August "	N/A	N/A	v [ i + 7 ] = " August " ;	v [ i + 7 ] = " August " ;
11801	v [ i + 8 ] = " September "	N/A	N/A	v [ i + 8 ] = " September " ;	v [ i + 8 ] = " September " ;
11802	v [ i + 9 ] = " October "	N/A	N/A	v [ i + 9 ] = " October " ;	v [ i + 9 ] = " October " ;
11803	v [ i + 10 ] = " November "	N/A	N/A	v [ i + 10 ] = " November " ;	v [ i + 10 ] = " November " ;
11804	v [ i + 11 ] = " December "	N/A	N/A	v [ i + 11 ] = " December " ;	v [ i + 11 ] = " December " ;
11805	DUMMY	0.0	0.0	}	DUMMY
11806	x = string	N/A	N/A	string x ;	string x ;
11807	read x	N/A	N/A	cin >> x ;	cin >> x ;
11808	declare integers n and z	N/A	N/A	int n , z ;	int n, z ;
11809	read n	N/A	N/A	cin >> n ;	cin >> n ;
11810	for i = 0 to 120 exclusive	N/A	N/A	for ( int i = 0 ; i < 120 ; i ++ )	for ( int i = 0 ; i < 120 ; i ++ )
11811	if v [ i ] = x	N/A	N/A	if ( v [ i ] == x )	if ( v [ i ] == x )
11812	assign value of i to the z	N/A	N/A	z = i ;	z = i ;
11813	break the loop	N/A	N/A	break ;	break ;
11814	DUMMY	0.0	0.0	}	DUMMY
11815	DUMMY	0.0	0.0	}	DUMMY
11816	print v [ z + n ] and a new line	N/A	N/A	cout << v [ z + n ] << endl ;	cout << v [ z + n ] << endl ;
11817	DUMMY	0.0	0.0	}	DUMMY
11818	let num be an array of integers of length 3005	N/A	N/A	int num [ 3005 ] ;	int num [ 3005 ] ;
11819	create a map from strings to integers with name ma	N/A	N/A	map < string , int > ma ;	map < string, int > ma ;
11820	set integer ans to 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
11821	boolean function is_prime with integer arguments u	N/A	N/A	bool is_prime ( int u ) ;	bool is_prime ( int u )
11822	DUMMY	0.0	0.0	int main() {	DUMMY
11823	s = string	N/A	N/A	string s ;	string s ;
11824	s = " January "	N/A	N/A	s = " January " ;	s = " January " ;
11825	ma [ s ] = 1	N/A	N/A	ma [ s ] = 1 ;	ma [ s ] = 1 ;
11826	s = " February "	N/A	N/A	s = " February " ;	s = " February " ;
11827	ma [ s ] = 2	N/A	N/A	ma [ s ] = 2 ;	ma [ s ] = 2 ;
11828	s = " March "	N/A	N/A	s = " March " ;	s = " March " ;
11829	ma [ s ] = 3	N/A	N/A	ma [ s ] = 3 ;	ma [ s ] = 3 ;
11830	s = " April "	N/A	N/A	s = " April " ;	s = " April " ;
11831	set value of ma [ s ] to 4	N/A	N/A	ma [ s ] = 4 ;	ma [ s ] = 4 ;
11832	s = " May "	N/A	N/A	s = " May " ;	s = " May " ;
11833	ma [ s ] = 5	N/A	N/A	ma [ s ] = 5 ;	ma [ s ] = 5 ;
11834	ma [ " June " ] = 6	N/A	N/A	ma [ " June " ] = 6 ;	ma [ " June " ] = 6 ;
11835	ma [ " July " ] = 7	N/A	N/A	ma [ " July " ] = 7 ;	ma [ " July " ] = 7 ;
11836	ma [ " August " ] = 8	N/A	N/A	ma [ " August " ] = 8 ;	ma [ " August " ] = 8 ;
11837	ma [ " September " ] = 9	N/A	N/A	ma [ " September " ] = 9 ;	ma [ " September " ] = 9 ;
11838	ma [ " October " ] = 10	N/A	N/A	ma [ " October " ] = 10 ;	ma [ " October " ] = 10 ;
11839	ma [ " November " ] = 11	N/A	N/A	ma [ " November " ] = 11 ;	ma [ " November " ] = 11 ;
11840	ma [ " December " ] = 12	N/A	N/A	ma [ " December " ] = 12 ;	ma [ " December " ] = 12 ;
11841	n = integer	N/A	N/A	int n ;	int n ;
11842	read s	N/A	N/A	cin >> s ;	cin >> s ;
11843	read n	N/A	N/A	cin >> n ;	cin >> n ;
11844	if n % 12 = 0	N/A	N/A	if ( n % 12 == 0 )	if ( n % 12 == 0 )
11845	print s and a new line	N/A	N/A	cout << s << endl ;	cout << s << endl ;
11846	else	N/A	N/A	else	else
11847	set integer a to ma [ s ]	N/A	N/A	int a = ma [ s ] ;	int a = ma [ s ] ;
11848	increase n by a	N/A	N/A	n += a ;	n += a ;
11849	if n % 12 = 1 , print " January " and a new line	N/A	N/A	if ( n % 12 == 1 ) cout << " January " << endl ;	if ( n % 12 == 1 ) cout << " January " << endl ;
11850	if n % 12 = 2 , print " February " and a new line	N/A	N/A	if ( n % 12 == 2 ) cout << " February " << endl ;	if ( n % 12 == 2 ) cout << " February " << endl ;
11851	if n % 12 = 3 , print " March " and a new line	N/A	N/A	if ( n % 12 == 3 ) cout << " March " << endl ;	if ( n % 12 == 3 ) cout << " March " << endl ;
11852	if n % 12 = 4 , print " April " and a new line	N/A	N/A	if ( n % 12 == 4 ) cout << " April " << endl ;	if ( n % 12 == 4 ) { cout << " April " << endl ; }
11853	if n % 12 = 5 , print " May " and a new line	N/A	N/A	if ( n % 12 == 5 ) cout << " May " << endl ;	if ( n % 12 == 5 ) { cout << " May " << endl ; }
11854	if n % 12 = 6 , print " June " and a new line	N/A	N/A	if ( n % 12 == 6 ) cout << " June " << endl ;	if ( n % 12 == 6 ) { cout << " June " << endl ; }
11855	if n % 12 = 7 , print " July " and a new line	N/A	N/A	if ( n % 12 == 7 ) cout << " July " << endl ;	if ( n % 12 == 7 ) { cout << " July " << endl ; }
11856	if n % 12 = 8 , print " August " and a new line	N/A	N/A	if ( n % 12 == 8 ) cout << " August " << endl ;	if ( n % 12 == 8 ) { cout << " August " << endl ; }
11857	if n % 12 = 9 , print " September " and a new line	N/A	N/A	if ( n % 12 == 9 ) cout << " September " << endl ;	if ( n % 12 == 9 ) { cout << " September " << endl ; }
11858	if n % 12 = 10 , print " October " and a new line	N/A	N/A	if ( n % 12 == 10 ) cout << " October " << endl ;	if ( n % 12 == 10 ) { cout << " October " << endl ; }
11859	if n % 12 = 11 , print " November " and a new line	N/A	N/A	if ( n % 12 == 11 ) cout << " November " << endl ;	if ( n % 12 == 11 ) { cout << " November " << endl ; }
11860	if n % 12 = 0 , print " December " and a new line	N/A	N/A	if ( n % 12 == 0 ) cout << " December " << endl ;	if ( n % 12 == 0 ) { cout << " December " << endl ; }
11861	DUMMY	0.0	0.0	}	DUMMY
11862	DUMMY	0.0	0.0	}	DUMMY
11863	declare inline nxt with no arguments , returning long long	N/A	N/A	inline long long nxt ( )	inline long long nxt ( )
11864	create long longs _x , _tmp with _x = 0 , _tmp = 1	N/A	N/A	long long _x = 0 , _tmp = 1 ;	long long _x = 0, _tmp = 1 ;
11865	create character _tc with _tc = read character	N/A	N/A	char _tc = getchar ( ) ;	char _tc = getchar ( ) ;
11866	while _tc is less than ' 0 ' or _tc is greater than ' 9 ' and _tc is not ' - ' , set _tc to read character	N/A	N/A	while ( ( _tc < ' 0 ' || _tc > ' 9 ' ) && _tc != ' - ' ) _tc = getchar ( ) ;	while ( _tc <'0'|| _tc >'9'&& _tc!='-') _tc = getchar ( ) ;
11867	if _tc is ' - ' , set _tc to read character , set _tmp to - 1	N/A	N/A	if ( _tc == ' - ' ) _tc = getchar ( ) , _tmp = - 1 ;	if ( _tc =='-') _tc = getchar ( ), _tmp = - 1 ;
11868	while _tc is greater than or equal to ' 0 ' and _tc is less than or equal to ' 9 ' , set _x to _x * 10 , increment _x by ( _tc - ' 0 ' ) , set _tc to read character	N/A	N/A	while ( _tc >= ' 0 ' && _tc <= ' 9 ' ) _x *= 10 , _x += ( _tc - ' 0 ' ) , _tc = getchar ( ) ;	while ( _tc >='0'&& _tc <='9') _x = _x * 10, _x += _tc -'1 ', _tc = getchar ( ) ;
11869	return _x * _tmp from function	N/A	N/A	return _x * _tmp ;	return _x * _tmp ;
11870	DUMMY	0.0	0.0	}	DUMMY
11871	DUMMY	0.0	0.0	int main() {	DUMMY
11872	create string array s with size 170	N/A	N/A	string s [ 170 ] ;	string s [ 170 ] ;
11873	for i = 1 to 160 inclusive	N/A	N/A	for ( int i = 1 ; i <= 160 ; ++ i )	for ( int i = 1 ; i <= 160 ; i ++ )
11874	if ( i % 12 = = 1 ) s [ i ] = " January " ;	N/A	N/A	if ( i % 12 == 1 ) s [ i ] = " January " ;	if ( i % l == 1 ) s [ i ] = " January " ;
11875	if ( i % 12 = = 2 ) s [ i ] = " February " ;	N/A	N/A	if ( i % 12 == 2 ) s [ i ] = " February " ;	if ( i % l2 == 2 ) s [ i ] = " February " ;
11876	if ( i % 12 = = 3 ) s [ i ] = " March " ;	N/A	N/A	if ( i % 12 == 3 ) s [ i ] = " March " ;	if ( i % l2 == 3 ) s [ i ] = " March " ;
11877	if ( i % 12 = = 4 ) s [ i ] = " April " ;	N/A	N/A	if ( i % 12 == 4 ) s [ i ] = " April " ;	if ( i % l2 == 4 ) s [ i ] = " April " ;
11878	if ( i % 12 = = 5 ) s [ i ] = " May " ;	N/A	N/A	if ( i % 12 == 5 ) s [ i ] = " May " ;	if ( i % 12 == 5 ) s [ i ] = " May " ;
11879	if ( i % 12 = = 6 ) s [ i ] = " June " ;	N/A	N/A	if ( i % 12 == 6 ) s [ i ] = " June " ;	if ( i % l2 == 6 ) s [ i ] = " June " ;
11880	if ( i % 12 = = 7 ) s [ i ] = " July " ;	N/A	N/A	if ( i % 12 == 7 ) s [ i ] = " July " ;	if ( i % l2 == 7 ) s [ i ] = " July " ;
11881	if ( i % 12 = = 8 ) s [ i ] = " August " ;	N/A	N/A	if ( i % 12 == 8 ) s [ i ] = " August " ;	if ( i % l2 == 8 ) s [ i ] = " August " ;
11882	if ( i % 12 = = 9 ) s [ i ] = " September " ;	N/A	N/A	if ( i % 12 == 9 ) s [ i ] = " September " ;	if ( i % l2 == 9 ) s [ i ] = " September " ;
11883	if ( i % 12 = = 10 ) s [ i ] = " October " ;	N/A	N/A	if ( i % 12 == 10 ) s [ i ] = " October " ;	if ( i % l2 == 10 ) s [ i ] = " October " ;
11884	if ( i % 12 = = 11 ) s [ i ] = " November " ;	N/A	N/A	if ( i % 12 == 11 ) s [ i ] = " November " ;	if ( i % l2 == 11 ) s [ i ] = " November " ;
11885	if ( i % 12 = = 0 ) s [ i ] = " December " ;	N/A	N/A	if ( i % 12 == 0 ) s [ i ] = " December " ;	if ( i % l2 == 0 ) s [ i ] = " December " ;
11886	DUMMY	0.0	0.0	}	DUMMY
11887	create string str	N/A	N/A	string str ;	string str ;
11888	create integer n	N/A	N/A	int n ;	int n ;
11889	read str read n	N/A	N/A	cin >> str >> n ;	cin >> str >> n ;
11890	for i = 1 to 12 inclusive	N/A	N/A	for ( int i = 1 ; i <= 12 ; ++ i )	for ( int i = 1 ; i <= 12 ; i ++ )
11891	if s [ i ] is str , print s [ i + n ] print newline	N/A	N/A	if ( s [ i ] == str ) { cout << s [ i + n ] << endl ; }	if ( str == str ) cout << s [ i + n ] << endl ;
11892	DUMMY	0.0	0.0	}	DUMMY
11893	DUMMY	0.0	0.0	}	DUMMY
11894	declare map from integer to string m	N/A	N/A	map < int , string > m ;	map < int, string > m ;
11895	declare map iterator from integer to string it	N/A	N/A	map < int , string > :: iterator it ;	map < int, string > :: iterator it ;
11896	DUMMY	0.0	0.0	int main() {	DUMMY
11897	declare character array s size 20	N/A	N/A	char s [ 20 ] ;	char s [ 20 ] ;
11898	declare integer n	N/A	N/A	int n ;	int n ;
11899	let m [ 0 ] be " January "	N/A	N/A	m [ 0 ] = " January " ;	m [ 0 ] = " January " ;
11900	let m [ 1 ] be " February "	N/A	N/A	m [ 1 ] = " February " ;	m [ 1 ] = " February " ;
11901	let m [ 2 ] be " March "	N/A	N/A	m [ 2 ] = " March " ;	m [ 2 ] = " March " ;
11902	let m [ 3 ] be " April "	N/A	N/A	m [ 3 ] = " April " ;	m [ 3 ] = " April " ;
11903	let m [ 4 ] be " May "	N/A	N/A	m [ 4 ] = " May " ;	m [ 4 ] = " May " ;
11904	let m [ 5 ] be " June "	N/A	N/A	m [ 5 ] = " June " ;	m [ 5 ] = " June " ;
11905	let m [ 6 ] be " July "	N/A	N/A	m [ 6 ] = " July " ;	m [ 6 ] = " July " ;
11906	let m [ 7 ] be " August "	N/A	N/A	m [ 7 ] = " August " ;	m [ 7 ] = " August " ;
11907	let m [ 8 ] be " September "	N/A	N/A	m [ 8 ] = " September " ;	m [ 8 ] = " September " ;
11908	let m [ 9 ] be " October "	N/A	N/A	m [ 9 ] = " October " ;	m [ 9 ] = " October " ;
11909	let m [ 10 ] be " November "	N/A	N/A	m [ 10 ] = " November " ;	m [ 10 ] = " November " ;
11910	let m [ 11 ] be " December "	N/A	N/A	m [ 11 ] = " December " ;	m [ 11 ] = " December " ;
11911	while read s , n	N/A	N/A	while ( cin >> s >> n )	while ( cin >> s >> n )
11912	declare integer j = 0	N/A	N/A	int j = 0 ;	int j = 0 ;
11913	for it = beginning of m to it is not end of m , incrementing it	N/A	N/A	for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ )	for ( it = m. begin ( ) ; it!= m. end ( ) - 1 ; it ++ )
11914	increment j	N/A	N/A	++ j ;	j ++ ;
11915	if second element of it is s , end loop	N/A	N/A	if ( it -> second == s ) break ;	if ( it -> second == s ) break ;
11916	DUMMY	0.0	0.0	}	DUMMY
11917	print m [ ( j + n - 1 ) % 12 ] , newline	N/A	N/A	cout << m [ ( j + n - 1 ) % 12 ] << endl ;	cout << m [ ( j + n - 1 ) % 12 ] << endl ;
11918	DUMMY	0.0	0.0	}	DUMMY
11919	DUMMY	0.0	0.0	return 0;	DUMMY
11920	DUMMY	0.0	0.0	}	DUMMY
11921	DUMMY	0.0	0.0	int main() {	DUMMY
11922	declare integers n , m , a , b , rub , with rub = 0	N/A	N/A	int n , m , a , b , rub = 0 ;	int n, m, a, b, rub = 0 ;
11923	read n , m , a and b	N/A	N/A	cin >> n >> m >> a >> b ;	cin >> n >> m >> a >> b ;
11924	while n is greater than 0	N/A	N/A	while ( n > 0 )	while ( n > 0 )
11925	if n is less than m	N/A	N/A	if ( n < m )	if ( n < m )
11926	set integer flag to n * a	N/A	N/A	int flag = n * a ;	int flag = n * a ;
11927	if flag is less than b	N/A	N/A	if ( flag < b )	if ( flag < b )
11928	increase rub by flag	N/A	N/A	rub += flag ;	rub += flag ;
11929	n = 0	N/A	N/A	n = 0 ;	n = 0 ;
11930	else	N/A	N/A	else	else
11931	increase rub by b	N/A	N/A	rub += b ;	rub += b ;
11932	decrease n by m	N/A	N/A	n -= m ;	n -= m ;
11933	DUMMY	0.0	0.0	}	DUMMY
11934	else if ( a * m ) is greater than b	N/A	N/A	else if ( ( a * m ) > b )	else if ( ( a * m ) > b )
11935	decrease n by m	N/A	N/A	n -= m ;	n -= m ;
11936	increase rub by b	N/A	N/A	rub += b ;	rub += b ;
11937	else	N/A	N/A	else	else
11938	increase rub by n * a	N/A	N/A	rub += n * a ;	rub += n * a ;
11939	assign value of 0 to the n	N/A	N/A	n = 0 ;	n = 0 ;
11940	DUMMY	0.0	0.0	}	DUMMY
11941	DUMMY	0.0	0.0	}	DUMMY
11942	print rub and " \ n "	N/A	N/A	cout << rub << " \n " ;	cout << rub << " \n " ;
11943	DUMMY	0.0	0.0	}	DUMMY
11944	DUMMY	0.0	0.0	int main() {	DUMMY
11945	create integers n , m , a , b , r , d , cost with cost = 0	N/A	N/A	int n , m , a , b , r , d , cost = 0 ;	int n, m, a, b, r, d, cost = 0 ;
11946	read n read m read a read b	N/A	N/A	cin >> n >> m >> a >> b ;	cin >> n >> m >> a >> b ;
11947	set r to n % m	N/A	N/A	r = n % m ;	r = n % m ;
11948	set d to n / m	N/A	N/A	d = n / m ;	d = n / m ;
11949	if m is greater than n	N/A	N/A	if ( m > n )	if ( m > n )
11950	if b is less than a * b	N/A	N/A	if ( b < a * n )	if ( b < a * b )
11951	print b print newline	N/A	N/A	cout << b << endl ;	cout << b << endl ;
11952	DUMMY	0.0	0.0	return 0;	DUMMY
11953	else	N/A	N/A	else	else
11954	print a * n print newline	N/A	N/A	cout << a * n << endl ;	cout << a * n << endl ;
11955	DUMMY	0.0	0.0	return 0;	DUMMY
11956	DUMMY	0.0	0.0	}	DUMMY
11957	DUMMY	0.0	0.0	}	DUMMY
11958	if d * b is less than a * ( n - r )	N/A	N/A	if ( d * b < a * ( n - r ) )	if ( d * b < a * ( n - r ) )
11959	increment cost by d * b	N/A	N/A	cost += ( d * b ) ;	cost += d * b ;
11960	if r * a is less than b	N/A	N/A	if ( r * a < b )	if ( r * a < b )
11961	increment cost by r * a	N/A	N/A	cost += ( r * a ) ;	cost += r * a ;
11962	else	N/A	N/A	else	else
11963	increment cost by b	N/A	N/A	cost += b ;	cost += b ;
11964	DUMMY	0.0	0.0	}	DUMMY
11965	else	N/A	N/A	else	else
11966	increment cost by a * n	N/A	N/A	cost += ( a * n ) ;	cost += a * n ;
11967	DUMMY	0.0	0.0	}	DUMMY
11968	print cost print newline	N/A	N/A	cout << cost << endl ;	cout << cost << endl ;
11969	DUMMY	0.0	0.0	return 0;	DUMMY
11970	DUMMY	0.0	0.0	}	DUMMY
11971	DUMMY	0.0	0.0	int main() {	DUMMY
11972	n , m , a , b = integers	N/A	N/A	int n , m , a , b ;	int n, m, a, b ;
11973	Read n , m , a , b	N/A	N/A	cin >> n >> m >> a >> b ;	cin >> n >> m >> a >> b ;
11974	x = integer , set to ( n / m ) * b + ( n % m ) * a	N/A	N/A	int x = ( n / m ) * b + ( n % m ) * a ;	int x = ( n / m ) * b + ( n % m ) + a ;
11975	y = integer , set to ( n / m + 1 ) * b	N/A	N/A	int y = ( n / m + 1 ) * b ;	int y = ( n / m + 1 ) * b ;
11976	z = integer , set to n * a	N/A	N/A	int z = n * a ;	int z = n * a ;
11977	print minimum value of x and minimum value of y and z and a new line	N/A	N/A	cout << min ( x , min ( y , z ) ) << endl ;	cout << min ( x, min ( y, z ) ) << endl ;
11978	DUMMY	0.0	0.0	}	DUMMY
11979	DUMMY	0.0	0.0	int main() {	DUMMY
11980	create integer TESTS with TESTS = 1	N/A	N/A	int TESTS = 1 ;	int TESTS = 1 ;
11981	while decrementing TESTS is true	N/A	N/A	while ( TESTS -- )	while ( TESTS -- )
11982	create long longs n , m , a , b	N/A	N/A	long long n , m , a , b ;	long long n, m, a, b ;
11983	read n read m read a read b	N/A	N/A	cin >> n >> m >> a >> b ;	cin >> n >> m >> a >> b ;
11984	create long long integer vector v	N/A	N/A	vector < long long int > v ;	vector < long long int > v ;
11985	if b is greater than or equal to m * a	N/A	N/A	if ( b >= m * a )	if ( b >= m * a )
11986	read n * a read ' \ n '	N/A	N/A	cout << n * a << ' \n ' ;	cin >> n * a >>'\n';
11987	else	N/A	N/A	else	else
11988	create long long c with c = n / m	N/A	N/A	long long c = n / m ;	long long c = n / m ;
11989	create long long ans with ans = c * b	N/A	N/A	long long ans = c * b ;	long long ans = c * b ;
11990	decrement n by c * m	N/A	N/A	n -= c * m ;	n -= c * m ;
11991	increment ans by minimum of b and a * n	N/A	N/A	ans += min ( b , a * n ) ;	ans += min ( b, a * n ) ;
11992	print ans print ' \ n '	N/A	N/A	cout << ans << ' \n ' ;	cout << ans <<'\n';
11993	DUMMY	0.0	0.0	}	DUMMY
11994	DUMMY	0.0	0.0	}	DUMMY
11995	DUMMY	0.0	0.0	return 0;	DUMMY
11996	DUMMY	0.0	0.0	}	DUMMY
11997	DUMMY	0.0	0.0	int main() {	DUMMY
11998	n , m , a , b are long long	N/A	N/A	long long n , m , a , b ;	long long n, m, a, b ;
11999	read n , m , a , b	N/A	N/A	cin >> n >> m >> a >> b ;	cin >> n >> m >> a >> b ;
12000	if m * a < b	N/A	N/A	if ( m * a < b )	if ( m * a < b )
12001	print n * a	N/A	N/A	cout << n * a << endl ;	cout << n * a << endl ;
12002	else	N/A	N/A	else	else
12003	price = n / m * b + min ( n modulo m * a , b )	N/A	N/A	long long price = ( n / m ) * b + min ( ( n % m ) * a , b ) ;	price = n / m * b + min ( n % m * a, b ) ;
12004	print price	N/A	N/A	cout << price << endl ;	cout << price << endl ;
12005	DUMMY	0.0	0.0	}	DUMMY
12006	DUMMY	0.0	0.0	return 0;	DUMMY
12007	DUMMY	0.0	0.0	}	DUMMY
12008	DUMMY	0.0	0.0	int main() {	DUMMY
12009	create integers n , m , a , b	N/A	N/A	int n , m , a , b ;	int n, m, a, b ;
12010	read n read m read a read b	N/A	N/A	cin >> n >> m >> a >> b ;	cin >> n >> m >> a >> b ;
12011	if m * a is greater than b	N/A	N/A	if ( m * a > b )	if ( m * a > b )
12012	print minimum of ( ( n / m ) * b + ( n % m ) * a and ( ( n / m ) + 1 ) * b ) print newline	N/A	N/A	cout << min ( ( n / m ) * b + ( n % m ) * a , ( ( n / m ) + 1 ) * b ) << endl ;	cout << min ( ( ( n / m ) * b + ( n % m ) + a, ( ( long long ) ( ( double ) ( m ) ) + 1 ) * ( b ) ) << endl ;
12013	DUMMY	0.0	0.0	return 0;	DUMMY
12014	DUMMY	0.0	0.0	}	DUMMY
12015	print minimum of n * a and ( ( n / m ) + 1 ) * b print newline	N/A	N/A	cout << min ( n * a , ( ( n / m ) + 1 ) * b ) << endl ;	cout << min ( n * a, ( ( n / m ) + 1 ) * b ) << endl ;
12016	DUMMY	0.0	0.0	return 0;	DUMMY
12017	DUMMY	0.0	0.0	}	DUMMY
12018	DUMMY	0.0	0.0	int main() {	DUMMY
12019	create integers n , m	N/A	N/A	int n , m ;	int n, m ;
12020	create floats a , b	N/A	N/A	float a , b ;	float a, b ;
12021	read n read m read a read b	N/A	N/A	cin >> n >> m >> a >> b ;	cin >> n >> m >> a >> b ;
12022	create integer sum with sum = 0	N/A	N/A	int sum = 0 ;	int sum = 0 ;
12023	if ( n % m ) * a is less than or equal to b	N/A	N/A	if ( ( n % m ) * a <= b )	if ( ( n % m ) * a <= b )
12024	increment sum by n / m * b + ( n % m ) * a	N/A	N/A	sum += n / m * b + ( n % m ) * a ;	sum += n / m * b + ( n % m ) * a ;
12025	else	N/A	N/A	else	else
12026	set sum to ( n / m + 1 ) * b	N/A	N/A	sum = ( n / m + 1 ) * b ;	sum = ( n / m + 1 ) * b ;
12027	if sum is greater than n * a , set sum to n * a	N/A	N/A	if ( sum > n * a ) sum = n * a ;	if ( sum > n * a ) sum = n * b ;
12028	print sum print newline	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
12029	DUMMY	0.0	0.0	}	DUMMY
12030	DUMMY	0.0	0.0	int main() {	DUMMY
12031	create long long integers n , m , a , b	N/A	N/A	long long int n , m , a , b ;	long long int n, m, a, b ;
12032	read n read m read a read b	N/A	N/A	cin >> n >> m >> a >> b ;	cin >> n >> m >> a >> b ;
12033	if m * a is less than b	N/A	N/A	if ( m * a < b )	if ( m * a < b )
12034	print n * a print newline	N/A	N/A	cout << n * a << endl ;	cout << n * a << endl ;
12035	else	N/A	N/A	else	else
12036	create long long integer price with price = ( n / m ) * b + minimum of ( n % m ) * b and b	N/A	N/A	long long int price = ( n / m ) * b + min ( ( n % m ) * a , b ) ;	long long int price = ( n / m ) * b + min ( n % m, b ) ;
12037	print price print newline	N/A	N/A	cout << price << endl ;	cout << price << endl ;
12038	DUMMY	0.0	0.0	}	DUMMY
12039	DUMMY	0.0	0.0	return 0;	DUMMY
12040	DUMMY	0.0	0.0	}	DUMMY
12041	DUMMY	0.0	0.0	int main() {	DUMMY
12042	declare long longs n , m , a and b	N/A	N/A	long long n , m , a , b ;	long long n, m, a, b ;
12043	read n , m , a and b	N/A	N/A	cin >> n >> m >> a >> b ;	cin >> n >> m >> a >> b ;
12044	if m * a is less than b	N/A	N/A	if ( m * a < b )	if ( m * a < b )
12045	print n * a and a new line	N/A	N/A	cout << n * a << endl ;	cout << n * a << endl ;
12046	else	N/A	N/A	else	else
12047	create variable price of type long long = ( n / m ) * b + min of ( n % m ) * a and b	N/A	N/A	long long price = ( n / m ) * b + min ( ( n % m ) * a , b ) ;	long long price = ( n / m ) * b + min ( n % m, * a, b ) ;
12048	print price and a new line	N/A	N/A	cout << price << endl ;	cout << price << endl ;
12049	DUMMY	0.0	0.0	}	DUMMY
12050	DUMMY	0.0	0.0	return 0;	DUMMY
12051	DUMMY	0.0	0.0	}	DUMMY
12052	DUMMY	0.0	0.0	int main() {	DUMMY
12053	create integers m , n , a , b and cost	N/A	N/A	int m , n , a , b , cost ;	int m, n, a, b, cost ;
12054	read n , m , a and b	N/A	N/A	cin >> n >> m >> a >> b ;	cin >> n >> m >> a >> b ;
12055	if a is greater than b / m	N/A	N/A	if ( a > ( b / m ) )	if ( a > b / m )
12056	cost = ( n / m ) * b	N/A	N/A	cost = ( n / m ) * b ;	cost = ( n / m ) * b ;
12057	if a * ( n % m ) is less than b	N/A	N/A	if ( a * ( n % m ) < b )	if ( a * ( n % m ) < b )
12058	add a * ( n % m ) to cost	N/A	N/A	cost += a * ( n % m ) ;	cost += a * ( n % m ) ;
12059	else	N/A	N/A	else	else
12060	increase cost by b	N/A	N/A	cost += b ;	cost += b ;
12061	else	N/A	N/A	else	else
12062	cost = n * a	N/A	N/A	cost = n * a ;	cost = n * a ;
12063	print cost and a new line	N/A	N/A	cout << cost << endl ;	cout << cost << endl ;
12064	DUMMY	0.0	0.0	return 0;	DUMMY
12065	DUMMY	0.0	0.0	}	DUMMY
12066	DUMMY	0.0	0.0	int main() {	DUMMY
12067	create integers n , m , a , b	N/A	N/A	int n , m , a , b ;	int n, m, a, b ;
12068	read n , m , a , b	N/A	N/A	cin >> n >> m >> a >> b ;	cin >> n >> m >> a >> b ;
12069	create integer sum with sum = a * n	N/A	N/A	int sum = a * n ;	int sum = a * n ;
12070	create integer msum with msum = b	N/A	N/A	int msum = b ;	int msum = b ;
12071	create integer rides with rides = m	N/A	N/A	int rides = m ;	int rides = m ;
12072	do the following while rides less than or equal to n	N/A	N/A	while ( rides <= n )	while ( rides <= n )
12073	add b to msum	N/A	N/A	msum += b ;	msum += b ;
12074	add m to rides	N/A	N/A	rides += m ;	rides += m ;
12075	DUMMY	0.0	0.0	}	DUMMY
12076	subtract b from msum	N/A	N/A	msum -= b ;	msum -= b ;
12077	subtract m from rides	N/A	N/A	rides -= m ;	rides -= m ;
12078	if sum less than or equal to msum then do the following	N/A	N/A	if ( sum <= msum )	if ( sum <= msum )
12079	print sum and a new line	N/A	N/A	cout << sum << " \n " ;	cout << sum << endl ;
12080	else do the following	N/A	N/A	else	else
12081	if rides less than n	N/A	N/A	if ( rides < n )	if ( rides < n )
12082	create integer newsum with newsum = msum + ( n - rides ) * a	N/A	N/A	int newsum = msum + ( n - rides ) * a ;	int newsum = msum + ( n - rides ) * a ;
12083	add b to msum	N/A	N/A	msum += b ;	msum += b ;
12084	add m to rides	N/A	N/A	rides += m ;	rides += m ;
12085	create numsum1 with newsum1 = msum	N/A	N/A	int newsum1 = msum ;	int newsum1 = msum ;
12086	if newsum1 less than or equal to newsum then do the following	N/A	N/A	if ( newsum1 <= newsum )	if ( newsum1 <= newsum )
12087	print newsum1 and a new line	N/A	N/A	cout << newsum1 << endl ;	cout << newsum1 << endl ;
12088	else do the following	N/A	N/A	else	else
12089	print newsum and a new line	N/A	N/A	cout << newsum << endl ;	cout << newsum << endl ;
12090	else if rides greater than n then do the following	N/A	N/A	else if ( rides > n )	else if ( rides > n )
12091	create integer newsum with newsum = msum + ( n - rides ) * a	N/A	N/A	int newsum = msum + ( n - rides ) * a ;	int newsum = msum + ( n - rides ) * a ;
12092	add b to msum	N/A	N/A	msum += b ;	msum += b ;
12093	add m to rides	N/A	N/A	rides += m ;	rides += m ;
12094	create newsum1 with newsum1 = msum	N/A	N/A	int newsum1 = msum ;	int newsum1 = msum ;
12095	if newsum1 less than or equal to newsum then do the following	N/A	N/A	if ( newsum1 <= newsum )	if ( newsum1 <= newsum )
12096	print newsum1 and a new line	N/A	N/A	cout << newsum1 << endl ;	cout << newsum1 << endl ;
12097	else do the following	N/A	N/A	else	else
12098	print newsum and a new line	N/A	N/A	cout << newsum << endl ;	cout << newsum << endl ;
12099	else do the following	N/A	N/A	else	else
12100	print msum and a new line	N/A	N/A	cout << msum << " \n " ;	cout << msum << endl ;
12101	DUMMY	0.0	0.0	}	DUMMY
12102	DUMMY	0.0	0.0	}	DUMMY
12103	DUMMY	0.0	0.0	}	DUMMY
12104	DUMMY	0.0	0.0	int main() {	DUMMY
12105	n and m = integers with m = 2	N/A	N/A	int n , m = 2 ;	int n, m = 2 ;
12106	read n	N/A	N/A	cin >> n ;	cin >> n ;
12107	print m	N/A	N/A	cout << m ;	cout << m << endl ;
12108	for i = 1 to n - 1 exclusive	N/A	N/A	for ( int i = 1 ; i < n - 1 ; i ++ )	for ( int i = 1 ; i < n - 1 ; ++ i )
12109	increase m by i + 1	N/A	N/A	m += ( i + 1 ) ;	m += i + 1 ;
12110	if m % n is equal to 0	N/A	N/A	if ( m % n == 0 )	if ( m % n == 0 )
12111	print " " and n	N/A	N/A	cout << " " << n ;	cout << " " << n << endl ;
12112	else	N/A	N/A	else	else
12113	print " " and m % n	N/A	N/A	cout << " " << m % n ;	cout << " " << m % n << endl ;
12114	DUMMY	0.0	0.0	}	DUMMY
12115	print new line	N/A	N/A	cout << endl ;	cout << endl ;
12116	DUMMY	0.0	0.0	return 0;	DUMMY
12117	DUMMY	0.0	0.0	}	DUMMY
12118	DUMMY	0.0	0.0	int main() {	DUMMY
12119	create integers n , m with m = 2	N/A	N/A	int n , m = 2 ;	int n, m = 2 ;
12120	read n	N/A	N/A	cin >> n ;	cin >> n ;
12121	print m	N/A	N/A	cout << m ;	cout << m << endl ;
12122	for i = 1 to n - 1 exclusive	N/A	N/A	for ( int i = 1 ; i < n - 1 ; i ++ )	for ( int i = 1 ; i < n - 1 ; ++ i )
12123	increment m by i + 1	N/A	N/A	m += ( i + 1 ) ;	m += i + 1 ;
12124	if m % n is 0	N/A	N/A	if ( m % n == 0 )	if ( m % n == 0 )
12125	print " " print n	N/A	N/A	cout << " " << n ;	cout << " " << n << endl ;
12126	else	N/A	N/A	else	else
12127	print " " print m % n	N/A	N/A	cout << " " << m % n ;	cout << " " << m % n << endl ;
12128	DUMMY	0.0	0.0	}	DUMMY
12129	print newline	N/A	N/A	cout << endl ;	cout << endl ;
12130	DUMMY	0.0	0.0	return 0;	DUMMY
12131	DUMMY	0.0	0.0	}	DUMMY
12132	DUMMY	0.0	0.0	int main() {	DUMMY
12133	n = integer	N/A	N/A	int n ;	int n ;
12134	read n	N/A	N/A	cin >> n ;	cin >> n ;
12135	set integer cur to 0	N/A	N/A	int cur = 0 ;	int cur = 0 ;
12136	for integer i = 1 to n exclusive	N/A	N/A	for ( int i = 1 ; i < n ; ++ i )	for ( int i = 1 ; i < n ; i ++ )
12137	if i is greater than 1 print whitespace	N/A	N/A	if ( i > 1 ) cout << " " ;	if ( i > 1 ) cout << " whitespace " << endl ;
12138	increase cur by i	N/A	N/A	cur += i ;	cur += i ;
12139	set cur to remainder of division of cur by n	N/A	N/A	cur %= n ;	cur = cur % n ;
12140	print cur + 1	N/A	N/A	cout << cur + 1 ;	cout << cur + 1 << endl ;
12141	DUMMY	0.0	0.0	}	DUMMY
12142	print new line	N/A	N/A	cout << endl ;	cout << endl ;
12143	DUMMY	0.0	0.0	}	DUMMY
12144	DUMMY	0.0	0.0	int main() {	DUMMY
12145	create integers n , i , create integer array a with size 200	N/A	N/A	int n , a [ 200 ] , i ;	int n, i, a [ 200 ] ;
12146	read n	N/A	N/A	cin >> n ;	cin >> n ;
12147	set a [ 0 ] to 1	N/A	N/A	a [ 0 ] = 1 ;	a [ 0 ] = 1 ;
12148	for i = 1 to n - 1 inclusive	N/A	N/A	for ( i = 1 ; i <= n - 1 ; i ++ )	for ( i = 1 ; i <= n - 1 ; ++ i )
12149	set a [ i ] to ( a [ i - 1 ] + i ) % n	N/A	N/A	a [ i ] = ( a [ i - 1 ] + i ) % n ;	a [ i ] = ( a [ i - 1 ] + i ) % n ;
12150	if a [ i ] is 0 , set a [ i ] to n	N/A	N/A	if ( a [ i ] == 0 ) a [ i ] = n ;	if ( a [ i ] == 0 ) a [ j ] = n ;
12151	DUMMY	0.0	0.0	}	DUMMY
12152	for i = 1 to n - 1 exclusive , print a [ i ] print " "	N/A	N/A	for ( i = 1 ; i < n - 1 ; i ++ ) { cout << a [ i ] << " " ; }	for ( int i = 1 ; i < n - 1 ; ++ i ) cout << a [ i ] << " " ;
12153	print a [ n - 1 ] print newline	N/A	N/A	cout << a [ n - 1 ] << endl ;	cout << a [ n - 1 ] << endl ;
12154	DUMMY	0.0	0.0	return 0;	DUMMY
12155	DUMMY	0.0	0.0	}	DUMMY
12156	DUMMY	0.0	0.0	int main() {	DUMMY
12157	integers n and i , integer array a of size 200	N/A	N/A	int n , a [ 200 ] , i ;	int n, i, a [ 200 ] ;
12158	read n	N/A	N/A	cin >> n ;	cin >> n ;
12159	set value of a [ 0 ] to 1	N/A	N/A	a [ 0 ] = 1 ;	a [ 0 ] = 1 ;
12160	for i = 1 to n - 1 inclusive	N/A	N/A	for ( i = 1 ; i <= n - 1 ; i ++ )	for ( i = 1 ; i <= n - 1 ; ++ i )
12161	a [ i ] = ( a [ i - 1 ] + i ) % n	N/A	N/A	a [ i ] = ( a [ i - 1 ] + i ) % n ;	a [ i ] = ( a [ i - 1 ] + i ) % n ;
12162	set a [ i ] to n if a [ i ] is 0	N/A	N/A	if ( a [ i ] == 0 ) a [ i ] = n ;	if ( a [ i ] == 0 ) a [ j ] = n ;
12163	DUMMY	0.0	0.0	}	DUMMY
12164	for i = 1 to n - 1 exclusive print a [ i ] and " "	N/A	N/A	for ( i = 1 ; i < n - 1 ; i ++ ) { cout << a [ i ] << " " ; }	for ( int i = 1 ; i < n - 1 ; ++ i ) cout << a [ i ] << " " ;
12165	print a [ n - 1 ] and a new line	N/A	N/A	cout << a [ n - 1 ] << endl ;	cout << a [ n - 1 ] << endl ;
12166	DUMMY	0.0	0.0	return 0;	DUMMY
12167	DUMMY	0.0	0.0	}	DUMMY
12168	mp = map from long long to long long	N/A	N/A	map < long long , long long > mp ;	map < long long, long long > mp ;
12169	declare vector of strings called s	N/A	N/A	vector < string > s ;	vector < string > s ;
12170	declare vector of integers called v	N/A	N/A	vector < int > v ;	vector < int > v ;
12171	DUMMY	0.0	0.0	int main() {	DUMMY
12172	declare integer variable m	N/A	N/A	int m ;	int m ;
12173	read m	N/A	N/A	cin >> m ;	cin >> m ;
12174	let k , i and j be integers with k = m , i = 1 and j = 1	N/A	N/A	int k = m , i = 1 , j = 1 ;	int k = m, i = 1, j = 1 ;
12175	decrease m by one	N/A	N/A	m -- ;	m -- ;
12176	while m - -	N/A	N/A	while ( m -- )	while ( m -- )
12177	increase j by i	N/A	N/A	j += i ;	j += i ;
12178	integer ans = j % k	N/A	N/A	int ans = j % k ;	int ans = j % k ;
12179	if ans is equal to 0 set ans to j	N/A	N/A	if ( ans == 0 ) ans = j ;	if ( ans == 0 ) ans = j ;
12180	print ans	N/A	N/A	cout << ans ;	cout << ans << endl ;
12181	if m is equal to 0	N/A	N/A	if ( m == 0 )	if ( m == 0 )
12182	print new line	N/A	N/A	cout << endl ;	cout << endl ;
12183	else	N/A	N/A	else	else
12184	print " "	N/A	N/A	cout << " " ;	cout << " " ;
12185	increase i by one	N/A	N/A	i ++ ;	i ++ ;
12186	j % = k	N/A	N/A	j %= k ;	j %= k ;
12187	if j is equal to 0 , set j to ans	N/A	N/A	if ( j == 0 ) j = ans ;	if ( j == 0 ) j = ans ;
12188	DUMMY	0.0	0.0	}	DUMMY
12189	DUMMY	0.0	0.0	return 0;	DUMMY
12190	DUMMY	0.0	0.0	}	DUMMY
12191	DUMMY	0.0	0.0	int main() {	DUMMY
12192	declare integer vector v initialized with 6	N/A	N/A	vector < int > v ( 6 ) ;	vector < int > v ( 6 ) ;
12193	read v [ 0 ] , v [ 1 ] , v [ 2 ] , v [ 3 ] , [ 4 ] , v [ 5 ]	N/A	N/A	cin >> v [ 0 ] >> v [ 1 ] >> v [ 2 ] >> v [ 3 ] >> v [ 4 ] >> v [ 5 ] ;	for ( int i = 0 ; i < 6 ; i ++ ) { cin >> v [ 0 ] >> b [ 1 ] >> v1 [ 2 ] >> V [ 3 ] >> [ 4 ] >> c [ 5 ] ; }
12194	sort from beginning of v to end of v	N/A	N/A	sort ( v . begin ( ) , v . end ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
12195	declare integers h , b	N/A	N/A	int h , b ;	int h, b ;
12196	if v [ 0 ] is v [ 3 ]	N/A	N/A	if ( v [ 0 ] == v [ 3 ] )	if ( v [ 0 ] == v [ 3 ] )
12197	let h be 4	N/A	N/A	h = 4 ;	h = 4 ;
12198	let b be 5	N/A	N/A	b = 5 ;	b = 5 ;
12199	else if v [ 1 ] is v [ 4 ]	N/A	N/A	else if ( v [ 1 ] == v [ 4 ] )	else if ( v [ 1 ] == v [ 4 ] )
12200	let h be 0	N/A	N/A	h = 0 ;	h = 0 ;
12201	let b be 5	N/A	N/A	b = 5 ;	b = 5 ;
12202	else if v [ 2 ] is v [ 5 ]	N/A	N/A	else if ( v [ 2 ] == v [ 5 ] )	else if ( v [ 2 ] == v [ 5 ] )
12203	let h be 0	N/A	N/A	h = 0 ;	h = 0 ;
12204	let b be 1	N/A	N/A	b = 1 ;	b = 1 ;
12205	else	N/A	N/A	else	else
12206	print " Alien \ n "	N/A	N/A	cout << " Alien\n " ;	cout << " Alien\n " ;
12207	DUMMY	0.0	0.0	return 0;	DUMMY
12208	DUMMY	0.0	0.0	}	DUMMY
12209	print " Bear \ n " if v [ h ] is less than v [ b ] , else " Elephant \ n "	N/A	N/A	cout << ( v [ h ] < v [ b ] ? " Bear\n " : " Elephant\n " ) ;	cout << ( v [ h ] < v [ b ]? " Bear\n " : " Elephant\nt " ) ;
12210	DUMMY	0.0	0.0	return 0;	DUMMY
12211	DUMMY	0.0	0.0	}	DUMMY
12212	declare const int INF = 0x3f3f3f3f	N/A	N/A	const int INF = 0x3f3f3f3f ;	const int INF = ( 0x3f3f )3f ;
12213	create int array a with size 11	N/A	N/A	int a [ 11 ] ;	int a [ 11 ] ;
12214	DUMMY	0.0	0.0	int main() {	DUMMY
12215	declare integer variables n , m and t	N/A	N/A	int n , m , t ;	int n, m, t ;
12216	declare integer variables i , j and k	N/A	N/A	int i , j , k ;	int i, j, k ;
12217	for i = 0 to 6 exclusive , read t and increment a [ t ]	N/A	N/A	for ( i = 0 ; i < 6 ; i ++ ) cin >> t , a [ t ] ++ ;	for ( i = 0 ; i < 6 ; i ++ ) cin >> t, a [ t ] ++ ;
12218	for i = 1 to 9 inclusive	N/A	N/A	for ( i = 1 ; i <= 9 ; i ++ )	for ( i = 1 ; i <= 9 ; i ++ )
12219	if a [ i ] > = 4 , break	N/A	N/A	if ( a [ i ] >= 4 ) break ;	if ( a [ i ] >= 4 ) break ;
12220	if i is greater than 9	N/A	N/A	if ( i > 9 )	if ( i > 9 )
12221	print " Alien "	N/A	N/A	cout << " Alien " << endl ;	cout << " Alien\n " ;
12222	DUMMY	0.0	0.0	return 0;	DUMMY
12223	DUMMY	0.0	0.0	}	DUMMY
12224	for i from 1 to 9 inclusive	N/A	N/A	for ( i = 1 ; i <= 9 ; i ++ )	for ( int i = 1 ; i <= 9 ; i ++ )
12225	if a [ i ] = 2 or a [ i ] = 6 , stop the loop	N/A	N/A	if ( a [ i ] == 2 || a [ i ] == 6 ) break ;	if ( a [ i ] == 2 || a [ j ] == 6 ) break ;
12226	if i is greater than 9	N/A	N/A	if ( i > 9 )	if ( i > 9 )
12227	print " Bear "	N/A	N/A	cout << " Bear " << endl ;	puts ( " Bear " ) ;
12228	DUMMY	0.0	0.0	return 0;	DUMMY
12229	DUMMY	0.0	0.0	}	DUMMY
12230	print " Elephant "	N/A	N/A	cout << " Elephant " << endl ;	puts ( " Elephant " ) ;
12231	DUMMY	0.0	0.0	return 0;	DUMMY
12232	DUMMY	0.0	0.0	}	DUMMY
12233	declare new array of integers a with size 10	N/A	N/A	int a [ 10 ] ;	int a [ 10 ] ;
12234	DUMMY	0.0	0.0	int main() {	DUMMY
12235	create new integer variable x	N/A	N/A	int x ;	int x ;
12236	for i from 1 to 6 inclusive incrementing i	N/A	N/A	for ( int i = 1 ; i <= 6 ; i ++ )	for ( int i = 1 ; i <= 6 ; i ++ )
12237	read variable x from the input	N/A	N/A	cin >> x ;	cin >> x ;
12238	increment a [ x ]	N/A	N/A	a [ x ] ++ ;	a [ x ] ++ ;
12239	DUMMY	0.0	0.0	}	DUMMY
12240	declare new ints y and z = - 1	N/A	N/A	int y = - 1 , z = - 1 ;	int y, z = - 1 ;
12241	start for loop from i = 1 to 9 inclusive	N/A	N/A	for ( int i = 1 ; i <= 9 ; i ++ )	for ( int i = 1 ; i <= 9 ; i ++ )
12242	if a [ i ] > = 4 , assign i to z	N/A	N/A	if ( a [ i ] >= 4 ) { z = i ; }	if ( a [ i ] >= 4 ) z = i ;
12243	DUMMY	0.0	0.0	}	DUMMY
12244	if z is not - 1	N/A	N/A	if ( z != - 1 )	if ( z!= - 1 )
12245	assign a [ z ] - 4 to a [ z ]	N/A	N/A	a [ z ] = a [ z ] - 4 ;	a [ z ] -= 4 ;
12246	for i = 1 to 9 inclusive	N/A	N/A	for ( int i = 1 ; i <= 9 ; i ++ )	for ( int i = 1 ; i <= 9 ; i ++ )
12247	if a [ i ] is equal to 1 and y = - 1 , change y to i	N/A	N/A	if ( a [ i ] == 1 && y == - 1 ) { y = i ; }	if ( a [ i ] == 1 && y == - 1 ) y = i ;
12248	if a [ i ] = 1 and y is not - 1 , set z to i	N/A	N/A	if ( a [ i ] == 1 && y != - 1 ) { z = i ; }	if ( a [ i ] == 1 && y!= - 1 ) z = i ;
12249	if a [ i ] is equal to 2 , change y to set z to a [ i ]	N/A	N/A	if ( a [ i ] == 2 ) { y = z = a [ i ] ; }	if ( a [ i ] == 2 ) y = z = a [ 1 ] ;
12250	DUMMY	0.0	0.0	}	DUMMY
12251	if y is equal to z	N/A	N/A	if ( y == z )	if ( y == z )
12252	print " Elephant "	N/A	N/A	cout << " Elephant " << endl ;	puts ( " Elephant " ) ;
12253	else	N/A	N/A	else	else
12254	print " Bear " to the standard output	N/A	N/A	cout << " Bear " << endl ;	cout << " Bear " ;
12255	else	N/A	N/A	else	else
12256	print " Alien "	N/A	N/A	cout << " Alien " << endl ;	cout << " Alien "
12257	DUMMY	0.0	0.0	}	DUMMY
12258	DUMMY	0.0	0.0	int main() {	DUMMY
12259	create integers i , j , n , p , q , flag with p = 0 , flag = 0 , create integer array a with size 10 with a = { 0 }	N/A	N/A	int i , j , n , p = 0 , q , flag = 0 , a [ 10 ] = { 0 } ;	int i, j, n, p = 0, q, a [ 10 ] = { 0 }, flag = 0 ;
12260	for i = 0 to 6 exclusive	N/A	N/A	for ( i = 0 ; i < 6 ; i ++ )	for ( i = 0 ; i < 6 ; i ++ )
12261	read n	N/A	N/A	cin >> n ;	cin >> n ;
12262	increment a [ n ]	N/A	N/A	a [ n ] ++ ;	a [ n ] ++ ;
12263	DUMMY	0.0	0.0	}	DUMMY
12264	for i = 0 to 9 inclusive	N/A	N/A	for ( i = 0 ; i <= 9 ; i ++ )	for ( i = 0 ; i <= 9 ; i ++ )
12265	if a [ i ] is greater than or equal to 4	N/A	N/A	if ( a [ i ] >= 4 )	if ( a [ i ] >= 4 )
12266	decrement a [ i ] by 4	N/A	N/A	a [ i ] -= 4 ;	a [ i ] -= 4 ;
12267	set flag to 1	N/A	N/A	flag = 1 ;	flag = 1 ;
12268	DUMMY	0.0	0.0	}	DUMMY
12269	DUMMY	0.0	0.0	}	DUMMY
12270	if flag is 0	N/A	N/A	if ( flag == 0 )	if ( flag == 0 )
12271	print " Alien " print newline	N/A	N/A	cout << " Alien " << endl ;	cout << " Alien " << endl ;
12272	DUMMY	0.0	0.0	return 0;	DUMMY
12273	DUMMY	0.0	0.0	}	DUMMY
12274	for i = 0 to 9 inclusive	N/A	N/A	for ( i = 0 ; i <= 9 ; i ++ )	for ( int i = 0 ; i <= 9 ; i ++ )
12275	if a [ i ] is 2	N/A	N/A	if ( a [ i ] == 2 )	if ( a [ i ] == 2 )
12276	print " Elephant " print newline	N/A	N/A	cout << " Elephant " << endl ;	cout << " Elephant " << endl ;
12277	DUMMY	0.0	0.0	return 0;	DUMMY
12278	DUMMY	0.0	0.0	}	DUMMY
12279	DUMMY	0.0	0.0	}	DUMMY
12280	print " Bear " print newline	N/A	N/A	cout << " Bear " << endl ;	cout << " Bear " << endl ;
12281	DUMMY	0.0	0.0	return 0;	DUMMY
12282	DUMMY	0.0	0.0	}	DUMMY
12283	ar = int array of size 12	N/A	N/A	int ar [ 12 ] ;	int ar [ 12 ] ;
12284	DUMMY	0.0	0.0	int main() {	DUMMY
12285	a , b , c , d , e , f = int	N/A	N/A	int a , b , c , d , e , f ;	int a, b, c, d, e, f ;
12286	read a then b then c then d then e then f	N/A	N/A	cin >> a >> b >> c >> d >> e >> f ;	cin >> a >> b >> c >> d >> e >> f ;
12287	increment ar [ a ]	N/A	N/A	ar [ a ] ++ ;	ar [ a ] ++ ;
12288	increment ar [ b ]	N/A	N/A	ar [ b ] ++ ;	ar [ b ] ++ ;
12289	increment ar [ c ]	N/A	N/A	ar [ c ] ++ ;	ar [ c ] ++ ;
12290	increment ar [ d ]	N/A	N/A	ar [ d ] ++ ;	ar [ d ] ++ ;
12291	increment ar [ e ]	N/A	N/A	ar [ e ] ++ ;	ar [ e ] ++ ;
12292	increment ar [ f ]	N/A	N/A	ar [ f ] ++ ;	ar [ f ] ++ ;
12293	paichi = bool with paichi = false	N/A	N/A	bool paichi = false ;	bool paichi = false ;
12294	for i = 1 to 9 inclusive	N/A	N/A	for ( int i = 1 ; i <= 9 ; i ++ )	for ( int i = 1 ; i <= 9 ; i ++ )
12295	if ar [ i ] > = 4 set paichi to true	N/A	N/A	if ( ar [ i ] >= 4 ) { paichi = true ; }	if ( ar [ i ] >= 4 ) paichi = true ;
12296	DUMMY	0.0	0.0	}	DUMMY
12297	if not paichi print " Alien " and return 0	N/A	N/A	if ( ! paichi ) return cout << " Alien\n " , 0 ;	if (! paichi ) return puts ( " Alien " ), 0 ;
12298	cnt = int with cnt = 0	N/A	N/A	int cnt = 0 ;	int cnt = 0 ;
12299	for i = 1 to 9 inclusive	N/A	N/A	for ( int i = 1 ; i <= 9 ; i ++ )	for ( int i = 1 ; i <= 9 ; i ++ )
12300	if ar [ i ] is 2 or 6 print " Elephant " and return 0	N/A	N/A	if ( ar [ i ] == 2 or ar [ i ] == 6 ) return cout << " Elephant\n " , 0 ;	if ( ar [ i ] == 2 || ar [ j ] == 6 ) return cout << " Elephant " << endl, 0 ;
12301	DUMMY	0.0	0.0	}	DUMMY
12302	print " Bear "	N/A	N/A	cout << " Bear\n " ;	cout << " Bear " << endl ;
12303	DUMMY	0.0	0.0	return 0;	DUMMY
12304	DUMMY	0.0	0.0	}	DUMMY
12305	DUMMY	0.0	0.0	int main() {	DUMMY
12306	create integer A with size 6	N/A	N/A	int A [ 6 ] ;	int A [ 6 ] ;
12307	for i = 0 to 6 exclusive , read A [ i ]	N/A	N/A	for ( int i = 0 ; i < 6 ; ++ i ) { cin >> A [ i ] ; }	for ( int i = 0 ; i < 6 ; i ++ ) cin >> A [ i ] ;
12308	sort elements from A to A + 6	N/A	N/A	sort ( A , A + 6 ) ;	sort ( A, A + 6 ) ;
12309	create integers B , C	N/A	N/A	int B , C ;	int B, C ;
12310	if A [ 0 ] is A [ 3 ]	N/A	N/A	if ( A [ 0 ] == A [ 3 ] )	if ( A [ 0 ] == A [ 3 ] )
12311	set B to A [ 4 ] , set C to A [ 5 ]	N/A	N/A	B = A [ 4 ] , C = A [ 5 ] ;	B == A [ 4 ], C = A [ 5 ] ;
12312	else if A [ 1 ] is A [ 4 ]	N/A	N/A	else if ( A [ 1 ] == A [ 4 ] )	else if ( A [ 1 ] == A [ 4 ] )
12313	set B to A [ 0 ] , set C to A [ 5 ]	N/A	N/A	B = A [ 0 ] , C = A [ 5 ] ;	B == A [ 0 ], C = A [ 5 ] ;
12314	else if A [ 2 ] is A [ 5 ]	N/A	N/A	else if ( A [ 2 ] == A [ 5 ] )	else if ( A [ 2 ] == A [ 5 ] )
12315	set B to A [ 0 ] , set C to A [ 1 ]	N/A	N/A	B = A [ 0 ] , C = A [ 1 ] ;	B = A [ 0 ], C = C [ 1 ] ;
12316	else	N/A	N/A	else	else
12317	print " Alien " print newline	N/A	N/A	cout << " Alien " << endl ;	cout << " Alien " << endl ;
12318	DUMMY	0.0	0.0	return 0;	DUMMY
12319	DUMMY	0.0	0.0	}	DUMMY
12320	if B is C	N/A	N/A	if ( B == C )	if ( B == C )
12321	print " Elephant " print newline	N/A	N/A	cout << " Elephant " << endl ;	cout << " Elephant " << endl ;
12322	DUMMY	0.0	0.0	return 0;	DUMMY
12323	DUMMY	0.0	0.0	}	DUMMY
12324	if B is less than C	N/A	N/A	if ( B < C )	if ( B < C )
12325	print " Bear " print newline	N/A	N/A	cout << " Bear " << endl ;	cout << " Bear " << endl ;
12326	DUMMY	0.0	0.0	return 0;	DUMMY
12327	DUMMY	0.0	0.0	}	DUMMY
12328	DUMMY	0.0	0.0	}	DUMMY
12329	dp = two dimensional char array of sizes 10 and 10	N/A	N/A	char dp [ 10 ] [ 10 ] ;	char dp [ 9 ] [ 10 ] ;
12330	mp = long long and long long map	N/A	N/A	map < long long , long long > mp ;	map < long long, long long > mp ;
12331	DUMMY	0.0	0.0	int main() {	DUMMY
12332	n , x = long long	N/A	N/A	long long n , x ;	long long n, x ;
12333	a = long long array of size 10	N/A	N/A	long long a [ 10 ] ;	long long a [ 10 ] ;
12334	for i = 0 to 6	N/A	N/A	for ( int i = 0 ; i < 6 ; i ++ )	for ( int i = 0 ; i < 6 ; i ++ )
12335	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
12336	increment mp [ a [ i ] ]	N/A	N/A	mp [ a [ i ] ] ++ ;	mp [ a [ i ] ] ++ ;
12337	DUMMY	0.0	0.0	}	DUMMY
12338	ok = bool with ok = false	N/A	N/A	bool ok = false ;	bool ok = false ;
12339	for i = 0 to 6	N/A	N/A	for ( int i = 0 ; i < 6 ; i ++ )	for ( int i = 0 ; i < 6 ; i ++ )
12340	if mp [ a [ i ] ] is 6 set ok to true	N/A	N/A	if ( mp [ a [ i ] ] == 6 ) ok = true ;	if ( mp [ a [ i ] ] == 6 ) ok = true ;
12341	DUMMY	0.0	0.0	}	DUMMY
12342	if ok is true	N/A	N/A	if ( ok )	if ( ok )
12343	print " Elephant "	N/A	N/A	cout << " Elephant " << endl ;	puts ( " Elephant " ) ;
12344	DUMMY	0.0	0.0	return 0;	DUMMY
12345	DUMMY	0.0	0.0	}	DUMMY
12346	for i = 0 to 6	N/A	N/A	for ( int i = 0 ; i < 6 ; i ++ )	for ( int i = 0 ; i < 6 ; i ++ )
12347	if mp [ a [ i ] ] is 5 set ok to true	N/A	N/A	if ( mp [ a [ i ] ] == 5 ) ok = true ;	if ( mp [ a [ i ] ] == 5 ) ok = true ;
12348	DUMMY	0.0	0.0	}	DUMMY
12349	if ok is true	N/A	N/A	if ( ok )	if ( ok )
12350	print " Bear "	N/A	N/A	cout << " Bear " << endl ;	puts ( " Bear " ) ;
12351	DUMMY	0.0	0.0	return 0;	DUMMY
12352	DUMMY	0.0	0.0	}	DUMMY
12353	for i = 0 to 6	N/A	N/A	for ( int i = 0 ; i < 6 ; i ++ )	for ( int i = 0 ; i < 6 ; i ++ )
12354	if mp [ a [ i ] ] is 4 set ok to true	N/A	N/A	if ( mp [ a [ i ] ] == 4 ) ok = true ;	if ( mp [ a [ i ] ] == 4 ) ok = true ;
12355	DUMMY	0.0	0.0	}	DUMMY
12356	if ok is false	N/A	N/A	if ( ! ok )	if (! ok )
12357	print " Alien "	N/A	N/A	cout << " Alien " << endl ;	cout << " Alien " << endl ;
12358	DUMMY	0.0	0.0	return 0;	DUMMY
12359	DUMMY	0.0	0.0	}	DUMMY
12360	for i = 0 to 6	N/A	N/A	for ( int i = 0 ; i < 6 ; i ++ )	for ( int i = 0 ; i < 6 ; i ++ )
12361	if mp [ a [ i ] ] is 2 set ok to false	N/A	N/A	if ( mp [ a [ i ] ] == 2 ) ok = false ;	if ( mp [ a [ i ] ] == 2 ) ok = false ;
12362	DUMMY	0.0	0.0	}	DUMMY
12363	if ok is true	N/A	N/A	if ( ok )	if ( ok )
12364	print " Bear "	N/A	N/A	cout << " Bear " << endl ;	cout << " Bear " << endl ;
12365	else	N/A	N/A	else	else
12366	print " Elephant "	N/A	N/A	cout << " Elephant " << endl ;	puts ( " Elephant " ) ;
12367	DUMMY	0.0	0.0	return 0;	DUMMY
12368	DUMMY	0.0	0.0	}	DUMMY
12369	declare int arrays b with size 10 and c with size 6	N/A	N/A	int b [ 10 ] , c [ 6 ] ;	int b [ 10 ], c [ 6 ] ;
12370	DUMMY	0.0	0.0	int main() {	DUMMY
12371	declare an array of integers a with size 6 and integer variables i , x and j with j = 0	N/A	N/A	int a [ 6 ] , i , x , j = 0 ;	int a [ 6 ], i, x, j = 0 ;
12372	for i = 0 to 6 exclusive	N/A	N/A	for ( i = 0 ; i < 6 ; i ++ )	for ( i = 0 ; i < 6 ; i ++ )
12373	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
12374	assign a [ i ] to x	N/A	N/A	x = a [ i ] ;	x = a [ i ] ;
12375	increment b [ x ] by one	N/A	N/A	b [ x ] ++ ;	b [ x ] ++ ;
12376	DUMMY	0.0	0.0	}	DUMMY
12377	for i = 1 to 9 inclusive	N/A	N/A	for ( i = 1 ; i <= 9 ; i ++ )	for ( i = 1 ; i <= 9 ; i ++ )
12378	if b [ i ] ! = 0	N/A	N/A	if ( b [ i ] != 0 )	if ( b [ i ]!= 0 )
12379	set c [ j ] to b [ i ]	N/A	N/A	c [ j ] = b [ i ] ;	c [ j ] = b [ i ] ;
12380	increment j by one	N/A	N/A	j ++ ;	j ++ ;
12381	DUMMY	0.0	0.0	}	DUMMY
12382	DUMMY	0.0	0.0	}	DUMMY
12383	sort first 3 elements of c	N/A	N/A	sort ( c , c + 3 ) ;	sort ( c, c + 3 ) ;
12384	if c [ 0 ] = 1 and c [ 1 ] = 1 and c [ 2 ] = 4	N/A	N/A	if ( c [ 0 ] == 1 && c [ 1 ] == 1 && c [ 2 ] == 4 )	if ( c [ 0 ] == 1 && c [ 1 ] =='1'and c [ 2 ] == 4 )
12385	print " Bear "	N/A	N/A	cout << " Bear " << endl ;	cout << " Bear\n " ;
12386	else if c [ 0 ] = 0 and c [ 1 ] = 1 and c [ 2 ] = 5	N/A	N/A	else if ( c [ 0 ] == 0 && c [ 1 ] == 1 && c [ 2 ] == 5 )	else if ( c [ 0 ] == 0 and c [ 1 ] == 1 && c [ 2 ] == 5 )
12387	print " Bear "	N/A	N/A	cout << " Bear " << endl ;	cout << " Bear " << endl ;
12388	else if c [ 0 ] = 0 and c [ 1 ] = 2 and c [ 2 ] = 4	N/A	N/A	else if ( c [ 0 ] == 0 && c [ 1 ] == 2 && c [ 2 ] == 4 )	else if ( c [ 0 ] == 0 and c [ 1 ] == 2 && c [ 2 ] == 4 )
12389	print " Elephant "	N/A	N/A	cout << " Elephant " << endl ;	puts ( " Elephant " ) ;
12390	else if c [ 2 ] is equal to 6	N/A	N/A	else if ( c [ 2 ] == 6 )	else if ( c [ 2 ] == 6 )
12391	print " Elephant "	N/A	N/A	cout << " Elephant " << endl ;	puts ( " Elephant " ) ;
12392	else	N/A	N/A	else	else
12393	print " Alien "	N/A	N/A	cout << " Alien " << endl ;	cout << " Alien " << endl ;
12394	DUMMY	0.0	0.0	}	DUMMY
12395	DUMMY	0.0	0.0	return 0;	DUMMY
12396	DUMMY	0.0	0.0	}	DUMMY
12397	DUMMY	0.0	0.0	int main() {	DUMMY
12398	create integers i , j , n , p , q , flag , with p = 0 , flag = 0 , create integer array a with size 10 with a = { 0 }	N/A	N/A	int i , j , n , p = 0 , q , flag = 0 , a [ 10 ] = { 0 } ;	int i, j, n, p = 0, q, a [ 10 ] = { 0 }, flag = 0 ;
12399	for i = 0 to 6 exclusive	N/A	N/A	for ( i = 0 ; i < 6 ; i ++ )	for ( i = 0 ; i < 6 ; i ++ )
12400	read n	N/A	N/A	cin >> n ;	cin >> n ;
12401	increment a [ n ]	N/A	N/A	a [ n ] ++ ;	a [ n ] ++ ;
12402	DUMMY	0.0	0.0	}	DUMMY
12403	for i = 0 to 9 inclusive	N/A	N/A	for ( i = 0 ; i <= 9 ; i ++ )	for ( i = 0 ; i <= 9 ; i ++ )
12404	if a [ i ] is greater than or equal to 4	N/A	N/A	if ( a [ i ] >= 4 )	if ( a [ i ] >= 4 )
12405	decrement a [ i ] by 4	N/A	N/A	a [ i ] -= 4 ;	a [ i ] -= 4 ;
12406	set flag to 1	N/A	N/A	flag = 1 ;	flag = 1 ;
12407	DUMMY	0.0	0.0	}	DUMMY
12408	DUMMY	0.0	0.0	}	DUMMY
12409	if flag is 0	N/A	N/A	if ( flag == 0 )	if ( flag == 0 )
12410	print " Alien " print newline	N/A	N/A	cout << " Alien " << endl ;	cout << " Alien " << endl ;
12411	DUMMY	0.0	0.0	return 0;	DUMMY
12412	DUMMY	0.0	0.0	}	DUMMY
12413	for i = 0 to 9 inclusive	N/A	N/A	for ( i = 0 ; i <= 9 ; i ++ )	for ( int i = 0 ; i <= 9 ; i ++ )
12414	if a [ i ] is 2	N/A	N/A	if ( a [ i ] == 2 )	if ( a [ i ] == 2 )
12415	print " Elephant " print newline	N/A	N/A	cout << " Elephant " << endl ;	cout << " Elephant " << endl ;
12416	DUMMY	0.0	0.0	return 0;	DUMMY
12417	DUMMY	0.0	0.0	}	DUMMY
12418	DUMMY	0.0	0.0	}	DUMMY
12419	print " Bear " print newline	N/A	N/A	cout << " Bear " << endl ;	cout << " Bear " << endl ;
12420	DUMMY	0.0	0.0	return 0;	DUMMY
12421	DUMMY	0.0	0.0	}	DUMMY
12422	DUMMY	0.0	0.0	int main() {	DUMMY
12423	declare integer array list size 10	N/A	N/A	int list [ 10 ] ;	int list [ 10 ] ;
12424	set bytes from list to size of list to value 0	N/A	N/A	memset ( list , 0 , sizeof ( list ) ) ;	memset ( list, 0, sizeof ( list ) ) ;
12425	for i = 0 to 6 exclusive	N/A	N/A	for ( int i = 0 ; i < 6 ; i ++ )	for ( int i = 0 ; i < 6 ; i ++ )
12426	declare temp as integer	N/A	N/A	int temp ;	int temp ;
12427	read temp	N/A	N/A	cin >> temp ;	cin >> temp ;
12428	increment list [ temp ]	N/A	N/A	list [ temp ] ++ ;	list [ temp ] ++ ;
12429	DUMMY	0.0	0.0	}	DUMMY
12430	for i = 0 to 10 exclusive	N/A	N/A	for ( int i = 0 ; i < 10 ; i ++ )	for ( int i = 0 ; i < 10 ; i ++ )
12431	if list [ i ] is 4	N/A	N/A	if ( list [ i ] == 4 )	if ( list [ i ] == 4 )
12432	for j = 0 to 10 exclusive	N/A	N/A	for ( int j = 0 ; j < 10 ; j ++ )	for ( int j = 0 ; j < 10 ; j ++ )
12433	if list [ j ] is 2	N/A	N/A	if ( list [ j ] == 2 )	if ( list [ j ] == 2 )
12434	print " Elephant " , newline	N/A	N/A	cout << " Elephant " << endl ;	cout << " Elephant " << endl ;
12435	DUMMY	0.0	0.0	return 0;	DUMMY
12436	DUMMY	0.0	0.0	}	DUMMY
12437	DUMMY	0.0	0.0	}	DUMMY
12438	print " Bear " , newline	N/A	N/A	cout << " Bear " << endl ;	cout << " Bear " << endl ;
12439	DUMMY	0.0	0.0	return 0;	DUMMY
12440	else if list [ i ] is 5	N/A	N/A	else if ( list [ i ] == 5 )	else if ( list [ i ] == 5 )
12441	print " Bear " , newline	N/A	N/A	cout << " Bear " << endl ;	cout << " Bear " << endl ;
12442	DUMMY	0.0	0.0	return 0;	DUMMY
12443	else if list [ i ] is 6	N/A	N/A	else if ( list [ i ] == 6 )	else if ( list [ i ] == 6 )
12444	print " Elephant " , newline	N/A	N/A	cout << " Elephant " << endl ;	cout << " Elephant " << endl ;
12445	DUMMY	0.0	0.0	return 0;	DUMMY
12446	DUMMY	0.0	0.0	}	DUMMY
12447	DUMMY	0.0	0.0	}	DUMMY
12448	print " Alien " , newline	N/A	N/A	cout << " Alien " << endl ;	cout << " Alien " << endl ;
12449	DUMMY	0.0	0.0	return 0;	DUMMY
12450	DUMMY	0.0	0.0	}	DUMMY
12451	create integer array mp with size 20	N/A	N/A	int mp [ 20 ] ;	int mp [ 20 ] ;
12452	DUMMY	0.0	0.0	int main() {	DUMMY
12453	create integer n	N/A	N/A	int n ;	int n ;
12454	create integer vector Q	N/A	N/A	vector < int > Q ;	vector < int > Q ;
12455	set bytes from mp to size of mp to value 0	N/A	N/A	memset ( mp , 0 , sizeof mp ) ;	memset ( mp, 0, sizeof ( mp ) ) ;
12456	for i = 1 to 6 inclusive	N/A	N/A	for ( int i = 1 ; i <= 6 ; i ++ )	for ( int i = 1 ; i <= 6 ; i ++ )
12457	create integer p	N/A	N/A	int p ;	int p ;
12458	read p	N/A	N/A	cin >> p ;	cin >> p ;
12459	increment mp [ p ]	N/A	N/A	mp [ p ] ++ ;	mp [ p ] ++ ;
12460	add character p to end of Q	N/A	N/A	Q . push_back ( p ) ;	Q. push ( p ) ;
12461	DUMMY	0.0	0.0	}	DUMMY
12462	create integers flag1 , flag2 with flag1 = 0 , flag2 = 0	N/A	N/A	int flag1 = 0 , flag2 = 0 ;	int flag1 = 0, flag2 = 0 ;
12463	for i = 0 to size of Q exclusive	N/A	N/A	for ( int i = 0 ; i < Q . size ( ) ; i ++ )	for ( int i = 0 ; i < Q. size ( ) ; i ++ )
12464	if mp [ Q [ i ] ] is greater than or equal to 4 , set flag1 to 1	N/A	N/A	if ( mp [ Q [ i ] ] >= 4 ) { flag1 = 1 ; }	if ( mp [ Q [ i ] ] >= 4 ) flag1 = 1 ;
12465	if mp [ Q [ i ] ] is 2 , set flag2 to 1	N/A	N/A	if ( mp [ Q [ i ] ] == 2 ) { flag2 = 1 ; }	if ( mp [ Q [ i ] ] == 2 ) flag2 = 1 ;
12466	if mp [ Q [ i ] ] is 6	N/A	N/A	if ( mp [ Q [ i ] ] == 6 )	if ( mp [ Q [ i ] ] == 6 )
12467	set flag1 to 1	N/A	N/A	flag1 = 1 ;	flag1 = 1 ;
12468	set flag2 to 1	N/A	N/A	flag2 = 1 ;	flag2 = 1 ;
12469	DUMMY	0.0	0.0	}	DUMMY
12470	DUMMY	0.0	0.0	}	DUMMY
12471	if flag1 is 1 and flag2 is 0	N/A	N/A	if ( flag1 == 1 and flag2 == 0 )	if ( flag1 == 1 && flag2 == 0 )
12472	print " Bear \ n "	N/A	N/A	cout << " Bear\n " ;	cout << " Bear\n " ;
12473	else if flag1 is 1 and flag2 is 1	N/A	N/A	else if ( flag1 == 1 and flag2 == 1 )	else if ( flag1 == 1 && flag2 == 1 )
12474	print " Elephant \ n "	N/A	N/A	cout << " Elephant\n " ;	cout << " Elephant\n " ;
12475	else	N/A	N/A	else	else
12476	print " Alien \ n "	N/A	N/A	cout << " Alien\n " ;	cout << " Alien\n " ;
12477	DUMMY	0.0	0.0	}	DUMMY
12478	DUMMY	0.0	0.0	return 0;	DUMMY
12479	DUMMY	0.0	0.0	}	DUMMY
12480	a , b , n = int and s = int array of size 10	N/A	N/A	int s [ 10 ] , a , b , n ;	int a, b, n, s [ 10 ] ;
12481	DUMMY	0.0	0.0	int main() {	DUMMY
12482	for i = 0 to 6	N/A	N/A	for ( int i = 0 ; i < 6 ; i ++ )	for ( int i = 0 ; i < 6 ; i ++ )
12483	read n	N/A	N/A	cin >> n ;	cin >> n ;
12484	increment s [ n ]	N/A	N/A	s [ n ] ++ ;	s [ n ] ++ ;
12485	DUMMY	0.0	0.0	}	DUMMY
12486	for i = 0 to 10	N/A	N/A	for ( int i = 0 ; i < 10 ; i ++ )	for ( int i = 0 ; i < 10 ; i ++ )
12487	if s [ i ] is greater or equal to 4 set b to 1	N/A	N/A	if ( s [ i ] >= 4 ) { b = 1 ; }	if ( s [ i ] >= 4 ) b = 1 ;
12488	if s [ i ] is 2 or 6 set a to 1	N/A	N/A	if ( s [ i ] == 2 || s [ i ] == 6 ) { a = 1 ; }	if ( s [ i ] == 2 || s [ j ] == 6 ) a = 1 ;
12489	DUMMY	0.0	0.0	}	DUMMY
12490	if b is 0	N/A	N/A	if ( b == 0 )	if ( b == 0 )
12491	print " Alien "	N/A	N/A	cout << " Alien " << endl ;	cout << " Alien\n " ;
12492	else if a is 1	N/A	N/A	else if ( a == 1 )	else if ( a == 1 )
12493	print " Elephant "	N/A	N/A	cout << " Elephant " << endl ;	puts ( " Elephant " ) ;
12494	else	N/A	N/A	else	else
12495	print " Bear "	N/A	N/A	cout << " Bear " << endl ;	puts ( " Bear " ) ;
12496	DUMMY	0.0	0.0	}	DUMMY
12497	DUMMY	0.0	0.0	}	DUMMY
12498	create a map from integers to integers with name mp	N/A	N/A	map < int , int > mp ;	map < int, int > mp ;
12499	DUMMY	0.0	0.0	int main() {	DUMMY
12500	for integer i = 0 to 6 exclusive	N/A	N/A	for ( int i = 0 ; i < 6 ; i ++ )	for ( int i = 0 ; i < 6 ; i ++ )
12501	declare int p	N/A	N/A	int p ;	int p ;
12502	read p	N/A	N/A	cin >> p ;	cin >> p ;
12503	increment mp [ p ]	N/A	N/A	mp [ p ] ++ ;	mp [ p ] ++ ;
12504	DUMMY	0.0	0.0	}	DUMMY
12505	if length of mp is greater than 3	N/A	N/A	if ( mp . size ( ) > 3 )	if ( mp. size ( ) > 3 )
12506	print " Alien "	N/A	N/A	cout << " Alien " << endl ;	cout << " Alien\n " ;
12507	DUMMY	0.0	0.0	return 0;	DUMMY
12508	DUMMY	0.0	0.0	}	DUMMY
12509	if length of mp is equal to 3	N/A	N/A	if ( mp . size ( ) == 3 )	if ( mp. size ( ) == 3 )
12510	create integer f = 0	N/A	N/A	int f = 0 ;	int f = 0 ;
12511	it is a map iterator	N/A	N/A	map < int , int > :: iterator it ;	map < string, int > :: iterator it ;
12512	move it through mp	N/A	N/A	for ( it = mp . begin ( ) ; it != mp . end ( ) ; it ++ )	for ( it = mp. begin ( ) ; it!= mp. end ( ) - 1 ; it ++ )
12513	if it - > second = 4	N/A	N/A	if ( it -> second == 4 )	if ( it -> second == 4 )
12514	change f to 1	N/A	N/A	f = 1 ;	f = 1 ;
12515	break the loop	N/A	N/A	break ;	break ;
12516	DUMMY	0.0	0.0	}	DUMMY
12517	DUMMY	0.0	0.0	}	DUMMY
12518	if f ! = 0	N/A	N/A	if ( f )	if ( f!= 0 )
12519	print " Bear "	N/A	N/A	cout << " Bear " << endl ;	cout << " Bear " << endl ;
12520	DUMMY	0.0	0.0	return 0;	DUMMY
12521	else	N/A	N/A	else	else
12522	print " Alien "	N/A	N/A	cout << " Alien " << endl ;	cout << " Alien " << endl ;
12523	DUMMY	0.0	0.0	return 0;	DUMMY
12524	DUMMY	0.0	0.0	}	DUMMY
12525	DUMMY	0.0	0.0	}	DUMMY
12526	if length of mp is equal to 2	N/A	N/A	if ( mp . size ( ) == 2 )	if ( mp. size ( ) == 2 )
12527	declare integer variable f = 0	N/A	N/A	int f = 0 ;	int f = 0 ;
12528	it is a map iterator	N/A	N/A	map < int , int > :: iterator it ;	map < string, int > :: iterator it ;
12529	move it through mp	N/A	N/A	for ( it = mp . begin ( ) ; it != mp . end ( ) ; it ++ )	for ( it = mp. begin ( ) ; it!= mp. end ( ) - 1 ; it ++ )
12530	if it - > second = 2	N/A	N/A	if ( it -> second == 2 )	if ( it -> second == 2 )
12531	change f to 1	N/A	N/A	f = 1 ;	f = 1 ;
12532	break the loop	N/A	N/A	break ;	break ;
12533	DUMMY	0.0	0.0	}	DUMMY
12534	if if it - > second = 3	N/A	N/A	if ( it -> second == 3 )	if ( it -> second == 3 )
12535	print " Alien "	N/A	N/A	cout << " Alien " << endl ;	cout << " Alien " << endl ;
12536	DUMMY	0.0	0.0	return 0;	DUMMY
12537	DUMMY	0.0	0.0	}	DUMMY
12538	DUMMY	0.0	0.0	}	DUMMY
12539	if f ! = 0	N/A	N/A	if ( f )	if ( f!= 0 )
12540	print " Elephant "	N/A	N/A	cout << " Elephant " << endl ;	cout << " Elephant " << endl ;
12541	DUMMY	0.0	0.0	return 0;	DUMMY
12542	else	N/A	N/A	else	else
12543	print " Bear "	N/A	N/A	cout << " Bear " << endl ;	puts ( " Bear " ) ;
12544	DUMMY	0.0	0.0	return 0;	DUMMY
12545	DUMMY	0.0	0.0	}	DUMMY
12546	DUMMY	0.0	0.0	}	DUMMY
12547	if length of mp = 1	N/A	N/A	if ( mp . size ( ) == 1 )	if ( mp. size ( ) == 1 )
12548	print " Elephant "	N/A	N/A	cout << " Elephant " << endl ;	puts ( " Elephant " ) ;
12549	DUMMY	0.0	0.0	return 0;	DUMMY
12550	DUMMY	0.0	0.0	}	DUMMY
12551	DUMMY	0.0	0.0	return 0;	DUMMY
12552	DUMMY	0.0	0.0	}	DUMMY
12553	DUMMY	0.0	0.0	int main() {	DUMMY
12554	l , r = long long	N/A	N/A	long long l , r ;	long long l, r ;
12555	read l then r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
12556	if r - l is greater than 1	N/A	N/A	if ( r - l > 1 )	if ( r - l > 1 )
12557	if l is even	N/A	N/A	if ( l % 2 == 0 )	if ( l % 2 == 0 )
12558	print l then ' ' then l + 1 then ' ' then l + 2	N/A	N/A	cout << l << ' ' << l + 1 << ' ' << l + 2 << endl ;	cout << l <<' '<< l + 1 <<'\n'>> l + 2 << endl ;
12559	else	N/A	N/A	else	else
12560	if r - l is greater than 2	N/A	N/A	if ( r - l > 2 )	if ( r - l > 2 )
12561	print l + 1 then ' ' then l + 2 then ' ' then l + 3	N/A	N/A	cout << l + 1 << ' ' << l + 2 << ' ' << l + 3 << endl ;	cout << l + 1 <<' '<< ( l + 2 ) << " " << ( long long ) l + 3 << endl ;
12562	else	N/A	N/A	else	else
12563	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12564	DUMMY	0.0	0.0	}	DUMMY
12565	else	N/A	N/A	else	else
12566	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12567	DUMMY	0.0	0.0	}	DUMMY
12568	tmp , min1 , max1 , sum_n , index_max , index_min = int	N/A	N/A	int tmp , min1 , max1 , sum_n , index_max , index_min ;	long long int tmp, min1, max1, sum_n, index_max, Index_min ;
12569	arr1 = two dimensional int array of sizes 1000 and 1000	N/A	N/A	int arr1 [ 1000 ] [ 1000 ] ;	int arr1 [ 1000 ] [ 100 ] ;
12570	arr3 = char array of size 100	N/A	N/A	char arr3 [ 100 ] ;	char arr3 [ 100 ] ;
12571	arr = int array of size 10000	N/A	N/A	int arr [ 10000 ] ;	int arr [ 10000 ] ;
12572	in function display_vector taking an int vector v	N/A	N/A	void display_vector ( vector < int > v )	void display_vector ( vector < int > v )
12573	for i = 0 to size of v print v [ i ] then " "	N/A	N/A	for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << " " ;	for ( int i = 0 ; i < v. size ( ) ; i ++ ) { cout << v [ i ] << " " ; }
12574	print newline	N/A	N/A	cout << endl ;	cout << endl ;
12575	DUMMY	0.0	0.0	}	DUMMY
12576	define empty function speed	N/A	N/A	void speed ( ) { }	void speed ( ) { }
12577	in function min_max taking an int vector v and an int l	N/A	N/A	void min_max ( vector < int > v , int l )	void min_max ( vector < int > v, int l )
12578	set min1 to INT_MAX	N/A	N/A	min1 = INT_MAX ;	min1 = INT_MAX ;
12579	set max1 to INT_MIN	N/A	N/A	max1 = INT_MIN ;	max1 = INT_MIN ;
12580	for i = l to size of v	N/A	N/A	for ( int i = l ; i < v . size ( ) ; i ++ )	for ( int i = l ; i < v. size ( ) ; i ++ )
12581	if v [ i ] is less or equal to min1	N/A	N/A	if ( v [ i ] <= min1 )	if ( v [ i ] <= min1 )
12582	set min1 to v [ i ]	N/A	N/A	min1 = v [ i ] ;	min1 = v [ i ] ;
12583	set index_min to i	N/A	N/A	index_min = i ;	index_min = i ;
12584	DUMMY	0.0	0.0	}	DUMMY
12585	if v [ i ] is greater or equal to max1	N/A	N/A	if ( v [ i ] >= max1 )	if ( v [ i ] >= max1 )
12586	set max1 to v [ i ]	N/A	N/A	max1 = v [ i ] ;	max1 = v [ i ] ;
12587	set index_max to i	N/A	N/A	index_max = i ;	index_max = i ;
12588	DUMMY	0.0	0.0	}	DUMMY
12589	DUMMY	0.0	0.0	}	DUMMY
12590	DUMMY	0.0	0.0	}	DUMMY
12591	in function sum_v taking an int vector v and returning an int	N/A	N/A	int sum_v ( vector < int > v )	int sum_v ( vector < int > v )
12592	for i = 0 to size of v increment sum_n by v [ i ]	N/A	N/A	for ( int i = 0 ; i < v . size ( ) ; i ++ ) sum_n += v [ i ] ;	for ( int i = 0 ; i < v. size ( ) ; i ++ ) sum_n += v [ i ] ;
12593	return sum_n	N/A	N/A	return sum_n ;	return sum_n ;
12594	DUMMY	0.0	0.0	}	DUMMY
12595	in function is_it_sorted_acs taking an int vector v and returning a bool	N/A	N/A	bool is_it_sorted_acs ( vector < int > v )	bool is_it_sorted_acs ( vector < int > v )
12596	test1 = bool with test1 = false	N/A	N/A	bool test1 = false ;	bool test1 = false ;
12597	for i = 0 to size of v - 1	N/A	N/A	for ( int i = 0 ; i < v . size ( ) - 1 ; i ++ )	for ( int i = 0 ; i < v. size ( ) - 1 ; i ++ )
12598	if v [ i + 1 ] is less or equal to v [ i ]	N/A	N/A	if ( v [ i + 1 ] <= v [ i ] )	if ( v [ i + 1 ] <= v [ 1 ] )
12599	set test1 to false	N/A	N/A	test1 = false ;	test1 = false ;
12600	return test1	N/A	N/A	return test1 ;	return test1 ;
12601	DUMMY	0.0	0.0	}	DUMMY
12602	set test1 to true	N/A	N/A	test1 = true ;	test1 = true ;
12603	return test1	N/A	N/A	return test1 ;	return test1 ;
12604	DUMMY	0.0	0.0	}	DUMMY
12605	in function is_it_sorted_des taking an int vector v and returning a bool	N/A	N/A	bool is_it_sorted_des ( vector < int > v )	bool is_it_sorted_des ( vector < int > v )
12606	test1 = bool with test1 = false	N/A	N/A	bool test1 = false ;	bool test1 = false ;
12607	for i = 0 to size of v - 1	N/A	N/A	for ( int i = 0 ; i < v . size ( ) - 1 ; i ++ )	for ( int i = 0 ; i < v. size ( ) - 1 ; i ++ )
12608	if v [ i + 1 ] is greater or equal to v [ i ]	N/A	N/A	if ( v [ i + 1 ] >= v [ i ] )	if ( v [ i + 1 ] >= v [ 1 ] )
12609	set test1 to false	N/A	N/A	test1 = false ;	test1 = false ;
12610	return test1	N/A	N/A	return test1 ;	return test1 ;
12611	DUMMY	0.0	0.0	}	DUMMY
12612	set test1 to true	N/A	N/A	test1 = true ;	test1 = true ;
12613	return test1	N/A	N/A	return test1 ;	return test1 ;
12614	DUMMY	0.0	0.0	}	DUMMY
12615	DUMMY	0.0	0.0	int main() {	DUMMY
12616	call speed	N/A	N/A	speed ( ) ;	speed ( ) ;
12617	l , r = long long	N/A	N/A	long long l , r ;	long long l, r ;
12618	read l then r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
12619	if l is uneven then increment l	N/A	N/A	if ( l % 2 != 0 ) l ++ ;	if ( l % 2 == 1 ) l ++ ;
12620	if r - l is less than 2 then print - 1 and return 0	N/A	N/A	if ( r - l < 2 ) return cout << - 1 << endl , 0 ;	if ( r - l < 2 ) return cout << - 1 << endl, 0 ;
12621	print l and l + 1 and l + 2	N/A	N/A	cout << l << " " << l + 1 << " " << l + 2 << endl ;	cout << l << " " << l + 1 <<' '<< ( l + 2 ) << endl ;
12622	DUMMY	0.0	0.0	}	DUMMY
12623	DUMMY	0.0	0.0	int main() {	DUMMY
12624	create long long l and r	N/A	N/A	long long l , r ;	long long l, r ;
12625	read l and r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
12626	if r - l + 1 less than 3	N/A	N/A	if ( r - l + 1 < 3 )	if ( r - l + 1 < 3 )
12627	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12628	DUMMY	0.0	0.0	return 0;	DUMMY
12629	DUMMY	0.0	0.0	}	DUMMY
12630	if l is odd	N/A	N/A	if ( l % 2 == 0 )	if ( l % 2!= 0 )
12631	print l , ' ' , l + 1 , ' ' , l + 2	N/A	N/A	cout << l << ' ' << l + 1 << ' ' << l + 2 << endl ;	cout << l <<' '<< l + 1 << " " << ( l + 2 ) << endl ;
12632	DUMMY	0.0	0.0	return 0;	DUMMY
12633	DUMMY	0.0	0.0	}	DUMMY
12634	if r - l + 1 greater than 3	N/A	N/A	if ( r - l + 1 > 3 )	if ( r - l + 1 > 3 )
12635	print l + 1 , ' ' , l + 2 , ' ' , l + 3	N/A	N/A	cout << l + 1 << ' ' << l + 2 << ' ' << l + 3 << endl ;	cout << ( l + 1 ) <<' '<< l + 2 <<'\n') << endl ;
12636	DUMMY	0.0	0.0	return 0;	DUMMY
12637	DUMMY	0.0	0.0	}	DUMMY
12638	print - 1 and a newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12639	DUMMY	0.0	0.0	}	DUMMY
12640	create long long l and r	N/A	N/A	long long l , r ;	long long l, r ;
12641	DUMMY	0.0	0.0	int main() {	DUMMY
12642	read l , r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
12643	if r - l + 1 < 3	N/A	N/A	if ( r - l + 1 < 3 )	if ( r - l + 1 < 3 )
12644	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12645	DUMMY	0.0	0.0	return 0;	DUMMY
12646	DUMMY	0.0	0.0	}	DUMMY
12647	if l is even	N/A	N/A	if ( l % 2 == 0 )	if ( l % 2 == 0 )
12648	print l , " " , l + 1 , " " , l + 2	N/A	N/A	cout << l << " " << l + 1 << " " << l + 2 << endl ;	cout << l << " " << l + 1 <<' '<< ( l + 2 ) << endl ;
12649	DUMMY	0.0	0.0	return 0;	DUMMY
12650	DUMMY	0.0	0.0	}	DUMMY
12651	if r - l + 1 greater than 3	N/A	N/A	if ( r - l + 1 > 3 )	if ( r - l + 1 > 3 )
12652	print l + 1 , " " , l + 2 , " " , l + 3	N/A	N/A	cout << l + 1 << " " << l + 2 << " " << l + 3 << endl ;	cout << ( l + 1 ) << " " << l + 2 <<' '<< r + 3 << endl ;
12653	DUMMY	0.0	0.0	return 0;	DUMMY
12654	DUMMY	0.0	0.0	}	DUMMY
12655	print - 1 and a newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12656	DUMMY	0.0	0.0	return 0;	DUMMY
12657	DUMMY	0.0	0.0	return 0;	DUMMY
12658	DUMMY	0.0	0.0	}	DUMMY
12659	DUMMY	0.0	0.0	int main() {	DUMMY
12660	create integer long longs l , r	N/A	N/A	int long long l , r ;	int long long l, r ;
12661	read l read r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
12662	if l % 2 is not 0 , increment l	N/A	N/A	if ( l % 2 != 0 ) l ++ ;	if ( l % 2!= 0 ) l ++ ;
12663	if l + 2 is greater than r	N/A	N/A	if ( l + 2 > r )	if ( l + 2 > r )
12664	print - 1 print newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12665	else	N/A	N/A	else	else
12666	print l print " " print l + 1 print " " print l + 2 print newline	N/A	N/A	cout << l << " " << l + 1 << " " << l + 2 << endl ;	cout << l << " " << ( l + 1 ) <<' '<< l + 2 << endl ;
12667	DUMMY	0.0	0.0	return 0;	DUMMY
12668	DUMMY	0.0	0.0	}	DUMMY
12669	DUMMY	0.0	0.0	int main() {	DUMMY
12670	declare long long variables k and l	N/A	N/A	long long k , l ;	long long k, l ;
12671	read k and l and keep looping	N/A	N/A	while ( cin >> k >> l )	while ( cin >> k >> l )
12672	if l - k is less than 2	N/A	N/A	if ( l - k < 2 )	if ( l - k < 2 )
12673	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12674	else if k is even	N/A	N/A	else if ( ! ( k % 2 ) )	else if ( k % 2 == 0 )
12675	print k , " " , k + 1 , " " and k + 2	N/A	N/A	cout << k << " " << k + 1 << " " << k + 2 << endl ;	cout << k << " " << ( k + 1 ) <<' '<< k + 2 << endl ;
12676	else if k is odd & & l - k > = 3	N/A	N/A	else if ( k % 2 && l - k >= 3 )	else if ( k % 2!= 0 && l - k >= 3 )
12677	print k + 1 , " " , k + 2 , " " and k + 3	N/A	N/A	cout << k + 1 << " " << k + 2 << " " << k + 3 << endl ;	cout << ( k + 1 ) << " " << k + 2 <<' '>> k + 3 << endl ;
12678	else	N/A	N/A	else	else
12679	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12680	DUMMY	0.0	0.0	}	DUMMY
12681	DUMMY	0.0	0.0	return 0;	DUMMY
12682	DUMMY	0.0	0.0	}	DUMMY
12683	DUMMY	0.0	0.0	int main() {	DUMMY
12684	create long longs n , m	N/A	N/A	long long n , m ;	long long n, m ;
12685	read n read m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
12686	if m - n is less than 2	N/A	N/A	if ( m - n < 2 )	if ( m - n < 2 )
12687	print - 1 print newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12688	else	N/A	N/A	else	else
12689	if n % 2 is 0	N/A	N/A	if ( n % 2 == 0 )	if ( n % 2 == 0 )
12690	print n print " " print n + 1 print " " print n + 2 print newline	N/A	N/A	cout << n << " " << n + 1 << " " << n + 2 << endl ;	cout << n << " " << ( n + 1 ) <<' '<< n + 2 << endl ;
12691	else if n % 2 is not 0 and n + 3 is less than or equal to m	N/A	N/A	else if ( n % 2 != 0 && n + 3 <= m )	else if ( n % 2!= 0 && n + 3 <= m )
12692	print n + 1 print " " print n + 2 print " " print n + 3 print newline	N/A	N/A	cout << n + 1 << " " << n + 2 << " " << n + 3 << endl ;	cout << ( n + 1 ) << " " << ( N + 2 ) <<' '<< n + 3 << endl ;
12693	else	N/A	N/A	else	else
12694	print - 1 print newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12695	DUMMY	0.0	0.0	}	DUMMY
12696	DUMMY	0.0	0.0	}	DUMMY
12697	DUMMY	0.0	0.0	int main() {	DUMMY
12698	a , b = long long integer	N/A	N/A	long long int a , b ;	long long int a, b ;
12699	read a , b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
12700	if a modulo 2 is 0 and a + 2 < = b	N/A	N/A	if ( a % 2 == 0 && a + 2 <= b )	if ( a % 2 == 0 && a + 2 <= b )
12701	print a , " " , a + 1 , " " , a + 2	N/A	N/A	cout << a << " " << a + 1 << " " << a + 2 << endl ;	cout << a << " " << ( a + 1 ) <<' '<< a + 2 << endl ;
12702	else if a modulo 2 is not 0 and a + 3 < = b	N/A	N/A	else if ( a % 2 != 0 && a + 3 <= b )	else if ( a % 2!= 0 && a + 3 <= b )
12703	print a + 1 , " " , a + 2 , " " , a + 3	N/A	N/A	cout << a + 1 << " " << a + 2 << " " << a + 3 << endl ;	cout << a + 1 << " " << ( a + 2? " " : a + 3 ) << endl ;
12704	else	N/A	N/A	else	else
12705	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12706	DUMMY	0.0	0.0	}	DUMMY
12707	DUMMY	0.0	0.0	return 0;	DUMMY
12708	DUMMY	0.0	0.0	}	DUMMY
12709	DUMMY	0.0	0.0	int main() {	DUMMY
12710	create long long l and r	N/A	N/A	long long l , r ;	long long l, r ;
12711	read l and r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
12712	if r - l + 1 < 3	N/A	N/A	if ( r - l + 1 < 3 )	if ( r - l + 1 < 3 )
12713	read - 1	N/A	N/A	cout << - 1 << endl ;	cin >> - 1 ;
12714	DUMMY	0.0	0.0	return 0;	DUMMY
12715	DUMMY	0.0	0.0	}	DUMMY
12716	if r - l + 1 = 3 and r mod 2 different from 0 or l mod 2 different from 0	N/A	N/A	if ( r - l + 1 == 3 && ( r % 2 != 0 || l % 2 != 0 ) )	if ( ( r - l + 1 ) == 3 && r % 2!= 0 || ( l % 2 )!= 0 )
12717	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12718	DUMMY	0.0	0.0	return 0;	DUMMY
12719	DUMMY	0.0	0.0	}	DUMMY
12720	if l is even and l + 2 is even	N/A	N/A	if ( l % 2 == 0 && ( l + 2 ) % 2 == 0 )	if ( ( l % 2 ) == 0 && ( l + 2 ) % 2 == 0 )
12721	print l , " " , l + 1 , " " , l + 2	N/A	N/A	cout << l << " " << l + 1 << " " << l + 2 << endl ;	cout << l << " " << l + 1 <<' '<< ( l + 2 ) << endl ;
12722	else	N/A	N/A	else	else
12723	print l + 1 , " " , l + 2 , " " , l + 3	N/A	N/A	cout << l + 1 << " " << l + 2 << " " << l + 3 << endl ;	cout << ( l + 1 ) << " " << l + 2 <<' '<< n + 3 << endl ;
12724	DUMMY	0.0	0.0	}	DUMMY
12725	DUMMY	0.0	0.0	int main() {	DUMMY
12726	l , r = long long	N/A	N/A	long long l , r ;	long long l, r ;
12727	read l , r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
12728	if r - l + 1 < 3	N/A	N/A	if ( r - l + 1 < 3 )	if ( r - l + 1 < 3 )
12729	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12730	DUMMY	0.0	0.0	return 0;	DUMMY
12731	DUMMY	0.0	0.0	}	DUMMY
12732	if l modulo 2 is 0	N/A	N/A	if ( l % 2 == 0 )	if ( l % 2 == 0 )
12733	print l , ' ' , l + 1 , ' ' , l + 2	N/A	N/A	cout << l << ' ' << l + 1 << ' ' << l + 2 << endl ;	cout << l <<' '<< l + 1 << " " << ( l + 2 ) << endl ;
12734	DUMMY	0.0	0.0	return 0;	DUMMY
12735	DUMMY	0.0	0.0	}	DUMMY
12736	if r - l + 1 > 3	N/A	N/A	if ( r - l + 1 > 3 )	if ( r - l + 1 > 3 )
12737	print l + 1 , ' ' , l + 2 , ' ' , l + 3	N/A	N/A	cout << l + 1 << ' ' << l + 2 << ' ' << l + 3 << endl ;	cout << ( l + 1 ) <<' '<< l + 2 <<'\n'>> l + 3 << endl ;
12738	DUMMY	0.0	0.0	return 0;	DUMMY
12739	DUMMY	0.0	0.0	}	DUMMY
12740	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12741	DUMMY	0.0	0.0	}	DUMMY
12742	DUMMY	0.0	0.0	int main() {	DUMMY
12743	create long long n1 and n2	N/A	N/A	long long n1 , n2 ;	long long n1, n2 ;
12744	read n1 , n2	N/A	N/A	cin >> n1 >> n2 ;	cin >> n1 >> n2 ;
12745	if n1 is odd , increase n1	N/A	N/A	if ( n1 % 2 != 0 ) n1 ++ ;	if ( n1 % 2!= 0 ) n1 ++ ;
12746	if n2 - n1 less than 2	N/A	N/A	if ( n2 - n1 < 2 )	if ( n2 - n1 < 2 )
12747	print - 1	N/A	N/A	cout << " -1 " << endl ;	cout << - 1 << endl ;
12748	else	N/A	N/A	else	else
12749	print n1 , " " , n1 + 1 , " " , n1 + 2	N/A	N/A	cout << n1 << " " << n1 + 1 << " " << n1 + 2 << endl ;	cout << n1 << " " << ( n1 + 1 ) <<' '<< n2 + 2 << endl ;
12750	DUMMY	0.0	0.0	}	DUMMY
12751	DUMMY	0.0	0.0	return 0;	DUMMY
12752	DUMMY	0.0	0.0	}	DUMMY
12753	DUMMY	0.0	0.0	int main() {	DUMMY
12754	let l , r be long integers	N/A	N/A	long long l , r ;	long long l, r ;
12755	read l and r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
12756	if r - l is less than 2	N/A	N/A	if ( r - l < 2 )	if ( r - l < 2 )
12757	print - 1 and newline	N/A	N/A	cout << - 1 << ' \n ' ;	cout << - 1 << endl ;
12758	else if r - l is equal to 2	N/A	N/A	else if ( r - l == 2 )	else if ( r - l == 2 )
12759	if r modulo 2	N/A	N/A	if ( r % 2 )	if ( r % 2 )
12760	print - 1 and newline	N/A	N/A	cout << - 1 << ' \n ' ;	cout << - 1 << endl ;
12761	else do the following	N/A	N/A	else	else
12762	print l and space and l + 1 and space and r and newline	N/A	N/A	cout << l << " " << l + 1 << " " << r << ' \n ' ;	cout << l << " " << l + 1 <<' '<< r << endl ;
12763	else do the following	N/A	N/A	else	else
12764	if l modulo 2	N/A	N/A	if ( l % 2 )	if ( l % 2 )
12765	print l + 1 and space and l + 2 and space and l + 3 and newline	N/A	N/A	cout << l + 1 << " " << l + 2 << " " << l + 3 << ' \n ' ;	cout << ( l + 1 ) << " " << l + 2 <<' '
12766	else do the following	N/A	N/A	else	else
12767	print l and space and l + 1 and space and l + 2 and newline	N/A	N/A	cout << l << " " << l + 1 << " " << l + 2 << ' \n ' ;	cout << l << " " << l + 1 <<' '<< k + 2 << endl ;
12768	DUMMY	0.0	0.0	}	DUMMY
12769	DUMMY	0.0	0.0	}	DUMMY
12770	DUMMY	0.0	0.0	int main() {	DUMMY
12771	create long long l and r	N/A	N/A	long long l , r ;	long long l, r ;
12772	read l and r	N/A	N/A	cin >> l >> r ;	cin >> l >> r ;
12773	is l is even and l + 2 < = r	N/A	N/A	if ( l % 2 == 0 && l + 2 <= r )	if ( l % 2 == 0 && l + 2 <= r )
12774	print l , " " , l + 1 , " " , l + 2	N/A	N/A	cout << l << " " << l + 1 << " " << l + 2 << endl ;	cout << l << " " << l + 1 <<' '<< ( l + 2 ) << endl ;
12775	else	N/A	N/A	else	else
12776	l + 3 < = r	N/A	N/A	if ( l + 3 <= r )	l + 3 <= r ;
12777	print l + 1 , " " , l + 2 , " " , l + 3	N/A	N/A	cout << l + 1 << " " << l + 2 << " " << l + 3 << endl ;	cout << ( l + 1 ) << " " << l + 2 <<' '<< k + 3 << endl ;
12778	else	N/A	N/A	else	else
12779	print - 1 and a newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
12780	DUMMY	0.0	0.0	}	DUMMY
12781	DUMMY	0.0	0.0	return 0;	DUMMY
12782	DUMMY	0.0	0.0	}	DUMMY
12783	DUMMY	0.0	0.0	int main() {	DUMMY
12784	n , res = integer with res = 0	N/A	N/A	int n , res = 0 ;	int n, res = 0 ;
12785	read n	N/A	N/A	cin >> n ;	cin >> n ;
12786	total = integer with total = 0	N/A	N/A	int total = 0 ;	int total = 0 ;
12787	while total < n	N/A	N/A	while ( total < n )	while ( total < n )
12788	increment res	N/A	N/A	res ++ ;	res ++ ;
12789	total = total + res * ( res + 1 ) / 2	N/A	N/A	total += res * ( res + 1 ) / 2 ;	total += res * ( res + 1 ) / 2 ;
12790	DUMMY	0.0	0.0	}	DUMMY
12791	if total > n , decrement res	N/A	N/A	if ( total > n ) { res -- ; }	if ( total > n ) res -- ;
12792	print res	N/A	N/A	cout << res << endl ;	cout << res << endl ;
12793	DUMMY	0.0	0.0	return 0;	DUMMY
12794	DUMMY	0.0	0.0	}	DUMMY
12795	DUMMY	0.0	0.0	int main() {	DUMMY
12796	create ints n , i , j , x , and mohi	N/A	N/A	int n , i , j , x , mohi ;	int n, i, j, x, mohi ;
12797	create long long int sum = 0	N/A	N/A	long long int sum = 0 ;	long long sum = 0 ;
12798	create integer vector v	N/A	N/A	vector < int > v ;	vector < int > v ;
12799	read n	N/A	N/A	cin >> n ;	cin >> n ;
12800	for i = 1 to n	N/A	N/A	for ( i = 1 ; i <= n ; i ++ )	for ( i = 1 ; i <= n ; i ++ )
12801	for j = 1 to i	N/A	N/A	for ( j = 1 ; j <= i ; j ++ )	for ( j = 1 ; j <= i ; j ++ )
12802	set mohi to ( j * ( j + 1 ) ) / 2	N/A	N/A	mohi = ( j * ( j + 1 ) ) / 2 ;	mohi = ( j * ( j + 1 ) ) / 2 ;
12803	set sum to sum + mohi	N/A	N/A	sum += mohi ;	sum += mohi ;
12804	DUMMY	0.0	0.0	}	DUMMY
12805	if sum is less than n	N/A	N/A	if ( sum > n )	if ( sum < n )
12806	set x to i	N/A	N/A	x = i ;	x = i ;
12807	break loop	N/A	N/A	break ;	break ;
12808	DUMMY	0.0	0.0	}	DUMMY
12809	set sum to 0	N/A	N/A	sum = 0 ;	sum = 0 ;
12810	DUMMY	0.0	0.0	}	DUMMY
12811	if n is equal to 1	N/A	N/A	if ( n == 1 )	if ( n == 1 )
12812	print 1	N/A	N/A	cout << 1 << endl ;	cout << 1 << endl ;
12813	otherwise	N/A	N/A	else	else
12814	print x - 1	N/A	N/A	cout << x - 1 << endl ;	cout << x - 1 << endl ;
12815	DUMMY	0.0	0.0	}	DUMMY
12816	DUMMY	0.0	0.0	int main() {	DUMMY
12817	n , ans , sum , sum2 = int	N/A	N/A	int n , ans , sum , sum2 ;	int n, ans, sum, sum2 ;
12818	while read n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
12819	ans , sum , sum2 = 0	N/A	N/A	ans = sum = sum2 = 0 ;	ans = sum = 0, sum2 = 0 ;
12820	while true	N/A	N/A	while ( true )	while ( true )
12821	if sum2 > n break	N/A	N/A	if ( sum2 > n ) break ;	if ( sum2 > n ) break ;
12822	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
12823	add ans to sum	N/A	N/A	sum += ans ;	sum += ans ;
12824	add sum to sum2	N/A	N/A	sum2 += sum ;	sum2 += sum ;
12825	DUMMY	0.0	0.0	}	DUMMY
12826	print ans - 1	N/A	N/A	cout << ans - 1 << endl ;	cout << ans - 1 << endl ;
12827	DUMMY	0.0	0.0	}	DUMMY
12828	DUMMY	0.0	0.0	return 0;	DUMMY
12829	DUMMY	0.0	0.0	}	DUMMY
12830	int function Addition with int argument n	N/A	N/A	int Addition ( int n )	int Addition ( int n )
12831	declare new integer s	N/A	N/A	int s ;	int s ;
12832	set s to ( n * ( 1 + n ) ) / 2	N/A	N/A	s = ( n * ( 1 + n ) ) / 2 ;	s = ( n * ( 1 + n ) ) / 2 ;
12833	return s	N/A	N/A	return s ;	return s ;
12834	DUMMY	0.0	0.0	}	DUMMY
12835	DUMMY	0.0	0.0	int main() {	DUMMY
12836	a and i are integers with i = 0	N/A	N/A	int a , i = 0 ;	int a, i = 0 ;
12837	read input to a	N/A	N/A	cin >> a ;	cin >> a ;
12838	if a is greater than 0	N/A	N/A	if ( a > 0 )	if ( a > 0 )
12839	change a to a - the result of Addition ( i )	N/A	N/A	a = a - Addition ( i ) ;	a -= Addition ( i ) ;
12840	while a > 0	N/A	N/A	while ( a > 0 )	while ( a > 0 )
12841	increment i	N/A	N/A	i ++ ;	i ++ ;
12842	assign a - the result of Addition ( i + 1 ) to a	N/A	N/A	a = a - Addition ( i + 1 ) ;	a -= Addition ( i + 1 ) ;
12843	DUMMY	0.0	0.0	}	DUMMY
12844	print i to the standard output	N/A	N/A	cout << i << endl ;	cout << i << endl ;
12845	else	N/A	N/A	else	else
12846	print " 0 " to the standard output	N/A	N/A	cout << " 0 " << endl ;	cout << " 0 " ;
12847	DUMMY	0.0	0.0	}	DUMMY
12848	DUMMY	0.0	0.0	int main() {	DUMMY
12849	n , a , b = integers with a = 0 , b = 0	N/A	N/A	int n , a = 0 , b = 0 ;	int n, a = 0, b = 0 ;
12850	read n	N/A	N/A	cin >> n ;	cin >> n ;
12851	for i = 1 to n exclusive	N/A	N/A	for ( int i = 1 ; a < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
12852	a = a + i	N/A	N/A	a += i ;	a += i ;
12853	n = n - a	N/A	N/A	n -= a ;	n -= a ;
12854	if n > = 0 , increment b	N/A	N/A	if ( n >= 0 ) b ++ ;	if ( n >= 0 ) b ++ ;
12855	DUMMY	0.0	0.0	}	DUMMY
12856	print b	N/A	N/A	cout << b << endl ;	cout << b << endl ;
12857	DUMMY	0.0	0.0	}	DUMMY
12858	DUMMY	0.0	0.0	int main() {	DUMMY
12859	declare integer array a with size 151 ; create integers sum and sum1 where sum1 = 0	N/A	N/A	int a [ 151 ] , sum , sum1 = 0 ;	int a [ 151 ], sum, sum1 = 0 ;
12860	read variable sum from the input	N/A	N/A	cin >> sum ;	cin >> sum ;
12861	in the for loop , change i from 1 to 150 inclusive	N/A	N/A	for ( int i = 1 ; i <= 150 ; i ++ )	for ( int i = 1 ; i <= 150 ; i ++ )
12862	set a [ i ] to ( 1 + i ) * i / 2	N/A	N/A	a [ i ] = ( 1 + i ) * i / 2 ;	a [ i ] = ( 1 + i ) * i / 2 ;
12863	increase sum1 by a [ i ]	N/A	N/A	sum1 += a [ i ] ;	sum1 += a [ i ] ;
12864	set a [ i + 1 ] to ( 2 + i ) * ( i + 1 ) / 2	N/A	N/A	a [ i + 1 ] = ( 2 + i ) * ( i + 1 ) / 2 ;	a [ i + 1 ] = ( 2 + i ) * ( i + 2 ) / 2 ;
12865	if sum > = sum1 and sum < sum1 + a [ i + 1 ]	N/A	N/A	if ( sum >= sum1 && sum < sum1 + a [ i + 1 ] )	if ( sum >= sum1 && sum < sum1 + a [ i + 1 ] )
12866	print i to the standard output	N/A	N/A	cout << i << endl ;	cout << i << endl ;
12867	break the loop	N/A	N/A	break ;	break ;
12868	DUMMY	0.0	0.0	}	DUMMY
12869	DUMMY	0.0	0.0	}	DUMMY
12870	DUMMY	0.0	0.0	return 0;	DUMMY
12871	DUMMY	0.0	0.0	}	DUMMY
12872	DUMMY	0.0	0.0	int main() {	DUMMY
12873	n = integer , s = integer = 0	N/A	N/A	int n , s = 0 ;	int n, s = 0 ;
12874	read n	N/A	N/A	cin >> n ;	cin >> n ;
12875	loop indefinitely for i = 1 and increase i at the end of the loop	N/A	N/A	for ( int i = 1 ; ; i ++ )	for ( int i = 1 ; ; i ++ )
12876	if s > n	N/A	N/A	if ( s > n )	if ( s > n )
12877	print the result of i - 2	N/A	N/A	cout << i - 2 << " \n " ;	cout << i - 2 << endl ;
12878	exit the for loop	N/A	N/A	break ;	break ;
12879	else	N/A	N/A	else	else
12880	s = s + ( i * ( i + 1 ) ) / 2	N/A	N/A	s += ( i * ( i + 1 ) ) / 2 ;	s += ( i * ( i + 1 ) ) / 2 ;
12881	DUMMY	0.0	0.0	}	DUMMY
12882	DUMMY	0.0	0.0	}	DUMMY
12883	DUMMY	0.0	0.0	}	DUMMY
12884	DUMMY	0.0	0.0	int main() {	DUMMY
12885	var , n , aux , x = int with var = 1 and aux = 0 and x = 0	N/A	N/A	int var = 1 , n , aux = 0 , x = 0 ;	int var = 1, n, aux = 0, x = 0 ;
12886	read n	N/A	N/A	cin >> n ;	cin >> n ;
12887	level = int with level = 0	N/A	N/A	int level = 0 ;	int level = 0 ;
12888	loop infinitely	N/A	N/A	while ( 1 )	while ( 1 )
12889	increment x by var	N/A	N/A	x += var ;	x += var ;
12890	increment aux by x	N/A	N/A	aux += x ;	aux += x ;
12891	if aux > n break	N/A	N/A	if ( aux > n ) break ;	if ( aux > n ) break ;
12892	increment level	N/A	N/A	level ++ ;	level ++ ;
12893	increment var	N/A	N/A	var ++ ;	var ++ ;
12894	DUMMY	0.0	0.0	}	DUMMY
12895	print level	N/A	N/A	cout << level << " \n " ;	cout << level << endl ;
12896	DUMMY	0.0	0.0	}	DUMMY
12897	create constant int INF = 1e9	N/A	N/A	const int INF = 1e9 ;	const int INF = 1e9 ;
12898	let const integer N = 1e5	N/A	N/A	const int N = 1e5 ;	const int N = 1e5 ;
12899	let int array arr of size 10001	N/A	N/A	int arr [ 10001 ] ;	int arr [ 10001 ] ;
12900	declare prework	N/A	N/A	void prework ( )	void prework ( )
12901	set arr [ 0 ] to 0	N/A	N/A	arr [ 0 ] = 0 ;	arr [ 0 ] = 0 ;
12902	for i = 1 to 10000 , set arr [ i ] to arr [ i - 1 ] + i	N/A	N/A	for ( int i = 1 ; i <= 10000 ; i ++ ) { arr [ i ] = arr [ i - 1 ] + i ; }	for ( int i = 1 ; i <= 10000 ; i ++ ) { arr [ i ] = arr [ 1 ] + i ; }
12903	DUMMY	0.0	0.0	}	DUMMY
12904	DUMMY	0.0	0.0	int main() {	DUMMY
12905	call prework	N/A	N/A	prework ( ) ;	prework ( ) ;
12906	let ints n and cnt = 0	N/A	N/A	int n , cnt = 0 ;	int n, cnt = 0 ;
12907	read n	N/A	N/A	cin >> n ;	cin >> n ;
12908	for i = 1 , loop indefinitely	N/A	N/A	for ( int i = 1 ; ; i ++ )	for ( int i = 1 ; ; i ++ )
12909	if n is less than arr [ i ] , break loop	N/A	N/A	if ( n < arr [ i ] ) break ;	if ( n < arr [ i ] ) break ;
12910	set n to n - arr [ i ]	N/A	N/A	n -= arr [ i ] ;	n -= arr [ i ] ;
12911	increment cnt	N/A	N/A	cnt ++ ;	cnt ++ ;
12912	DUMMY	0.0	0.0	}	DUMMY
12913	print cnt	N/A	N/A	cout << cnt << endl ;	cout << cnt << endl ;
12914	DUMMY	0.0	0.0	return 0;	DUMMY
12915	DUMMY	0.0	0.0	}	DUMMY
12916	DUMMY	0.0	0.0	int main() {	DUMMY
12917	create ints n , c = 0 , d , and count = 0	N/A	N/A	int n , c = 0 , d , count = 0 ;	int n, c = 0, d, count = 0 ;
12918	read n	N/A	N/A	cin >> n ;	cin >> n ;
12919	for i = 1 to n	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
12920	set c to c + 1	N/A	N/A	c += i ;	c += 1 ;
12921	if n is greater than or equal to c , increment count	N/A	N/A	if ( n >= c ) count ++ ;	if ( n >= c ) count ++ ;
12922	set n to n - c	N/A	N/A	n -= c ;	n -= c ;
12923	DUMMY	0.0	0.0	}	DUMMY
12924	print count	N/A	N/A	cout << count << endl ;	cout << count << endl ;
12925	DUMMY	0.0	0.0	return 0;	DUMMY
12926	DUMMY	0.0	0.0	}	DUMMY
12927	DUMMY	0.0	0.0	int main() {	DUMMY
12928	n = int	N/A	N/A	int n ;	int n ;
12929	read n	N/A	N/A	cin >> n ;	cin >> n ;
12930	h = int with h = 1	N/A	N/A	int h = 1 ;	int h = 1 ;
12931	temp = int with temp = ( ( h ) * ( h + 1 ) * ( h + 2 ) ) / 6	N/A	N/A	int temp = ( ( h ) * ( h + 1 ) * ( h + 2 ) ) / 6 ;	int temp = ( ( h ) * ( h + 1 ) * pow ( 2, h + 2 ) ) / 6 ;
12932	loop while temp < = n	N/A	N/A	while ( temp <= n )	while ( temp <= n )
12933	increment h	N/A	N/A	h ++ ;	h ++ ;
12934	set temp to ( ( h ) * ( h + 1 ) * ( h + 2 ) ) / 6	N/A	N/A	temp = ( ( h ) * ( h + 1 ) * ( h + 2 ) ) / 6 ;	temp = ( ( h ) * ( h + 1 ) * pow ( 2, h + 2 ) ) / 6 ;
12935	DUMMY	0.0	0.0	}	DUMMY
12936	print h - 1	N/A	N/A	cout << h - 1 << endl ;	cout << h - 1 << endl ;
12937	DUMMY	0.0	0.0	return 0;	DUMMY
12938	DUMMY	0.0	0.0	}	DUMMY
12939	DUMMY	0.0	0.0	int main() {	DUMMY
12940	n = long long	N/A	N/A	long long n ;	long long n ;
12941	read n	N/A	N/A	cin >> n ;	cin >> n ;
12942	val , ans = long long with val = 0 and ans = 0	N/A	N/A	long long val = 0 , ans = 0 ;	long long val = 0, ans = 0 ;
12943	for i = 0 to 10001	N/A	N/A	for ( long long i = 0 ; i < 10001 ; i ++ )	for ( long long i = 0 ; i < 10001 ; i ++ )
12944	increment val by i	N/A	N/A	val += i ;	val += i ;
12945	increment ans by val	N/A	N/A	ans += val ;	ans += val ;
12946	if ans > n	N/A	N/A	if ( ans > n )	if ( ans > n )
12947	print i - 1	N/A	N/A	cout << i - 1 << endl ;	cout << i - 1 << endl ;
12948	DUMMY	0.0	0.0	return 0;	DUMMY
12949	DUMMY	0.0	0.0	}	DUMMY
12950	DUMMY	0.0	0.0	}	DUMMY
12951	DUMMY	0.0	0.0	return 0;	DUMMY
12952	DUMMY	0.0	0.0	}	DUMMY
12953	in function sum taking an int n and returning an int	N/A	N/A	int sum ( int n )	int sum ( int n )
12954	s = int with s = ( n * ( n + 1 ) ) / 2	N/A	N/A	int s = ( n * ( n + 1 ) ) / 2 ;	int s = ( n * ( n + 1 ) ) / 2 ;
12955	return s	N/A	N/A	return s ;	return s ;
12956	DUMMY	0.0	0.0	}	DUMMY
12957	DUMMY	0.0	0.0	int main() {	DUMMY
12958	n = int	N/A	N/A	int n ;	int n ;
12959	read n	N/A	N/A	cin >> n ;	cin >> n ;
12960	i = int with i = 0	N/A	N/A	int i = 0 ;	int i = 0 ;
12961	s = int with s = 0	N/A	N/A	int s = 0 ;	int s = 0 ;
12962	loop infinitely	N/A	N/A	while ( true )	while ( 1 )
12963	increment s by sum of i	N/A	N/A	s = s + sum ( i ) ;	s += i + 1 ;
12964	if s > n	N/A	N/A	if ( s > n )	if ( s > n )
12965	break	N/A	N/A	break ;	break ;
12966	else	N/A	N/A	else	else
12967	increment i	N/A	N/A	i ++ ;	i ++ ;
12968	DUMMY	0.0	0.0	}	DUMMY
12969	DUMMY	0.0	0.0	}	DUMMY
12970	print i - 1	N/A	N/A	cout << ( i - 1 ) << endl ;	cout << i - 1 << endl ;
12971	DUMMY	0.0	0.0	}	DUMMY
12972	DUMMY	0.0	0.0	int main() {	DUMMY
12973	n , count = int with count = 0	N/A	N/A	int n , count = 0 ;	int n, count = 0 ;
12974	read n	N/A	N/A	cin >> n ;	cin >> n ;
12975	flag , i , x = int with flag = 0 and i = 2 and x = 1	N/A	N/A	int flag = 0 , i = 2 , x = 1 ;	int flag = 0, i = 2, x = 1 ;
12976	loop while flag < = n	N/A	N/A	while ( flag <= n )	while ( flag <= n )
12977	increment flag by x	N/A	N/A	flag += x ;	flag += x ;
12978	increment x by i	N/A	N/A	x += i ;	x += i ;
12979	increment i	N/A	N/A	i ++ ;	i ++ ;
12980	if flag < = n increment count	N/A	N/A	if ( flag <= n ) count ++ ;	if ( flag <= n ) count ++ ;
12981	DUMMY	0.0	0.0	}	DUMMY
12982	print count	N/A	N/A	cout << count << endl ;	cout << count << endl ;
12983	DUMMY	0.0	0.0	return 0;	DUMMY
12984	DUMMY	0.0	0.0	}	DUMMY
12985	DUMMY	0.0	0.0	int main() {	DUMMY
12986	n = int	N/A	N/A	int n ;	int n ;
12987	read n	N/A	N/A	cin >> n ;	cin >> n ;
12988	tot , ans = int with tot = 0 and ans = 0	N/A	N/A	int tot = 0 , ans = 0 ;	int tot = 0, ans = 0 ;
12989	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i += 1 )	for ( int i = 1 ; i <= n ; i ++ )
12990	increment tot by i * ( i + 1 ) / 2	N/A	N/A	tot += i * ( i + 1 ) / 2 ;	tot += i * ( i + 1 ) / 2 ;
12991	if tot > n break	N/A	N/A	if ( tot > n ) break ;	if ( tot > n ) break ;
12992	set ans to i	N/A	N/A	ans = i ;	ans = i ;
12993	DUMMY	0.0	0.0	}	DUMMY
12994	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
12995	DUMMY	0.0	0.0	return 0;	DUMMY
12996	DUMMY	0.0	0.0	}	DUMMY
12997	DUMMY	0.0	0.0	int main() {	DUMMY
12998	n = long long , x , count and boxes = 0	N/A	N/A	long long n , x = 0 , count = 0 , boxes = 0 ;	long long n, x, count = 0, boxes = 0 ;
12999	read n	N/A	N/A	cin >> n ;	cin >> n ;
13000	i = 1	N/A	N/A	long long i = 1 ;	long long i = 1 ;
13001	j = 1	N/A	N/A	long long j = 1 ;	long long j = 1 ;
13002	while boxes + i + x < = n	N/A	N/A	while ( boxes + i + x <= n )	while ( boxes + i + x <= n )
13003	add i to x	N/A	N/A	x += i ;	x += i ;
13004	add j to i	N/A	N/A	i += j ;	i += j ;
13005	increment count	N/A	N/A	count ++ ;	count ++ ;
13006	add x to boxes	N/A	N/A	boxes += x ;	boxes += x ;
13007	DUMMY	0.0	0.0	}	DUMMY
13008	print count	N/A	N/A	cout << count << endl ;	cout << count << endl ;
13009	DUMMY	0.0	0.0	}	DUMMY
13010	DUMMY	0.0	0.0	int main() {	DUMMY
13011	let i , n , k be integers	N/A	N/A	int i , n , k ;	int i, n, k ;
13012	while read n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
13013	k is equal to 0	N/A	N/A	k = 0 ;	k = 0 ;
13014	for i is equal to 1 , n > = 0 , increment i by 1	N/A	N/A	for ( i = 1 ; n >= 0 ; i ++ )	for ( i = 1 ; n >= 0 ; i ++ )
13015	increment k by i	N/A	N/A	k += i ;	k += i ;
13016	decrement n by k	N/A	N/A	n -= k ;	n -= k ;
13017	DUMMY	0.0	0.0	}	DUMMY
13018	print i - 2 and newline	N/A	N/A	cout << ( i - 2 ) << endl ;	cout << i - 2 << endl ;
13019	DUMMY	0.0	0.0	}	DUMMY
13020	DUMMY	0.0	0.0	}	DUMMY
13021	a = array of integers of length 10010	N/A	N/A	int a [ 10010 ] ;	int a [ 10010 ] ;
13022	DUMMY	0.0	0.0	int main() {	DUMMY
13023	1st element in a is equal to 1	N/A	N/A	a [ 1 ] = 1 ;	a [ 1 ] = 1 ;
13024	let sum , m be long integers	N/A	N/A	long long int sum , m ;	long long sum, m ;
13025	for i = 2 to 10000 inclusive , the value of a [ i ] is equal to a [ i - 1 ] + i	N/A	N/A	for ( int i = 2 ; i <= 10000 ; i ++ ) a [ i ] = a [ i - 1 ] + i ;	for ( int i = 2 ; i <= 10000 ; i ++ ) { a [ i ] = a [ ( i - 1 ] + i ) ; }
13026	while reading m	N/A	N/A	while ( cin >> m )	while ( cin >> m )
13027	for i = 1 to 10000 inclusive	N/A	N/A	for ( int i = 1 ; i <= 10000 ; i ++ )	for ( int i = 1 ; i <= 10000 ; i ++ )
13028	decrement m by a [ i ]	N/A	N/A	m -= a [ i ] ;	m -= a [ i ] ;
13029	if m is less than a [ i + 1 ]	N/A	N/A	if ( m < a [ i + 1 ] )	if ( m < a [ i + 1 ] )
13030	print i and newline	N/A	N/A	cout << i << endl ;	cout << i << endl ;
13031	stop	N/A	N/A	break ;	break ;
13032	DUMMY	0.0	0.0	}	DUMMY
13033	DUMMY	0.0	0.0	}	DUMMY
13034	DUMMY	0.0	0.0	}	DUMMY
13035	DUMMY	0.0	0.0	return 0;	DUMMY
13036	DUMMY	0.0	0.0	}	DUMMY
13037	declare integer vector sol	N/A	N/A	vector < int > sol ;	vector < int > sol ;
13038	DUMMY	0.0	0.0	int main() {	DUMMY
13039	declare integer n	N/A	N/A	int n ;	int n ;
13040	read n	N/A	N/A	cin >> n ;	cin >> n ;
13041	declare integer sum = 0	N/A	N/A	int sum = 0 ;	int sum = 0 ;
13042	for i = 1 to 150 inclusive	N/A	N/A	for ( int i = 1 ; i <= 150 ; i ++ )	for ( int i = 1 ; i <= 150 ; i ++ )
13043	if sum is greater than n	N/A	N/A	if ( sum > n )	if ( sum > n )
13044	print i - 2 , newline	N/A	N/A	cout << i - 2 << endl ;	cout << i - 2 << endl ;
13045	DUMMY	0.0	0.0	return 0;	DUMMY
13046	DUMMY	0.0	0.0	}	DUMMY
13047	increment sum by ( ( i * ( i + 1 ) ) / 2 )	N/A	N/A	sum += ( ( i * ( i + 1 ) ) / 2 ) ;	sum += ( ( i * ( i + 1 ) ) / 2 ) ;
13048	DUMMY	0.0	0.0	}	DUMMY
13049	DUMMY	0.0	0.0	}	DUMMY
13050	create int array a of length 10010	N/A	N/A	int a [ 10010 ] ;	int a [ 10010 ] ;
13051	DUMMY	0.0	0.0	int main() {	DUMMY
13052	set a [ 0 ] to 0	N/A	N/A	a [ 0 ] = 0 ;	a [ 0 ] = 0 ;
13053	for i = 1 to 10000 inclusive set a [ i ] = a [ i - 1 ] + i	N/A	N/A	for ( int i = 1 ; i <= 10000 ; i ++ ) a [ i ] = a [ i - 1 ] + i ;	for ( int i = 1 ; i <= 10000 ; i ++ ) { a [ i ] = a [ 1 ] + i ; }
13054	create int n	N/A	N/A	int n ;	int n ;
13055	while read n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
13056	ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
13057	loop over i starting from i = 1	N/A	N/A	for ( int i = 1 ; ; i ++ )	for ( int i = 1 ; ; i ++ )
13058	if n > = a [ i ]	N/A	N/A	if ( n >= a [ i ] )	if ( n >= a [ i ] )
13059	set n to n - a [ i ] , increment ans	N/A	N/A	n -= a [ i ] , ans ++ ;	n -= a [ i ], ans ++ ;
13060	else	N/A	N/A	else	else
13061	break	N/A	N/A	break ;	break ;
13062	DUMMY	0.0	0.0	}	DUMMY
13063	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
13064	DUMMY	0.0	0.0	}	DUMMY
13065	DUMMY	0.0	0.0	return 0;	DUMMY
13066	DUMMY	0.0	0.0	}	DUMMY
13067	DUMMY	0.0	0.0	int main() {	DUMMY
13068	n , i , l , s = long long integer with s = 0	N/A	N/A	long long int n , i , l , s = 0 ;	long long int n, i, l, s = 0 ;
13069	read n	N/A	N/A	cin >> n ;	cin >> n ;
13070	for l = 0	N/A	N/A	for ( l = 0 ; ; l ++ )	for ( l = 0 ; ; l ++ )
13071	s = s + l * ( l + 1 ) / 2	N/A	N/A	s += l * ( l + 1 ) / 2 ;	s += l * ( l + 1 ) / 2 ;
13072	if s > n , break loop	N/A	N/A	if ( s > n ) { break ; }	if ( s > n ) break ;
13073	DUMMY	0.0	0.0	}	DUMMY
13074	print l - 1	N/A	N/A	cout << l - 1 << endl ;	cout << l - 1 << endl ;
13075	DUMMY	0.0	0.0	return 0;	DUMMY
13076	DUMMY	0.0	0.0	}	DUMMY
13077	DUMMY	0.0	0.0	int main() {	DUMMY
13078	create int n	N/A	N/A	int n ;	int n ;
13079	read n	N/A	N/A	cin >> n ;	cin >> n ;
13080	create int ans , t and q , set ans to 0 and t , q to 1	N/A	N/A	int ans = 0 , t = 1 , q = 1 ;	int ans = 0, t = 1, q = 1 ;
13081	ans = ans + t	N/A	N/A	ans = ans + t ;	ans += t ;
13082	while n > = ans	N/A	N/A	while ( n >= ans )	while ( n >= ans )
13083	increment q	N/A	N/A	q ++ ;	q ++ ;
13084	set t to t + q	N/A	N/A	t = t + q ;	t += q ;
13085	assign ans + t to ans	N/A	N/A	ans = ans + t ;	ans += t ;
13086	DUMMY	0.0	0.0	}	DUMMY
13087	print q - 1	N/A	N/A	cout << q - 1 << endl ;	cout << q - 1 << endl ;
13088	DUMMY	0.0	0.0	}	DUMMY
13089	DUMMY	0.0	0.0	int main() {	DUMMY
13090	create int n	N/A	N/A	int n ;	int n ;
13091	read n	N/A	N/A	cin >> n ;	cin >> n ;
13092	create int a , c , b and i , set a , c and b to 0	N/A	N/A	int a = 0 , c = 0 , b = 0 , i ;	int a = 1, c = 0, b = 0 and i ;
13093	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( i = 1 ; i <= n ; i ++ )
13094	set b to ( i * ( i + 1 ) ) / 2	N/A	N/A	b = ( i * ( i + 1 ) ) / 2 ;	b = ( i * ( i + 1 ) ) / 2 ;
13095	set a to a + b	N/A	N/A	a += b ;	a += b ;
13096	if a > n , break	N/A	N/A	if ( a > n ) break ;	if ( a > n ) break ;
13097	increment c	N/A	N/A	c ++ ;	c ++ ;
13098	DUMMY	0.0	0.0	}	DUMMY
13099	print c	N/A	N/A	cout << c << endl ;	cout << c << endl ;
13100	DUMMY	0.0	0.0	return 0;	DUMMY
13101	DUMMY	0.0	0.0	}	DUMMY
13102	create ints n and c	N/A	N/A	int n , c ;	int n, c ;
13103	DUMMY	0.0	0.0	int main() {	DUMMY
13104	read n	N/A	N/A	cin >> n ;	cin >> n ;
13105	for c = 1 , loop as long as c * ( c + 1 ) * ( c + 2 ) / 6 < = n	N/A	N/A	for ( c = 1 ; c * ( c + 1 ) * ( c + 2 ) / 6 <= n ; c ++ )	for ( c = 1 ; c * ( c + 1 ) * ( C + 2 ) / 6 <= n ; c ++ )
13106	end statement	N/A	N/A	;	;
13107	print c - 1	N/A	N/A	cout << c - 1 << ' \n ' ;	cout << c - 1 << endl ;
13108	DUMMY	0.0	0.0	}	DUMMY
13109	DUMMY	0.0	0.0	int main() {	DUMMY
13110	let n be an integer	N/A	N/A	int n ;	int n ;
13111	get input in n	N/A	N/A	cin >> n ;	cin >> n ;
13112	let i = 2 = int	N/A	N/A	int i = 2 ;	int i = 2 ;
13113	while n - i * ( i + 1 ) / 2 is positive	N/A	N/A	while ( n - i * ( i + 1 ) / 2 > 0 )	while ( n - i * ( i + 1 ) / 2 > 0 )
13114	decrement n by i * ( i + 1 ) / 2	N/A	N/A	n -= i * ( i + 1 ) / 2 ;	n -= i * ( i + 1 ) / 2 ;
13115	increment i	N/A	N/A	i ++ ;	i ++ ;
13116	DUMMY	0.0	0.0	}	DUMMY
13117	print i - 1	N/A	N/A	cout << i - 1 << endl ;	cout << i - 1 << endl ;
13118	DUMMY	0.0	0.0	}	DUMMY
13119	a is a new array of integers with size 10010	N/A	N/A	int a [ 10010 ] ;	int a [ 10010 ] ;
13120	DUMMY	0.0	0.0	int main() {	DUMMY
13121	set a [ 1 ] to 1	N/A	N/A	a [ 1 ] = 1 ;	a [ 1 ] = 1 ;
13122	declare new long long int variables sum and m	N/A	N/A	long long int sum , m ;	long long int sum, m ;
13123	for i from 2 to 10000 inclusive , change a [ i ] to a [ i - 1 ] + i	N/A	N/A	for ( int i = 2 ; i <= 10000 ; i ++ ) a [ i ] = a [ i - 1 ] + i ;	for ( long long int i = 2 ; i <= 10000 ; i ++ ) { a [ i ] = a [ ( i - 1 ] + i ) ; }
13124	read m and loop further	N/A	N/A	while ( cin >> m )	while ( cin >> m )
13125	start for loop from i = 1 to 10000 inclusive incrementing i	N/A	N/A	for ( int i = 1 ; i <= 10000 ; i ++ )	for ( int i = 1 ; i <= 10000 ; i ++ )
13126	decrease m by a [ i ]	N/A	N/A	m -= a [ i ] ;	m -= a [ i ] ;
13127	if m is less than a [ i + 1 ]	N/A	N/A	if ( m < a [ i + 1 ] )	if ( m < a [ i + 1 ] )
13128	print i	N/A	N/A	cout << i << endl ;	cout << i << endl ;
13129	break the loop	N/A	N/A	break ;	break ;
13130	DUMMY	0.0	0.0	}	DUMMY
13131	DUMMY	0.0	0.0	}	DUMMY
13132	DUMMY	0.0	0.0	}	DUMMY
13133	DUMMY	0.0	0.0	return 0;	DUMMY
13134	DUMMY	0.0	0.0	}	DUMMY
13135	DUMMY	0.0	0.0	int main() {	DUMMY
13136	n = int	N/A	N/A	int n ;	int n ;
13137	a = int with a = 0	N/A	N/A	int a = 0 ;	int a = 0 ;
13138	b = int with b = 1	N/A	N/A	int b = 1 ;	int b = 1 ;
13139	c = int with c = 0	N/A	N/A	int c = 0 ;	int c = 0 ;
13140	read n	N/A	N/A	cin >> n ;	cin >> n ;
13141	loop infinitely	N/A	N/A	while ( true )	while ( 1 )
13142	for i = 1 to b inclusive increment a by i	N/A	N/A	for ( int i = 1 ; i <= b ; i ++ ) { a += i ; }	for ( int i = 1 ; i <= b ; i ++ ) { a += i ; }
13143	increment b	N/A	N/A	b ++ ;	b ++ ;
13144	if a > n break	N/A	N/A	if ( a > n ) { break ; }	if ( a > n ) break ;
13145	increment c	N/A	N/A	c ++ ;	c ++ ;
13146	DUMMY	0.0	0.0	}	DUMMY
13147	print c	N/A	N/A	cout << c << " \n " ;	cout << c << endl ;
13148	DUMMY	0.0	0.0	return 0;	DUMMY
13149	DUMMY	0.0	0.0	}	DUMMY
13150	DUMMY	0.0	0.0	int main() {	DUMMY
13151	n , r , t = int with r = 0 and t = 0	N/A	N/A	int n , r = 0 , t = 0 ;	int n, r = 0, t = 0 ;
13152	read n	N/A	N/A	cin >> n ;	cin >> n ;
13153	for i = 1	N/A	N/A	for ( int i = 1 ; ; ++ i )	for ( int i = 1 ; ; i ++ )
13154	increment r by i	N/A	N/A	r += i ;	r += i ;
13155	increment t by r	N/A	N/A	t += r ;	t += r ;
13156	if t > n	N/A	N/A	if ( t > n )	if ( t > n )
13157	print i - 1	N/A	N/A	cout << ( i - 1 ) << endl ;	cout << i - 1 << endl ;
13158	break	N/A	N/A	break ;	break ;
13159	DUMMY	0.0	0.0	}	DUMMY
13160	DUMMY	0.0	0.0	}	DUMMY
13161	DUMMY	0.0	0.0	return 0;	DUMMY
13162	DUMMY	0.0	0.0	}	DUMMY
13163	DUMMY	0.0	0.0	int main() {	DUMMY
13164	let int n	N/A	N/A	int n ;	int n ;
13165	read n and while n is truthy	N/A	N/A	while ( cin >> n )	while ( cin >> n )
13166	let long long int sum = 0	N/A	N/A	long long sum = 0 ;	long long int sum = 0 ;
13167	let int i	N/A	N/A	int i ;	int i ;
13168	for i = 1 loop indefinitely	N/A	N/A	for ( i = 1 ; ; i ++ )	for ( i ; ; i ++ )
13169	make long long current = 1LL * i * ( i + 1 ) / 2	N/A	N/A	long long current = 1LL * i * ( i + 1 ) / 2 ;	long long current = 1LL * i * ( i + 1 ) / 2 ;
13170	if sum + current is less than or equal to n	N/A	N/A	if ( sum + current <= n )	if ( sum + current <= n )
13171	set n to n - sum + current	N/A	N/A	n -= sum + current ;	n -= sum + current ;
13172	else do	N/A	N/A	else	else
13173	break loop	N/A	N/A	break ;	break ;
13174	DUMMY	0.0	0.0	}	DUMMY
13175	print i - 1	N/A	N/A	cout << i - 1 << endl ;	cout << i - 1 << endl ;
13176	DUMMY	0.0	0.0	}	DUMMY
13177	DUMMY	0.0	0.0	return 0;	DUMMY
13178	DUMMY	0.0	0.0	}	DUMMY
13179	cube = long long	N/A	N/A	long long cube ;	long long cube ;
13180	DUMMY	0.0	0.0	int main() {	DUMMY
13181	res = long long	N/A	N/A	long long res ;	long long res ;
13182	read cube	N/A	N/A	cin >> cube ;	cin >> cube ;
13183	for i = 0 loop while i * ( i + 1 ) * ( i + 2 ) < = 6 * cube set res to i	N/A	N/A	for ( long long i = 0 ; i * ( i + 1 ) * ( i + 2 ) <= 6 * cube ; ++ i ) { res = i ; }	for ( long long i = 0 ; i * ( i + 1 ) * ( long + 2 ) <= 6 * cube ; i ++ ) res = i ;
13184	print res	N/A	N/A	cout << res << endl ;	cout << res << endl ;
13185	DUMMY	0.0	0.0	return 0;	DUMMY
13186	DUMMY	0.0	0.0	}	DUMMY
13187	declare need with integer a as argument , returning integer	N/A	N/A	int need ( int a )	int need ( int a )
13188	declare b as integer = 0	N/A	N/A	int b = 0 ;	int b = 0 ;
13189	for i = 1 to a inclusive , increment b by i	N/A	N/A	for ( int i = 1 ; i <= a ; i ++ ) { b += i ; }	for ( int i = 1 ; i <= a ; i ++ ) b += i ;
13190	return b from function	N/A	N/A	return b ;	return b ;
13191	DUMMY	0.0	0.0	}	DUMMY
13192	DUMMY	0.0	0.0	int main() {	DUMMY
13193	declare integer a	N/A	N/A	int a ;	int a ;
13194	read a	N/A	N/A	cin >> a ;	cin >> a ;
13195	declare integer i with i = 0	N/A	N/A	int i = 0 ;	int i = 0 ;
13196	while a is greater than or equal to result of run need with i as argument	N/A	N/A	while ( a >= need ( i ) )	while ( a >= need ( i ) )
13197	decrement a by need ( 1 )	N/A	N/A	a -= need ( i ) ;	a -= need ( 1 ) ;
13198	increment i	N/A	N/A	i ++ ;	i ++ ;
13199	DUMMY	0.0	0.0	}	DUMMY
13200	print i - 1 print newline	N/A	N/A	cout << i - 1 << endl ;	cout << i - 1 << endl ;
13201	DUMMY	0.0	0.0	}	DUMMY
13202	DUMMY	0.0	0.0	int main() {	DUMMY
13203	n = int	N/A	N/A	int n ;	int n ;
13204	read n	N/A	N/A	cin >> n ;	cin >> n ;
13205	sum , i , b = int	N/A	N/A	int sum , i , b ;	int sum, i, b ;
13206	set sum , b , i to 1	N/A	N/A	sum = b = i = 1 ;	sum = b = i = 1 ;
13207	loop infinitely	N/A	N/A	for ( ; ; )	while ( 1 )
13208	if sum is n	N/A	N/A	if ( sum == n )	if ( sum == n )
13209	print i	N/A	N/A	cout << i << endl ;	cout << i << endl ;
13210	break	N/A	N/A	break ;	break ;
13211	else	N/A	N/A	else	else
13212	if sum > n	N/A	N/A	if ( sum > n )	if ( sum > n )
13213	print i - 1	N/A	N/A	cout << ( i - 1 ) << endl ;	cout << i - 1 << endl ;
13214	break	N/A	N/A	break ;	break ;
13215	else	N/A	N/A	else	else
13216	increment i	N/A	N/A	i ++ ;	i ++ ;
13217	increment b by i	N/A	N/A	b += i ;	b += i ;
13218	increment sum by b	N/A	N/A	sum += b ;	sum += b ;
13219	DUMMY	0.0	0.0	}	DUMMY
13220	DUMMY	0.0	0.0	}	DUMMY
13221	DUMMY	0.0	0.0	}	DUMMY
13222	DUMMY	0.0	0.0	return 0;	DUMMY
13223	DUMMY	0.0	0.0	}	DUMMY
13224	DUMMY	0.0	0.0	int main() {	DUMMY
13225	n = int	N/A	N/A	int n ;	int n ;
13226	read n	N/A	N/A	cin >> n ;	cin >> n ;
13227	sum and height = 0	N/A	N/A	int sum = 0 , height = 0 ;	int sum = 0, height = 0 ;
13228	while sum < = n	N/A	N/A	while ( sum <= n )	while ( sum <= n )
13229	increment height	N/A	N/A	height ++ ;	height ++ ;
13230	add height * ( height + 1 ) / 2 to sum	N/A	N/A	sum += height * ( height + 1 ) / 2 ;	sum += height * ( height + 1 ) / 2 ;
13231	DUMMY	0.0	0.0	}	DUMMY
13232	print height - 1	N/A	N/A	cout << height - 1 << endl ;	cout << height - 1 << endl ;
13233	DUMMY	0.0	0.0	return 0;	DUMMY
13234	DUMMY	0.0	0.0	}	DUMMY
13235	DUMMY	0.0	0.0	int main() {	DUMMY
13236	let n , sum , level be integers	N/A	N/A	int n , sum , level ;	int n, sum, level ;
13237	while read n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
13238	if n is equal to 1	N/A	N/A	if ( n == 1 )	if ( n == 1 )
13239	print 1 and newline	N/A	N/A	cout << ' 1 ' << endl ;	cout << 1 << endl ;
13240	proceed to next	N/A	N/A	continue ;	continue ;
13241	DUMMY	0.0	0.0	}	DUMMY
13242	sum is equal to 1 , level is equal to 1	N/A	N/A	sum = 1 , level = 1 ;	sum = 1, level = 1 ;
13243	for integer i is equal to 2 , the condition is always true , increment i by 1	N/A	N/A	for ( int i = 2 ; ; i ++ )	for ( int i = 2 ; ; i ++ )
13244	increment level by i	N/A	N/A	level += i ;	level += i ;
13245	increment sum by level	N/A	N/A	sum += level ;	sum += level ;
13246	if sum is equal to n	N/A	N/A	if ( sum == n )	if ( sum == n )
13247	print i and newline	N/A	N/A	cout << i << endl ;	cout << i << endl ;
13248	stop	N/A	N/A	break ;	break ;
13249	else if sum is greater than n	N/A	N/A	else if ( sum > n )	else if ( sum > n )
13250	print i - 1 and newline	N/A	N/A	cout << i - 1 << endl ;	cout << i - 1 << endl ;
13251	stop	N/A	N/A	break ;	break ;
13252	DUMMY	0.0	0.0	}	DUMMY
13253	DUMMY	0.0	0.0	}	DUMMY
13254	DUMMY	0.0	0.0	}	DUMMY
13255	DUMMY	0.0	0.0	return 0;	DUMMY
13256	DUMMY	0.0	0.0	}	DUMMY
13257	DUMMY	0.0	0.0	int main() {	DUMMY
13258	n = int	N/A	N/A	int n ;	int n ;
13259	read n	N/A	N/A	cin >> n ;	cin >> n ;
13260	if n < 4	N/A	N/A	if ( n < 4 )	if ( n < 4 )
13261	print 1	N/A	N/A	cout << 1 << endl ;	cout << 1 << endl ;
13262	DUMMY	0.0	0.0	return 0;	DUMMY
13263	DUMMY	0.0	0.0	}	DUMMY
13264	cnt = 0 , m = 1 , i = 1 , sum = 0	N/A	N/A	int cnt = 0 , m = 1 , i = 1 , sum = 0 ;	long long int cnt = 0, m = 1, i = l, sum = 0 ;
13265	while sum + i < = n	N/A	N/A	while ( sum + i <= n )	while ( sum + i <= n )
13266	addi to sum	N/A	N/A	sum = sum + i ;	sum += i ;
13267	increment cnt	N/A	N/A	cnt ++ ;	cnt ++ ;
13268	increment m	N/A	N/A	m ++ ;	m ++ ;
13269	add m to i	N/A	N/A	i += m ;	i += m ;
13270	DUMMY	0.0	0.0	}	DUMMY
13271	print cnt	N/A	N/A	cout << cnt << endl ;	cout << cnt << endl ;
13272	DUMMY	0.0	0.0	}	DUMMY
13273	DUMMY	0.0	0.0	int main() {	DUMMY
13274	let n be a integer	N/A	N/A	int n ;	int n ;
13275	read n	N/A	N/A	while ( cin >> n )	cin >> n ;
13276	the 1000th element of sum1 is equal to 0	N/A	N/A	int sum1 [ 1000 ] = { 0 } ;	int sum1 [ 1000 ] = { 0 } ;
13277	the 1000th element of sum2 is equal to 1	N/A	N/A	int sum2 [ 1000 ] = { 1 } ;	sum2 [ 1000 ] = 1 ;
13278	let sum be a integer with sum = 0	N/A	N/A	int sum = 0 ;	int sum = 0 ;
13279	for i = 1 to 50 exclusive	N/A	N/A	for ( int i = 1 ; i < 50 ; i ++ )	for ( int i = 1 ; i < 50 ; i ++ )
13280	increment sum by i	N/A	N/A	sum += i ;	sum += i ;
13281	sum1 [ i - 1 ] is equal to sum	N/A	N/A	sum1 [ i - 1 ] = sum ;	sum1 [ i - 1 ] = sum ;
13282	sum1 [ i ] is equal to sum1 [ i - 1 ] + i + 1	N/A	N/A	sum1 [ i ] = sum1 [ i - 1 ] + i + 1 ;	sum1 [ i ] += i + 1 ;
13283	sum2 [ i ] is equal to sum2 [ i - 1 ] + sum1 [ i ]	N/A	N/A	sum2 [ i ] = sum2 [ i - 1 ] + sum1 [ i ] ;	sum2 [ j ] = sum2 [ i - 1 ] + sum1 [ i ] ;
13284	if sum2 [ i - 1 ] < = n and sum2 [ i ] is greater than n , print i and newline	N/A	N/A	if ( ( sum2 [ i - 1 ] <= n ) && ( sum2 [ i ] > n ) ) cout << i << endl ;	if ( ( sum2 [ i - 1 ] <= n ) && ( sum1 [ i ] > n ) ) cout << i << endl ;
13285	DUMMY	0.0	0.0	}	DUMMY
13286	DUMMY	0.0	0.0	}	DUMMY
13287	DUMMY	0.0	0.0	}	DUMMY
13288	DUMMY	0.0	0.0	int main() {	DUMMY
13289	declare integer n	N/A	N/A	int n ;	int n ;
13290	read n	N/A	N/A	cin >> n ;	cin >> n ;
13291	declare integer cont = 0	N/A	N/A	int cont = 0 ;	int cont = 0 ;
13292	declare integer sumador = 1	N/A	N/A	int sumador = 1 ;	int sumador = 1 ;
13293	declare i = 1 as integer	N/A	N/A	int i = 1 ;	int i = 1 ;
13294	while n is greater than 0 and n is greater than or equal to sumador	N/A	N/A	while ( n > 0 && n >= sumador )	while ( n > 0 && n >= sumador )
13295	let n be n - sumador	N/A	N/A	n = n - sumador ;	n = n - sumador ;
13296	increment cont	N/A	N/A	cont ++ ;	cont ++ ;
13297	increment i	N/A	N/A	i ++ ;	i ++ ;
13298	let sumador = sumador + 1	N/A	N/A	sumador = sumador + i ;	sumador = sumador + 1 ;
13299	DUMMY	0.0	0.0	}	DUMMY
13300	print cont , " \ n "	N/A	N/A	cout << cont << " \n " ;	cout << cont << " \n " ;
13301	DUMMY	0.0	0.0	return 0;	DUMMY
13302	DUMMY	0.0	0.0	}	DUMMY
13303	declare int variables n and i	N/A	N/A	int n , i ;	int n, i ;
13304	DUMMY	0.0	0.0	int main() {	DUMMY
13305	read user input to n	N/A	N/A	cin >> n ;	cin >> n ;
13306	for i from 1 to 40 inclusive incrementing i	N/A	N/A	for ( i = 1 ; i <= 40 ; i ++ )	for ( i = 1 ; i <= 40 ; i ++ )
13307	if i * ( i + 1 ) * ( i + 2 ) / 6 is greater than n , stop the loop	N/A	N/A	if ( i * ( i + 1 ) * ( i + 2 ) / 6 > n ) break ;	if ( i * ( i + 1 ) * ( 1 + 2 ) / 6 > n ) break ;
13308	print i - 1 to the standard output	N/A	N/A	cout << i - 1 << endl ;	cout << i - 1 << endl ;
13309	DUMMY	0.0	0.0	}	DUMMY
13310	DUMMY	0.0	0.0	int main() {	DUMMY
13311	declare integers n , tmp = 0 , hitung = 0	N/A	N/A	int n , tmp = 0 , hitung = 0 ;	int n, tmp = 0, hitung = 0 ;
13312	read n	N/A	N/A	cin >> n ;	cin >> n ;
13313	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
13314	increment hitung by ( ( i * ( i + 1 ) ) / 2 )	N/A	N/A	hitung += ( ( i * ( i + 1 ) ) / 2 ) ;	hitung += ( ( i * ( i + 1 ) ) / 2 ) ;
13315	if hitung is n	N/A	N/A	if ( hitung == n )	if ( hitung == n )
13316	set tmp to i	N/A	N/A	tmp = i ;	tmp = i ;
13317	break loop	N/A	N/A	break ;	break ;
13318	else if hitung is greater than n	N/A	N/A	else if ( hitung > n )	else if ( hitung > n )
13319	set tmp to i - 1	N/A	N/A	tmp = i - 1 ;	tmp = i - 1 ;
13320	break loop	N/A	N/A	break ;	break ;
13321	DUMMY	0.0	0.0	}	DUMMY
13322	DUMMY	0.0	0.0	}	DUMMY
13323	print tmp , newline	N/A	N/A	cout << tmp << endl ;	cout << tmp << endl ;
13324	DUMMY	0.0	0.0	}	DUMMY
13325	create integer length = 1e5	N/A	N/A	int length = 1e5 ;	int length = 1e5 ;
13326	DUMMY	0.0	0.0	int main() {	DUMMY
13327	let ints n , i , and sum = 0	N/A	N/A	int n , i , sum = 0 ;	int n, i, sum = 0 ;
13328	read n	N/A	N/A	cin >> n ;	cin >> n ;
13329	create int vector a of size n + 1	N/A	N/A	vector < int > a ( n + 1 ) ;	vector < int > a ( n + 1 ) ;
13330	set a [ 0 ] to 0	N/A	N/A	a [ 0 ] = 0 ;	a [ 0 ] = 0 ;
13331	for i = 1 to n , set a [ i ] to a [ i - 1 ] + i	N/A	N/A	for ( i = 1 ; i <= n ; i ++ ) { a [ i ] = a [ i - 1 ] + i ; }	for ( i = 1 ; i <= n ; i ++ ) { a [ i ] = a [ 1 ] + i ; }
13332	for i = 1 until sum < = n and i < = n are false , set sum to sum + a [ i ]	N/A	N/A	for ( i = 1 ; ( sum <= n ) && ( i <= n ) ; i ++ ) { sum += a [ i ] ; }	for ( i = 1 ; sum <= n && i <= n ; i ++ ) sum += a [ i ] ;
13333	if n is equal to 1 , increase 1 by 1	N/A	N/A	if ( n == 1 ) i ++ ;	if ( n == 1 ) ++ i ;
13334	print the result of i - 2	N/A	N/A	cout << i - 2 << endl ;	cout << i - 2 << endl ;
13335	DUMMY	0.0	0.0	return 0;	DUMMY
13336	DUMMY	0.0	0.0	}	DUMMY
13337	DUMMY	0.0	0.0	int main() {	DUMMY
13338	declare new integer variable n	N/A	N/A	int n ;	int n ;
13339	read n and keep looping	N/A	N/A	while ( cin >> n )	while ( cin >> n )
13340	declare new long long variable sum with value 0	N/A	N/A	long long sum = 0 ;	long long sum = 0 ;
13341	declare new integer called i	N/A	N/A	int i ;	int i ;
13342	set i to 1 and increment it in a for loop	N/A	N/A	for ( i = 1 ; ; i ++ )	for ( i = 1 ; ; i ++ )
13343	declare new long long variable current with value 1LL * i * ( i + 1 ) / 2	N/A	N/A	long long current = 1LL * i * ( i + 1 ) / 2 ;	long long current = 1LL * i * ( i + 1 ) / 2 ;
13344	if sum + current < = n	N/A	N/A	if ( sum + current <= n )	if ( sum + current <= n )
13345	subtract sum + current from n	N/A	N/A	n -= sum + current ;	n -= sum + current ;
13346	else	N/A	N/A	else	else
13347	break the loop	N/A	N/A	break ;	break ;
13348	DUMMY	0.0	0.0	}	DUMMY
13349	print i - 1 to the standard output	N/A	N/A	cout << i - 1 << endl ;	cout << i - 1 << endl ;
13350	DUMMY	0.0	0.0	}	DUMMY
13351	DUMMY	0.0	0.0	return 0;	DUMMY
13352	DUMMY	0.0	0.0	}	DUMMY
13353	DUMMY	0.0	0.0	int main() {	DUMMY
13354	create integer n	N/A	N/A	int n ;	int n ;
13355	while get n do the following till valid input	N/A	N/A	while ( cin >> n )	while ( cin >> n )
13356	create long long sum , prev , x and set them to 0	N/A	N/A	long long sum = 0 , prev = 0 , x = 0 ;	long long sum = 0, prev, x = 0 ;
13357	for integer i = 1 to n with increment i	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
13358	add sum to prev	N/A	N/A	prev += sum ;	prev += sum ;
13359	add i to sum	N/A	N/A	sum += i ;	sum += i ;
13360	if sum + prev less than or equal to n	N/A	N/A	if ( sum + prev <= n )	if ( sum + prev <= n )
13361	increment x	N/A	N/A	x ++ ;	x ++ ;
13362	else do the following	N/A	N/A	else	else
13363	break the loop	N/A	N/A	break ;	break ;
13364	DUMMY	0.0	0.0	}	DUMMY
13365	print x	N/A	N/A	cout << x << endl ;	cout << x << endl ;
13366	DUMMY	0.0	0.0	}	DUMMY
13367	DUMMY	0.0	0.0	return 0;	DUMMY
13368	DUMMY	0.0	0.0	}	DUMMY
13369	in function inum taking pointer to an int a , int k , int i returning int	N/A	N/A	int inum ( int * a , int k , int i )	int inum ( int * a, int * k, int i )
13370	for l = 1 to k	N/A	N/A	for ( int l = 1 ; l < k ; l ++ )	for ( int l = 1 ; l <= k ; l ++ )
13371	if a [ l - 1 ] is not 1	N/A	N/A	if ( a [ l - 1 ] != - 1 )	if ( a [ l - 1 ]!= 1 )
13372	set a [ l ] to a [ l - 1 ] + ( l + 1 )	N/A	N/A	a [ l ] = a [ l - 1 ] + ( l + 1 ) ;	a [ l ] = a [ l - 1 ] + ( l + 1 ) ;
13373	else	N/A	N/A	else	else
13374	set a [ l ] to ( inum of a , l , i ) + l + 1	N/A	N/A	a [ l ] = inum ( a , l , i ) + l + 1 ;	a [ l ] = inum ( a, l, i ) + l + 1 ;
13375	DUMMY	0.0	0.0	}	DUMMY
13376	DUMMY	0.0	0.0	}	DUMMY
13377	return value of ( a + ( k - 1 ) )	N/A	N/A	return * ( a + ( k - 1 ) ) ;	return ( a + ( k - 1 ) ) ;
13378	DUMMY	0.0	0.0	}	DUMMY
13379	in function isum taking int i returning int	N/A	N/A	int isum ( int i )	int isum ( int i )
13380	arr , a = int array of size i each	N/A	N/A	int arr [ i ] , a [ i ] ;	int arr [ i ], a [ ( i ] ] ;
13381	set arr [ i ] to - 1	N/A	N/A	arr [ i ] = { - 1 } ;	arr [ i ] = - 1 ;
13382	set a [ i ] to - 1	N/A	N/A	a [ i ] = { - 1 } ;	a [ i ] = - 1 ;
13383	set a [ 0 ] to 1	N/A	N/A	a [ 0 ] = 1 ;	a [ 0 ] = 1 ;
13384	set arr [ 0 ] to 1	N/A	N/A	arr [ 0 ] = 1 ;	arr [ 0 ] = 1 ;
13385	if i is 1	N/A	N/A	if ( i == 1 )	if ( i == 1 )
13386	return i	N/A	N/A	return i ;	return i ;
13387	else	N/A	N/A	else	else
13388	j = int with j = 1	N/A	N/A	int j = 1 ;	int j = 1 ;
13389	for j to i	N/A	N/A	for ( j ; j < i ; j ++ )	for ( j ; j < i ; j ++ )
13390	if arr [ j - 1 ] is not - 1	N/A	N/A	if ( arr [ j - 1 ] != - 1 )	if ( arr [ j - 1 ]!= - 1 )
13391	set arr [ j ] to arr [ j - 1 ] + inum of a , j + 1 , i	N/A	N/A	arr [ j ] = arr [ j - 1 ] + inum ( a , j + 1 , i ) ;	arr [ j ] = arr [ j - 1 ] + inum ( a, j + 1, i ) ;
13392	else	N/A	N/A	else	else
13393	set arr [ j ] to isnum of j + j + 1	N/A	N/A	arr [ j ] = isum ( j ) + ( j + 1 ) ;	arr [ j ] = isnum ( j + j + 1 ) ;
13394	DUMMY	0.0	0.0	}	DUMMY
13395	DUMMY	0.0	0.0	}	DUMMY
13396	DUMMY	0.0	0.0	}	DUMMY
13397	return value of arr + ( i - 1 )	N/A	N/A	return * ( arr + ( i - 1 ) ) ;	return arr + ( i - 1 ) ;
13398	DUMMY	0.0	0.0	}	DUMMY
13399	DUMMY	0.0	0.0	int main() {	DUMMY
13400	n , i = int with i = 1	N/A	N/A	int n , i = 1 ;	int n, i = 1 ;
13401	read n	N/A	N/A	cin >> n ;	cin >> n ;
13402	loop while isnum of i < = n increment i	N/A	N/A	while ( isum ( i ) <= n ) { i ++ ; }	for ( ; isnum ( i ) <= n ; i ++ )
13403	print i - 1	N/A	N/A	cout << ( i - 1 ) << endl ;	cout << i - 1 << endl ;
13404	DUMMY	0.0	0.0	return 0;	DUMMY
13405	DUMMY	0.0	0.0	}	DUMMY
13406	DUMMY	0.0	0.0	int main() {	DUMMY
13407	declare n , cnt , sum , ans , i as long long integers	N/A	N/A	long long int n , cnt , sum , ans , i ;	long long int n, cnt, sum, ans, i ;
13408	read n	N/A	N/A	cin >> n ;	cin >> n ;
13409	let cnt be 0 , ans be 0 , sum be 0	N/A	N/A	cnt = 0 , ans = 0 , sum = 0 ;	cnt = 0, sum = 0 ;
13410	for i = 1 to 10000 inclusive	N/A	N/A	for ( i = 1 ; i <= 10000 ; i ++ )	for ( i = 1 ; i <= 10000 ; i ++ )
13411	increment ans by i	N/A	N/A	ans += i ;	ans += i ;
13412	increment sum by ans	N/A	N/A	sum += ans ;	sum += ans ;
13413	if sum is greater than n , break loop	N/A	N/A	if ( sum > n ) break ;	if ( sum > n ) break ;
13414	increment cnt	N/A	N/A	cnt ++ ;	cnt ++ ;
13415	DUMMY	0.0	0.0	}	DUMMY
13416	print cnt print newline	N/A	N/A	cout << cnt << endl ;	cout << cnt << endl ;
13417	DUMMY	0.0	0.0	return 0;	DUMMY
13418	DUMMY	0.0	0.0	}	DUMMY
13419	DUMMY	0.0	0.0	int main() {	DUMMY
13420	create integer n	N/A	N/A	int n ;	int n ;
13421	create integer array a with dimension 100	N/A	N/A	int a [ 100 ] ;	int a [ 100 ] ;
13422	while get n do till valid input	N/A	N/A	while ( cin >> n )	while ( cin >> n )
13423	create integer i , sum with i = 2 , sum = 0	N/A	N/A	int i = 2 , sum = 0 ;	int i = 2, sum = 0 ;
13424	create integer cs with cs = 0	N/A	N/A	int cs = 0 ;	int cs = 0 ;
13425	set a [ 1 ] to 1	N/A	N/A	a [ 1 ] = 1 ;	a [ 1 ] = 1 ;
13426	for integer i = 2 with increment i till sum less than n	N/A	N/A	for ( i = 2 ; sum < n ; i ++ )	for ( i = 2 ; i < n ; i ++ )
13427	set a [ i ] to i + a [ i - 1 ]	N/A	N/A	a [ i ] = i + a [ i - 1 ] ;	a [ i ] = i + a [ i - 1 ] ;
13428	add a [ i ] to sum	N/A	N/A	sum += a [ i ] ;	sum += a [ i ] ;
13429	set cs to i - 1	N/A	N/A	cs = i - 1 ;	cs = i - 1 ;
13430	DUMMY	0.0	0.0	}	DUMMY
13431	print cs	N/A	N/A	cout << cs << endl ;	cout << cs << endl ;
13432	DUMMY	0.0	0.0	}	DUMMY
13433	DUMMY	0.0	0.0	}	DUMMY
13434	DUMMY	0.0	0.0	int main() {	DUMMY
13435	create integer variables n , i and l with i and l = 0	N/A	N/A	int n , i = 0 , l = 0 ;	int n, i = 0, l = 0 ;
13436	read standard input to n	N/A	N/A	cin >> n ;	cin >> n ;
13437	while l < = n	N/A	N/A	while ( l <= n )	while ( l <= n )
13438	increment i by one	N/A	N/A	i ++ ;	i ++ ;
13439	change l to sum of l and ( i * ( i + 1 ) ) / 2	N/A	N/A	l += ( i * ( i + 1 ) ) / 2 ;	l += ( i * ( i + 1 ) ) / 2 ;
13440	DUMMY	0.0	0.0	}	DUMMY
13441	print i - 1	N/A	N/A	cout << i - 1 << endl ;	cout << i - 1 << endl ;
13442	DUMMY	0.0	0.0	return 0;	DUMMY
13443	DUMMY	0.0	0.0	}	DUMMY
13444	cum = long long array of size 102	N/A	N/A	long long cum [ 100 + 2 ] ;	long long cum [ 102 ] ;
13445	DUMMY	0.0	0.0	int main() {	DUMMY
13446	for i = 1 to 100 inclusive set cum [ i ] to i	N/A	N/A	for ( int i = 1 ; i <= 100 ; i ++ ) cum [ i ] = i ;	for ( int i = 1 ; i <= 100 ; i ++ ) { cum [ i ] = i ; }
13447	for i = 2 to 100 inclusive increment cum [ i ] by cum [ i - 1 ]	N/A	N/A	for ( int i = 2 ; i <= 100 ; i ++ ) { cum [ i ] += cum [ i - 1 ] ; }	for ( long long i = 2 ; i <= 100 ; i ++ ) { cum [ i ] += cum [ ( i - 1 ) ] ; }
13448	n = int	N/A	N/A	int n ;	int n ;
13449	read n	N/A	N/A	cin >> n ;	cin >> n ;
13450	sum = long long with sum = 0	N/A	N/A	long long sum = 0 ;	long long sum = 0 ;
13451	Count = int with Count = 0	N/A	N/A	int Count = 0 ;	int Count = 0 ;
13452	i = int	N/A	N/A	int i ;	int i ;
13453	iterate i starting at 1 while sum < = n	N/A	N/A	for ( i = 1 ; sum <= n ; i ++ )	for ( i = 1 ; sum <= n ; i ++ )
13454	increment sum by cum [ i ]	N/A	N/A	sum += cum [ i ] ;	sum += cum [ i ] ;
13455	if sum > n	N/A	N/A	if ( sum > n )	if ( sum > n )
13456	break	N/A	N/A	break ;	break ;
13457	else	N/A	N/A	else	else
13458	increment Count	N/A	N/A	Count ++ ;	Count ++ ;
13459	DUMMY	0.0	0.0	}	DUMMY
13460	print Count	N/A	N/A	cout << Count << endl ;	cout << Count << endl ;
13461	DUMMY	0.0	0.0	}	DUMMY
13462	DUMMY	0.0	0.0	int main() {	DUMMY
13463	create int sum = 1	N/A	N/A	int sum = 1 ;	int sum = 1 ;
13464	make int levels = 1	N/A	N/A	int levels = 1 ;	int levels = 1 ;
13465	make integer counter = 0	N/A	N/A	int counter = 0 ;	int counter = 0 ;
13466	let int n	N/A	N/A	int n ;	int n ;
13467	read n	N/A	N/A	cin >> n ;	cin >> n ;
13468	for i = 2 to n	N/A	N/A	for ( int i = 2 ; sum <= n ; i ++ )	for ( int i = 2 ; i <= n ; i ++ )
13469	increment counter	N/A	N/A	counter ++ ;	counter ++ ;
13470	set levels to levels + i	N/A	N/A	levels = levels + i ;	levels += i ;
13471	set sum to sum + levels	N/A	N/A	sum = sum + levels ;	sum += levels ;
13472	DUMMY	0.0	0.0	}	DUMMY
13473	print counter	N/A	N/A	cout << counter << endl ;	cout << counter << endl ;
13474	DUMMY	0.0	0.0	}	DUMMY
13475	DUMMY	0.0	0.0	int main() {	DUMMY
13476	declare long long n	N/A	N/A	long long n ;	long long n ;
13477	while read n is true	N/A	N/A	while ( cin >> n )	while ( cin >> n )
13478	declare i as integer	N/A	N/A	int i ;	int i ;
13479	declare long long t = 0	N/A	N/A	long long t = 0 ;	long long t = 0 ;
13480	declare long long k = 0	N/A	N/A	long long k = 0 ;	long long k = 0 ;
13481	declare last as integer	N/A	N/A	int last ;	int last ;
13482	for i = 1 , incrementing i	N/A	N/A	for ( i = 1 ; ; i ++ )	for ( i = 1 ; ; i ++ )
13483	increment t by i	N/A	N/A	t += i ;	t += i ;
13484	increment k by t	N/A	N/A	k += t ;	k += t ;
13485	if n is greater than or equal to k	N/A	N/A	if ( n >= k )	if ( n >= k )
13486	let last be i	N/A	N/A	last = i ;	last = i ;
13487	else	N/A	N/A	else	else
13488	break loop	N/A	N/A	break ;	break ;
13489	DUMMY	0.0	0.0	}	DUMMY
13490	DUMMY	0.0	0.0	}	DUMMY
13491	if n is 0 , let last be 0	N/A	N/A	if ( n == 0 ) { last = 0 ; }	if ( n == 0 ) last = 0 ;
13492	print last , newline	N/A	N/A	cout << last << endl ;	cout << last << endl ;
13493	DUMMY	0.0	0.0	}	DUMMY
13494	DUMMY	0.0	0.0	}	DUMMY
13495	integer function check with string argument s and integer arguments i and j	N/A	N/A	int check ( string s , int i , int j )	int check ( string s, int i, int j )
13496	declare integer variables l = i and r = j	N/A	N/A	int l = i , r = j ;	int l = i, r = j ;
13497	while l is less than r	N/A	N/A	while ( l < r )	while ( l < r )
13498	if s [ l ] = s [ r ]	N/A	N/A	if ( s [ l ] == s [ r ] )	if ( s [ l ] == s [ r ] )
13499	increment l	N/A	N/A	l ++ ;	l ++ ;
13500	decrease r by one	N/A	N/A	r -- ;	r -- ;
13501	skip the rest of the loop	N/A	N/A	continue ;	continue ;
13502	else	N/A	N/A	else	else
13503	DUMMY	0.0	0.0	return 0;	DUMMY
13504	DUMMY	0.0	0.0	}	DUMMY
13505	return 1	N/A	N/A	return 1 ;	return 1 ;
13506	DUMMY	0.0	0.0	}	DUMMY
13507	DUMMY	0.0	0.0	int main() {	DUMMY
13508	declare string variable s	N/A	N/A	string s ;	string s ;
13509	read s	N/A	N/A	cin >> s ;	cin >> s ;
13510	i , n and j are integers where n = length of s	N/A	N/A	int i , n = s . length ( ) , j ;	int i, n = s. length ( ), j ;
13511	set value of i to 0	N/A	N/A	i = 0 ;	i = 0 ;
13512	set j to n - 1	N/A	N/A	j = n - 1 ;	j = n - 1 ;
13513	while i is less than j	N/A	N/A	while ( i < j )	while ( i < j )
13514	if s [ i ] ! = s [ j ]	N/A	N/A	if ( s [ i ] != s [ j ] )	if ( s [ i ]!= s [ j ] )
13515	if i + 1 = j	N/A	N/A	if ( i + 1 == j )	if ( i + 1 == j )
13516	insert s [ i ] at position s . begin ( ) + j + 1 of s	N/A	N/A	s . insert ( s . begin ( ) + j + 1 , s [ i ] ) ;	s. insert ( s. begin ( ) + j + 1 ) ;
13517	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
13518	DUMMY	0.0	0.0	return 0;	DUMMY
13519	else	N/A	N/A	else	else
13520	if check ( s , i + 1 , j ) is 1	N/A	N/A	if ( check ( s , i + 1 , j ) )	if ( check ( s, i + 1, j ) == 1 )
13521	insert s [ i ] at position s . begin ( ) + j + 1 of s	N/A	N/A	s . insert ( s . begin ( ) + j + 1 , s [ i ] ) ;	s. insert ( s. begin ( ) + j + 1 ) ;
13522	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
13523	DUMMY	0.0	0.0	return 0;	DUMMY
13524	else if check ( s , i , j - 1 ) is 1	N/A	N/A	else if ( check ( s , i , j - 1 ) )	else if ( check ( s, i, j - 1 ) == 1 )
13525	insert s [ j ] at position s . begin ( ) + i of s	N/A	N/A	s . insert ( s . begin ( ) + i , s [ j ] ) ;	s. insert ( s. begin ( ) + i ) ;
13526	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
13527	DUMMY	0.0	0.0	return 0;	DUMMY
13528	else	N/A	N/A	else	else
13529	print " NA "	N/A	N/A	cout << " NA " << endl ;	cout << " NA " << endl ;
13530	DUMMY	0.0	0.0	return 0;	DUMMY
13531	DUMMY	0.0	0.0	}	DUMMY
13532	DUMMY	0.0	0.0	}	DUMMY
13533	else	N/A	N/A	else	else
13534	increase i	N/A	N/A	i ++ ;	i ++ ;
13535	decrease j by one	N/A	N/A	j -- ;	j -- ;
13536	DUMMY	0.0	0.0	}	DUMMY
13537	DUMMY	0.0	0.0	}	DUMMY
13538	if length of s is even	N/A	N/A	if ( s . length ( ) % 2 == 0 )	if ( s. length ( ) % 2 == 0 )
13539	push character ' a ' to s at position s . begin ( ) + n / 2	N/A	N/A	s . insert ( s . begin ( ) + n / 2 , ' a ' ) ;	s. push_back ( s. begin ( ) + n / 2 ) ;
13540	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
13541	DUMMY	0.0	0.0	return 0;	DUMMY
13542	else	N/A	N/A	else	else
13543	push character aat s [ n / 2 ] to s at position s . begin ( ) + n / 2 + 1	N/A	N/A	s . insert ( s . begin ( ) + n / 2 + 1 , s [ n / 2 ] ) ;	s. push ( s. begin ( ) + n / 2 + 1 ) ;
13544	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
13545	DUMMY	0.0	0.0	return 0;	DUMMY
13546	DUMMY	0.0	0.0	}	DUMMY
13547	DUMMY	0.0	0.0	}	DUMMY
13548	let s1 be character array with size 15	N/A	N/A	char s1 [ 15 ] ;	char s1 [ 15 ] ;
13549	set s2 be character array with size 15	N/A	N/A	char s2 [ 15 ] ;	char s2 [ 15 ] ;
13550	set s be character array with size 15	N/A	N/A	char s [ 15 ] ;	char s [ 15 ] ;
13551	DUMMY	0.0	0.0	int main() {	DUMMY
13552	declare integer variable f = 0	N/A	N/A	int f = 0 ;	int f = 0 ;
13553	read s1	N/A	N/A	cin >> s1 ;	cin >> s1 ;
13554	declare integer variable n = length of s1	N/A	N/A	int n = strlen ( s1 ) ;	int n = s1. length ( ) ;
13555	create boolean flag = 0	N/A	N/A	bool flag = 0 ;	bool flag = 0 ;
13556	for i = 0 to 26 exclusive	N/A	N/A	for ( int i = 0 ; i < 26 ; i ++ )	for ( int i = 0 ; i < 26 ; i ++ )
13557	for j = 0 to n inclusive	N/A	N/A	for ( int j = 0 ; j <= n ; j ++ )	for ( int j = 0 ; j <= n ; j ++ )
13558	set f to 0	N/A	N/A	f = 0 ;	f = 0 ;
13559	for k = 0 to j exclusive , set s [ k ] to s1 [ k ]	N/A	N/A	for ( int k = 0 ; k < j ; k ++ ) { s [ k ] = s1 [ k ] ; }	for ( int k = 0 ; k < j ; k ++ ) { s [ k ] = s1 [ ++ k ] ; }
13560	s [ j ] = char ( ' a ' + i )	N/A	N/A	s [ j ] = char ( ' a ' + i ) ;	s [ j ] = char ('a'+ i ) ;
13561	for k = j + 1 to n inclusive , set s [ k ] to s1 [ k - 1 ]	N/A	N/A	for ( int k = j + 1 ; k <= n ; k ++ ) { s [ k ] = s1 [ k - 1 ] ; }	for ( int k = j + 1 ; k <= n ; k ++ ) s [ k ] = s1 [ k - 1 ] ;
13562	for i = 0 , j = n while i < j increase i and decrease j	N/A	N/A	for ( int i = 0 , j = n ; i < j ; i ++ , j -- )	for ( int i = 0, j = n ; i < j ; i ++, j -- )
13563	if s [ i ] ! = s [ j ]	N/A	N/A	if ( s [ i ] != s [ j ] )	if ( s [ i ]!= s [ j ] )
13564	increment f	N/A	N/A	f ++ ;	f ++ ;
13565	if f > = 1 , break	N/A	N/A	if ( f >= 1 ) { break ; }	if ( f >= 1 ) break ;
13566	DUMMY	0.0	0.0	}	DUMMY
13567	DUMMY	0.0	0.0	}	DUMMY
13568	if f = 0	N/A	N/A	if ( f == 0 )	if (! f )
13569	print n elements of s	N/A	N/A	for ( int i = 0 ; i <= n ; i ++ ) { cout << s [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cout << s [ i ] << endl ; }
13570	print new line	N/A	N/A	cout << endl ;	cout << endl ;
13571	DUMMY	0.0	0.0	return 0;	DUMMY
13572	DUMMY	0.0	0.0	}	DUMMY
13573	DUMMY	0.0	0.0	}	DUMMY
13574	DUMMY	0.0	0.0	}	DUMMY
13575	print " NA "	N/A	N/A	cout << " NA " << endl ;	cout << " NA "
13576	DUMMY	0.0	0.0	return 0;	DUMMY
13577	DUMMY	0.0	0.0	}	DUMMY
13578	DUMMY	0.0	0.0	int main() {	DUMMY
13579	declare string s	N/A	N/A	string s ;	string s ;
13580	read s	N/A	N/A	cin >> s ;	cin >> s ;
13581	declare integer variable pntr = length of s - 1	N/A	N/A	int pntr = s . size ( ) - 1 ;	int pntr = s. length ( ) - 1 ;
13582	declare character c	N/A	N/A	char c ;	char c ;
13583	for i = 0 to length of s / 2 exclusive	N/A	N/A	for ( int i = 0 ; i < s . size ( ) / 2 ; i ++ )	for ( int i = 0 ; i < s. length ( ) / 2 ; i ++ )
13584	if s [ i ] ! = s [ pntr ]	N/A	N/A	if ( s [ i ] != s [ pntr ] )	if ( s [ i ]!= s [ pntr ] )
13585	declare boolean b = true	N/A	N/A	bool b = true ;	bool b = true ;
13586	declare integer variable pntr2 = pntr	N/A	N/A	int pntr2 = pntr ;	int pntr2 = bntr ;
13587	for integer j = i + 1 to ( length of s + 1 ) / 2 exclusive	N/A	N/A	for ( int j = i + 1 ; j < ( s . size ( ) + 1 ) / 2 ; j ++ )	for ( int j = i + 1 ; j < ( s. size ( ) + 1 ) / 2 ; j ++ )
13588	if s [ j ] ! = s [ pntr2 ]	N/A	N/A	if ( s [ j ] != s [ pntr2 ] )	if ( s [ j ]!= s [ pntr2 ] )
13589	set b to false	N/A	N/A	b = false ;	b = false ;
13590	else	N/A	N/A	else	else
13591	decrease pntr2	N/A	N/A	pntr2 -- ;	pntr2 -- ;
13592	if b is true	N/A	N/A	if ( b )	if ( b )
13593	assign value of s [ i ] to c	N/A	N/A	c = s [ i ] ;	c = s [ i ] ;
13594	for integer j = 0 to length of s exclusive	N/A	N/A	for ( int j = 0 ; j < s . size ( ) ; j ++ )	for ( int j = 0 ; j < s. length ( ) ; j ++ )
13595	print s [ j ]	N/A	N/A	cout << s [ j ] ;	cout << s [ j ] ;
13596	if j = pntr print c	N/A	N/A	if ( j == pntr ) cout << c ;	if ( j == pntr ) cout << c << endl ;
13597	DUMMY	0.0	0.0	}	DUMMY
13598	print new line	N/A	N/A	cout << endl ;	cout << endl ;
13599	DUMMY	0.0	0.0	return 0;	DUMMY
13600	DUMMY	0.0	0.0	}	DUMMY
13601	pntr2 = pntr - 1	N/A	N/A	pntr2 = pntr - 1 ;	pntr2 = pntr - 1 ;
13602	set value of b to true	N/A	N/A	b = true ;	b = true ;
13603	for integer j = i to ( length of s + 1 ) / 2 exclusive	N/A	N/A	for ( int j = i ; j < ( s . size ( ) + 1 ) / 2 ; j ++ )	for ( int j = i ; j < ( int ) s. size ( ) + 1 ) / 2 ; j ++ )
13604	if s [ j ] ! = s [ pntr2 ]	N/A	N/A	if ( s [ j ] != s [ pntr2 ] )	if ( s [ j ]!= s [ pntr2 ] )
13605	b = false	N/A	N/A	b = false ;	b = false ;
13606	else	N/A	N/A	else	else
13607	decrement pntr2	N/A	N/A	pntr2 -- ;	pntr2 -- ;
13608	if b	N/A	N/A	if ( b )	if ( b )
13609	assign value of s [ pntr ] to c	N/A	N/A	c = s [ pntr ] ;	c = s [ pntr2 ] ;
13610	for integer j = 0 to length of s exclusive	N/A	N/A	for ( int j = 0 ; j < s . size ( ) ; j ++ )	for ( int j = 0 ; j < s. length ( ) ; j ++ )
13611	if j = i	N/A	N/A	if ( j == i ) cout << c ;	if ( j == i )
13612	print s [ j ]	N/A	N/A	cout << s [ j ] ;	cout << s [ j ] ;
13613	DUMMY	0.0	0.0	}	DUMMY
13614	print new line	N/A	N/A	cout << endl ;	cout << endl ;
13615	DUMMY	0.0	0.0	return 0;	DUMMY
13616	DUMMY	0.0	0.0	}	DUMMY
13617	print " NA "	N/A	N/A	cout << " NA " << endl ;	cout << " NA "
13618	DUMMY	0.0	0.0	return 0;	DUMMY
13619	else	N/A	N/A	else	else
13620	decrement pntr	N/A	N/A	pntr -- ;	pntr -- ;
13621	DUMMY	0.0	0.0	}	DUMMY
13622	if length of s is an even number	N/A	N/A	if ( s . size ( ) % 2 )	if ( s. length ( ) % 2 == 0 )
13623	for i = 0 to length of s exclusive	N/A	N/A	for ( int i = 0 ; i < s . size ( ) ; i ++ )	for ( int i = 0 ; i < s. length ( ) ; i ++ )
13624	if i = ( length of s ) / 2	N/A	N/A	if ( i == ( s . size ( ) ) / 2 )	if ( i == ( s. length ( ) ) / 2 )
13625	print s [ i ] and s [ i ]	N/A	N/A	cout << s [ i ] << s [ i ] ;	cout << s [ i ] << " " ;
13626	else	N/A	N/A	else	else
13627	print s [ i ]	N/A	N/A	cout << s [ i ] ;	cout << s [ i ] ;
13628	print new line	N/A	N/A	cout << endl ;	cout << endl ;
13629	else	N/A	N/A	else	else
13630	for integer i = 0 to length of s exclusive	N/A	N/A	for ( int i = 0 ; i < s . size ( ) ; i ++ )	for ( int i = 0 ; i < s. length ( ) ; i ++ )
13631	if i = ( length of s / 2 )	N/A	N/A	if ( i == ( s . size ( ) / 2 ) )	if ( i == ( int ) s. length ( ) / 2 )
13632	print " a " and s [ i ]	N/A	N/A	cout << " a " << s [ i ] ;	cout << " a " << s [ i ] << endl ;
13633	else	N/A	N/A	else	else
13634	print s [ i ]	N/A	N/A	cout << s [ i ] ;	cout << s [ i ] ;
13635	print new line	N/A	N/A	cout << endl ;	cout << endl ;
13636	DUMMY	0.0	0.0	}	DUMMY
13637	DUMMY	0.0	0.0	}	DUMMY
13638	declare string variable s	N/A	N/A	string s ;	string s ;
13639	DUMMY	0.0	0.0	int main() {	DUMMY
13640	read s	N/A	N/A	cin >> s ;	cin >> s ;
13641	for char = ' a ' to ' z ' inclusive going alphabetically	N/A	N/A	for ( char c = ' a ' ; c <= ' z ' ; c ++ )	for ( char i ='a'; i <='z'; ++ i )
13642	for integer i = 0 to length of s inclusive	N/A	N/A	for ( int i = 0 ; i <= s . size ( ) ; i ++ )	for ( int i = 0 ; i <= s. length ( ) ; i ++ )
13643	declare string t = s	N/A	N/A	string t = s ;	string t = s ;
13644	insert character c to the t at position i	N/A	N/A	t . insert ( i , 1 , c ) ;	t. insert ( i, c ) ;
13645	create string k = t	N/A	N/A	string k = t ;	string k = t ;
13646	reverse k	N/A	N/A	reverse ( k . begin ( ) , k . end ( ) ) ;	reverse ( k. begin ( ), k. end ( ) ) ;
13647	if k = t	N/A	N/A	if ( k == t )	if ( k == t )
13648	print t	N/A	N/A	cout << t << endl ;	cout << t << endl ;
13649	DUMMY	0.0	0.0	return 0;	DUMMY
13650	DUMMY	0.0	0.0	}	DUMMY
13651	DUMMY	0.0	0.0	}	DUMMY
13652	print " NA "	N/A	N/A	cout << " NA " << endl ;	cout << " NA " << endl ;
13653	DUMMY	0.0	0.0	return 0;	DUMMY
13654	DUMMY	0.0	0.0	}	DUMMY
13655	DUMMY	0.0	0.0	int main() {	DUMMY
13656	create string s	N/A	N/A	string s ;	string s ;
13657	read s	N/A	N/A	cin >> s ;	cin >> s ;
13658	create integer flag with flag = - 1	N/A	N/A	int flag = - 1 ;	int flag = - 1 ;
13659	create integer sz with sz = size of s	N/A	N/A	int sz = s . size ( ) ;	int sz = s. size ( ) ;
13660	for i = 0 to 26 exclusive	N/A	N/A	for ( int i = 0 ; i < 26 ; i ++ )	for ( int i = 0 ; i < 26 ; i ++ )
13661	create string a	N/A	N/A	string a ;	string a ;
13662	add element ( ' a ' + i ) to end of a	N/A	N/A	a . push_back ( ' a ' + i ) ;	a. push_back ('a'+ i ) ;
13663	increment a by s	N/A	N/A	a += s ;	a += s ;
13664	for j = 0 to sz exclusive	N/A	N/A	for ( int j = 0 ; j < sz ; j ++ )	for ( int j = 0 ; j < sz ; j ++ )
13665	create string b with b = 0	N/A	N/A	string b = a ;	string b = 0 ;
13666	reverse element order from beginning of b to end of b	N/A	N/A	reverse ( b . begin ( ) , b . end ( ) ) ;	reverse ( b. begin ( ), b. end ( ) ) ;
13667	if a is b	N/A	N/A	if ( a == b )	if ( a == b )
13668	print a print newline	N/A	N/A	cout << a << endl ;	cout << a << endl ;
13669	DUMMY	0.0	0.0	return 0;	DUMMY
13670	DUMMY	0.0	0.0	}	DUMMY
13671	swap element values from a [ j ] to a [ j + 1 ]	N/A	N/A	swap ( a [ j ] , a [ j + 1 ] ) ;	swap ( a [ 0 ], a [ j + 1 ] ) ;
13672	DUMMY	0.0	0.0	}	DUMMY
13673	create string b with b = a	N/A	N/A	string b = a ;	string b = a ;
13674	reverse element order from beginning of b to end of b	N/A	N/A	reverse ( b . begin ( ) , b . end ( ) ) ;	reverse ( b. begin ( ), b. end ( ) ) ;
13675	if a is b	N/A	N/A	if ( a == b )	if ( a == b )
13676	print a print newline	N/A	N/A	cout << a << endl ;	cout << a << endl ;
13677	DUMMY	0.0	0.0	return 0;	DUMMY
13678	DUMMY	0.0	0.0	}	DUMMY
13679	DUMMY	0.0	0.0	}	DUMMY
13680	print " NA " print newline	N/A	N/A	cout << " NA " << endl ;	cout << " NA " << endl ;
13681	DUMMY	0.0	0.0	return 0;	DUMMY
13682	DUMMY	0.0	0.0	}	DUMMY
13683	create 2d integer array mp with size 1010 by 1010	N/A	N/A	int mp [ 1010 ] [ 1010 ] ;	int mp [ 1010 ] [ 10000 ] ;
13684	DUMMY	0.0	0.0	int main() {	DUMMY
13685	create integers m , n , k	N/A	N/A	int m , n , k ;	int m, n, k ;
13686	read m read n read k	N/A	N/A	cin >> m >> n >> k ;	cin >> m >> n >> k ;
13687	set bytes from m to size of m to value 0	N/A	N/A	memset ( mp , 0 , sizeof ( mp ) ) ;	memset ( m, 0, sizeof ( m ) ) ;
13688	create integer flog with flag = 0	N/A	N/A	int flog = 0 ;	int flog = 0 ;
13689	create integer ans with ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
13690	for i = 1 to k inclusive	N/A	N/A	for ( int i = 1 ; i <= k ; i ++ )	for ( int i = 1 ; i <= k ; i ++ )
13691	create integers x , y	N/A	N/A	int x , y ;	int x, y ;
13692	read x read y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
13693	set mp [ x ] [ y ] to 1	N/A	N/A	mp [ x ] [ y ] = 1 ;	mp [ x ] [ y ] = 1 ;
13694	if flag is 0	N/A	N/A	if ( flog == 0 )	if ( flag == 0 )
13695	if ( mp [ x - 1 ] [ y ] and mp [ x - 1 ] [ y - 1 ] and mp [ x ] [ y - 1 ] ) , set flog to 1	N/A	N/A	if ( mp [ x - 1 ] [ y ] && mp [ x - 1 ] [ y - 1 ] && mp [ x ] [ y - 1 ] ) flog = 1 ;	if ( mp [ x - 1 ] [ y ] && mp [ 0 ] [ 1 ] && mmp [ x ] [ Y - 1 + 1 ] ) flog = 1 ;
13696	if ( mp [ x + 1 ] [ y ] and mp [ x + 1 ] [ y + 1 ] and mp [ x ] [ y + 1 ] ) , set flog to 1	N/A	N/A	if ( mp [ x + 1 ] [ y ] && mp [ x + 1 ] [ y + 1 ] && mp [ x ] [ y + 1 ] ) flog = 1 ;	if ( mp [ x + 1 ] [ y ] && mp [ 0 ] [ x - 1 ] and mp [ 1 ]. y ++ ] ) flog = 1 ;
13697	if ( mp [ x - 1 ] [ y ] and mp [ x - 1 ] [ y + 1 ] and mp [ x ] [ y + 1 ] ) , set flog to 1	N/A	N/A	if ( mp [ x - 1 ] [ y ] && mp [ x - 1 ] [ y + 1 ] && mp [ x ] [ y + 1 ] ) flog = 1 ;	if ( mp [ x - 1 ] [ y ] && mp [ 0 ] [ x + 1 ] &&! mp [ y ) ) flog = 1 ;
13698	if ( mp [ x + 1 ] [ y ] and mp [ x + 1 ] [ y - 1 ] and mp [ x ] [ y - 1 ] ) , set flog to 1	N/A	N/A	if ( mp [ x + 1 ] [ y ] && mp [ x + 1 ] [ y - 1 ] && mp [ x ] [ y - 1 ] ) flog = 1 ;	if ( mp [ x + 1 ] [ y ] && mp [ 0 ] [ x - 1 ] && mmp [ x ] [ Y - 2 ] ) flog = 1 ;
13699	if flog is true	N/A	N/A	if ( flog )	if ( flog )
13700	print i print newline	N/A	N/A	cout << i << endl ;	cout << i << endl ;
13701	DUMMY	0.0	0.0	return 0;	DUMMY
13702	DUMMY	0.0	0.0	}	DUMMY
13703	DUMMY	0.0	0.0	}	DUMMY
13704	DUMMY	0.0	0.0	}	DUMMY
13705	print " 0 " print newline	N/A	N/A	cout << " 0 " << endl ;	cout << " 0 " << endl ;
13706	DUMMY	0.0	0.0	}	DUMMY
13707	mp = two dimensional int array of sizes 1010 and 1010	N/A	N/A	int mp [ 1010 ] [ 1010 ] ;	int mp [ 100 + 10 ] [ 1010 ] ;
13708	DUMMY	0.0	0.0	int main() {	DUMMY
13709	m , n , k = int	N/A	N/A	int m , n , k ;	int m, n, k ;
13710	read m then n then k	N/A	N/A	cin >> m >> n >> k ;	cin >> m >> n >> k ;
13711	set all values of mp to 0	N/A	N/A	memset ( mp , 0 , sizeof ( mp ) ) ;	memset ( mp, 0, sizeof ( mp ) ) ;
13712	flog = int with flog = 0	N/A	N/A	int flog = 0 ;	int flog = 0 ;
13713	ans = int with ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
13714	for i = 1 to k inclusive	N/A	N/A	for ( int i = 1 ; i <= k ; i ++ )	for ( int i = 1 ; i <= k ; i ++ )
13715	x , y = int	N/A	N/A	int x , y ;	int x, y ;
13716	read x then y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
13717	set mp [ x ] [ y ] to 1	N/A	N/A	mp [ x ] [ y ] = 1 ;	mp [ x ] [ y ] = 1 ;
13718	if flog is 0	N/A	N/A	if ( flog == 0 )	if (! flog )
13719	if mp [ x - 1 ] [ y ] is not 0 and mp [ x - 1 ] [ y - 1 ] is not 0 and mp [ x ] [ y - 1 ] is not 0 then set flog to 1	N/A	N/A	if ( mp [ x - 1 ] [ y ] && mp [ x - 1 ] [ y - 1 ] && mp [ x ] [ y - 1 ] ) flog = 1 ;	if ( mp [ x - 1 ] [ y ]!= 0 &&! mp [ 1 ]. y - i ] && mp [ 0 ] [ Y - 1 + ]!= 1 ) flog = 1 ;
13720	if mp [ x + 1 ] [ y ] is not 0 and mp [ x + 1 ] [ y + 1 ] is not 0 and mp [ x ] [ y + 1 ] is not 0 then set flog to 1	N/A	N/A	if ( mp [ x + 1 ] [ y ] && mp [ x + 1 ] [ y + 1 ] && mp [ x ] [ y + 1 ] ) flog = 1 ;	if ( mp [ x + 1 ] [ y ]!= 0 && mp [ 0 ] [ x ]!= 1 &&! mp [ y + 2 ] ) flog = 1 ;
13721	if mp [ x - 1 ] [ y ] is not 0 and mp [ x - 1 ] [ y + 1 ] is not 0 and mp [ x ] [ y + 1 ] is not 0 then set flog to 1	N/A	N/A	if ( mp [ x - 1 ] [ y ] && mp [ x - 1 ] [ y + 1 ] && mp [ x ] [ y + 1 ] ) flog = 1 ;	if ( mp [ x - 1 ] [ y ]!= 0 && mp [ 0 ] [ x + 1 ]!= 1 &&! mp [ y + 2 ] ) flog = 1 ;
13722	if mp [ x + 1 ] [ y ] is not 0 and mp [ x + 1 ] [ y - 1 ] is not 0 and mp [ x ] [ y - 1 ] is not 0 then set flog to 1	N/A	N/A	if ( mp [ x + 1 ] [ y ] && mp [ x + 1 ] [ y - 1 ] && mp [ x ] [ y - 1 ] ) flog = 1 ;	if ( mp [ x + 1 ] [ y ]!= 0 && mp [ 0 + 1 ) [ y - 1 ]!= 1 &&! mp [ mp ] [ Y - i ] ) flog = 1 ;
13723	if flog is not 0	N/A	N/A	if ( flog )	if ( flog )
13724	print i	N/A	N/A	cout << i << endl ;	cout << i << endl ;
13725	DUMMY	0.0	0.0	return 0;	DUMMY
13726	DUMMY	0.0	0.0	}	DUMMY
13727	DUMMY	0.0	0.0	}	DUMMY
13728	DUMMY	0.0	0.0	}	DUMMY
13729	print " 0 "	N/A	N/A	cout << " 0 " << endl ;	puts ( " 0 " ) ;
13730	DUMMY	0.0	0.0	}	DUMMY
13731	let OO , NegOO , N , mod be constant integers with OO = 0x3f3f3f3f , NegOO = - 1 * OO , N = 1e3 + 5 , mod = 1e9 + 7	N/A	N/A	const int OO = 0x3f3f3f3f , NegOO = - 1 * OO , N = 1e3 + 5 , mod = 1e9 + 7 ;	const int OO = 0x3f3f7f, NegOO = - 1 * OO, N = 1e3 + 5, mod = (e9 + 7 ) ;
13732	black = 2d boolean array of N rows and N columns	N/A	N/A	bool black [ N ] [ N ] ;	bool black [ n ] [ N ] ;
13733	boolean check of int x , int z	N/A	N/A	bool check ( int x , int z )	bool check ( int x, int z )
13734	if black [ x + 1 ] [ z ] and black [ x + 1 ] [ z + 1 ] and black [ x ] [ z + 1 ] , return the value 1	N/A	N/A	if ( black [ x + 1 ] [ z ] && black [ x + 1 ] [ z + 1 ] && black [ x ] [ z + 1 ] ) return 1 ;	if ( black [ x + 1 ] [ z ] && black [ 0 + i ] [ 1 ] && Black [ x ] [ n + 1 ) return 1 ;
13735	if black [ x ] [ z - 1 ] and black [ x + 1 ] [ z - 1 ] and black [ x + 1 ] [ z ] , return the value 1	N/A	N/A	if ( black [ x ] [ z - 1 ] && black [ x + 1 ] [ z - 1 ] && black [ x + 1 ] [ z ] ) return 1 ;	if ( black [ x ] ['z'- 1 ] && black ['x'+ 1 ] [ z - 2 ] &&black [ x +'1'+ z ] ) { return 1 ; }
13736	if black [ x ] [ z - 1 ] and black [ x - 1 ] [ z ] and black [ x - 1 ] [ z - 1 ] , return the value 1	N/A	N/A	if ( black [ x ] [ z - 1 ] && black [ x - 1 ] [ z ] && black [ x - 1 ] [ z - 1 ] ) return 1 ;	if ( black [ x ] ['z'- 1 ] && black ['x - 1'['-1 ] ) { return 1 ; }
13737	if black [ x ] [ z + 1 ] and black [ x - 1 ] [ z ] and black [ x - 1 ] [ z + 1 ] , return the value 1	N/A	N/A	if ( black [ x ] [ z + 1 ] && black [ x - 1 ] [ z ] && black [ x - 1 ] [ z + 1 ] ) return 1 ;	if ( black [ x ] ['z'+ 1 ] && black ['x'- 1 ] [ z ] &&black [ x - 2 ] [ " z + 1'] ) return 1 ;
13738	DUMMY	0.0	0.0	return 0;	DUMMY
13739	DUMMY	0.0	0.0	}	DUMMY
13740	DUMMY	0.0	0.0	int main() {	DUMMY
13741	let n , m , k be integers	N/A	N/A	int n , m , k ;	int n, m, k ;
13742	read n , m , k	N/A	N/A	cin >> n >> m >> k ;	cin >> n >> m >> k ;
13743	let ans be a integer with ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
13744	let x , z be integers	N/A	N/A	int x , z ;	int x, z ;
13745	for i = 0 to k exclusive	N/A	N/A	for ( int i = 0 ; i < k ; ++ i )	for ( int i = 0 ; i < k ; i ++ )
13746	read x , z	N/A	N/A	cin >> x >> z ;	cin >> x >> z ;
13747	set black [ x ] [ z ] to 1	N/A	N/A	black [ x ] [ z ] = 1 ;	black [ x ] [ z ] = 1 ;
13748	if not ans	N/A	N/A	if ( ! ans )	if (! ans )
13749	if check ( x , z ) , ans is equal to i + 1	N/A	N/A	if ( check ( x , z ) ) ans = i + 1 ;	if ( check ( x, z ) ) ans = i + 1 ;
13750	DUMMY	0.0	0.0	}	DUMMY
13751	DUMMY	0.0	0.0	}	DUMMY
13752	print ans and newline	N/A	N/A	cout << ans << " \n " ;	cout << ans << endl ;
13753	DUMMY	0.0	0.0	return 0;	DUMMY
13754	DUMMY	0.0	0.0	}	DUMMY
13755	declare long longs n , m , i , k , v1 , v2 and f where f = 0 , and 2d long long array a with size 1007 by 1007	N/A	N/A	long long n , m , i , a [ 1007 ] [ 1007 ] , k , v1 , v2 , f = 0 ;	long long n, m, i, k, v1, v2, f = 0, a [ 1007 ] [ 10007 ] ;
13756	DUMMY	0.0	0.0	int main() {	DUMMY
13757	read n , m and k	N/A	N/A	cin >> n >> m >> k ;	cin >> n >> m >> k ;
13758	for i from 1 to k inclusive	N/A	N/A	for ( i = 1 ; i <= k ; i ++ )	for ( i = 1 ; i <= k ; i ++ )
13759	read v1 and v2	N/A	N/A	cin >> v1 >> v2 ;	cin >> v1 >> v2 ;
13760	change a [ v1 ] [ v2 ] to 1	N/A	N/A	a [ v1 ] [ v2 ] = 1 ;	a [ v1 ] [ v2 ] = 1 ;
13761	if ( a [ v1 ] [ v2 ] + a [ v1 + 1 ] [ v2 ] + a [ v1 + 1 ] [ v2 + 1 ] + a [ v1 ] [ v2 + 1 ] ) = 4	N/A	N/A	if ( ( a [ v1 ] [ v2 ] + a [ v1 + 1 ] [ v2 ] + a [ v1 + 1 ] [ v2 + 1 ] + a [ v1 ] [ v2 + 1 ] ) == 4 )	if ( ( a [ v1 ] [ v2 ] + a [ V1 + 1 ] [ V2 ] ) < 4 ) { m ++ ; }
13762	print i	N/A	N/A	cout << i << endl ;	cout << i << endl ;
13763	assign 1 to f	N/A	N/A	f = 1 ;	f = 1 ;
13764	break the loop	N/A	N/A	break ;	break ;
13765	DUMMY	0.0	0.0	}	DUMMY
13766	if a [ v1 ] [ v2 ] + a [ v1 - 1 ] [ v2 ] + a [ v1 ] [ v2 + 1 ] + a [ v1 - 1 ] [ v2 + 1 ] = 4	N/A	N/A	if ( ( a [ v1 ] [ v2 ] + a [ v1 - 1 ] [ v2 ] + a [ v1 ] [ v2 + 1 ] + a [ v1 - 1 ] [ v2 + 1 ] ) == 4 )	if ( ( a [ v1 ] [ v2 ] + a [ V1 - 1 ] [ V2 ] ) + ( b [ v3 ] [v2 + 1 ] + ( a1 - l2 ) + 1 ) == 4 )
13767	print i	N/A	N/A	cout << i << endl ;	cout << i << endl ;
13768	set f to 1	N/A	N/A	f = 1 ;	f = 1 ;
13769	stop the loop	N/A	N/A	break ;	break ;
13770	DUMMY	0.0	0.0	}	DUMMY
13771	if a [ v1 ] [ v2 ] + a [ v1 ] [ v2 - 1 ] + a [ v1 + 1 ] [ v2 ] + a [ v1 + 1 ] [ v2 - 1 ] = 4	N/A	N/A	if ( ( a [ v1 ] [ v2 ] + a [ v1 ] [ v2 - 1 ] + a [ v1 + 1 ] [ v2 ] + a [ v1 + 1 ] [ v2 - 1 ] ) == 4 )	if ( ( a [ v1 ] [ v2 ] + a [ V1 ]. v2 - 1 ] ) + ( a1 + 1 ] [ V2 ] ) < 4 ) { f = 0 ; }
13772	print i	N/A	N/A	cout << i << endl ;	cout << i << endl ;
13773	set f to 1	N/A	N/A	f = 1 ;	f = 1 ;
13774	stop the loop	N/A	N/A	break ;	break ;
13775	DUMMY	0.0	0.0	}	DUMMY
13776	if a [ v1 ] [ v2 ] + a [ v1 - 1 ] [ v2 ] + a [ v1 ] [ v2 - 1 ] + a [ v1 - 1 ] [ v2 - 1 ] = 4	N/A	N/A	if ( ( a [ v1 ] [ v2 ] + a [ v1 - 1 ] [ v2 ] + a [ v1 ] [ v2 - 1 ] + a [ v1 - 1 ] [ v2 - 1 ] ) == 4 )	if ( ( a [ v1 ] [ v2 ] + a [ V1 - 1 ] [ V2 ] ) + b [ v3 ] [ ( v2 + 1 ] ) - a [v1 - 2 ] [ { v2 - 1 } ) == 4 )
13777	print i	N/A	N/A	cout << i << endl ;	cout << i << endl ;
13778	change f to 1	N/A	N/A	f = 1 ;	f = 1 ;
13779	break the loop	N/A	N/A	break ;	break ;
13780	DUMMY	0.0	0.0	}	DUMMY
13781	DUMMY	0.0	0.0	}	DUMMY
13782	if f is equal to 0 , print 0	N/A	N/A	if ( f == 0 ) cout << 0 << endl ;	if ( f == 0 ) cout << 0 << endl ;
13783	DUMMY	0.0	0.0	return 0;	DUMMY
13784	DUMMY	0.0	0.0	}	DUMMY
13785	create constant integer N with N = 1e5 + 5	N/A	N/A	const int N = 1e5 + 5 ;	const int N = 1e5 + 5 ;
13786	create integers x , y , create integer array arr with size 1005 by 1005	N/A	N/A	int x , y , arr [ 1005 ] [ 1005 ] = { } ;	int x, y, arr [ 1005 ] [ 10005 ] ;
13787	declare solve with integers st1 , st2 as arguments , returning boolean	N/A	N/A	bool solve ( int st1 , int st2 )	bool solve ( int st1, int st2 )
13788	for z = st1 to st1 + 1 inclusive	N/A	N/A	for ( int z = st1 ; z <= st1 + 1 ; ++ z )	for ( int z = st1 ; z <= st1 + 1 ; z ++ )
13789	for v = st2 to st2 + 2 inclusive	N/A	N/A	for ( int v = st2 ; v <= st2 + 1 ; ++ v )	for ( int v = st2 ; v <= st2 + 2 ; v ++ )
13790	if not arr [ x + z ] [ y + v ] , return false from function	N/A	N/A	if ( ! arr [ x + z ] [ y + v ] ) return false ;	if (! arr [ x + z ] [ y + v ] ) return false ;
13791	DUMMY	0.0	0.0	}	DUMMY
13792	DUMMY	0.0	0.0	}	DUMMY
13793	return true from function	N/A	N/A	return true ;	return true ;
13794	DUMMY	0.0	0.0	}	DUMMY
13795	DUMMY	0.0	0.0	int main() {	DUMMY
13796	create integers n , m , k	N/A	N/A	int n , m , k ;	int n, m, k ;
13797	read n read m read k	N/A	N/A	cin >> n >> m >> k ;	cin >> n >> m >> k ;
13798	for i = 1 to k inclusive	N/A	N/A	for ( int i = 1 ; i <= k ; ++ i )	for ( int i = 1 ; i <= k ; i ++ )
13799	read x read y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
13800	set arr [ x ] [ y ] to 1	N/A	N/A	arr [ x ] [ y ] = 1 ;	arr [ x ] [ y ] = 1 ;
13801	for t = - 1 to 0 inclusive	N/A	N/A	for ( int t = - 1 ; t <= 0 ; ++ t )	for ( int t = - 1 ; t >= 0 ; t -- )
13802	for u = - 1 to 0 inclusive	N/A	N/A	for ( int u = - 1 ; u <= 0 ; ++ u )	for ( int u = - 1 ; u >= 0 ; u -- )
13803	if result of run solve with t , u as arguments is true , return print i print " \ n " , 0 from function	N/A	N/A	if ( solve ( t , u ) ) return cout << i << " \n " , 0 ;	if ( solve ( t, u ) ) return cout << i << " \n ", 0 ;
13804	DUMMY	0.0	0.0	}	DUMMY
13805	DUMMY	0.0	0.0	}	DUMMY
13806	DUMMY	0.0	0.0	}	DUMMY
13807	return print 0 print " \ n " , 0 from function	N/A	N/A	return cout << 0 << " \n " , 0 ;	return cout << 0 << " \n ", 0 ;
13808	DUMMY	0.0	0.0	return 0;	DUMMY
13809	DUMMY	0.0	0.0	}	DUMMY
13810	create 2d ingeger arrays a , vis , with a size 1005 by 1005 , vis size 1005 by 1005	N/A	N/A	int a [ 1005 ] [ 1005 ] , vis [ 1005 ] [ 1005 ] ;	int * a = new char [ 1005 ] = { 0 }, * vis = ( 1005 + 1005 ) ;
13811	create integer ans	N/A	N/A	int ans ;	int ans ;
13812	create integers n , m	N/A	N/A	int n , m ;	int n, m ;
13813	create 2d integer array fang with size 4 by 2 with fang = { 1 , 0 , - 1 , 0 , 0 , 1 , 0 , - 1 }	N/A	N/A	int fang [ 4 ] [ 2 ] = { 1 , 0 , - 1 , 0 , 0 , 1 , 0 , - 1 } ;	int fang [ 4 ] [ 2 ] = { 1, 0, - 1, - 0, 0 } ;
13814	declare dfs with integers x , y as arguments , returning void	N/A	N/A	void dfs ( int x , int y )	void dfs ( int x, int y )
13815	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
13816	for i = 0 to 4 exclusive	N/A	N/A	for ( int i = 0 ; i < 4 ; ++ i )	for ( int i = 0 ; i < 4 ; i ++ )
13817	create integer nx with nx = x + fang [ i ] [ 0 ]	N/A	N/A	int nx = x + fang [ i ] [ 0 ] ;	int nx = x + fang [ i ] [ 0 ] ;
13818	create integer ny with ny = y + fang [ i ] [ 1 ]	N/A	N/A	int ny = y + fang [ i ] [ 1 ] ;	int ny = y + fang [ i ] [ 1 ] ;
13819	if nx is greater than 0 and nx is less than or equal to n and ny is greater than 0 and ny is less than or equal to m and a [ nx ] [ ny ] and not vis [ nx ] [ ny ]	N/A	N/A	if ( nx > 0 && nx <= n && ny > 0 && ny <= m && a [ nx ] [ ny ] && ! vis [ nx ] [ ny ] )	if ( nx > 0 && nx <= n && ny > 0 and ny <= m &&! vis [ nx ] [ ny ] )
13820	set vis [ nx ] [ ny ] to 1	N/A	N/A	vis [ nx ] [ ny ] = 1 ;	vis [ nx ] [ ny ] = 1 ;
13821	run dfs with nx , ny as arguments	N/A	N/A	dfs ( nx , ny ) ;	dfs ( nx, ny ) ;
13822	DUMMY	0.0	0.0	}	DUMMY
13823	DUMMY	0.0	0.0	}	DUMMY
13824	DUMMY	0.0	0.0	}	DUMMY
13825	DUMMY	0.0	0.0	int main() {	DUMMY
13826	create integers k , i , j	N/A	N/A	int k , i , j ;	int k, i, j ;
13827	while read n read m read k	N/A	N/A	while ( cin >> n >> m >> k )	while ( cin >> n >> m >> k )
13828	set ans to 0	N/A	N/A	ans = 0 ;	int ans = 0 ;
13829	create integers x , y	N/A	N/A	int x , y ;	int x, y ;
13830	set bytes from a to size of a to value 0	N/A	N/A	memset ( a , 0 , sizeof ( a ) ) ;	memset ( a, 0, sizeof ( a ) ) ;
13831	create integer res with res = 0	N/A	N/A	int res = 0 ;	int res = 0 ;
13832	for i = 1 to k inclusive	N/A	N/A	for ( i = 1 ; i <= k ; ++ i )	for ( int i = 1 ; i <= k ; i ++ )
13833	read x read y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
13834	set a [ x ] [ y ] to 1	N/A	N/A	a [ x ] [ y ] = 1 ;	a [ x ] [ y ] = 1 ;
13835	if not res	N/A	N/A	if ( ! res )	if (! res )
13836	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
13837	if ( a [ x ] [ y ] and a [ x + 1 ] [ y ] and a [ x ] [ y + 1 ] and a [ x + 1 ] [ y + 1 ] ) , set res to 1	N/A	N/A	if ( a [ x ] [ y ] && a [ x + 1 ] [ y ] && a [ x ] [ y + 1 ] && a [ x + 1 ] [ y + 1 ] ) res = 1 ;	if ( a [ x ] [ y ] && a [ 0 ] [ x + 1 ]. y ] and a [ 1 ] [ i + 1 - 1 ] == a [x + 1, [ y ++ 1 ] ) { res = 1 ; }
13838	if ( a [ x ] [ y ] and a [ x + 1 ] [ y ] and a [ x ] [ y - 1 ] and a [ x + 1 ] [ y - 1 ] ) , set res to 1	N/A	N/A	if ( a [ x ] [ y ] && a [ x + 1 ] [ y ] && a [ x ] [ y - 1 ] && a [ x + 1 ] [ y - 1 ] ) res = 1 ;	if (! res )
13839	if ( a [ x ] [ y ] and a [ x - 1 ] [ y ] and a [ x ] [ y + 1 ] and a [ x - 1 ] [ y + 1 ] ) , set res to 1	N/A	N/A	if ( a [ x ] [ y ] && a [ x - 1 ] [ y ] && a [ x ] [ y + 1 ] && a [ x - 1 ] [ y + 1 ] ) res = 1 ;	if (! res )
13840	if ( a [ x ] [ y ] and a [ x - 1 ] [ y ] and a [ x ] [ y - 1 ] and a [ x - 1 ] [ y - 1 ] ) , set res to 1	N/A	N/A	if ( a [ x ] [ y ] && a [ x - 1 ] [ y ] && a [ x ] [ y - 1 ] && a [ x - 1 ] [ y - 1 ] ) res = 1 ;	if ( a [ x ] [ y ] && a [ - 1 ] [ Y ] & a [ ] [ x - 2 ] && b [ x + 1 ]. a [x - 1, y - 1 } ) res = 1 ;
13841	DUMMY	0.0	0.0	}	DUMMY
13842	DUMMY	0.0	0.0	}	DUMMY
13843	if not res , set ans to 0	N/A	N/A	if ( ! res ) ans = 0 ;	if (! res ) ans = 0 ;
13844	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
13845	DUMMY	0.0	0.0	}	DUMMY
13846	DUMMY	0.0	0.0	}	DUMMY
13847	create bool a [ 1005 ] [ 1005 ]	N/A	N/A	bool a [ 1005 ] [ 1005 ] ;	bool a [ 100005 ] [ 1005 ] ;
13848	DUMMY	0.0	0.0	int main() {	DUMMY
13849	create int n and m	N/A	N/A	int n , m ;	int n, m ;
13850	read n , m	N/A	N/A	cin >> n >> m ;	cin >> n >> m ;
13851	create int k	N/A	N/A	int k ;	int k ;
13852	read k	N/A	N/A	cin >> k ;	cin >> k ;
13853	for c = 1 to k inclusive	N/A	N/A	for ( int c = 1 ; c <= k ; c ++ )	for ( int c = 1 ; c <= k ; c ++ )
13854	create int x and y	N/A	N/A	int x , y ;	int x, y ;
13855	read x , y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
13856	set a [ x ] [ y ] = true	N/A	N/A	a [ x ] [ y ] = true ;	a [ x ] [ y ] = true ;
13857	if a [ x ] [ y ] , a [ x + 1 ] [ y ] , a [ x ] [ y + 1 ] , a [ x + 1 ] [ y + 1 ] are true	N/A	N/A	if ( a [ x ] [ y ] && a [ x + 1 ] [ y ] && a [ x ] [ y + 1 ] && a [ x + 1 ] [ y + 1 ] )	if ( a [ x ] [ y ] == true && a [ ( x + 1 ) [ y ) == true || a [ 0 ] [ i + 1 ] == false && ( 1 ) < n ) && ( 2 ) )
13858	print c	N/A	N/A	cout << c << endl ;	cout << c << endl ;
13859	DUMMY	0.0	0.0	return 0;	DUMMY
13860	else if a [ x ] [ y ] and a [ x - 1 ] [ y ] and a [ x ] [ y + 1 ] and a [ x - 1 ] [ y + 1 ] are not false	N/A	N/A	else if ( a [ x ] [ y ] && a [ x - 1 ] [ y ] && a [ x ] [ y + 1 ] && a [ x - 1 ] [ y + 1 ] )	else if ( ( a [ x ] [ y ] ) && ( a ( x - 1 ) [ y ) ) &&( a [ y + 1 ] [ x + 2 ] ) ) )
13861	print c and a newline	N/A	N/A	cout << c << endl ;	cout << c <<'\n';
13862	DUMMY	0.0	0.0	return 0;	DUMMY
13863	else if a [ x ] [ y ] , a [ x - 1 ] [ y ] , a [ x ] [ y - 1 ] , a [ x - 1 ] [ y - 1 ] = true	N/A	N/A	else if ( a [ x ] [ y ] && a [ x - 1 ] [ y ] && a [ x ] [ y - 1 ] && a [ x - 1 ] [ y - 1 ] )	else if ( a [ x ] [ y ] && a [ 0 ] [ x - 1 ] [ Y ] )
13864	print c	N/A	N/A	cout << c << endl ;	cout << c << endl ;
13865	DUMMY	0.0	0.0	return 0;	DUMMY
13866	else if a [ x ] [ y ] and a [ x + 1 ] [ y ] and a [ x ] [ y - 1 ] and a [ x + 1 ] [ y - 1 ] different from false	N/A	N/A	else if ( a [ x ] [ y ] && a [ x + 1 ] [ y ] && a [ x ] [ y - 1 ] && a [ x + 1 ] [ y - 1 ] )	else if ( ( a [ x ] [ y ] ) && ( ( b [ x + 1 ] [ Y ] ] && a [ 0 ] [ x - 1 ] and a [ 1 ]. y - i ] ) )!= false )
13867	print c	N/A	N/A	cout << c << endl ;	cout << c << endl ;
13868	DUMMY	0.0	0.0	return 0;	DUMMY
13869	DUMMY	0.0	0.0	}	DUMMY
13870	DUMMY	0.0	0.0	}	DUMMY
13871	print 0 and a newline	N/A	N/A	cout << 0 << endl ;	cout << 0 <<'\n';
13872	DUMMY	0.0	0.0	return 0;	DUMMY
13873	DUMMY	0.0	0.0	}	DUMMY
13874	create constant integer N with N = 1e3 + 5	N/A	N/A	const int N = 1e3 + 5 ;	const int N = 1e3 + 5 ;
13875	create 2d boolean array mark with size N by N	N/A	N/A	bool mark [ N ] [ N ] ;	bool mark [ N ] [ n ] ;
13876	DUMMY	0.0	0.0	int main() {	DUMMY
13877	create integers n , m , k	N/A	N/A	int n , m , k ;	int n, m, k ;
13878	read n read m read k	N/A	N/A	cin >> n >> m >> k ;	cin >> n >> m >> k ;
13879	for i = 0 to k exclusive	N/A	N/A	for ( int i = 0 ; i < k ; i ++ )	for ( int i = 0 ; i < k ; i ++ )
13880	create integers x , y	N/A	N/A	int x , y ;	int x, y ;
13881	read x read y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
13882	set mark [ decrement x ] [ decrement y ] to true	N/A	N/A	mark [ -- x ] [ -- y ] = true ;	mark [ x -- ] [ y -- ] = true ;
13883	for a = x - 1 to x inclusive	N/A	N/A	for ( int a = x - 1 ; a <= x ; a ++ )	for ( int a = x - 1 ; a <= x ; a ++ )
13884	for b = y - 1 to y inclusive	N/A	N/A	for ( int b = y - 1 ; b <= y ; b ++ )	for ( int b = y - 1 ; b <= y ; b ++ )
13885	if bitwise not minimum of ( a and b ) and a + 1 is less than n and b + 1 is less than m	N/A	N/A	if ( ~ min ( a , b ) && a + 1 < n && b + 1 < m )	if ( a & b!= min ( a, b ) && ( a + 1 < n && ( b + 1 ) < m ) )
13886	create boolean bad with bad = true	N/A	N/A	bool bad = true ;	bool bad = true ;
13887	for c = 0 to 4 exclusive , set bad to bad bitwise and mark [ a + ( c bitwise and 1 ) ] [ b + ( c bitshift right 1 bitwise and 1 ) ]	N/A	N/A	for ( int c = 0 ; c < 4 ; c ++ ) bad &= mark [ a + ( c & 1 ) ] [ b + ( c >> 1 & 1 ) ] ;	for ( int c = 0 ; c < 4 ; c ++ ) { bad &= mark [ a + ( c & 1 ) ] [ b + ( ( c >> 1 ) ) ] ; }
13888	if bad , return print i + 1 print newline , 0	N/A	N/A	if ( bad ) return cout << i + 1 << endl , 0 ;	if ( bad ) return cout << i + 1 << endl, 0 ;
13889	DUMMY	0.0	0.0	}	DUMMY
13890	DUMMY	0.0	0.0	}	DUMMY
13891	print " 0 \ n "	N/A	N/A	cout << " 0\n " ;	cout << " 0\n " ;
13892	DUMMY	0.0	0.0	return 0;	DUMMY
13893	DUMMY	0.0	0.0	}	DUMMY
13894	DUMMY	0.0	0.0	int main() {	DUMMY
13895	create integer n	N/A	N/A	int n ;	int n ;
13896	create strings str , s , ans , min with min = " z "	N/A	N/A	string str , s , ans , min = " z " ;	string str, s, ans, min = " z " ;
13897	read str read n	N/A	N/A	cin >> str >> n ;	cin >> str >> n ;
13898	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
13899	read s	N/A	N/A	cin >> s ;	cin >> s ;
13900	if s is str	N/A	N/A	if ( s == str )	if ( s == str )
13901	set min to str	N/A	N/A	min = str ;	min = str ;
13902	break loop	N/A	N/A	break ;	break ;
13903	DUMMY	0.0	0.0	}	DUMMY
13904	if first index of str in s is 0 and s is less than min , set min to s	N/A	N/A	if ( ( s . find ( str ) == 0 ) && ( s < min ) ) min = s ;	if ( s. find ( str ) == 0 && s < min ) min = s ;
13905	DUMMY	0.0	0.0	}	DUMMY
13906	if min is " z "	N/A	N/A	if ( min == " z " )	if ( min == " z " )
13907	print str print newline	N/A	N/A	cout << str << endl ;	cout << str << endl ;
13908	else	N/A	N/A	else	else
13909	print min print newline	N/A	N/A	cout << min << endl ;	cout << min << endl ;
13910	DUMMY	0.0	0.0	return 0;	DUMMY
13911	DUMMY	0.0	0.0	}	DUMMY
13912	DUMMY	0.0	0.0	int main() {	DUMMY
13913	create string str , str2 , ans , set ans to a	N/A	N/A	string str , str2 , ans = " a " ;	string str, str2, ans ='a';
13914	create int n and flag , assign 0 to flag	N/A	N/A	int n , flag = 0 ;	int n, flag = 0 ;
13915	read str	N/A	N/A	cin >> str ;	cin >> str ;
13916	set len to length of str	N/A	N/A	int len = str . length ( ) ;	int len = str. length ( ) ;
13917	read n	N/A	N/A	cin >> n ;	cin >> n ;
13918	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
13919	read str2	N/A	N/A	cin >> str2 ;	cin >> str2 ;
13920	set flag to 0	N/A	N/A	flag = 0 ;	flag = 0 ;
13921	for j = 0 to len	N/A	N/A	for ( int j = 0 ; j < len ; j ++ )	for ( int j = 0 ; j < len ; j ++ )
13922	if str [ j ] different from str2 [ j ]	N/A	N/A	if ( str [ j ] != str2 [ j ] )	if ( str [ j ]!= str2 [ i ] )
13923	flag = 1	N/A	N/A	flag = 1 ;	flag = 1 ;
13924	break	N/A	N/A	break ;	break ;
13925	DUMMY	0.0	0.0	}	DUMMY
13926	DUMMY	0.0	0.0	}	DUMMY
13927	if flag = 1 , continue	N/A	N/A	if ( flag == 1 ) { continue ; }	if ( flag == 1 ) continue ;
13928	if ans equal to a	N/A	N/A	if ( ans == " a " )	if ( ans == a )
13929	set ans to str2	N/A	N/A	ans = str2 ;	ans = str2 ;
13930	else if str2 < ans	N/A	N/A	else if ( str2 < ans )	else if ( str2 < ans )
13931	set ans = str2	N/A	N/A	ans = str2 ;	ans = str2 ;
13932	DUMMY	0.0	0.0	}	DUMMY
13933	DUMMY	0.0	0.0	}	DUMMY
13934	if ans different from a	N/A	N/A	if ( ans != " a " )	if ( ans!= a )
13935	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
13936	else	N/A	N/A	else	else
13937	print str and a newline	N/A	N/A	cout << str << endl ;	cout << str << endl ;
13938	DUMMY	0.0	0.0	}	DUMMY
13939	DUMMY	0.0	0.0	return 0;	DUMMY
13940	DUMMY	0.0	0.0	}	DUMMY
13941	let str , s be strings with s = array of strings of length 105	N/A	N/A	string str , s [ 105 ] ;	string str, s [ 105 ] ;
13942	create a vector of strings s1	N/A	N/A	vector < string > s1 ;	vector < string > s1 ;
13943	let n be a integer	N/A	N/A	int n ;	int n ;
13944	DUMMY	0.0	0.0	int main() {	DUMMY
13945	read str	N/A	N/A	cin >> str ;	cin >> str ;
13946	read n	N/A	N/A	cin >> n ;	cin >> n ;
13947	for i = 0 to n exclusive , read s [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ;
13948	sort the values s and s + n	N/A	N/A	sort ( s , s + n ) ;	sort ( s, s + n ) ;
13949	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
13950	if s [ i ] . find ( str ) is equal to 0 , push_back s [ i ] in s1	N/A	N/A	if ( s [ i ] . find ( str ) == 0 ) s1 . push_back ( s [ i ] ) ;	if ( s [ i ]. find ( str ) =='0') { s1. push_back ( s. at ( i ) ) ; }
13951	DUMMY	0.0	0.0	}	DUMMY
13952	if length of s1	N/A	N/A	if ( s1 . size ( ) )	if ( s1. size ( ) )
13953	print s1 [ 0 ] and newline	N/A	N/A	cout << s1 [ 0 ] << " \n " ;	cout << s1 [ 0 ] << endl ;
13954	else do the following	N/A	N/A	else	else
13955	print str and newline	N/A	N/A	cout << str << " \n " ;	cout << str << endl ;
13956	DUMMY	0.0	0.0	return 0;	DUMMY
13957	DUMMY	0.0	0.0	}	DUMMY
13958	DUMMY	0.0	0.0	int main() {	DUMMY
13959	str = string	N/A	N/A	string str ;	string str ;
13960	read str	N/A	N/A	cin >> str ;	cin >> str ;
13961	len = int with len = length of str	N/A	N/A	int len = str . length ( ) ;	int len = str. length ( ) ;
13962	n = int	N/A	N/A	int n ;	int n ;
13963	read n	N/A	N/A	cin >> n ;	cin >> n ;
13964	vec = string vector	N/A	N/A	vector < string > vec ;	vector < string > vec ;
13965	for i = 0 to n	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
13966	temp = string	N/A	N/A	string temp ;	string temp ;
13967	read temp	N/A	N/A	cin >> temp ;	cin >> temp ;
13968	pos = int with pos = index of str in temp	N/A	N/A	int pos = temp . find ( str ) ;	int pos = temp. find ( str ) ;
13969	if pos is 0	N/A	N/A	if ( pos == 0 )	if ( pos == 0 )
13970	suffix = string with suffix = substr of len on temp	N/A	N/A	string suffix = temp . substr ( len ) ;	string suffix = temp. substr ( 0, len ) ;
13971	append suffix to vec	N/A	N/A	vec . push_back ( suffix ) ;	vec. push_back ( suffix ) ;
13972	DUMMY	0.0	0.0	}	DUMMY
13973	DUMMY	0.0	0.0	}	DUMMY
13974	if size of vec is 0	N/A	N/A	if ( vec . size ( ) == 0 )	if ( vec. size ( ) == 0 )
13975	pritn str	N/A	N/A	cout << str << endl ;	cin >> str ;
13976	else	N/A	N/A	else	else
13977	sort vec	N/A	N/A	sort ( vec . begin ( ) , vec . end ( ) ) ;	sort ( vec. begin ( ), vec. end ( ) ) ;
13978	print str + vec [ 0 ]	N/A	N/A	cout << ( str + vec [ 0 ] ) << endl ;	cout << str + vec [ 0 ] << endl ;
13979	DUMMY	0.0	0.0	}	DUMMY
13980	DUMMY	0.0	0.0	return 0;	DUMMY
13981	DUMMY	0.0	0.0	}	DUMMY
13982	DUMMY	0.0	0.0	int main() {	DUMMY
13983	s = string	N/A	N/A	string s ;	string s ;
13984	read s	N/A	N/A	cin >> s ;	cin >> s ;
13985	n = integer	N/A	N/A	int n ;	int n ;
13986	read n	N/A	N/A	cin >> n ;	cin >> n ;
13987	vs = vector string	N/A	N/A	vector < string > vs ;	vector < string > vs ;
13988	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
13989	ss = string	N/A	N/A	string ss ;	string ss ;
13990	read ss	N/A	N/A	cin >> ss ;	cin >> ss ;
13991	append ss in vs	N/A	N/A	vs . push_back ( ss ) ;	vs. push_back ( ss ) ;
13992	DUMMY	0.0	0.0	}	DUMMY
13993	sort vs . begin ( ) and vs . end ( )	N/A	N/A	sort ( vs . begin ( ) , vs . end ( ) ) ;	sort ( vs. begin ( ), vs. end ( ) ) ;
13994	len = integer with len = s . size ( )	N/A	N/A	int len = s . size ( ) ;	int len = s. size ( ) ;
13995	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
13996	if vs [ i ] . substr ( 0 , len ) is s	N/A	N/A	if ( vs [ i ] . substr ( 0 , len ) == s )	if ( vs [ i ]. substr ( 0, len ) == s )
13997	print vs [ i ]	N/A	N/A	cout << vs [ i ] << endl ;	cout << vs [ i ] << endl ;
13998	DUMMY	0.0	0.0	return 0;	DUMMY
13999	DUMMY	0.0	0.0	}	DUMMY
14000	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
14001	DUMMY	0.0	0.0	return 0;	DUMMY
14002	DUMMY	0.0	0.0	}	DUMMY
14003	DUMMY	0.0	0.0	int main() {	DUMMY
14004	let str be a string , s = array of strings of length 101	N/A	N/A	string str , s [ 101 ] ;	string str, s [ 101 ] ;
14005	let n be a integer	N/A	N/A	int n ;	int n ;
14006	read str	N/A	N/A	cin >> str ;	cin >> str ;
14007	read n	N/A	N/A	cin >> n ;	cin >> n ;
14008	for i = 1 to n inclusive , read s [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ;
14009	sort the values s + 1 and s + n + 1	N/A	N/A	sort ( s + 1 , s + n + 1 ) ;	sort ( s + 1, s + n + 1 ) ;
14010	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
14011	if s [ i ] . substr ( 0 , length of str ) is equal to str	N/A	N/A	if ( s [ i ] . substr ( 0 , str . length ( ) ) == str )	if ( s [ i ]. substr ( 0, str. length ( ) ) == str )
14012	print s [ i ] and newline	N/A	N/A	cout << s [ i ] << endl ;	cout << s [ i ] << endl ;
14013	DUMMY	0.0	0.0	return 0;	DUMMY
14014	DUMMY	0.0	0.0	}	DUMMY
14015	print str and newline	N/A	N/A	cout << str << endl ;	cout << str << endl ;
14016	DUMMY	0.0	0.0	return 0;	DUMMY
14017	DUMMY	0.0	0.0	}	DUMMY
14018	function subset ( get strings n1 and n2 and int len , return bool )	N/A	N/A	bool subset ( string n1 , string n2 , int len )	bool subset ( string n1, string n2, int len )
14019	for i = 0 to len exclusive	N/A	N/A	for ( int i = 0 ; i < len ; i ++ )	for ( int i = 0 ; i < len ; i ++ )
14020	if n1 [ i ] ! = n2 [ i ] return false	N/A	N/A	if ( n1 [ i ] != n2 [ i ] ) return false ;	if ( n1 [ i ]!= n2 [ len ] ) { return false ; }
14021	DUMMY	0.0	0.0	}	DUMMY
14022	return true	N/A	N/A	return true ;	return true ;
14023	DUMMY	0.0	0.0	}	DUMMY
14024	function small_min ( get strings n1 and n2 , return string )	N/A	N/A	string small_min ( string n1 , string n2 )	string small_min ( string n1, string n2 )
14025	if length of n1 < length of n2 return n1	N/A	N/A	if ( n1 . length ( ) < n2 . length ( ) ) return n1 ;	if ( n1. size ( ) < n2. length ( ) ) return n1 ;
14026	return n2	N/A	N/A	return n2 ;	return n2 ;
14027	DUMMY	0.0	0.0	}	DUMMY
14028	DUMMY	0.0	0.0	int main() {	DUMMY
14029	s , ans = string	N/A	N/A	string s , ans ;	string s, ans ;
14030	read s	N/A	N/A	cin >> s ;	cin >> s ;
14031	ara = array of 110 string	N/A	N/A	string ara [ 110 ] ;	string ara [ 110 ] ;
14032	n = int	N/A	N/A	int n ;	int n ;
14033	read n	N/A	N/A	cin >> n ;	cin >> n ;
14034	f = 0	N/A	N/A	int f = 0 ;	int f = 0 ;
14035	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14036	read ara [ i ]	N/A	N/A	cin >> ara [ i ] ;	cin >> ara [ i ] ;
14037	j = int	N/A	N/A	int j ;	int j ;
14038	for j = 0 to size of s exclusive	N/A	N/A	for ( j = 0 ; j < s . size ( ) ; j ++ )	for ( j = 0 ; j < s. size ( ) ; j ++ )
14039	if ara [ i ] [ j ] ! = s [ j ] break	N/A	N/A	if ( ara [ i ] [ j ] != s [ j ] ) break ;	if ( ara [ i ] [ j ]!= s [ j - 1 ] ) break ;
14040	DUMMY	0.0	0.0	}	DUMMY
14041	if j is size of s	N/A	N/A	if ( j == s . size ( ) )	if ( j == s. size ( ) )
14042	if f is 0 ans = ara [ i ]	N/A	N/A	if ( f == 0 ) ans = ara [ i ] ;	if ( f == 0 ) ans = ara [ i ] ;
14043	f = 1	N/A	N/A	f = 1 ;	f = 1 ;
14044	ans = min ( ans , ara [ i ] )	N/A	N/A	ans = min ( ans , ara [ i ] ) ;	ans = min ( ans, ara [ i ] ) ;
14045	DUMMY	0.0	0.0	}	DUMMY
14046	DUMMY	0.0	0.0	}	DUMMY
14047	if f is 0	N/A	N/A	if ( f == 0 )	if ( f == 0 )
14048	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
14049	else	N/A	N/A	else	else
14050	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
14051	DUMMY	0.0	0.0	return 0;	DUMMY
14052	DUMMY	0.0	0.0	}	DUMMY
14053	arr = int array of size 1000000 and a = int array of size 1000 and ar = int array of size 100000	N/A	N/A	int arr [ 1000000 ] , a [ 1000 ] , ar [ 100000 ] ;	int arr [ 1000000 ], a [ 1000 ], ar [ 100000 ] ;
14054	m = char , int map	N/A	N/A	map < char , int > m ;	map < char, int > m ;
14055	mm = char , int map	N/A	N/A	map < char , int > mm ;	map < char, int > mm ;
14056	DUMMY	0.0	0.0	int main() {	DUMMY
14057	s , m , k , n = string with k = " " and n = " "	N/A	N/A	string s , m , k = " " , n = " " ;	string s, m, k =' ', n = " " ;
14058	x = int	N/A	N/A	int x ;	int x ;
14059	read s then x	N/A	N/A	cin >> s >> x ;	cin >> s >> x ;
14060	for i = 0 to x	N/A	N/A	for ( int i = 0 ; i < x ; i ++ )	for ( int i = 0 ; i < x ; i ++ )
14061	read m	N/A	N/A	cin >> m ;	cin >> m ;
14062	if size of m > = size of s	N/A	N/A	if ( m . size ( ) >= s . size ( ) )	if ( ( m. size ( ) ) >= ( int ) ( ( s ). length ( ) - 1 ) )
14063	set n to first size of s chars of m	N/A	N/A	n = m . substr ( 0 , s . size ( ) ) ;	n = m. size ( ) ;
14064	if n is s and ( m < = k | | k is " " ) set k to m	N/A	N/A	if ( n == s && ( m <= k || k == " " ) ) { k = m ; }	if ( n == s && ( m <= k || k == " " ) ) k = m ;
14065	DUMMY	0.0	0.0	}	DUMMY
14066	DUMMY	0.0	0.0	}	DUMMY
14067	if k is not " "	N/A	N/A	if ( k != " " )	if ( k!= " " )
14068	print k	N/A	N/A	cout << k << endl ;	cout << k << endl ;
14069	else	N/A	N/A	else	else
14070	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
14071	DUMMY	0.0	0.0	return 0;	DUMMY
14072	DUMMY	0.0	0.0	}	DUMMY
14073	DUMMY	0.0	0.0	int main() {	DUMMY
14074	create string pointer ch , create string var	N/A	N/A	string * ch , var ;	string * ch, var ;
14075	create integer n	N/A	N/A	int n ;	int n ;
14076	read var read n	N/A	N/A	cin >> var >> n ;	cin >> var >> n ;
14077	set ch to new string array with size n	N/A	N/A	ch = new string [ n ] ;	ch = new string [ n ] ;
14078	for i = 0 to n exclusive , read ch [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> ch [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> ch [ i ] ; }
14079	sort elements from ch to ch + n	N/A	N/A	sort ( ch , ch + n ) ;	sort ( ch, ch + n ) ;
14080	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14081	if first index of var in ch [ i ] is 0	N/A	N/A	if ( ch [ i ] . find ( var ) == 0 )	if ( ch [ i ]. find ( var ) == 0 )
14082	print ch [ i ] print newline	N/A	N/A	cout << ch [ i ] << endl ;	cout << ch [ i ] << endl ;
14083	DUMMY	0.0	0.0	return 0;	DUMMY
14084	DUMMY	0.0	0.0	}	DUMMY
14085	DUMMY	0.0	0.0	}	DUMMY
14086	print var print newline	N/A	N/A	cout << var << endl ;	cout << var << endl ;
14087	DUMMY	0.0	0.0	return 0;	DUMMY
14088	DUMMY	0.0	0.0	}	DUMMY
14089	create string s and string array s1 with dimension 101	N/A	N/A	string s , s1 [ 101 ] ;	string s, s1 [ 101 ] ;
14090	create integer n , ok	N/A	N/A	int n , ok ;	int n, ok ;
14091	DUMMY	0.0	0.0	int main() {	DUMMY
14092	get s , n	N/A	N/A	cin >> s >> n ;	cin >> s >> n ;
14093	for integer i = 1 to n with increment i do get s1 [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; ++ i ) cin >> s1 [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) { cin >> s1 [ i ] ; }
14094	for integer i = n to 1 with decrement i	N/A	N/A	for ( int i = n ; i >= 1 ; -- i )	for ( int i = n ; i >= 1 ; i -- )
14095	for integer j = 1 with increment j till j less than i	N/A	N/A	for ( int j = 1 ; j < i ; ++ j )	for ( int j = 1 ; j < i ; j ++ )
14096	if s1 [ j ] greater than s1 [ j + 1 ] then swap s1 [ j ] and s1 [ j + 1 ]	N/A	N/A	if ( s1 [ j ] > s1 [ j + 1 ] ) swap ( s1 [ j ] , s1 [ j + 1 ] ) ;	if ( s1 [ j ] > s1. size ( ) [ j + 1 ] ) { swap ( s2 [ j - 1 ], s1 ( j + 2 ] ) ; }
14097	for integer k = 1 to n with increment k	N/A	N/A	for ( int k = 1 ; k <= n ; ++ k )	for ( int k = 1 ; k <= n ; k ++ )
14098	set ok to 1	N/A	N/A	ok = 1 ;	ok = 1 ;
14099	for integer i = 0 to length of s - 1 with increment i	N/A	N/A	for ( int i = 0 ; i < s . length ( ) ; ++ i )	for ( int i = 0 ; i < s. length ( ) ; i ++ )
14100	if s [ i ] not equal to s1 [ k ] [ i ] then	N/A	N/A	if ( s [ i ] != s1 [ k ] [ i ] )	if ( s [ i ]!= s1 [ k ] [ 1 ] )
14101	set ok to 0	N/A	N/A	ok = 0 ;	ok = 0 ;
14102	break the loop	N/A	N/A	break ;	break ;
14103	DUMMY	0.0	0.0	}	DUMMY
14104	if ok not equal to 0 then	N/A	N/A	if ( ok )	if ( ok )
14105	print s1 [ k ]	N/A	N/A	cout << s1 [ k ] << endl ;	cout << s1 [ k ] << endl ;
14106	DUMMY	0.0	0.0	return 0;	DUMMY
14107	DUMMY	0.0	0.0	}	DUMMY
14108	DUMMY	0.0	0.0	}	DUMMY
14109	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
14110	DUMMY	0.0	0.0	return 0;	DUMMY
14111	DUMMY	0.0	0.0	}	DUMMY
14112	M = 110	N/A	N/A	const int M = 110 ;	const int M = 110 ;
14113	s = array of M by M char	N/A	N/A	char s [ M ] [ M ] ;	char s [ M ] [ M - 1 ] ;
14114	a = array of M char	N/A	N/A	char a [ M ] ;	char a [ M ] ;
14115	f and t = array of M int	N/A	N/A	int f [ M ] , t [ M ] ;	int * f = new int [ M ] ( ), * t = ( M ) ;
14116	b = array of M char	N/A	N/A	char b [ M ] ;	char b [ M ] ;
14117	DUMMY	0.0	0.0	int main() {	DUMMY
14118	n = int	N/A	N/A	int n ;	int n ;
14119	while read a	N/A	N/A	while ( cin >> a )	while ( cin >> a )
14120	read n	N/A	N/A	cin >> n ;	cin >> n ;
14121	c = 0	N/A	N/A	int c = 0 ;	int c = 0 ;
14122	fill f with 0	N/A	N/A	memset ( f , 0 , sizeof ( f ) ) ;	memset ( f, 0, sizeof ( f ) ) ;
14123	fill t with 0	N/A	N/A	memset ( t , 0 , sizeof ( t ) ) ;	memset ( t, 0, sizeof t ) ;
14124	len = length of a	N/A	N/A	int len = strlen ( a ) ;	int len = a. length ( ) ;
14125	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14126	read s [ i ]	N/A	N/A	cin >> s [ i ] ;	cin >> s [ i ] ;
14127	len1 = length of s [ i ]	N/A	N/A	int len1 = strlen ( s [ i ] ) ;	len1 = s [ i ]. length ( ) ;
14128	if len1 < len	N/A	N/A	if ( len1 < len )	if ( len1 < len )
14129	t [ i ] = 1	N/A	N/A	t [ i ] = 1 ;	t [ i ] = 1 ;
14130	continue	N/A	N/A	continue ;	continue ;
14131	DUMMY	0.0	0.0	}	DUMMY
14132	for j = 0 to len exclusive	N/A	N/A	for ( int j = 0 ; j < len ; j ++ )	for ( int j = 0 ; j < len ; j ++ )
14133	if a [ j ] is not s [ i ] [ j ]	N/A	N/A	if ( a [ j ] != s [ i ] [ j ] )	if ( a [ j ]!= s [ i ] [ k ] )
14134	t [ i ] = 1	N/A	N/A	t [ i ] = 1 ;	t [ i ] = 1 ;
14135	break	N/A	N/A	break ;	break ;
14136	DUMMY	0.0	0.0	}	DUMMY
14137	DUMMY	0.0	0.0	}	DUMMY
14138	if t [ i ] is 0	N/A	N/A	if ( t [ i ] == 0 )	if ( t [ i ] == 0 )
14139	f [ i ] = 1	N/A	N/A	f [ i ] = 1 ;	f [ i ] = 1 ;
14140	fill b with 0	N/A	N/A	memset ( b , 0 , sizeof ( b ) ) ;	memset ( b, 0, sizeof b ) ;
14141	copy from s [ i ] to b	N/A	N/A	strcpy ( b , s [ i ] ) ;	strcpy ( b, s [ i ] ) ;
14142	increment c	N/A	N/A	c ++ ;	c ++ ;
14143	DUMMY	0.0	0.0	}	DUMMY
14144	DUMMY	0.0	0.0	}	DUMMY
14145	if c is 0	N/A	N/A	if ( c == 0 )	if ( c == 0 )
14146	print a	N/A	N/A	cout << a << endl ;	cout << a << endl ;
14147	else	N/A	N/A	else	else
14148	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14149	if f [ i ] is 1	N/A	N/A	if ( f [ i ] == 1 )	if ( f [ i ] == 1 )
14150	if b > s [ i ]	N/A	N/A	if ( strcmp ( b , s [ i ] ) > 0 )	if ( b > s [ i ] )
14151	fill b with 0	N/A	N/A	memset ( b , 0 , sizeof ( b ) ) ;	b. fill ( ) ;
14152	copy from s [ i ] to b	N/A	N/A	strcpy ( b , s [ i ] ) ;	strcpy ( b, s [ i ] ) ;
14153	DUMMY	0.0	0.0	}	DUMMY
14154	DUMMY	0.0	0.0	}	DUMMY
14155	DUMMY	0.0	0.0	}	DUMMY
14156	print b	N/A	N/A	cout << b << endl ;	cout << b << endl ;
14157	DUMMY	0.0	0.0	}	DUMMY
14158	DUMMY	0.0	0.0	}	DUMMY
14159	DUMMY	0.0	0.0	return 0;	DUMMY
14160	DUMMY	0.0	0.0	}	DUMMY
14161	DUMMY	0.0	0.0	int main() {	DUMMY
14162	declare string variable with name ss	N/A	N/A	string ss ;	string ss ;
14163	read standard input to ss	N/A	N/A	cin >> ss ;	cin >> ss ;
14164	create new integer n	N/A	N/A	int n ;	int n ;
14165	read variable n from the input	N/A	N/A	cin >> n ;	cin >> n ;
14166	read and discard the input data	N/A	N/A	cin . ignore ( ) ;	cin. ignore ( ) ;
14167	create string res = ss	N/A	N/A	string res = ss ;	string res = ss ;
14168	declare new boolean noe with value 0	N/A	N/A	bool noe = 0 ;	bool noe = 0 ;
14169	for integer i = 0 to n exclusive incrementing i	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14170	s is a new string	N/A	N/A	string s ;	string s ;
14171	read variable s from the input	N/A	N/A	cin >> s ;	cin >> s ;
14172	declare string tmp with value " "	N/A	N/A	string tmp = " " ;	string tmp = " " ;
14173	for j = 0 and ii = 0 while j < length of s , increment j	N/A	N/A	for ( int j = 0 , ii = 0 ; j < s . length ( ) ; j ++ )	for ( int j = 0, ii = 0 ; j < s. size ( ) ; j ++ )
14174	if ss [ ii ] = s [ j ]	N/A	N/A	if ( ss [ ii ] == s [ j ] )	if ( ss [ ii ] == s [ j ] )
14175	increment ii	N/A	N/A	ii ++ ;	ii ++ ;
14176	else	N/A	N/A	else	else
14177	assign 0 to ii	N/A	N/A	ii = 0 ;	ii = 0 ;
14178	if ii is equal to length of ss	N/A	N/A	if ( ii == ss . length ( ) )	if ( ii == ss. size ( ) )
14179	if noe is false	N/A	N/A	if ( ! noe )	if (! noe )
14180	set res to the substring of s from index j - ii + 1 to the end ; set noe to 1	N/A	N/A	res = s . substr ( j - ii + 1 , s . length ( ) ) , noe = 1 ;	res = s. substr ( j - ii + 1 ) ;
14181	else	N/A	N/A	else	else
14182	change tmp to the substring of s from index j - ii + 1 to the end	N/A	N/A	tmp = s . substr ( j - ii + 1 , s . length ( ) ) ;	tmp = s. substr ( j - ii + 1 ) ;
14183	set res to min of res and tmp	N/A	N/A	res = min ( res , tmp ) ;	res = min ( res, tmp ) ;
14184	assign 0 to ii	N/A	N/A	ii = 0 ;	ii = 0 ;
14185	DUMMY	0.0	0.0	}	DUMMY
14186	DUMMY	0.0	0.0	}	DUMMY
14187	DUMMY	0.0	0.0	}	DUMMY
14188	DUMMY	0.0	0.0	}	DUMMY
14189	print res and ' \ n '	N/A	N/A	cout << res << ' \n ' ;	cout << res <<'\n';
14190	DUMMY	0.0	0.0	return 0;	DUMMY
14191	DUMMY	0.0	0.0	}	DUMMY
14192	DUMMY	0.0	0.0	int main() {	DUMMY
14193	create string s	N/A	N/A	string s ;	string s ;
14194	read s	N/A	N/A	cin >> s ;	cin >> s ;
14195	let int len = s . length ( )	N/A	N/A	int len = s . length ( ) ;	int len = s. length ( ) ;
14196	let int n	N/A	N/A	int n ;	int n ;
14197	read n	N/A	N/A	cin >> n ;	cin >> n ;
14198	let string array array of size n	N/A	N/A	string array [ n ] ;	string array [ n ] ;
14199	let string array output of size n	N/A	N/A	string output [ n ] ;	string output [ n ] ;
14200	create integer count = 0	N/A	N/A	int count = 0 ;	int count = 0 ;
14201	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14202	read array [ i ]	N/A	N/A	cin >> array [ i ] ;	cin >> array [ i ] ;
14203	let int flag = 0	N/A	N/A	int flag = 0 ;	int flag = 0 ;
14204	if array [ i ] . length ( ) is less than len , continue to next loop iteration	N/A	N/A	if ( array [ i ] . length ( ) < len ) { continue ; }	if ( array [ i ]. length ( ) < len ) continue ;
14205	for j = 0 to len exclusive	N/A	N/A	for ( int j = 0 ; j < len ; j ++ )	for ( int j = 0 ; j < len ; j ++ )
14206	if array [ i ] [ j ] is not equal to s [ j ]	N/A	N/A	if ( array [ i ] [ j ] != s [ j ] )	if ( array [ i ] [ j ]!= s [ j - 1 ] )
14207	set flag to 1	N/A	N/A	flag = 1 ;	flag = 1 ;
14208	break loop	N/A	N/A	break ;	break ;
14209	DUMMY	0.0	0.0	}	DUMMY
14210	DUMMY	0.0	0.0	}	DUMMY
14211	if flag is equal to 0 , set output [ count + + ] to array [ i ]	N/A	N/A	if ( flag == 0 ) { output [ count ++ ] = array [ i ] ; }	if ( flag == 0 ) output [ count ++ ] = array [ i ] ;
14212	DUMMY	0.0	0.0	}	DUMMY
14213	if count is 0	N/A	N/A	if ( count == 0 )	if ( count == 0 )
14214	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
14215	DUMMY	0.0	0.0	return 0;	DUMMY
14216	DUMMY	0.0	0.0	}	DUMMY
14217	sort output using argument output + count	N/A	N/A	sort ( output , output + count ) ;	sort ( output, output + count ) ;
14218	print output [ 0 ]	N/A	N/A	cout << output [ 0 ] << endl ;	cout << output [ 0 ] << endl ;
14219	DUMMY	0.0	0.0	return 0;	DUMMY
14220	DUMMY	0.0	0.0	}	DUMMY
14221	v = string vector	N/A	N/A	vector < string > v ;	vector < string > v ;
14222	DUMMY	0.0	0.0	int main() {	DUMMY
14223	x = string	N/A	N/A	string x ;	string x ;
14224	read x	N/A	N/A	cin >> x ;	cin >> x ;
14225	n , i = long long	N/A	N/A	long long n , i ;	long long n, i ;
14226	y = string	N/A	N/A	string y ;	string y ;
14227	read n	N/A	N/A	cin >> n ;	cin >> n ;
14228	while n is not 0 subtract 1 from n and do	N/A	N/A	while ( n -- )	while ( n -- )
14229	read y	N/A	N/A	cin >> y ;	cin >> y ;
14230	append y to the end of v	N/A	N/A	v . push_back ( y ) ;	v. push_back ( y ) ;
14231	DUMMY	0.0	0.0	}	DUMMY
14232	sort v	N/A	N/A	sort ( v . begin ( ) , v . end ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
14233	for i = 0 to size of v exclusive	N/A	N/A	for ( i = 0 ; i < v . size ( ) ; i ++ )	for ( int i = 0 ; i < v. size ( ) ; i ++ )
14234	f = long long with value of the position of x within v [ i ]	N/A	N/A	long long f = v [ i ] . find ( x ) ;	long long f = v [ i ]. find ( x ) ;
14235	if f equals 0	N/A	N/A	if ( f == 0 )	if ( f == 0 )
14236	print v [ i ]	N/A	N/A	cout << v [ i ] << " \n " ;	cout << v [ i ] ;
14237	DUMMY	0.0	0.0	return 0;	DUMMY
14238	DUMMY	0.0	0.0	}	DUMMY
14239	DUMMY	0.0	0.0	}	DUMMY
14240	print x	N/A	N/A	cout << x << " \n " ;	cout << x ;
14241	DUMMY	0.0	0.0	}	DUMMY
14242	DUMMY	0.0	0.0	int main() {	DUMMY
14243	create integer n	N/A	N/A	int n ;	int n ;
14244	create string array s with size 110 , create string st	N/A	N/A	string s [ 110 ] , st ;	string s [ 110 ], st ;
14245	read st read n	N/A	N/A	cin >> st >> n ;	cin >> st >> n ;
14246	for i = 0 to n exclusive , read s [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ;
14247	sort elements from s to s + n	N/A	N/A	sort ( s , s + n ) ;	sort ( s, s + n ) ;
14248	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14249	if substring of s [ i ] from 0 to size of st is st	N/A	N/A	if ( s [ i ] . substr ( 0 , st . size ( ) ) == st )	if ( s [ i ]. substr ( 0, st. size ( ) ) == st )
14250	print s [ i ] print newline	N/A	N/A	cout << s [ i ] << endl ;	cout << s [ i ] << endl ;
14251	DUMMY	0.0	0.0	return 0;	DUMMY
14252	DUMMY	0.0	0.0	}	DUMMY
14253	print st print newline	N/A	N/A	cout << st << endl ;	cout << st << endl ;
14254	DUMMY	0.0	0.0	return 0;	DUMMY
14255	DUMMY	0.0	0.0	}	DUMMY
14256	create constant integer INF = 1e9	N/A	N/A	const int INF = 1e9 ;	const int INF = 1e9 ;
14257	DUMMY	0.0	0.0	int main() {	DUMMY
14258	let string s	N/A	N/A	string S ;	string s ;
14259	create int N	N/A	N/A	int N ;	int N ;
14260	create string array A of size 128	N/A	N/A	string A [ 128 ] ;	string A [ 128 ] ;
14261	read S and N	N/A	N/A	cin >> S >> N ;	cin >> S >> N ;
14262	for i = 0 to N exclusive , read A [ i ]	N/A	N/A	for ( int i = 0 ; i < N ; i ++ ) { cin >> A [ i ] ; }	for ( int i = 0 ; i < N ; i ++ ) cin >> A [ i ] ;
14263	sort A	N/A	N/A	sort ( A , A + N ) ;	sort ( A, A + N ) ;
14264	let string ans = S	N/A	N/A	string ans = S ;	string ans = S ;
14265	for i = 0 to N exclusive	N/A	N/A	for ( int i = 0 ; i < N ; i ++ )	for ( int i = 0 ; i < N ; i ++ )
14266	let bool check = true	N/A	N/A	bool check = true ;	bool check = true ;
14267	for j = 0 to size of S exclusive	N/A	N/A	for ( int j = 0 ; j < S . size ( ) ; j ++ )	for ( int j = 0 ; j < S. size ( ) ; j ++ )
14268	if S [ j ] is not equal to A [ i ] [ j ]	N/A	N/A	if ( S [ j ] != A [ i ] [ j ] )	if ( S [ j ]!= A [ i ] [ k ] )
14269	set check to false	N/A	N/A	check = false ;	check = false ;
14270	break loop	N/A	N/A	break ;	break ;
14271	DUMMY	0.0	0.0	}	DUMMY
14272	DUMMY	0.0	0.0	}	DUMMY
14273	if check is equal to false	N/A	N/A	if ( check == false )	if ( check == false )
14274	continue loop	N/A	N/A	continue ;	continue ;
14275	else	N/A	N/A	else	else
14276	set ans to A [ i ]	N/A	N/A	ans = A [ i ] ;	ans = A [ i ] ;
14277	break loop	N/A	N/A	break ;	break ;
14278	DUMMY	0.0	0.0	}	DUMMY
14279	DUMMY	0.0	0.0	}	DUMMY
14280	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
14281	DUMMY	0.0	0.0	return 0;	DUMMY
14282	DUMMY	0.0	0.0	}	DUMMY
14283	DUMMY	0.0	0.0	int main() {	DUMMY
14284	s = string	N/A	N/A	string s ;	string s ;
14285	n = int	N/A	N/A	int n ;	int n ;
14286	read s , n	N/A	N/A	cin >> s >> n ;	cin >> s >> n ;
14287	trig = 0	N/A	N/A	int trig = 0 ;	int trig = 0 ;
14288	c = 0	N/A	N/A	int c = 0 ;	int c = 0 ;
14289	a = string of n char	N/A	N/A	string * a = new string [ n ] ;	char a [ n ] ;
14290	k = 0	N/A	N/A	int k = 0 ;	int k = 0 ;
14291	j = 0	N/A	N/A	int j = 0 ;	int j = 0 ;
14292	s2 = string	N/A	N/A	string s2 ;	string s2 ;
14293	z = length of s	N/A	N/A	int z = s . length ( ) ;	int z = s. length ( ) ;
14294	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14295	read s2	N/A	N/A	cin >> s2 ;	cin >> s2 ;
14296	a [ i ] = s2	N/A	N/A	a [ i ] = s2 ;	a [ i ] = s2 ;
14297	DUMMY	0.0	0.0	}	DUMMY
14298	for i = 0 to length of s	N/A	N/A	for ( int i = 0 ; i < s . length ( ) ; i ++ )	for ( int i = 0 ; i < s. length ( ) ; i ++ )
14299	if s [ i ] ! = a [ j ] [ k ]	N/A	N/A	if ( s [ i ] != a [ j ] [ k ] )	if ( s [ i ]!= a [ j ] [ k ] )
14300	trig = 1	N/A	N/A	trig = 1 ;	int trig = 1 ;
14301	increment c	N/A	N/A	c ++ ;	c ++ ;
14302	else	N/A	N/A	else	else
14303	increment k	N/A	N/A	k ++ ;	k ++ ;
14304	DUMMY	0.0	0.0	}	DUMMY
14305	if z is k	N/A	N/A	if ( z == k )	if ( z == k )
14306	trig = 3	N/A	N/A	trig = 3 ;	trig = 3 ;
14307	break	N/A	N/A	break ;	break ;
14308	DUMMY	0.0	0.0	}	DUMMY
14309	if trig is 1	N/A	N/A	if ( trig == 1 )	if ( trig == 1 )
14310	increment j	N/A	N/A	j ++ ;	j ++ ;
14311	i = - 1	N/A	N/A	i = - 1 ;	i = - 1 ;
14312	k = 0	N/A	N/A	k = 0 ;	int k = 0 ;
14313	trig = 0	N/A	N/A	trig = 0 ;	trig = 0 ;
14314	DUMMY	0.0	0.0	}	DUMMY
14315	if c is n	N/A	N/A	if ( c == n )	if ( c == n )
14316	trig = 5	N/A	N/A	trig = 5 ;	trig = 5 ;
14317	break	N/A	N/A	break ;	break ;
14318	DUMMY	0.0	0.0	}	DUMMY
14319	DUMMY	0.0	0.0	}	DUMMY
14320	if trig is 5	N/A	N/A	if ( trig == 5 )	if ( trig == 5 )
14321	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
14322	DUMMY	0.0	0.0	return 0;	DUMMY
14323	DUMMY	0.0	0.0	}	DUMMY
14324	sort first n items of a	N/A	N/A	sort ( a , a + n ) ;	sort ( a, a + n ) ;
14325	t = " "	N/A	N/A	string t = " " ;	string t = " " ;
14326	if trig is 3	N/A	N/A	if ( trig == 3 )	if ( trig == 3 )
14327	for i = 0 to n	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14328	t = a [ i ]	N/A	N/A	t = a [ i ] ;	t = a [ i ] ;
14329	for ind = 0 to length of s exclusive	N/A	N/A	for ( int ind = 0 ; ind < s . length ( ) ; ind ++ )	for ( int ind = 0 ; ind < s. length ( ) ; ind ++ )
14330	if s [ ind ] ! = t [ ind ]	N/A	N/A	if ( s [ ind ] != t [ ind ] )	if ( s [ ind ]!= t [ ind - 1 ] )
14331	a [ i ] = ' 0 '	N/A	N/A	a [ i ] = ' 0 ' ;	a [ i ] ='0';
14332	break	N/A	N/A	break ;	break ;
14333	DUMMY	0.0	0.0	}	DUMMY
14334	DUMMY	0.0	0.0	}	DUMMY
14335	t = " "	N/A	N/A	t = " " ;	t = " " ;
14336	DUMMY	0.0	0.0	}	DUMMY
14337	DUMMY	0.0	0.0	}	DUMMY
14338	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14339	if a [ i ] is not " 0 "	N/A	N/A	if ( a [ i ] != " 0 " )	if ( a [ i ]!= " 0 " )
14340	print a [ i ]	N/A	N/A	cout << a [ i ] << endl ;	cout << a [ i ] ;
14341	DUMMY	0.0	0.0	return 0;	DUMMY
14342	DUMMY	0.0	0.0	}	DUMMY
14343	DUMMY	0.0	0.0	}	DUMMY
14344	print s	N/A	N/A	cout << s << endl ;	cout << s ;
14345	DUMMY	0.0	0.0	return 0;	DUMMY
14346	DUMMY	0.0	0.0	}	DUMMY
14347	p , s , ans = string	N/A	N/A	string p , s , ans ;	string p, s, ans ;
14348	n = int	N/A	N/A	int n ;	int n ;
14349	DUMMY	0.0	0.0	int main() {	DUMMY
14350	read p then n	N/A	N/A	cin >> p >> n ;	cin >> p >> n ;
14351	set ans to " "	N/A	N/A	ans = " " ;	ans = " " ;
14352	loop n times	N/A	N/A	while ( n -- )	while ( n -- )
14353	read s	N/A	N/A	cin >> s ;	cin >> s ;
14354	if size of s as int is greater or equal to size of p as int	N/A	N/A	if ( ( int ) s . size ( ) >= ( int ) p . size ( ) )	if ( ( int ) s. size ( ) >= int ( p ) )
14355	aux = string with aux = substr of 0 and size of p as int on s	N/A	N/A	string aux = s . substr ( 0 , ( int ) p . size ( ) ) ;	string aux = s. substr ( 0, p. size ( ) ) ;
14356	if aux is p and ( s is less than ans or ans is " " ) set ans to s	N/A	N/A	if ( aux == p && ( s < ans || ans == " " ) ) { ans = s ; }	if ( aux == p && ( s < ans || ans == " " ) ) ans = s ;
14357	DUMMY	0.0	0.0	}	DUMMY
14358	DUMMY	0.0	0.0	}	DUMMY
14359	print p if ans is " " else print ans	N/A	N/A	cout << ( ans == " " ? p : ans ) << " \n " ;	cout << ( ans ==' '? p : ans ) << endl ;
14360	DUMMY	0.0	0.0	}	DUMMY
14361	DUMMY	0.0	0.0	int main() {	DUMMY
14362	s , t = string	N/A	N/A	string s , t ;	string s, t ;
14363	n , j = int with j = 0	N/A	N/A	int n , j = 0 ;	int n, j = 0 ;
14364	read s then n	N/A	N/A	cin >> s >> n ;	cin >> s >> n ;
14365	ar = string array of size n	N/A	N/A	string ar [ n ] ;	string ar [ n ] ;
14366	slength = int with slength = length of s	N/A	N/A	int slength = s . size ( ) ;	int slength = s. length ( ) ;
14367	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
14368	read t	N/A	N/A	cin >> t ;	cin >> t ;
14369	if t starts with s	N/A	N/A	if ( t . substr ( 0 , slength ) == s )	if ( t == s )
14370	set ar [ j ] to t	N/A	N/A	ar [ j ] = t ;	ar [ j ] = t ;
14371	increment j	N/A	N/A	j ++ ;	j ++ ;
14372	DUMMY	0.0	0.0	}	DUMMY
14373	DUMMY	0.0	0.0	}	DUMMY
14374	if j is 0	N/A	N/A	if ( j == 0 )	if ( j == 0 )
14375	print s	N/A	N/A	cout << s << ' \n ' ;	cout << s << endl ;
14376	else	N/A	N/A	else	else
14377	sort ar from position 0 to j	N/A	N/A	sort ( ar , ar + j ) ;	sort ( ar, ar + j ) ;
14378	print ar [ 0 ]	N/A	N/A	cout << ar [ 0 ] << ' \n ' ;	cout << ar [ 0 ] << endl ;
14379	DUMMY	0.0	0.0	}	DUMMY
14380	DUMMY	0.0	0.0	return 0;	DUMMY
14381	DUMMY	0.0	0.0	}	DUMMY
14382	create integer constants OO = 0x3f3f3f3f , NegOO = - 1 * OO , N = 2e5 + 5 and mod = 1e9 + 7	N/A	N/A	const int OO = 0x3f3f3f3f , NegOO = - 1 * OO , N = 2e5 + 5 , mod = 1e9 + 7 ;	const int N = 2e5 + 5, mod = 1e9 + 7 ;
14383	DUMMY	0.0	0.0	int main() {	DUMMY
14384	create new string variable x	N/A	N/A	string x ;	string x ;
14385	read variable x from the input	N/A	N/A	cin >> x ;	cin >> x ;
14386	create integer n	N/A	N/A	int n ;	int n ;
14387	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
14388	arr is a new array of strings with size n	N/A	N/A	string arr [ n ] ;	string arr [ n ] ;
14389	for c from 0 to n exclusive , read standard input to arr [ c ]	N/A	N/A	for ( int c = 0 ; c < n ; c ++ ) { cin >> arr [ c ] ; }	for ( int c = 0 ; c < n ; c ++ ) { cin >> arr [ c ] ; }
14390	sort arr from 0 to n	N/A	N/A	sort ( arr , arr + n ) ;	sort ( arr, arr + n ) ;
14391	start for loop from c = 0 to n exclusive incrementing c	N/A	N/A	for ( int c = 0 ; c < n ; c ++ )	for ( int c = 0 ; c < n ; c ++ )
14392	declare boolean flag = 1	N/A	N/A	bool flag = 1 ;	bool flag = 1 ;
14393	for integer i = 0 to the size of x exclusive	N/A	N/A	for ( int i = 0 ; i < ( ( int ) ( ( x ) . size ( ) ) ) ; i ++ )	for ( int i = 0 ; i < x. size ( ) ; i ++ )
14394	change flag to 0 if i is less than size of arr [ c ] and x [ i ] ! = arr [ c ] [ i ]	N/A	N/A	if ( i < ( ( int ) ( ( arr [ c ] ) . size ( ) ) ) && x [ i ] != arr [ c ] [ i ] ) flag = 0 ;	if ( i < ( int ) arr [ c ]. size ( ) && x [ i ]!= arr [ C ] [ 1 ] ) flag = 0 ;
14395	DUMMY	0.0	0.0	}	DUMMY
14396	if flag is not 0 , return cout < < arr [ c ] < < " \ n " , 0	N/A	N/A	if ( flag ) return cout << arr [ c ] << " \n " , 0 ;	if ( flag ) return cout << arr [ c ] << " \n ", 0 ;
14397	DUMMY	0.0	0.0	}	DUMMY
14398	print x and " \ n " to the standard output	N/A	N/A	cout << x << " \n " ;	cout << x << " \n " ;
14399	DUMMY	0.0	0.0	return 0;	DUMMY
14400	DUMMY	0.0	0.0	}	DUMMY
14401	DUMMY	0.0	0.0	int main() {	DUMMY
14402	create string s	N/A	N/A	string s ;	string s ;
14403	read s	N/A	N/A	cin >> s ;	cin >> s ;
14404	make integer n	N/A	N/A	int n ;	int n ;
14405	read n	N/A	N/A	cin >> n ;	cin >> n ;
14406	make string vector a of size n	N/A	N/A	vector < string > a ( n ) ;	vector < string > a ( n ) ;
14407	for i = 0 to n exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; ++ i ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }
14408	let int opt = - 1	N/A	N/A	int opt = - 1 ;	int opt = - 1 ;
14409	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
14410	if ( int ) ( a [ i ] ) . size ( ) is less than ( int ) ( s ) . size ( ) , continue to next loop iteration	N/A	N/A	if ( ( int ) ( a [ i ] ) . size ( ) < ( int ) ( s ) . size ( ) ) { continue ; }	if ( ( int ) ( a [ i ] ). size ( ) < ( int) ( s ). length ( ) ) continue ;
14411	if a [ i ] . substr ( 0 , ( int ) ( s ) . size ( ) ) is not equal to s , continue to next loop iteration	N/A	N/A	if ( a [ i ] . substr ( 0 , ( int ) ( s ) . size ( ) ) != s ) { continue ; }	if ( a [ i ]. substr ( 0, ( int ) ( s ). size ( ) )!= s ) continue ;
14412	if opt is equal to - 1 or a [ i ] is less than a [ opt ] , set opt to i	N/A	N/A	if ( opt == - 1 || a [ i ] < a [ opt ] ) { opt = i ; }	if ( opt == - 1 || a [ i ] < a [ opt ] ) { opt = i ; }
14413	DUMMY	0.0	0.0	}	DUMMY
14414	if opt is not equal to - 1	N/A	N/A	if ( opt != - 1 )	if ( opt!= - 1 )
14415	print a [ opt ]	N/A	N/A	cout << a [ opt ] ;	cout << a [ opt ] << endl ;
14416	else	N/A	N/A	else	else
14417	print s	N/A	N/A	cout << s ;	cout << s << endl ;
14418	DUMMY	0.0	0.0	}	DUMMY
14419	print new line	N/A	N/A	cout << " \n " ;	cout << endl ;
14420	DUMMY	0.0	0.0	}	DUMMY
14421	create new constant integer variable N with value 110	N/A	N/A	const int N = 110 ;	const int N = 110 ;
14422	declare new string input and string array hist with size N	N/A	N/A	string hist [ N ] , input ;	string input, hist [ N ] ;
14423	declare vector of strings called prefixed	N/A	N/A	vector < string > prefixed ;	vector < string > prefixed ;
14424	declare new integer n	N/A	N/A	int n ;	int n ;
14425	boolean function comp with string arguments s1 and s2	N/A	N/A	bool comp ( string s1 , string s2 )	bool comp ( string s1, string s2 )
14426	return true if s1 is less than s2 in lexicographic order , or false otherwise	N/A	N/A	return strcmp ( s1 . c_str ( ) , s2 . c_str ( ) ) < 0 ;	return ( s1 < s2 ) ;
14427	DUMMY	0.0	0.0	}	DUMMY
14428	isPref is a boolean function with string arguments s1 and s2	N/A	N/A	bool isPref ( string s1 , string s2 )	bool isPref ( string s1, string s2 )
14429	if length of s1 is less than length of s2 , return false	N/A	N/A	if ( s1 . size ( ) < s2 . size ( ) ) return false ;	if ( s1. size ( ) < s2. length ( ) ) return false ;
14430	for integer i = 0 to length of s2 exclusive	N/A	N/A	for ( int i = 0 ; i < s2 . size ( ) ; i ++ )	for ( int i = 0 ; i < s2. length ( ) ; i ++ )
14431	if s1 [ i ] ! = s2 [ i ] , return false	N/A	N/A	if ( s1 [ i ] != s2 [ i ] ) return false ;	if ( s1 [ i ]!= s2 [ 1 ] ) return false ;
14432	return true	N/A	N/A	return true ;	return true ;
14433	DUMMY	0.0	0.0	}	DUMMY
14434	DUMMY	0.0	0.0	int main() {	DUMMY
14435	read input and n from the input	N/A	N/A	cin >> input >> n ;	cin >> input >> n ;
14436	for integer i = 0 to n exclusive incrementing i	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14437	read hist [ i ] from the user input	N/A	N/A	cin >> hist [ i ] ;	cin >> hist [ i ] ;
14438	if isPref ( hist [ i ] , input ) returned true , push hist [ i ] into prefixed	N/A	N/A	if ( isPref ( hist [ i ] , input ) ) prefixed . push_back ( hist [ i ] ) ;	if ( isPref ( hist [ i ], input ) ) { prefixed. push_back ( ( long long ) ( ( int ) hist [ 1 ] ) ) ; }
14439	DUMMY	0.0	0.0	}	DUMMY
14440	if prefixed is not emptu	N/A	N/A	if ( ! prefixed . empty ( ) )	if (! prefixed. empty ( ) )
14441	sort prefixed	N/A	N/A	sort ( prefixed . begin ( ) , prefixed . end ( ) , comp ) ;	sort ( prefixed, prefixed + n ) ;
14442	print first element of prefixed to the standard output	N/A	N/A	cout << prefixed [ 0 ] << endl ;	cout << prefixed. first << endl ;
14443	else	N/A	N/A	else	else
14444	print input	N/A	N/A	cout << input << endl ;	cout << input << endl ;
14445	DUMMY	0.0	0.0	}	DUMMY
14446	DUMMY	0.0	0.0	int main() {	DUMMY
14447	s is a new array of strings with size 101	N/A	N/A	string s [ 101 ] ;	string s [ 101 ] ;
14448	declare integer variable n	N/A	N/A	int n ;	int n ;
14449	declare new string t	N/A	N/A	string t ;	string t ;
14450	read t from the user input	N/A	N/A	cin >> t ;	cin >> t ;
14451	read standard input to n	N/A	N/A	cin >> n ;	cin >> n ;
14452	in a for loop , change i from 0 to n exclusive , reading s [ i ] on each loop	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ;
14453	sort s	N/A	N/A	sort ( s , s + n ) ;	sort ( s. begin ( ), s. end ( ) ) ;
14454	in a for loop , change i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14455	if length of s [ i ] is less than length of t , skip the rest of the loop	N/A	N/A	if ( s [ i ] . length ( ) < t . length ( ) ) continue ;	if ( s [ i ]. size ( ) < t. length ( ) ) continue ;
14456	declare integer j with value 0	N/A	N/A	int j = 0 ;	int j = 0 ;
14457	while j < length of t	N/A	N/A	while ( j < ( int ) t . length ( ) )	while ( j < t. size ( ) )
14458	if s [ i ] [ j ] ! = t [ j ] , break	N/A	N/A	if ( s [ i ] [ j ] != t [ j ] ) break ;	if ( s [ i ] [ j ]!= t [ j - 1 ] ) break ;
14459	increment j by one	N/A	N/A	j ++ ;	j ++ ;
14460	DUMMY	0.0	0.0	}	DUMMY
14461	if j = length of t	N/A	N/A	if ( j == ( int ) t . length ( ) )	if ( j == t. size ( ) )
14462	print s [ i ] to the standard output	N/A	N/A	cout << s [ i ] << endl ;	cout << s [ i ] ;
14463	DUMMY	0.0	0.0	return 0;	DUMMY
14464	DUMMY	0.0	0.0	}	DUMMY
14465	DUMMY	0.0	0.0	}	DUMMY
14466	print t	N/A	N/A	cout << t << endl ;	cout << t << endl ;
14467	DUMMY	0.0	0.0	return 0;	DUMMY
14468	DUMMY	0.0	0.0	}	DUMMY
14469	s = string	N/A	N/A	string s ;	string s ;
14470	n = integer	N/A	N/A	int n ;	int n ;
14471	in function Run that returns nothing	N/A	N/A	inline void Run ( )	void Run ( )
14472	while s can be read as a valid string	N/A	N/A	while ( cin >> s )	while ( cin >> s )
14473	ans , tmp = string	N/A	N/A	string ans = " " , tmp = " " ;	string ans, tmp ;
14474	for i = 1 to 110 inclusive and increase i at the start of the loop , then ans = ans + z , tmp = tmp + z	N/A	N/A	for ( int i = 1 ; i <= 110 ; ++ i ) ans += ' z ' , tmp += ' z ' ;	for ( int i = 1 ; i <= 110 ; ++ i ) { ans += z, tmp += z ; }
14475	read n	N/A	N/A	cin >> n ;	cin >> n ;
14476	t = string t	N/A	N/A	string t ;	string t ;
14477	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; ++ i )	for ( int i = 1 ; i <= n ; i ++ )
14478	read t	N/A	N/A	cin >> t ;	cin >> t ;
14479	if size of t < size of s , continue	N/A	N/A	if ( t . size ( ) < s . size ( ) ) continue ;	if ( ( t. size ( ) ) < ( int ) ( ( s ). length ( ) - 1 ) ) continue ;
14480	if contents of t from the beginning of t to size of s elements away is s , then ans = lower value between ans and t	N/A	N/A	if ( t . substr ( 0 , s . size ( ) ) == s ) ans = min ( ans , t ) ;	if ( t. begin ( )!= t. size ( ) && t. end ( ) == s ) { ans = min ( ans, t ) ; }
14481	DUMMY	0.0	0.0	}	DUMMY
14482	if ans is tmp , then ans = s	N/A	N/A	if ( ans == tmp ) ans = s ;	if ( ans == tmp ) ans = s ;
14483	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
14484	DUMMY	0.0	0.0	}	DUMMY
14485	DUMMY	0.0	0.0	}	DUMMY
14486	DUMMY	0.0	0.0	int main() {	DUMMY
14487	call Run	N/A	N/A	Run ( ) ;	Run ( ) ;
14488	DUMMY	0.0	0.0	return 0;	DUMMY
14489	DUMMY	0.0	0.0	}	DUMMY
14490	in the function lexi_comp that takes const string reference a , b and returns bool	N/A	N/A	bool lexi_comp ( const string & a , const string & b )	bool lexi_comp ( const string & a, string & b )
14491	n = integer with n = min of a . size ( ) and b . size ( )	N/A	N/A	int n = min ( a . size ( ) , b . size ( ) ) ;	int n = min ( ( a ). size ( ), ( b ).size ( ) ) ;
14492	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14493	if a [ i ] is not b [ i ] , return a [ i ] < b [ i ]	N/A	N/A	if ( a [ i ] != b [ i ] ) { return a [ i ] < b [ i ] ; }	if ( a [ i ]!= b [ 1 ] ) { return a [ j ] < b [ 2 ] ; }
14494	DUMMY	0.0	0.0	}	DUMMY
14495	return a . size ( ) < b . size ( )	N/A	N/A	return a . size ( ) < b . size ( ) ;	return ( a. size ( ) < b.size ( ) ) ;
14496	DUMMY	0.0	0.0	}	DUMMY
14497	in the function isPrefix that takes const string reference a , b and returns bool	N/A	N/A	bool isPrefix ( const string & a , const string & b )	bool isPrefix ( const string & a, string & b )
14498	if b . size ( ) < a . size ( ) , return false	N/A	N/A	if ( b . size ( ) < a . size ( ) ) { return false ; }	if ( b. size ( ) < a.size ( ) ) return false ;
14499	for i = 0 to a . size ( ) exclusive	N/A	N/A	for ( int i = 0 ; i < a . size ( ) ; i ++ )	for ( int i = 0 ; i < a. size ( ) ; i ++ )
14500	if a [ i ] is not b [ i ] , return false	N/A	N/A	if ( a [ i ] != b [ i ] ) { return false ; }	if ( a [ i ]!= b [ 1 ] ) return false ;
14501	DUMMY	0.0	0.0	}	DUMMY
14502	return true	N/A	N/A	return true ;	return true ;
14503	DUMMY	0.0	0.0	}	DUMMY
14504	DUMMY	0.0	0.0	int main() {	DUMMY
14505	a , b , ans = string	N/A	N/A	string a , b , ans ;	string a, b, ans ;
14506	n = integer	N/A	N/A	int n ;	int n ;
14507	read a , n	N/A	N/A	cin >> a >> n ;	cin >> a >> n ;
14508	ans = a + string on 100 an z	N/A	N/A	ans = a + string ( 100 , ' z ' ) ;	ans = a + string ( 100 * z ) ;
14509	ok = bool with ok = false	N/A	N/A	bool ok = false ;	bool ok = false ;
14510	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14511	read b	N/A	N/A	cin >> b ;	cin >> b ;
14512	if isPrefix on a and b	N/A	N/A	if ( isPrefix ( a , b ) )	if ( isPrefix ( a, b ) )
14513	ok = true	N/A	N/A	ok = true ;	ok = true ;
14514	if lexi_comp ( b , ans ) , swap b and ans	N/A	N/A	if ( lexi_comp ( b , ans ) ) { swap ( b , ans ) ; }	if ( lexi_comp ( b, ans ) ) swap ( b. begin ( ), b. end ( ) ), ans ;
14515	DUMMY	0.0	0.0	}	DUMMY
14516	DUMMY	0.0	0.0	}	DUMMY
14517	if ok	N/A	N/A	if ( ok )	if ( ok )
14518	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
14519	else	N/A	N/A	else	else
14520	print a	N/A	N/A	cout << a << endl ;	cout << a << endl ;
14521	DUMMY	0.0	0.0	}	DUMMY
14522	DUMMY	0.0	0.0	return 0;	DUMMY
14523	DUMMY	0.0	0.0	}	DUMMY
14524	create string st and string array st1 of size 102	N/A	N/A	string st , st1 [ 102 ] ;	string st, st1 [ 102 ] ;
14525	let long long int n	N/A	N/A	long long n ;	long long int n ;
14526	DUMMY	0.0	0.0	int main() {	DUMMY
14527	read st and n	N/A	N/A	cin >> st >> n ;	cin >> st >> n ;
14528	for i = 1 to n , read st1 [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> st1 [ i ] ;	for ( long long int i = 1 ; i <= n ; i ++ ) cin >> st1 [ i ] ;
14529	sort st1 + 1 using argument st1 + n + 1	N/A	N/A	sort ( st1 + 1 , st1 + n + 1 ) ;	sort ( st1 + 1, st1+ n + 1 ) ;
14530	for i = 1 to n	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( long long int i = 1 ; i <= n ; i ++ )
14531	if st [ i ] . find ( st ) is equal to 0	N/A	N/A	if ( st1 [ i ] . find ( st ) == 0 )	if ( st [ i ]. find ( st ) == 0 )
14532	print st1 [ i ]	N/A	N/A	cout << st1 [ i ] << endl ;	cout << st1 [ i ] << endl ;
14533	DUMMY	0.0	0.0	return 0;	DUMMY
14534	DUMMY	0.0	0.0	}	DUMMY
14535	print st	N/A	N/A	cout << st << endl ;	cout << st << endl ;
14536	DUMMY	0.0	0.0	return 0;	DUMMY
14537	DUMMY	0.0	0.0	}	DUMMY
14538	DUMMY	0.0	0.0	int main() {	DUMMY
14539	a = pointer to string , s = string	N/A	N/A	string * a , s ;	string * a, s ;
14540	n = int	N/A	N/A	int n ;	int n ;
14541	read s	N/A	N/A	cin >> s >> n ;	cin >> s ;
14542	a = array of n string	N/A	N/A	a = new string [ n ] ;	string a [ n ] ;
14543	for i = 0 to n exclusive read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }
14544	sort first n items of a	N/A	N/A	sort ( a , a + n ) ;	sort ( a, a + n ) ;
14545	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14546	if a [ i ] begins with s	N/A	N/A	if ( a [ i ] . find ( s ) == 0 )	if ( a [ i ] == s )
14547	print a [ i ]	N/A	N/A	cout << a [ i ] << endl ;	cout << a [ i ] ;
14548	DUMMY	0.0	0.0	return 0;	DUMMY
14549	DUMMY	0.0	0.0	}	DUMMY
14550	DUMMY	0.0	0.0	}	DUMMY
14551	print s	N/A	N/A	cout << s << endl ;	cout << s ;
14552	DUMMY	0.0	0.0	return 0;	DUMMY
14553	DUMMY	0.0	0.0	}	DUMMY
14554	DUMMY	0.0	0.0	int main() {	DUMMY
14555	s = string	N/A	N/A	string s ;	string s ;
14556	n = integer	N/A	N/A	int n ;	int n ;
14557	read s , n	N/A	N/A	cin >> s >> n ;	cin >> s >> n ;
14558	v = vector of string with v = n + 1	N/A	N/A	vector < string > v ( n + 1 ) ;	vector < string > v ( n + 1 ) ;
14559	for i = 0 to n exclusive , read v [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> v [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> v [ i ] ; }
14560	v [ n ] = s	N/A	N/A	v [ n ] = s ;	v [ n ] = s ;
14561	sort v . begin ( ) and v . end ( )	N/A	N/A	sort ( v . begin ( ) , v . end ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
14562	for i = 0 to n	N/A	N/A	for ( int i = 0 ; i <= n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14563	if v [ i ] is s	N/A	N/A	if ( v [ i ] == s )	if ( v [ i ] == s )
14564	if i < n and v [ i ] is v [ i + 1 ] . substring ( 0 , ( int ) v [ i ] . size ( ) )	N/A	N/A	if ( i < n && v [ i ] == v [ i + 1 ] . substr ( 0 , ( int ) v [ i ] . size ( ) ) )	if ( i < n && v [ i ] == v [ 1 ]. subst ( 0, ( int ) v [ 0 ]. size ( ) ) )
14565	print v [ i + 1 ]	N/A	N/A	cout << v [ i + 1 ] << endl ;	cout << v [ i + 1 ] << endl ;
14566	break loop	N/A	N/A	break ;	break ;
14567	else	N/A	N/A	else	else
14568	print v [ i ]	N/A	N/A	cout << v [ i ] << endl ;	cout << v [ i ] << endl ;
14569	break loop	N/A	N/A	break ;	break ;
14570	DUMMY	0.0	0.0	}	DUMMY
14571	DUMMY	0.0	0.0	}	DUMMY
14572	DUMMY	0.0	0.0	}	DUMMY
14573	DUMMY	0.0	0.0	return 0;	DUMMY
14574	DUMMY	0.0	0.0	}	DUMMY
14575	declare check taking in strings s and t and returning bool	N/A	N/A	bool check ( string s , string t )	bool check ( string s, string t )
14576	if length of s is less than length of t , return false	N/A	N/A	if ( s . length ( ) < t . length ( ) ) return false ;	if ( s. length ( ) < t. size ( ) ) return false ;
14577	if i = 0 to length of t exclusive	N/A	N/A	for ( int i = 0 ; i < t . length ( ) ; i ++ )	for ( int i = 0 ; i < t. length ( ) ; i ++ )
14578	if s [ i ] is not equal to t [ i ] , return false	N/A	N/A	if ( s [ i ] != t [ i ] ) return false ;	if ( s [ i ]!= t [ 1 ] ) return false ;
14579	return true	N/A	N/A	return true ;	return true ;
14580	DUMMY	0.0	0.0	}	DUMMY
14581	DUMMY	0.0	0.0	int main() {	DUMMY
14582	let string t	N/A	N/A	string t ;	string t ;
14583	read t	N/A	N/A	cin >> t ;	cin >> t ;
14584	create integer n	N/A	N/A	int n ;	int n ;
14585	read n	N/A	N/A	cin >> n ;	cin >> n ;
14586	let string array s of size 1000	N/A	N/A	string s [ 1000 ] ;	string s [ 1000 ] ;
14587	for i = 1 to n , read s [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) { cin >> s [ i ] ; }
14588	create string min = " "	N/A	N/A	string min = " " ;	string min = " " ;
14589	for i = 1 to n	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
14590	if check ( s [ i ] , t ) is true	N/A	N/A	if ( check ( s [ i ] , t ) )	if ( check ( s [ i ], t ) )
14591	if min is equal to " " or s [ i ] is less than min , set min to s [ i ]	N/A	N/A	if ( min == " " || s [ i ] < min ) min = s [ i ] ;	if ( min == " " || s [ i ] < min ) min = s [ 1 ] ;
14592	if min is equal to " "	N/A	N/A	if ( min == " " )	if ( min == " " )
14593	print t	N/A	N/A	cout << t << endl ;	cout << t << endl ;
14594	else	N/A	N/A	else	else
14595	print min	N/A	N/A	cout << min << endl ;	cout << min << endl ;
14596	DUMMY	0.0	0.0	return 0;	DUMMY
14597	DUMMY	0.0	0.0	}	DUMMY
14598	DUMMY	0.0	0.0	int main() {	DUMMY
14599	var = string and str = pointer to a string	N/A	N/A	string * str , var ;	string var, str ;
14600	n = int	N/A	N/A	int n ;	int n ;
14601	read var then n	N/A	N/A	cin >> var >> n ;	cin >> var >> n ;
14602	set str to new string array of size n	N/A	N/A	str = new string [ n ] ;	str = new string [ n ] ;
14603	read n values into str	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> str [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> str [ i ] ;
14604	sort str	N/A	N/A	sort ( str , str + n ) ;	sort ( str, str + n ) ;
14605	for i = 0 to n	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14606	if str [ i ] starts with var	N/A	N/A	if ( str [ i ] . find ( var ) == 0 )	if ( str [ i ] == var )
14607	print str [ i ]	N/A	N/A	cout << str [ i ] << endl ;	cout << str [ i ] ;
14608	DUMMY	0.0	0.0	return 0;	DUMMY
14609	DUMMY	0.0	0.0	}	DUMMY
14610	DUMMY	0.0	0.0	}	DUMMY
14611	print var	N/A	N/A	cout << var << endl ;	cout << var << endl ;
14612	DUMMY	0.0	0.0	return 0;	DUMMY
14613	DUMMY	0.0	0.0	}	DUMMY
14614	DUMMY	0.0	0.0	int main() {	DUMMY
14615	create integer n	N/A	N/A	int n ;	int n ;
14616	read n	N/A	N/A	cin >> n ;	cin >> n ;
14617	create vector of booleans called good with n elements filled with 1	N/A	N/A	vector < bool > good ( n , 1 ) ;	vector < bool > good ( n, 1 ) ;
14618	for i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14619	for j from 0 to n exclusive	N/A	N/A	for ( int j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
14620	declare integer x	N/A	N/A	int x ;	int x ;
14621	read input to x	N/A	N/A	cin >> x ;	cin >> x ;
14622	if x < = 0	N/A	N/A	if ( x <= 0 )	if ( x <= 0 )
14623	go to the start of the loop	N/A	N/A	continue ;	continue ;
14624	else if x = 1	N/A	N/A	else if ( x == 1 )	else if ( x == 1 )
14625	set good [ i ] to 0	N/A	N/A	good [ i ] = 0 ;	good [ i ] = 0 ;
14626	else if x = 2	N/A	N/A	else if ( x == 2 )	else if ( x == 2 )
14627	set good [ j ] to 0	N/A	N/A	good [ j ] = 0 ;	good [ j ] = 0 ;
14628	else	N/A	N/A	else	else
14629	set good [ i ] and good [ j ] to 0	N/A	N/A	good [ i ] = good [ j ] = 0 ;	good [ i ] = good [ j ] = 0 ;
14630	DUMMY	0.0	0.0	}	DUMMY
14631	DUMMY	0.0	0.0	}	DUMMY
14632	declare vector of integers called sol	N/A	N/A	vector < int > sol ;	vector < int > sol ;
14633	for i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14634	if good [ i ] is true , push i + 1 to sol	N/A	N/A	if ( good [ i ] ) sol . push_back ( i + 1 ) ;	if ( good [ i ] ) sol. push_back ( i + 1 ) ;
14635	print length of sol	N/A	N/A	cout << sol . size ( ) << endl ;	cout << sol. size ( ) << endl ;
14636	if length of sol > 0	N/A	N/A	if ( sol . size ( ) > 0 )	if ( sol. size ( ) > 0 )
14637	for integer i = 0 to length of sol exclusive	N/A	N/A	for ( int i = 0 ; i < sol . size ( ) ; i ++ )	for ( int i = 0 ; i < sol. size ( ) ; i ++ )
14638	if i ! = 0 , print ' '	N/A	N/A	if ( i != 0 ) cout << ' ' ;	if ( i!= 0 ) cout <<' ';
14639	print sol [ i ]	N/A	N/A	cout << sol [ i ] ;	cout << sol [ i ] ;
14640	DUMMY	0.0	0.0	}	DUMMY
14641	print new line	N/A	N/A	cout << endl ;	cout << endl ;
14642	DUMMY	0.0	0.0	}	DUMMY
14643	DUMMY	0.0	0.0	return 0;	DUMMY
14644	DUMMY	0.0	0.0	}	DUMMY
14645	DUMMY	0.0	0.0	int main() {	DUMMY
14646	n , i , j , k , flag = int , a = array of 100 by 100 int , b = array of 100 int filled with 0	N/A	N/A	int n , i , j , a [ 100 ] [ 100 ] , b [ 100 ] = { 0 } , k , flag ;	int n, i, j, k, b [ 100 ] = { 0 }, flag ;
14647	read n	N/A	N/A	cin >> n ;	cin >> n ;
14648	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
14649	for j = 0 to n exclusive read a [ i ] [ j ]	N/A	N/A	for ( j = 0 ; j < n ; j ++ ) { cin >> a [ i ] [ j ] ; }	for ( j = 0 ; j < n ; j ++ ) { cin >> a [ i ] [ j ] ; }
14650	DUMMY	0.0	0.0	}	DUMMY
14651	k = 0	N/A	N/A	k = 0 ;	k = 0 ;
14652	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
14653	flag = 1	N/A	N/A	flag = 1 ;	flag = 1 ;
14654	for j = 0 to n exclusive	N/A	N/A	for ( j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
14655	if i ! = j	N/A	N/A	if ( i != j )	if ( i!= j )
14656	if a [ i ] [ j ] is 1 or 3 flag = 0	N/A	N/A	if ( a [ i ] [ j ] == 1 || a [ i ] [ j ] == 3 ) flag = 0 ;	if ( a [ i ] [ j ] == 1 || a [ k ] [ 1 ] == 3 ) { flag = 0 ; }
14657	DUMMY	0.0	0.0	}	DUMMY
14658	DUMMY	0.0	0.0	}	DUMMY
14659	if flag b [ k ] = i + 1 , increment k	N/A	N/A	if ( flag ) b [ k ++ ] = i + 1 ;	if ( flag ) b [ k ++ ] = i + 1 ;
14660	DUMMY	0.0	0.0	}	DUMMY
14661	if b [ 0 ] is 0	N/A	N/A	if ( b [ 0 ] == 0 )	if ( b [ 0 ] == 0 )
14662	print " 0 "	N/A	N/A	cout << " 0 " << endl ;	cout << " 0 " << endl ;
14663	else	N/A	N/A	else	else
14664	print k	N/A	N/A	cout << k << endl ;	cout << k << endl ;
14665	for i = 0 to k - 1 excluisve print b [ i ] , space	N/A	N/A	for ( i = 0 ; i < k - 1 ; i ++ ) { cout << b [ i ] << " " ; }	for ( int i = 0 ; i < k - 1 ; i ++ ) { cout << b [ i ] << " " ; }
14666	print b [ k - 1 ]	N/A	N/A	cout << b [ k - 1 ] << endl ;	cout << b [ k - 1 ] << endl ;
14667	DUMMY	0.0	0.0	}	DUMMY
14668	DUMMY	0.0	0.0	return 0;	DUMMY
14669	DUMMY	0.0	0.0	}	DUMMY
14670	vis = array of 105 int , f = array of 105 by 105 int	N/A	N/A	int vis [ 105 ] , f [ 105 ] [ 105 ] ;	int vis [ 105 ] = { }, f ( 105 ] [ 105 ) ;
14671	DUMMY	0.0	0.0	int main() {	DUMMY
14672	n = int	N/A	N/A	int n ;	int n ;
14673	read n	N/A	N/A	cin >> n ;	cin >> n ;
14674	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
14675	for j = 1 to n inclusive	N/A	N/A	for ( int j = 1 ; j <= n ; j ++ )	for ( int j = 1 ; j <= n ; j ++ )
14676	read f [ i ] [ j ]	N/A	N/A	cin >> f [ i ] [ j ] ;	cin >> f [ i ] [ j ] ;
14677	if f [ i ] [ j ] is 1	N/A	N/A	if ( f [ i ] [ j ] == 1 )	if ( f [ i ] [ j ] == 1 )
14678	vis [ i ] = 1	N/A	N/A	vis [ i ] = 1 ;	vis [ i ] = 1 ;
14679	else if f [ i ] [ j ] is 2	N/A	N/A	else if ( f [ i ] [ j ] == 2 )	else if ( f [ i ] [ j ] == 2 )
14680	vis [ j ] = 1	N/A	N/A	vis [ j ] = 1 ;	vis [ j ] = 1 ;
14681	else if f [ i ] [ j ] is 3	N/A	N/A	else if ( f [ i ] [ j ] == 3 )	else if ( f [ i ] [ j ] == 3 )
14682	vis [ i ] = vis [ j ] = 1	N/A	N/A	vis [ i ] = vis [ j ] = 1 ;	vis [ i ] = vis [ j ] = 1 ;
14683	DUMMY	0.0	0.0	}	DUMMY
14684	DUMMY	0.0	0.0	}	DUMMY
14685	a = array of 105 int , top = 0	N/A	N/A	int a [ 105 ] , top = 0 ;	int a [ 105 ], top = 0 ;
14686	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
14687	if not vis [ i ] a [ top ] = i , increment top	N/A	N/A	if ( ! vis [ i ] ) { a [ top ++ ] = i ; }	if (! vis [ i ] ) a [ top ++ ] = i ;
14688	DUMMY	0.0	0.0	}	DUMMY
14689	print top	N/A	N/A	cout << top << endl ;	cout << top << endl ;
14690	for i = 0 to top exclusive	N/A	N/A	for ( int i = 0 ; i < top ; i ++ )	for ( int i = 0 ; i < top ; i ++ )
14691	if i is top - 1	N/A	N/A	if ( i == top - 1 )	if ( i == top - 1 )
14692	print a [ i ]	N/A	N/A	cout << a [ i ] << endl ;	cout << a [ i ] ;
14693	else	N/A	N/A	else	else
14694	print a [ i ] and space	N/A	N/A	cout << a [ i ] << " " ;	cout << a [ i ] << " " ;
14695	DUMMY	0.0	0.0	}	DUMMY
14696	DUMMY	0.0	0.0	return 0;	DUMMY
14697	DUMMY	0.0	0.0	}	DUMMY
14698	declare vector of integers vec	N/A	N/A	vector < int > vec ;	vector < int > vec ;
14699	DUMMY	0.0	0.0	int main() {	DUMMY
14700	declare int variable n	N/A	N/A	int n ;	int n ;
14701	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
14702	create 2d array of ints arr with size n by n	N/A	N/A	int arr [ n ] [ n ] ;	int arr [ ( n ] ] [ n ] ;
14703	for i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14704	for j from 0 to n exclusive , read input to arr [ i ] [ j ]	N/A	N/A	for ( int j = 0 ; j < n ; j ++ ) { cin >> arr [ i ] [ j ] ; }	for ( int j = 0 ; j < n ; j ++ ) { cin >> arr [ i ] [ j ] ; }
14705	DUMMY	0.0	0.0	}	DUMMY
14706	declare int cnt = 0	N/A	N/A	int cnt = 0 ;	int cnt = 0 ;
14707	for i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14708	create bool t = true	N/A	N/A	bool t = true ;	bool t = true ;
14709	for j = 0 to n exclusive	N/A	N/A	for ( int j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
14710	if arr [ i ] [ j ] = 1 or arr [ i ] [ j ] = 3	N/A	N/A	if ( arr [ i ] [ j ] == 1 || arr [ i ] [ j ] == 3 )	if ( arr [ i ] [ j ] == 1 || arr [ 1 ] [ k ] == 3 )
14711	set t to false	N/A	N/A	t = false ;	t = false ;
14712	stop the loop	N/A	N/A	break ;	break ;
14713	DUMMY	0.0	0.0	}	DUMMY
14714	DUMMY	0.0	0.0	}	DUMMY
14715	if t is true	N/A	N/A	if ( t )	if ( t )
14716	increment cnt by one	N/A	N/A	cnt ++ ;	cnt ++ ;
14717	push i + 1 into vec	N/A	N/A	vec . push_back ( i + 1 ) ;	vec. push_back ( i + 1 ) ;
14718	DUMMY	0.0	0.0	}	DUMMY
14719	DUMMY	0.0	0.0	}	DUMMY
14720	print cnt	N/A	N/A	cout << cnt << endl ;	cout << cnt << endl ;
14721	declare integer len = length of vec	N/A	N/A	int len = vec . size ( ) ;	int len = vec. size ( ) ;
14722	print all elements of vec except last with " " after each one	N/A	N/A	for ( int i = 0 ; i < len - 1 ; i ++ ) { cout << vec [ i ] << " " ; }	for ( int i = 0 ; i < vec. size ( ) ; i ++ ) { cout << vec [ i ] << " " ; }
14723	if cnt is greater than 0 , print last element of vec	N/A	N/A	if ( cnt > 0 ) cout << vec [ vec . size ( ) - 1 ] << endl ;	if ( cnt > 0 ) { cout << vec [ len - 1 ] << endl ; }
14724	DUMMY	0.0	0.0	}	DUMMY
14725	DUMMY	0.0	0.0	int main() {	DUMMY
14726	define ints n , i , j	N/A	N/A	int n , i , j ;	int n, i, j ;
14727	define 2 - dimensional int array a to be of 105 x 105 elements , int array f to be of 105 elements , int t , and int array b to be of 105 elements	N/A	N/A	int a [ 105 ] [ 105 ] , f [ 105 ] , t , b [ 105 ] ;	int a [ 105 ] [ 105 + 3 ], f [ 105 * 105 ], t, b [ 105 - 3 ] ;
14728	read n	N/A	N/A	cin >> n ;	cin >> n ;
14729	assign zero to t	N/A	N/A	t = 0 ;	t = 0 ;
14730	for i by 1 from 0 to n ( exclusive ) , set f [ i ] to 1	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) f [ i ] = 1 ;	for ( i = 0 ; i < n ; i ++ ) f [ i ] = 1 ;
14731	for i from 0 to n ( exclusive ) by 1	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
14732	for j from 0 to n ( exclusive ) by 1	N/A	N/A	for ( j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
14733	read a [ i ] [ j ]	N/A	N/A	cin >> a [ i ] [ j ] ;	cin >> a [ i ] [ j ] ;
14734	if a [ i ] [ j ] is 1	N/A	N/A	if ( a [ i ] [ j ] == 1 )	if ( a [ i ] [ j ] == 1 )
14735	set f [ i ] to 0	N/A	N/A	f [ i ] = 0 ;	f [ i ] = 0 ;
14736	else if a [ i ] [ j ] is two	N/A	N/A	else if ( a [ i ] [ j ] == 2 )	else if ( a [ i ] [ j ] == 2 )
14737	zero f [ j ]	N/A	N/A	f [ j ] = 0 ;	f [ j ] = 0 ;
14738	otherwise if a [ i ] j ] = three	N/A	N/A	else if ( a [ i ] [ j ] == 3 )	else if ( a [ i ] [ j ] == three )
14739	zero f [ i ] and f [ j ]	N/A	N/A	f [ i ] = f [ j ] = 0 ;	f [ i ] = f [ j ] = 0 ;
14740	DUMMY	0.0	0.0	}	DUMMY
14741	DUMMY	0.0	0.0	}	DUMMY
14742	for i from 0 to n ( exclusive ) by 1	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
14743	if f [ i ] , then set b [ t ] to i + 1 and then increment t	N/A	N/A	if ( f [ i ] ) b [ t ++ ] = i + 1 ;	if ( f [ i ] ) b [ t ++ ] = i + 1 ;
14744	DUMMY	0.0	0.0	}	DUMMY
14745	print t and newline	N/A	N/A	cout << t << endl ;	cout << t << endl ;
14746	for i from 0 to t ( exclusive ) by 1	N/A	N/A	for ( i = 0 ; i < t ; i ++ )	for ( int i = 0 ; i < t ; i ++ )
14747	if i isn ' t t - 1	N/A	N/A	if ( i != t - 1 )	if ( i!= t - 1 )
14748	print b [ i ] and " "	N/A	N/A	cout << b [ i ] << " " ;	cout << b [ i ] << " " ;
14749	else	N/A	N/A	else	else
14750	print b [ i ] and newline	N/A	N/A	cout << b [ i ] << endl ;	cout << b [ i ] << endl ;
14751	DUMMY	0.0	0.0	}	DUMMY
14752	DUMMY	0.0	0.0	return 0;	DUMMY
14753	DUMMY	0.0	0.0	}	DUMMY
14754	DUMMY	0.0	0.0	int main() {	DUMMY
14755	n , d , s = int , dist = array of 105 int	N/A	N/A	int n , d , dist [ 105 ] , s ;	int n, d, s, dist [ 105 ] ;
14756	read n	N/A	N/A	cin >> n ;	cin >> n ;
14757	s = n	N/A	N/A	s = n ;	s = n ;
14758	fill dist with 0	N/A	N/A	memset ( dist , 0 , sizeof ( dist ) ) ;	memset ( dist, 0, sizeof ( dist ) ) ;
14759	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
14760	for j = 1 to n inclusive	N/A	N/A	for ( int j = 1 ; j <= n ; j ++ )	for ( int j = 1 ; j <= n ; j ++ )
14761	read d	N/A	N/A	cin >> d ;	cin >> d ;
14762	if d is 1 increment dist [ i ]	N/A	N/A	if ( d == 1 ) dist [ i ] ++ ;	if ( d == 1 ) dist [ i ] ++ ;
14763	if d is 2 increment dist [ j ]	N/A	N/A	if ( d == 2 ) dist [ j ] ++ ;	if ( d == 2 ) dist [ j ] ++ ;
14764	if d is 3	N/A	N/A	if ( d == 3 )	if ( d == 3 )
14765	increment dist [ i ]	N/A	N/A	dist [ i ] ++ ;	dist [ i ] ++ ;
14766	increment dist [ j ]	N/A	N/A	dist [ j ] ++ ;	dist [ j ] ++ ;
14767	DUMMY	0.0	0.0	}	DUMMY
14768	DUMMY	0.0	0.0	}	DUMMY
14769	DUMMY	0.0	0.0	}	DUMMY
14770	for i = 0 to n inclusive	N/A	N/A	for ( int i = 0 ; i <= n ; i ++ )	for ( int i = 0 ; i <= n ; i ++ )
14771	if dist [ i ] ! = 0 decrement s	N/A	N/A	if ( dist [ i ] != 0 ) s -- ;	if ( dist [ i ]!= 0 ) s -- ;
14772	DUMMY	0.0	0.0	}	DUMMY
14773	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
14774	flot = 1	N/A	N/A	int flot = 1 ;	int flot = 1 ;
14775	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
14776	if dist [ i ] is 0 and flot	N/A	N/A	if ( dist [ i ] == 0 && flot )	if ( dist [ i ] == 0 && flot )
14777	print i	N/A	N/A	cout << i ;	cout << i << endl ;
14778	flot = 0	N/A	N/A	flot = 0 ;	flot = 0 ;
14779	else if dist [ i ] is 0 and not flot	N/A	N/A	else if ( dist [ i ] == 0 && ! flot )	else if ( dist [ i ] == 0 &&! flot )
14780	print space , i	N/A	N/A	cout << " " << i ;	cout << " " << i << endl ;
14781	DUMMY	0.0	0.0	}	DUMMY
14782	if s print newline	N/A	N/A	if ( s ) cout << endl ;	if ( s ) cout << endl ;
14783	DUMMY	0.0	0.0	return 0;	DUMMY
14784	DUMMY	0.0	0.0	}	DUMMY
14785	DUMMY	0.0	0.0	int main() {	DUMMY
14786	define 2D int array r to be 200 x 200 , and define ints a , b , c , d , and e	N/A	N/A	int r [ 200 ] [ 200 ] , a , b , c , d , e ;	int r [ 2 ] [ 200 ], a, b, c, d, e ;
14787	while read into a	N/A	N/A	while ( cin >> a )	while ( cin >> a )
14788	define int dynamic array v2	N/A	N/A	vector < int > v2 ;	vector < int > v2 ;
14789	define 200 - elt . array v	N/A	N/A	int v [ 200 ] ;	int v [ 200 ] - elt ;
14790	for b from 1 to a by 1	N/A	N/A	for ( b = 1 ; b <= a ; b ++ )	for ( b = 1 ; b <= a ; b ++ )
14791	set v [ b ] to 1	N/A	N/A	v [ b ] = 1 ;	v [ b ] = 1 ;
14792	for c by 1 from 1 to a , read into r [ b ] [ c ]	N/A	N/A	for ( c = 1 ; c <= a ; c ++ ) { cin >> r [ b ] [ c ] ; }	for ( int c = 1 ; c <= a ; c ++ ) { cin >> r [ b ] [ c ] ; }
14793	DUMMY	0.0	0.0	}	DUMMY
14794	for b by 1 from 1 to a	N/A	N/A	for ( b = 1 ; b <= a ; b ++ )	for ( b = 1 ; b <= a ; b ++ )
14795	for c from 1 to a by 1	N/A	N/A	for ( c = 1 ; c <= a ; c ++ )	for ( int c = 1 ; c <= a ; c ++ )
14796	if b is c , then continue	N/A	N/A	if ( b == c ) continue ;	if ( b == c ) continue ;
14797	if r [ b ] [ c ] is one , then zero v [ b ]	N/A	N/A	if ( r [ b ] [ c ] == 1 ) v [ b ] = 0 ;	if ( r [ b ] [ c ] == 1 ) { v [ a ] = 0 ; }
14798	if r [ b ] [ c ] is two , then set v [ c ] to zero	N/A	N/A	if ( r [ b ] [ c ] == 2 ) v [ c ] = 0 ;	if ( r [ b ] [ c ] == 2 ) v [ c ++ ] = 0 ;
14799	if r [ b ] [ c ] is three , then set v [ b ] and v [ c ] to zero	N/A	N/A	if ( r [ b ] [ c ] == 3 ) v [ b ] = 0 , v [ c ] = 0 ;	if ( r [ b ] [ c ] =='three') v [ ++ b ] = 0, v [ -- c ] = zero ;
14800	DUMMY	0.0	0.0	}	DUMMY
14801	DUMMY	0.0	0.0	}	DUMMY
14802	assign zero to c	N/A	N/A	c = 0 ;	c = 0 ;
14803	for b from 1 to a by 1	N/A	N/A	for ( b = 1 ; b <= a ; b ++ )	for ( b = 1 ; b <= a ; b ++ )
14804	if v [ b ] is one	N/A	N/A	if ( v [ b ] == 1 )	if ( v [ b ] == one )
14805	increment c	N/A	N/A	c ++ ;	c ++ ;
14806	append b onto v2	N/A	N/A	v2 . push_back ( b ) ;	v2. push_back ( b ) ;
14807	DUMMY	0.0	0.0	}	DUMMY
14808	DUMMY	0.0	0.0	}	DUMMY
14809	if c	N/A	N/A	if ( c )	if ( c )
14810	print c and newline	N/A	N/A	cout << c << endl ;	cout << c << endl ;
14811	for d from 1 to c by 1	N/A	N/A	for ( d = 1 ; d <= c ; d ++ )	for ( int d = 1 ; d <= c ; d ++ )
14812	if d is one	N/A	N/A	if ( d == 1 )	if ( d == one )
14813	print v2 [ d - 1 ]	N/A	N/A	cout << v2 [ d - 1 ] ;	cout << v2 [ d - 1 ] << endl ;
14814	otherwise	N/A	N/A	else	else
14815	print " " and v2 [ d - 1 ]	N/A	N/A	cout << " " << v2 [ d - 1 ] ;	cout << " " << v2 [ d - 1 ] << endl ;
14816	DUMMY	0.0	0.0	}	DUMMY
14817	DUMMY	0.0	0.0	}	DUMMY
14818	print newline	N/A	N/A	cout << endl ;	cout << endl ;
14819	else	N/A	N/A	else	else
14820	print c followed by newline	N/A	N/A	cout << c << endl ;	cout << c << endl ;
14821	DUMMY	0.0	0.0	}	DUMMY
14822	clear out v2	N/A	N/A	v2 . clear ( ) ;	v2. clear ( ) ;
14823	DUMMY	0.0	0.0	}	DUMMY
14824	DUMMY	0.0	0.0	return 0;	DUMMY
14825	DUMMY	0.0	0.0	}	DUMMY
14826	DUMMY	0.0	0.0	int main() {	DUMMY
14827	create int n and a and int array ans of size 105	N/A	N/A	int n , a , ans [ 105 ] ;	int n, a, ans [ 105 ] ;
14828	while cin > > n is truthy	N/A	N/A	while ( cin >> n )	while ( cin >> n )
14829	set all contents of ans to 0	N/A	N/A	memset ( ans , 0 , sizeof ( ans ) ) ;	memset ( ans, 0, sizeof ( ans ) ) ;
14830	for i = 1 to n	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
14831	for j = 1 to n	N/A	N/A	for ( int j = 1 ; j <= n ; j ++ )	for ( int j = 1 ; j <= n ; j ++ )
14832	read a	N/A	N/A	cin >> a ;	cin >> a ;
14833	if a is equal to 1 or a is equal to 3 , set ans [ i ] to 1	N/A	N/A	if ( a == 1 || a == 3 ) ans [ i ] = 1 ;	if ( a == 1 || a == 3 ) ans [ i ] = 1 ;
14834	DUMMY	0.0	0.0	}	DUMMY
14835	let int cnt = 0 and int array b of size 105	N/A	N/A	int cnt = 0 , b [ 105 ] ;	int b [ 105 ], cnt = 0 ;
14836	for i = 1 to n	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
14837	if ans [ i ] is equal to 0 , set b [ cnt + + ] to i	N/A	N/A	if ( ans [ i ] == 0 ) b [ cnt ++ ] = i ;	if ( ans [ i ] == 0 ) b [ cnt ++ ] = i ;
14838	DUMMY	0.0	0.0	}	DUMMY
14839	if cnt is truthy	N/A	N/A	if ( cnt )	if ( cnt )
14840	print cnt	N/A	N/A	cout << cnt << endl ;	cout << cnt << endl ;
14841	for i = 0 to cnt - 1 exclusive , print b [ i ] and ' '	N/A	N/A	for ( int i = 0 ; i < cnt - 1 ; i ++ ) cout << b [ i ] << ' ' ;	for ( int i = 0 ; i < cnt - 1 ; i ++ ) { cout << b [ i ] <<' '; }
14842	print b [ cnt - 1 ]	N/A	N/A	cout << b [ cnt - 1 ] << endl ;	cout << b [ cnt - 1 ] << endl ;
14843	else	N/A	N/A	else	else
14844	print 0	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
14845	DUMMY	0.0	0.0	}	DUMMY
14846	DUMMY	0.0	0.0	return 0;	DUMMY
14847	DUMMY	0.0	0.0	}	DUMMY
14848	declare 2d boolean array good with size 200	N/A	N/A	bool good [ 200 ] ;	bool good [ 200 ] ;
14849	DUMMY	0.0	0.0	int main() {	DUMMY
14850	declare integer variable n	N/A	N/A	int n ;	int n ;
14851	declare 2d integer array a with size 300 by 300	N/A	N/A	int a [ 300 ] [ 300 ] ;	int a [ 300 ] [ 300 + 1 ] ;
14852	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
14853	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
14854	for j = 1 to n inclusive , read a [ i ] [ j ]	N/A	N/A	for ( int j = 1 ; j <= n ; j ++ ) { cin >> a [ i ] [ j ] ; }	for ( int j = 1 ; j <= n ; j ++ ) cin >> a [ i ] [ j ] ;
14855	DUMMY	0.0	0.0	}	DUMMY
14856	set sizeof ( good ) bytes at the pointer good to true	N/A	N/A	memset ( good , true , sizeof ( good ) ) ;	memset ( good, true, sizeof ( good ) ) ;
14857	declare integer variable sum = 0	N/A	N/A	int sum = 0 ;	int sum = 0 ;
14858	for i from 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
14859	for j from 1 to n inclusive	N/A	N/A	for ( int j = 1 ; j <= n ; j ++ )	for ( int j = 1 ; j <= n ; j ++ )
14860	if a [ i ] [ j ] = 1 or a [ i ] [ j ] = 3	N/A	N/A	if ( a [ i ] [ j ] == 1 || a [ i ] [ j ] == 3 )	if ( ( a [ i ] [ j ] == 1 ) || ( ( ( int ) ( i ) [ j ) ] == 3 ) )
14861	assign false to good [ i ]	N/A	N/A	good [ i ] = false ;	good [ i ] = false ;
14862	stop the loop	N/A	N/A	break ;	break ;
14863	DUMMY	0.0	0.0	}	DUMMY
14864	DUMMY	0.0	0.0	}	DUMMY
14865	if good [ i ] is false , go to the start of the loop	N/A	N/A	if ( ! good [ i ] ) continue ;	if (! good [ i ] ) continue ;
14866	for j from 1 to n inclusive	N/A	N/A	for ( int j = 1 ; j <= n ; j ++ )	for ( int j = 1 ; j <= n ; j ++ )
14867	if a [ j ] [ i ] is equal to 2 or a [ j ] [ i ] is equal to 3	N/A	N/A	if ( a [ j ] [ i ] == 2 || a [ j ] [ i ] == 3 )	if ( a [ j ] [ i ] == 2 || a [ k ] [ 1 ] == 3 )
14868	change good [ i ] to false	N/A	N/A	good [ i ] = false ;	good [ i ] = false ;
14869	break the loop	N/A	N/A	break ;	break ;
14870	DUMMY	0.0	0.0	}	DUMMY
14871	DUMMY	0.0	0.0	}	DUMMY
14872	if good [ i ] is true , increment sum	N/A	N/A	if ( good [ i ] ) sum ++ ;	if ( good [ i ] ) sum ++ ;
14873	DUMMY	0.0	0.0	}	DUMMY
14874	print sum	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
14875	for i from 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
14876	if good [ i ] is true	N/A	N/A	if ( good [ i ] )	if ( good [ i ] )
14877	if sum is equal to 1	N/A	N/A	if ( sum == 1 )	if ( sum == 1 )
14878	print i	N/A	N/A	cout << i << endl ;	cout << i << endl ;
14879	else	N/A	N/A	else	else
14880	print i and ' '	N/A	N/A	cout << i << ' ' ;	cout << i <<' ';
14881	decrement sum	N/A	N/A	sum -- ;	sum -- ;
14882	DUMMY	0.0	0.0	}	DUMMY
14883	DUMMY	0.0	0.0	}	DUMMY
14884	DUMMY	0.0	0.0	return 0;	DUMMY
14885	DUMMY	0.0	0.0	}	DUMMY
14886	DUMMY	0.0	0.0	int main() {	DUMMY
14887	v is a vector of 6 integers	N/A	N/A	vector < int > v ( 6 ) ;	vector < int > v ( 6 ) ;
14888	for integer i = 0 to 6 exclusive read v [ i ]	N/A	N/A	for ( int i = 0 ; i < 6 ; i ++ ) cin >> v [ i ] ;	for ( int i = 0 ; i < 6 ; i ++ ) { cin >> v [ i ] ; }
14889	declare integer suma = 0	N/A	N/A	int suma = 0 ;	int suma = 0 ;
14890	create integer minA with value min of v [ 1 ] and v [ 5 ]	N/A	N/A	int minA = min ( v [ 1 ] , v [ 5 ] ) ;	int minA = min ( v [ 1 ], v [ 5 ] ) ;
14891	create integer maxA with value max of v [ 1 ] and v [ 5 ]	N/A	N/A	int maxA = max ( v [ 1 ] , v [ 5 ] ) ;	int maxA = max ( v [ 1 ], v [ 5 ] ) ;
14892	declare integer inicial = v [ 0 ] * 2 + 1	N/A	N/A	int inicial = v [ 0 ] * 2 + 1 ;	int inicial = v [ 0 ] * 2 + 1 ;
14893	for i = 0 to minA exclusive	N/A	N/A	for ( int i = 0 ; i < minA ; i ++ )	for ( int i = 0 ; i < minA ; i ++ )
14894	increase suma by inicial	N/A	N/A	suma += inicial ;	suma += inicial ;
14895	increase inicial by 2	N/A	N/A	inicial += 2 ;	inicial += 2 ;
14896	DUMMY	0.0	0.0	}	DUMMY
14897	decrement inicial if maxA ! = minA	N/A	N/A	if ( maxA != minA ) inicial -- ;	if ( maxA!= minA ) inicial -- ;
14898	for i = minA to maxA exclusive , increase suma by inicial	N/A	N/A	for ( int i = minA ; i < maxA ; i ++ ) { suma += inicial ; }	for ( int i = minA ; i < maxA ; ++ i ) { suma += inicial ; }
14899	assign value of min of v [ 2 ] and v [ 4 ] to minA	N/A	N/A	minA = min ( v [ 2 ] , v [ 4 ] ) ;	minA = min ( v [ 2 ], v [ 4 ] ) ;
14900	assign value of max of v [ 2 ] and v [ 4 ] to maxA	N/A	N/A	maxA = max ( v [ 2 ] , v [ 4 ] ) ;	maxA = max ( v [ 2 ], v [ 4 ] ) ;
14901	inicial = v [ 3 ] * 2 + 1	N/A	N/A	inicial = v [ 3 ] * 2 + 1 ;	inicial = v [ 3 ] * 2 + 1 ;
14902	for i = 0 to minA exclusive	N/A	N/A	for ( int i = 0 ; i < minA ; i ++ )	for ( int i = 0 ; i < minA ; i ++ )
14903	increase suma by inicial	N/A	N/A	suma += inicial ;	suma += inicial ;
14904	increase inicial by 2	N/A	N/A	inicial += 2 ;	inicial += 2 ;
14905	DUMMY	0.0	0.0	}	DUMMY
14906	decrement inicial if maxA ! = minA	N/A	N/A	if ( maxA != minA ) inicial -- ;	if ( maxA!= minA ) inicial -- ;
14907	if v [ 1 ] = v [ 5 ]	N/A	N/A	if ( v [ 1 ] == v [ 5 ] )	if ( v [ 1 ] == v [ 5 ] )
14908	for integer i = minA to maxA exclusive , increase suma by inicial	N/A	N/A	for ( int i = minA ; i < maxA ; i ++ ) { suma += inicial ; }	for ( int i = minA ; i < maxA ; ++ i ) suma += inicial ;
14909	DUMMY	0.0	0.0	}	DUMMY
14910	print suma	N/A	N/A	cout << suma << endl ;	cout << suma << endl ;
14911	DUMMY	0.0	0.0	return 0;	DUMMY
14912	DUMMY	0.0	0.0	}	DUMMY
14913	sq is a function that returns an integer and receive integer x	N/A	N/A	inline int sq ( int x )	int sq ( int x )
14914	return square of x	N/A	N/A	return x * x ;	return sqrt ( x ) ;
14915	DUMMY	0.0	0.0	}	DUMMY
14916	DUMMY	0.0	0.0	int main() {	DUMMY
14917	a = array of integers of length 11	N/A	N/A	int a [ 11 ] ;	int a [ 11 ] ;
14918	for ( integer i = 0 to 6 exclusive ) , read i th element of array a	N/A	N/A	for ( int i = 0 ; i < 6 ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < 6 ; i ++ ) { cin >> a [ i ] ; }
14919	ans is an integer and equals square of ( a [ 0 ] + a [ 1 ] + a [ 2 ] )	N/A	N/A	int ans = sq ( a [ 0 ] + a [ 1 ] + a [ 2 ] ) ;	int ans = sqrt ( a [ 0 ] + a [ 1 ] + b [ 2 ] ) ;
14920	decrement ans by square of a [ 0 ] ) + sq ( a [ 2 ] ) + sq ( a [ 4 ]	N/A	N/A	ans -= sq ( a [ 0 ] ) + sq ( a [ 2 ] ) + sq ( a [ 4 ] ) ;	ans -= ( sqrt ( a [ 0 ] ) ) + sq ( ( int ) a [ 2 ] ) + ceil ( ( long long ) b [ 4 ] ) ;
14921	print ans and a new line	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
14922	DUMMY	0.0	0.0	return 0;	DUMMY
14923	DUMMY	0.0	0.0	}	DUMMY
14924	declare long long array a with size 6	N/A	N/A	long long a [ 6 ] ;	long long a [ 6 ] ;
14925	DUMMY	0.0	0.0	int main() {	DUMMY
14926	read 6 elements into array a	N/A	N/A	for ( long long i = 0 ; i < 6 ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < 6 ; i ++ ) { cin >> a [ i ] ; }
14927	create long longs ans = 0 and c = 2 * a [ 0 ] - 1	N/A	N/A	long long c = 2 * a [ 0 ] - 1 , ans = 0 ;	long long ans = 0, c = 2 * a [ 0 ] - 1 ;
14928	for i = 0 to a [ 1 ] + a [ 2 ] exclusive	N/A	N/A	for ( long long i = 0 ; i < a [ 1 ] + a [ 2 ] ; i ++ )	for ( int i = 0 ; i < a [ 1 ] + a [ 2 ] ; i ++ )
14929	if i < = a [ 1 ] & & i < = a [ 5 ]	N/A	N/A	if ( i <= a [ 1 ] && i <= a [ 5 ] )	if ( ( i <= a [ 1 ] ) && i <= ( a [ 5 ] ) )
14930	increase c by 2	N/A	N/A	c += 2 ;	c += 2 ;
14931	else if i > a [ 1 ] & & i is greater than a [ 5 ]	N/A	N/A	else if ( i > a [ 1 ] && i > a [ 5 ] )	else if ( i < a [ 1 ] && i > a [ 5 ] )
14932	decrease c by 2	N/A	N/A	c -= 2 ;	c -= 2 ;
14933	if a [ 1 ] = a [ 5 ] & & i = a [ 1 ] decrease c by 2	N/A	N/A	if ( a [ 1 ] == a [ 5 ] && i == a [ 1 ] ) c -= 2 ;	if ( ( a [ 1 ] == a [ 5 ] ) && ( i == ( 1 ] ) ) { c -= 2 ; }
14934	if i ! = a [ 1 ] & & i = a [ 5 ] decrease c by 1	N/A	N/A	if ( i != a [ 1 ] && i == a [ 5 ] ) c -- ;	if ( i!= a [ 1 ] && i == a [ 5 ] ) c -- ;
14935	if i = a [ 1 ] & & i ! = a [ 5 ] decrease c by 1	N/A	N/A	if ( i == a [ 1 ] && i != a [ 5 ] ) c -- ;	if ( i == a [ 1 ] && i!= a [ 5 ] ) c -- ;
14936	increase ans by c	N/A	N/A	ans += c ;	ans += c ;
14937	DUMMY	0.0	0.0	}	DUMMY
14938	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
14939	DUMMY	0.0	0.0	return 0;	DUMMY
14940	DUMMY	0.0	0.0	}	DUMMY
14941	DUMMY	0.0	0.0	int main() {	DUMMY
14942	a1 , a2 , a3 , a4 , a5 , a6 = integers	N/A	N/A	int a1 , a2 , a3 , a4 , a5 , a6 ;	int a1, a2, a3, a4, a5, a6 ;
14943	Read a1 , a2 , a3 , a4 , a5 , a6	N/A	N/A	cin >> a1 >> a2 >> a3 >> a4 >> a5 >> a6 ;	cin >> a1 >> a2 >> a3 >> a4 >> a5 >> a6 ;
14944	print ( a1 + a2 + a3 ) * ( a1 + a2 + a3 ) - a1 * a1 - a3 * a3 - a5 * a5 and a new line	N/A	N/A	cout << ( a1 + a2 + a3 ) * ( a1 + a2 + a3 ) - a1 * a1 - a3 * a3 - a5 * a5 << endl ;	cout << ( ( a1 + a2 + a3 ) * ( a3 + a1 ) - a1 * a1 - a3 * a3 - a5 * a5 ) << endl ;
14945	DUMMY	0.0	0.0	return 0;	DUMMY
14946	DUMMY	0.0	0.0	}	DUMMY
14947	DUMMY	0.0	0.0	int main() {	DUMMY
14948	a , b , c , d , e , f , maxlevel = long	N/A	N/A	long a , b , c , d , e , f , maxlevel ;	long a, b, c, d, e, f, maxlevel ;
14949	read a , b , c , d , e , f	N/A	N/A	cin >> a >> b >> c >> d >> e >> f ;	cin >> a >> b >> c >> d >> e >> f ;
14950	maxlevel = b + c	N/A	N/A	maxlevel = b + c ;	maxlevel = b + c ;
14951	curr = long with curr = a * 2 - 1	N/A	N/A	long curr = a * 2 - 1 ;	long curr = a * 2 - 1 ;
14952	sum = long with sum = 0	N/A	N/A	long sum = 0 ;	long sum = 0 ;
14953	for i = 0 to maxlevel exclusive	N/A	N/A	for ( int i = 0 ; i < maxlevel ; i ++ )	for ( int i = 0 ; i < maxlevel ; i ++ )
14954	if b > 0	N/A	N/A	if ( b > 0 )	if ( b > 0 )
14955	increment curr	N/A	N/A	curr ++ ;	curr ++ ;
14956	else if b < 0	N/A	N/A	else if ( b < 0 )	else if ( b < 0 )
14957	decrement curr	N/A	N/A	curr -- ;	curr -- ;
14958	decrement b	N/A	N/A	b -- ;	b -- ;
14959	if f > 0	N/A	N/A	if ( f > 0 )	if ( f > 0 )
14960	increment curr	N/A	N/A	curr ++ ;	curr ++ ;
14961	else if f < 0	N/A	N/A	else if ( f < 0 )	else if ( f < 0 )
14962	decrement curr	N/A	N/A	curr -- ;	curr -- ;
14963	decrement f	N/A	N/A	f -- ;	f -- ;
14964	sum = sum + curr	N/A	N/A	sum += curr ;	sum += curr ;
14965	DUMMY	0.0	0.0	}	DUMMY
14966	print sum	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
14967	DUMMY	0.0	0.0	return 0;	DUMMY
14968	DUMMY	0.0	0.0	}	DUMMY
14969	DUMMY	0.0	0.0	int main() {	DUMMY
14970	create integer array a with 6 elements	N/A	N/A	int a [ 6 ] ;	int a [ 6 ] ;
14971	read 6 elements into a	N/A	N/A	for ( int i = 0 ; i < 6 ; ++ i ) cin >> a [ i ] ;	for ( int i = 0 ; i < 6 ; i ++ ) { cin >> a [ i ] ; }
14972	create integer n = a [ 0 ] + a [ 1 ]	N/A	N/A	int n = a [ 0 ] + a [ 1 ] ;	int n = a [ 0 ] + a [ 1 ] ;
14973	declare integer arrays l and r with size n	N/A	N/A	int l [ n ] = { } , r [ n ] = { } ;	int l [ n ], r [ n + 1 ] ;
14974	for i = 0 to a [ 1 ] exclusive , set l [ i ] to 1	N/A	N/A	for ( int i = 0 ; i < a [ 1 ] ; ++ i ) l [ i ] = 1 ;	for ( int i = 0 ; i < a [ 1 ] ; i ++ ) l [ i ] = 1 ;
14975	for integer i = a [ 1 ] + 1 to n exclusive , set l [ i ] to - 1	N/A	N/A	for ( int i = a [ 1 ] + 1 ; i < n ; ++ i ) l [ i ] = - 1 ;	for ( int i = a [ 1 ] + 1 ; i < n ; i ++ ) { l [ i ] = - 1 ; }
14976	for i = 0 to a [ 3 ] exclusive , set r [ i ] to 1	N/A	N/A	for ( int i = 0 ; i < a [ 3 ] ; ++ i ) r [ i ] = 1 ;	for ( int i = 0 ; i < a [ 3 ] ; i ++ ) r [ i ] = 1 ;
14977	for i = a [ 3 ] + 1 to n exclusive , set r [ i ] to - 1	N/A	N/A	for ( int i = a [ 3 ] + 1 ; i < n ; ++ i ) r [ i ] = - 1 ;	for ( int i = a [ 3 ] + 1 ; i < n ; i ++ ) r [ i ] = - 1 ;
14978	declare integers ans = 0 and step = 2 * a [ 2 ] - 1	N/A	N/A	int ans = 0 , step = 2 * a [ 2 ] - 1 ;	int ans = 0, step = 2 * a [ 2 ] - 1 ;
14979	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
14980	increase step by l [ i ] + r [ i ]	N/A	N/A	step += l [ i ] + r [ i ] ;	step += l [ i ] + r [ i - 1 ] ;
14981	increase ans by step	N/A	N/A	ans += step ;	ans += step ;
14982	DUMMY	0.0	0.0	}	DUMMY
14983	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
14984	DUMMY	0.0	0.0	return 0;	DUMMY
14985	DUMMY	0.0	0.0	}	DUMMY
14986	create integer arrays a , b , with a size 10 , b size 5005	N/A	N/A	int a [ 10 ] , b [ 5005 ] ;	int a [ 10 ], b [ 5005 ] ;
14987	DUMMY	0.0	0.0	int main() {	DUMMY
14988	set b [ 0 ] to 0	N/A	N/A	b [ 0 ] = 0 ;	b [ 0 ] = 0 ;
14989	set b [ 1 ] to 1	N/A	N/A	b [ 1 ] = 1 ;	b [ 1 ] = 1 ;
14990	for i = 2 to 5005 exclusive , set b [ i ] to i * i	N/A	N/A	for ( int i = 2 ; i < 5005 ; i ++ ) { b [ i ] = i * i ; }	for ( int i = 2 ; i < 5005 ; i ++ ) b [ i ] = i * i ;
14991	create integer len with len = 0	N/A	N/A	int len = 0 ;	int len = 0 ;
14992	for i = 1 to 6 inclusive , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= 6 ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 1 ; i <= 6 ; i ++ ) { cin >> a [ i ] ; }
14993	create integer m with m = a [ 1 ] + a [ 2 ] + a [ 3 ]	N/A	N/A	int m = a [ 1 ] + a [ 2 ] + a [ 3 ] ;	int m = a [ 1 ] + a [ 2 ] + b [ 3 ] ;
14994	set len to b [ m ] - ( b [ a [ 1 ] ] + b [ a [ 3 ] ] + b [ a [ 5 ] ] )	N/A	N/A	len = b [ m ] - ( b [ a [ 1 ] ] + b [ a [ 3 ] ] + b [ a [ 5 ] ] ) ;	len = b [ m ] - ( b [ a [ 1 ] ] + b [ b [ 3 ] ], b [ 5 ] ] ) ;
14995	print len print newline	N/A	N/A	cout << len << endl ;	cout << len << endl ;
14996	DUMMY	0.0	0.0	return 0;	DUMMY
14997	DUMMY	0.0	0.0	}	DUMMY
14998	DUMMY	0.0	0.0	int main() {	DUMMY
14999	declare long long variables a , b , c , d , e and f	N/A	N/A	long long a , b , c , d , e , f ;	long long a, b, c, d, e, f ;
15000	read a , b , c , d , e and f	N/A	N/A	cin >> a >> b >> c >> d >> e >> f ;	cin >> a >> b >> c >> d >> e >> f ;
15001	print ( c + d + e ) * ( c + d + e ) - ( a * a ) - ( c * c ) - ( e * e ) and " \ n "	N/A	N/A	cout << ( c + d + e ) * ( c + d + e ) - ( a * a ) - ( c * c ) - ( e * e ) << " \n " ;	cout << ( long long ) ( c + d + e ) * ( ( double ) a + d - e ) - ( a * a ) - c * c - ( e * e ) << " \n " ;
15002	DUMMY	0.0	0.0	return 0;	DUMMY
15003	DUMMY	0.0	0.0	}	DUMMY
15004	DUMMY	0.0	0.0	int main() {	DUMMY
15005	create integers a , b , c , d , e , and f	N/A	N/A	int a , b , c , d , e , f ;	int a, b, c, d, e, f ;
15006	print a b c d e and f	N/A	N/A	cin >> a >> b >> c >> d >> e >> f ;	cin >> a >> b >> c >> d >> f ;
15007	set integer x equal to a + b + c	N/A	N/A	int x = a + b + c ;	int x = a + b + c ;
15008	let res be an integer equal to ( x * x ) - ( a * a ) - ( c * c ) - ( e * e )	N/A	N/A	int res = ( x * x ) - ( a * a ) - ( c * c ) - ( e * e ) ;	int res = ( x * x ) - ( a * a ) - c * c - ( e * e ) ;
15009	print res and a new line	N/A	N/A	cout << res << endl ;	cout << res << endl ;
15010	DUMMY	0.0	0.0	return 0;	DUMMY
15011	DUMMY	0.0	0.0	}	DUMMY
15012	let a , b , c , d , e , f be ints	N/A	N/A	int a , b , c , d , e , f ;	int a, b, c, d, e, f ;
15013	DUMMY	0.0	0.0	int main() {	DUMMY
15014	read a , b , c , d , e , f	N/A	N/A	cin >> a >> b >> c >> d >> e >> f ;	cin >> a >> b >> c >> d >> e >> f ;
15015	print ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e and one newline	N/A	N/A	cout << ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e << endl ;	cout << ( ( a + b + c ) * ( a ( b + ( c ) - a * a ) - c * c - e * e ) << endl ;
15016	DUMMY	0.0	0.0	}	DUMMY
15017	maxn = const int with maxn = 1e6	N/A	N/A	const int maxn = 1e6 ;	const int maxn = 1e6 ;
15018	inf = const double with inf = 0x3f3f3f3f3f3f3f3f	N/A	N/A	const double inf = 0x3f3f3f3f3f3f3f3f ;	const double inf = 0x3f3f7f3c3f ;
15019	a , b , c , d , e , f = int	N/A	N/A	int a , b , c , d , e , f ;	int a, b, c, d, e, f ;
15020	DUMMY	0.0	0.0	int main() {	DUMMY
15021	while reading a then b then c then d then e then f print ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e	N/A	N/A	while ( cin >> a >> b >> c >> d >> e >> f ) { cout << ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e << endl ; }	while ( cin >> a >> b >> c >> d >> e >> f ) { cout << ( a + b + c ) * ( a - b + C ) - a * a - c * c - e * e << endl ; }
15022	DUMMY	0.0	0.0	return 0;	DUMMY
15023	DUMMY	0.0	0.0	}	DUMMY
15024	DUMMY	0.0	0.0	int main() {	DUMMY
15025	a , b , c , d , e , f , ans , x , y and z are integers where ans , x , y and z = 0	N/A	N/A	int a , b , c , d , e , f , ans = 0 , x = 0 , y = 0 , z = 0 ;	int a, b, c, d, e, f, ans = 0, x, y, z = 0 ;
15026	read a , b , c , d , e and f	N/A	N/A	cin >> a >> b >> c >> d >> e >> f ;	cin >> a >> b >> c >> d >> e >> f ;
15027	if b is greater than f	N/A	N/A	if ( b > f )	if ( b > f )
15028	increase ans by 2 * a * f + f * ( f + 1 ) - f	N/A	N/A	ans += 2 * a * f + f * ( f + 1 ) - f ;	ans += 2 * a * f + f * ( f + 1 ) - f ;
15029	set value of x to a + f	N/A	N/A	x = a + f ;	x = a + f ;
15030	else	N/A	N/A	else	else
15031	increase ans by 2 * a * b + b * ( b + 1 ) - b	N/A	N/A	ans += 2 * a * b + b * ( b + 1 ) - b ;	ans += 2 * a * b + b * ( b + 1 ) - b ;
15032	set value of x to a + b	N/A	N/A	x = a + b ;	x = a + b ;
15033	DUMMY	0.0	0.0	}	DUMMY
15034	if c is greater than e	N/A	N/A	if ( c > e )	if ( c > e )
15035	increase ans by 2 * d * e + e * ( e + 1 ) - e	N/A	N/A	ans += 2 * d * e + e * ( e + 1 ) - e ;	ans += 2 * d * e + e * ( e + 1 ) - e ;
15036	assign value of c - e to y	N/A	N/A	y = c - e ;	y = c - e ;
15037	else	N/A	N/A	else	else
15038	increase ans by 2 * d * c + c * ( c + 1 ) - c	N/A	N/A	ans += 2 * d * c + c * ( c + 1 ) - c ;	ans += 2 * d * c + c * ( c + 1 ) - c ;
15039	y = e - c	N/A	N/A	y = e - c ;	y = e - c ;
15040	DUMMY	0.0	0.0	}	DUMMY
15041	increase ans by 2 * x * y	N/A	N/A	ans += 2 * x * y ;	ans += 2 * x * y ;
15042	print ans and ' \ n '	N/A	N/A	cout << ans << ' \n ' ;	cout << ans <<'\n';
15043	DUMMY	0.0	0.0	return 0;	DUMMY
15044	DUMMY	0.0	0.0	}	DUMMY
15045	declare integers n and res where n = 6 and array of integers a with 10 elements	N/A	N/A	int n = 6 , res , a [ 10 ] ;	int n = 6, a [ 10 ], res ;
15046	DUMMY	0.0	0.0	int main() {	DUMMY
15047	for i = 1 to n inclusive read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
15048	declare integers root = a [ 1 ] * 2 + 1 and curr = root	N/A	N/A	int root = a [ 1 ] * 2 + 1 , curr = root ;	int root = a [ 1 ] * 2 + 1, curr = root ;
15049	create integers first_layer , second_layer and third_layer = 0	N/A	N/A	int first_layer = 0 , second_layer = 0 , third_layer = 0 ;	int first_layer = 0, second_layer ( 0 ), third_layer [ 0 ] ;
15050	if a [ 2 ] > = a [ n ]	N/A	N/A	if ( a [ 2 ] >= a [ n ] )	if ( a [ 2 ] >= a [ n ] )
15051	set first_layer = a [ n ] and second_layer = a [ 2 ] - a [ n ]	N/A	N/A	first_layer = a [ n ] , second_layer = a [ 2 ] - a [ n ] ;	first_layer += a [ n ], second_layer = a [ 2 ] - a [ N ] ;
15052	else	N/A	N/A	else	else
15053	set first_layer = a [ 2 ] and second_layer = a [ n ] - a [ 2 ]	N/A	N/A	first_layer = a [ 2 ] , second_layer = a [ n ] - a [ 2 ] ;	first_layer += a [ 2 ], second_layer = a [ n ] - a [ 1 ] ;
15054	for i = 1 to first_layer inclusive	N/A	N/A	for ( int i = 1 ; i <= first_layer ; i ++ )	for ( int i = 1 ; i <= first_layer ; i ++ )
15055	set value of res to res + curr	N/A	N/A	res = res + curr ;	res = res + curr ;
15056	curr = curr + 2	N/A	N/A	curr = curr + 2 ;	curr += 2 ;
15057	DUMMY	0.0	0.0	}	DUMMY
15058	if first_layer = a [ 2 ]	N/A	N/A	if ( first_layer == a [ 2 ] )	if ( first_layer == a [ 2 ] )
15059	second_layer = min of second_layer and a [ 3 ]	N/A	N/A	second_layer = min ( second_layer , a [ 3 ] ) ;	second_layer = min ( second_layer, a [ 3 ] ) ;
15060	else	N/A	N/A	else	else
15061	second_layer = min of second_layer and a [ 5 ]	N/A	N/A	second_layer = min ( second_layer , a [ 5 ] ) ;	second_layer = min ( second_layer, a [ 5 ] ) ;
15062	for i = 1 to second_layer inclusive , increase res by curr - 1	N/A	N/A	for ( int i = 1 ; i <= second_layer ; i ++ ) res = res + curr - 1 ;	for ( int i = 1 ; i <= second_layer ; i ++ ) res += curr - 1 ;
15063	set root = a [ 4 ] * 2 + 1 and curr = root	N/A	N/A	root = a [ 4 ] * 2 + 1 , curr = root ;	root = a [ 4 ] * 2 + 1, curr = root ;
15064	for integer i = 1 to min of a [ 3 ] and a [ 5 ] inclusive	N/A	N/A	for ( int i = 1 ; i <= min ( a [ 3 ] , a [ 5 ] ) ; i ++ )	for ( int i = 1 ; i <= min ( a [ 3 ], a [ 5 ] ) ; i ++ )
15065	res = res + curr	N/A	N/A	res = res + curr ;	res += curr ;
15066	set curr to curr + 2	N/A	N/A	curr = curr + 2 ;	curr += 2 ;
15067	DUMMY	0.0	0.0	}	DUMMY
15068	print res and ' \ n '	N/A	N/A	cout << res << ' \n ' ;	cout << res <<'\n';
15069	DUMMY	0.0	0.0	return 0;	DUMMY
15070	DUMMY	0.0	0.0	}	DUMMY
15071	DUMMY	0.0	0.0	int main() {	DUMMY
15072	set ee and acc = 0	N/A	N/A	int ee = 0 , acc = 0 ;	int ee = 0, acc = 0 ;
15073	for i = 0 to 6 exclusive	N/A	N/A	for ( int i = 0 ; i < 6 ; i ++ )	for ( int i = 0 ; i < 6 ; i ++ )
15074	create int e	N/A	N/A	int e ;	int e ;
15075	read e	N/A	N/A	cin >> e ;	cin >> e ;
15076	if i is even , assign acc + e * e to acc	N/A	N/A	if ( i % 2 == 0 ) acc += e * e ;	if ( i % 2 == 0 ) { acc += e * e ; }
15077	if i is less than 3 , ee = ee + e	N/A	N/A	if ( i < 3 ) ee += e ;	if ( i < 3 ) ee += e ;
15078	DUMMY	0.0	0.0	}	DUMMY
15079	set ans equal to ee * ee - acc	N/A	N/A	int ans = ee * ee - acc ;	ans = ee * ee - acc ;
15080	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
15081	DUMMY	0.0	0.0	}	DUMMY
15082	DUMMY	0.0	0.0	int main() {	DUMMY
15083	a1 , a2 , a3 , a4 , a5 , a6 , result = integers with result = 0	N/A	N/A	int a1 , a2 , a3 , a4 , a5 , a6 , result = 0 ;	int a1, a2, a3, a4, a5, a6, result = 0 ;
15084	Read a1 , a2 , a3 , a4 , a5 , a6	N/A	N/A	cin >> a1 >> a2 >> a3 >> a4 >> a5 >> a6 ;	cin >> a1 >> a2 >> a3 >> a4 >> a5 >> a6 ;
15085	set result to ( ( a1 + a2 + a3 ) * ( a1 + a2 + a3 ) ) - ( a1 * a1 ) - ( a3 * a3 ) - ( a5 * a5 )	N/A	N/A	result = ( ( a1 + a2 + a3 ) * ( a1 + a2 + a3 ) ) - ( a1 * a1 ) - ( a3 * a3 ) - ( a5 * a5 ) ;	result = ( ( a1 + a2 + a3 ) * ( a3 + a1 ) - ( a2 * a1) - ( b3 * a3) - b a5 * a5 ) ;
15086	print result and a new line	N/A	N/A	cout << result << endl ;	cout << result << endl ;
15087	DUMMY	0.0	0.0	return 0;	DUMMY
15088	DUMMY	0.0	0.0	}	DUMMY
15089	DUMMY	0.0	0.0	int main() {	DUMMY
15090	create integers a , b , c , d , e and f	N/A	N/A	int a , b , c , d , e , f ;	int a, b, c, d, e, f ;
15091	read a , b , c , d , e and f	N/A	N/A	cin >> a >> b >> c >> d >> e >> f ;	cin >> a >> b >> c >> d >> e >> f ;
15092	if e > c then swap e and c and swap f and b	N/A	N/A	if ( e > c ) swap ( e , c ) , swap ( f , b ) ;	if ( e > c ) swap ( e, c ), swap ( f, b ) ;
15093	print 2 * c * ( d + e ) - e * e + 2 * a * b + b * b	N/A	N/A	cout << 2 * c * ( d + e ) - e * e + 2 * a * b + b * b << endl ;	cout << 2 * c * ( d + e ) - e * e + 2 * a * b + b * b << endl ;
15094	DUMMY	0.0	0.0	}	DUMMY
15095	DUMMY	0.0	0.0	int main() {	DUMMY
15096	create int a , b , c , d , e , f	N/A	N/A	long long a , b , c , d , e , f ;	int a, b, c, d, e, f ;
15097	read a , b , c , d , e and f	N/A	N/A	cin >> a >> b >> c >> d >> e >> f ;	cin >> a >> b >> c >> d >> e >> f ;
15098	print ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e	N/A	N/A	cout << ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e << endl ;	cout << ( ( a + b + c ) * ( a ( b + e ) - a * a ) - c * c - e * e << endl ;
15099	DUMMY	0.0	0.0	return 0;	DUMMY
15100	DUMMY	0.0	0.0	}	DUMMY
15101	maxn = constant integer with value of 105	N/A	N/A	const int maxn = 105 ;	const int maxn = 105 ;
15102	DUMMY	0.0	0.0	int main() {	DUMMY
15103	a , b , c , d , e , f = integers	N/A	N/A	int a , b , c , d , e , f ;	int a, b, c, d, e, f ;
15104	read a , b , c , d , e , and f	N/A	N/A	cin >> a >> b >> c >> d >> e >> f ;	cin >> a >> b >> c >> d >> e >> f ;
15105	print ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e	N/A	N/A	cout << ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e << endl ;	cout << ( a + b + c ) * ( ( b + b ) - a * a - c * c - e * e ) << endl ;
15106	DUMMY	0.0	0.0	}	DUMMY
15107	declare int array side with size 7	N/A	N/A	int side [ 7 ] ;	int side [ 7 ] ;
15108	DUMMY	0.0	0.0	int main() {	DUMMY
15109	for integer i = 1 to 6 inclusive read side [ i ]	N/A	N/A	for ( int i = 1 ; i <= 6 ; ++ i ) cin >> side [ i ] ;	for ( int i = 1 ; i <= 6 ; i ++ ) cin >> side [ i ] ;
15110	create integer h1 = min of side [ 2 ] and side [ 6 ]	N/A	N/A	int h1 = min ( side [ 2 ] , side [ 6 ] ) ;	int h1 = min ( side [ 2 ], side [ 6 ] ) ;
15111	create integer h2 = min of side [ 3 ] and side [ 5 ]	N/A	N/A	int h2 = min ( side [ 3 ] , side [ 5 ] ) ;	int h2 = min ( side [ 3 ], side [ 5 ] ) ;
15112	declare int h3 = side [ 2 ] + side [ 3 ] - h1 - h2	N/A	N/A	int h3 = side [ 2 ] + side [ 3 ] - h1 - h2 ;	int h3 = side [ 2 ] + side [ 3 ] - h1 - h2 ;
15113	create int ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
15114	for integer i = side [ 1 ] + 1 to side [ 1 ] + h1 inclusive , increase ans by 2 * i - 1	N/A	N/A	for ( int i = side [ 1 ] + 1 ; i <= side [ 1 ] + h1 ; ++ i ) ans += 2 * i - 1 ;	for ( int i = side [ 1 ] + 1 ; i <= side [ 2 ] + h1 ; i ++ ) { ans += 2 * i - 1 ; }
15115	for integer i = side [ 4 ] + 1 to side [ 4 ] + h2 inclusive , increase ans by 2 * i - 1	N/A	N/A	for ( int i = side [ 4 ] + 1 ; i <= side [ 4 ] + h2 ; ++ i ) ans += 2 * i - 1 ;	for ( int i = side [ 4 ] + 1 ; i <= side [ 5 ] + h2 ; i ++ ) { ans += 2 * i - 1 ; }
15116	for i = 1 to h3 inclusive , increase ans by ( side [ 1 ] + h1 ) * 2	N/A	N/A	for ( int i = 1 ; i <= h3 ; ++ i ) ans += ( side [ 1 ] + h1 ) * 2 ;	for ( int i = 1 ; i <= h3 ; i ++ ) { ans += ( side [ 1 ] + h1 ) * 2 ; }
15117	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
15118	DUMMY	0.0	0.0	return 0;	DUMMY
15119	DUMMY	0.0	0.0	}	DUMMY
15120	DUMMY	0.0	0.0	int main() {	DUMMY
15121	create long longs a , b , c , d , e , f	N/A	N/A	long long a , b , c , d , e , f ;	long long a, b, c, d, e, f ;
15122	read a read b read c read d read e read f	N/A	N/A	cin >> a >> b >> c >> d >> e >> f ;	cin >> a >> b >> c >> d >> e >> f ;
15123	create long long ans with ans = ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e	N/A	N/A	long long ans = ( a + b + c ) * ( a + b + c ) - a * a - c * c - e * e ;	long long ans = ( long long ) * ( a + b + c ) - a * a - c * c - e * e ;
15124	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
15125	DUMMY	0.0	0.0	return 0;	DUMMY
15126	DUMMY	0.0	0.0	}	DUMMY
15127	in function sq taking an int a and returning an int	N/A	N/A	int sq ( int a )	int sq ( int a )
15128	return a * a	N/A	N/A	return a * a ;	return a * a ;
15129	DUMMY	0.0	0.0	}	DUMMY
15130	DUMMY	0.0	0.0	int main() {	DUMMY
15131	i , j , k , a , b , c = int and A = int array of size 6	N/A	N/A	int A [ 6 ] , i , j , k , a , b , c ;	int i, j, k, a, b, c, A [ 6 ] ;
15132	read 6 values into A	N/A	N/A	for ( i = 0 ; i < 6 ; i ++ ) { cin >> A [ i ] ; }	for ( i = 0 ; i < 6 ; i ++ ) cin >> A [ i ] ;
15133	set a to A [ 0 ] + A [ 1 ] + A [ 2 ]	N/A	N/A	a = A [ 0 ] + A [ 1 ] + A [ 2 ] ;	for ( i = 0 ; i < 6 ; i ++ ) { a = A [ 0 ] + A [ 1 ] + B [ 2 ] ; }
15134	set b to sq of a	N/A	N/A	b = sq ( a ) ;	b = sq ( a ) ;
15135	set c to sq of A [ 0 ] + sq of A [ 2 ] + sq of A [ 4 ]	N/A	N/A	c = sq ( A [ 0 ] ) + sq ( A [ 2 ] ) + sq ( A [ 4 ] ) ;	c = sq ( A [ 0 ], sq ( B [ 2 ] ) ) + sq ( C [ 4 ] ) ;
15136	set j to b - c	N/A	N/A	j = b - c ;	j = b - c ;
15137	print j	N/A	N/A	cout << j << endl ;	cout << j << endl ;
15138	DUMMY	0.0	0.0	return 0;	DUMMY
15139	DUMMY	0.0	0.0	}	DUMMY
15140	a = integer array of size 7	N/A	N/A	int a [ 7 ] ;	int a [ 7 ] ;
15141	in the function p that takes integer x and returns integer	N/A	N/A	int p ( int x )	int p ( int x )
15142	return x * x	N/A	N/A	return x * x ;	return x * x ;
15143	DUMMY	0.0	0.0	}	DUMMY
15144	DUMMY	0.0	0.0	int main() {	DUMMY
15145	for i = 1 to 6 , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= 6 ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 1 ; i <= 6 ; i ++ ) cin >> a [ i ] ;
15146	ans = integer with ans = p ( a [ 1 ] + a [ 2 ] + a [ 3 ] ) - p ( a [ 1 ] ) - p ( a [ 3 ] ) - p ( a [ 5 ] )	N/A	N/A	int ans = p ( a [ 1 ] + a [ 2 ] + a [ 3 ] ) - p ( a [ 1 ] ) - p ( a [ 3 ] ) - p ( a [ 5 ] ) ;	int ans = p ( ( a [ 1 ] + a [ 2 ] + ( a1 ] ) - p ( af 1 ] ), ( p [ 3 ] ) ) - ( p ) [ a [ 5 ] ) ;
15147	print ans	N/A	N/A	cout << ans << " \n " ;	cout << ans << endl ;
15148	DUMMY	0.0	0.0	return 0;	DUMMY
15149	DUMMY	0.0	0.0	}	DUMMY
15150	DUMMY	0.0	0.0	int main() {	DUMMY
15151	declare ints i , j , l , test , ans and len with test = 0	N/A	N/A	int i , j , l , test = 0 , ans , len ;	int i, j, l, test = 0, ans, len ;
15152	declare character ch and array of characters str with 1003 elements	N/A	N/A	char str [ 1003 ] , ch ;	char ch, str [ 1003 ] ;
15153	declare doubles maps and k where maps = 0	N/A	N/A	double maps = 0 , k ;	double maps = 0, k ;
15154	read l	N/A	N/A	cin >> l ;	cin >> l ;
15155	for i from 0 to l exclusive	N/A	N/A	for ( i = 0 ; i < l ; i ++ )	for ( i = 0 ; i < l ; i ++ )
15156	read input to str	N/A	N/A	cin >> str ;	cin >> str ;
15157	if str is " ABSINTH "	N/A	N/A	if ( strcmp ( str , " ABSINTH " ) == 0 )	if ( str == " ABSINTH " )
15158	increment test	N/A	N/A	test ++ ;	test ++ ;
15159	if str is " BEER "	N/A	N/A	else if ( strcmp ( str , " BEER " ) == 0 )	if ( str == " BEER " )
15160	increment test by one	N/A	N/A	test ++ ;	test ++ ;
15161	if str is " BRANDY "	N/A	N/A	else if ( strcmp ( str , " BRANDY " ) == 0 )	if ( str == " BRANDY " )
15162	increment test by one	N/A	N/A	test ++ ;	test ++ ;
15163	if str is " CHAMPAGNE "	N/A	N/A	else if ( strcmp ( str , " CHAMPAGNE " ) == 0 )	if ( str == " CHAMPAGNE " )
15164	increment test by one	N/A	N/A	test ++ ;	test ++ ;
15165	if str is " GIN "	N/A	N/A	else if ( strcmp ( str , " GIN " ) == 0 )	if ( str == " GIN " )
15166	increment test by one	N/A	N/A	test ++ ;	test ++ ;
15167	if str is " RUM "	N/A	N/A	else if ( strcmp ( str , " RUM " ) == 0 )	if ( str == " RUM " )
15168	increment test	N/A	N/A	test ++ ;	test ++ ;
15169	if str is " SAKE "	N/A	N/A	else if ( strcmp ( str , " SAKE " ) == 0 )	if ( str == " SAKE " )
15170	increment test by one	N/A	N/A	test ++ ;	test ++ ;
15171	if str is " TEQUILA "	N/A	N/A	else if ( strcmp ( str , " TEQUILA " ) == 0 )	if ( str == " TEQUILA " )
15172	increment test by one	N/A	N/A	test ++ ;	test ++ ;
15173	if str is " VODKA "	N/A	N/A	else if ( strcmp ( str , " VODKA " ) == 0 )	if ( str == " VODKA " )
15174	increment test by one	N/A	N/A	test ++ ;	test ++ ;
15175	if str is " WHISKEY "	N/A	N/A	else if ( strcmp ( str , " WHISKEY " ) == 0 )	if ( str == " WHISKEY " )
15176	increment test	N/A	N/A	test ++ ;	test ++ ;
15177	if str is " WINE "	N/A	N/A	else if ( strcmp ( str , " WINE " ) == 0 )	if ( str == " WINE " )
15178	increment test by one	N/A	N/A	test ++ ;	test ++ ;
15179	else if str [ 0 ] > = 48 and str [ 0 ] < = 57	N/A	N/A	else if ( str [ 0 ] >= 48 && str [ 0 ] <= 57 )	else if ( str [ 0 ] >= 48 && str [ 1 ] <= 57 )
15180	assign length of str to len	N/A	N/A	len = strlen ( str ) ;	len = strlen ( str ) ;
15181	set k to 0	N/A	N/A	k = 0 ;	k = 0 ;
15182	set maps to 0	N/A	N/A	maps = 0 ;	map < int, int > maps = 0 ;
15183	for j = len - 1 to 0 inclusive counting down	N/A	N/A	for ( j = len - 1 ; j >= 0 ; j -- )	for ( int j = len - 1 ; j >= 0 ; j -- )
15184	change str [ j ] to str [ j ] - ' 0 '	N/A	N/A	str [ j ] = str [ j ] - ' 0 ' ;	str [ j ] -='0';
15185	assign maps + ( str [ j ] * pow ( 10 . 0 , k ) ) to maps	N/A	N/A	maps = maps + ( str [ j ] * pow ( 10.0 , k ) ) ;	map < int, int > maps + ( str [ j ] * pow ( 10.0, k ) ) ;
15186	increment k	N/A	N/A	k ++ ;	k ++ ;
15187	DUMMY	0.0	0.0	}	DUMMY
15188	change ans to maps	N/A	N/A	ans = ( int ) maps ;	ans = maps ;
15189	if ans is less than 18 , increment test	N/A	N/A	if ( ans < 18 ) { test ++ ; }	if ( ans < 18 ) test ++ ;
15190	DUMMY	0.0	0.0	}	DUMMY
15191	DUMMY	0.0	0.0	}	DUMMY
15192	print test	N/A	N/A	cout << test << endl ;	cout << test << endl ;
15193	DUMMY	0.0	0.0	}	DUMMY
15194	DUMMY	0.0	0.0	int main() {	DUMMY
15195	mp = map of string and int	N/A	N/A	map < string , int > mp ;	map < string, int > mp ;
15196	set mp [ " ABSINTH " ] and mp [ " BEER " ] and mp [ " BRANDY " ] and mp [ " CHAMPAGNE " ] to 1	N/A	N/A	mp [ " ABSINTH " ] = mp [ " BEER " ] = mp [ " BRANDY " ] = mp [ " CHAMPAGNE " ] = 1 ;	mp [ " ABSINTH " ] += mp [ " BEER " ], mp ['BRANDY " ] = mp [ 1 CHAMPAGNE " ] == 1 ;
15197	set mp [ " GIN " ] and mp [ " RUM " ] and mp [ " SAKE " ] and mp [ " TEQUILA " ] and mp [ " VODKA " ] to 1	N/A	N/A	mp [ " GIN " ] = mp [ " RUM " ] = mp [ " SAKE " ] = mp [ " TEQUILA " ] = mp [ " VODKA " ] = 1 ;	mp [ " GIN " ] = 1, mp [ " RUM " ]= 1, m [ " SAKE " ] == 1, p [ " TEQUILA " ] += mp ['VODKA " ] %= 1 ;
15198	set mp [ " WHISKEY " ] and mp [ " WINE " ] to 1	N/A	N/A	mp [ " WHISKEY " ] = mp [ " WINE " ] = 1 ;	mp [ " WHISKEY " ] = mp [ " WINE " ] == 1 ;
15199	n = int	N/A	N/A	int n ;	int n ;
15200	read n	N/A	N/A	cin >> n ;	cin >> n ;
15201	cnt = int with cnt = 0	N/A	N/A	int cnt = 0 ;	int cnt = 0 ;
15202	loop n times	N/A	N/A	while ( n -- )	while ( n -- )
15203	s = string	N/A	N/A	string s ;	string s ;
15204	read s	N/A	N/A	cin >> s ;	cin >> s ;
15205	if mp [ s ] is not 0	N/A	N/A	if ( mp [ s ] )	if ( mp [ s ]!= 0 )
15206	increment cnt	N/A	N/A	cnt ++ ;	cnt ++ ;
15207	else if s [ 0 ] is numeric char	N/A	N/A	else if ( s [ 0 ] >= ' 0 ' && s [ 0 ] <= ' 9 ' )	else if ( isdigit ( s [ 0 ] ) )
15208	geek = stringstream initialized with s	N/A	N/A	stringstream geek ( s ) ;	stringstream geek ( s ) ;
15209	x = int with x = 0	N/A	N/A	int x = 0 ;	int x = 0 ;
15210	read into x from geek	N/A	N/A	geek >> x ;	geek >> x ;
15211	if x is less than 18 then increment cnt	N/A	N/A	if ( x < 18 ) cnt ++ ;	if ( x < 18 ) cnt ++ ;
15212	DUMMY	0.0	0.0	}	DUMMY
15213	DUMMY	0.0	0.0	}	DUMMY
15214	print cnt	N/A	N/A	cout << cnt << endl ;	cout << cnt << endl ;
15215	DUMMY	0.0	0.0	return 0;	DUMMY
15216	DUMMY	0.0	0.0	}	DUMMY
15217	s = string	N/A	N/A	string s ;	string s ;
15218	ans = integer with ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
15219	in the function make	N/A	N/A	void make ( )	void make ( )
15220	len = integer with len = s . length ( )	N/A	N/A	int len = s . length ( ) ;	int len = s. length ( ) ;
15221	if s [ 0 ] < = 9 and s [ 0 ] > = 0	N/A	N/A	if ( s [ 0 ] <= ' 9 ' && s [ 0 ] >= ' 0 ' )	if ( s [ 0 ] <='9'&& s [ 1 ] >='0')
15222	year = integer with year = 0	N/A	N/A	int year = 0 ;	int year = 0 ;
15223	for i = 0 to len exclusive , year = year * 10 + s [ i ] - 0	N/A	N/A	for ( int i = 0 ; i < len ; i ++ ) { year = year * 10 + s [ i ] - ' 0 ' ; }	for ( int i = 0 ; i < len ; i ++ ) { year = year * 10 + s [ i ] -'0'; }
15224	if year < 18 , increment ans	N/A	N/A	if ( year < 18 ) { ans ++ ; }	if ( year < 18 ) ans ++ ;
15225	else	N/A	N/A	else	else
15226	if s is BRANDY	N/A	N/A	if ( s == " BRANDY " )	if ( s == " BRANDY " )
15227	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
15228	else if s is BEER	N/A	N/A	else if ( s == " BEER " )	else if ( s == " BEER " )
15229	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
15230	else if s is ABSINTH	N/A	N/A	else if ( s == " ABSINTH " )	else if ( s == " ABSINTH " )
15231	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
15232	else if s is CHAMPAGNE	N/A	N/A	else if ( s == " CHAMPAGNE " )	else if ( s == " CHAMPAGNE " )
15233	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
15234	else if s is GIN	N/A	N/A	else if ( s == " GIN " )	else if ( s == " GIN " )
15235	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
15236	else if s is RUM	N/A	N/A	else if ( s == " RUM " )	else if ( s == " RUM " )
15237	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
15238	else if s is SAKE	N/A	N/A	else if ( s == " SAKE " )	else if ( s == " SAKE " )
15239	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
15240	else if s is TEQUILA	N/A	N/A	else if ( s == " TEQUILA " )	else if ( s == " TEQUILA " )
15241	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
15242	else if s is VODKA	N/A	N/A	else if ( s == " VODKA " )	else if ( s == " VODKA " )
15243	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
15244	else if s is WHISKEY	N/A	N/A	else if ( s == " WHISKEY " )	else if ( s == " WHISKEY " )
15245	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
15246	else if s is WINE	N/A	N/A	else if ( s == " WINE " )	else if ( s == " WINE " )
15247	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
15248	DUMMY	0.0	0.0	}	DUMMY
15249	DUMMY	0.0	0.0	}	DUMMY
15250	DUMMY	0.0	0.0	}	DUMMY
15251	DUMMY	0.0	0.0	int main() {	DUMMY
15252	n = integer	N/A	N/A	int n ;	int n ;
15253	read n	N/A	N/A	cin >> n ;	cin >> n ;
15254	for i = 1 to n	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
15255	read s	N/A	N/A	cin >> s ;	cin >> s ;
15256	call make	N/A	N/A	make ( ) ;	make ( ) ;
15257	DUMMY	0.0	0.0	}	DUMMY
15258	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
15259	DUMMY	0.0	0.0	return 0;	DUMMY
15260	DUMMY	0.0	0.0	}	DUMMY
15261	DUMMY	0.0	0.0	int main() {	DUMMY
15262	declare integers i , j , l , test , ans and len where test = 0	N/A	N/A	int i , j , l , test = 0 , ans , len ;	int i, j, l, test = 0, ans, len ;
15263	declare character array str with size 1003 and a character variable ch	N/A	N/A	char str [ 1003 ] , ch ;	char str [ 1003 ], ch ;
15264	declare double variables maps = 0 and k	N/A	N/A	double maps = 0 , k ;	double maps = 0, k ;
15265	read input to l	N/A	N/A	cin >> l ;	cin >> l ;
15266	loop i from 0 to l exclusive	N/A	N/A	for ( i = 0 ; i < l ; i ++ )	for ( i = 0 ; i < l ; i ++ )
15267	read str	N/A	N/A	cin >> str ;	cin >> str ;
15268	if str is " ABSINTH "	N/A	N/A	if ( strcmp ( str , " ABSINTH " ) == 0 )	if ( str == " ABSINTH " )
15269	increment test	N/A	N/A	test ++ ;	test ++ ;
15270	else if str is " BEER "	N/A	N/A	else if ( strcmp ( str , " BEER " ) == 0 )	else if ( str == " BEER " )
15271	increment test	N/A	N/A	test ++ ;	test ++ ;
15272	else if str is " BRANDY "	N/A	N/A	else if ( strcmp ( str , " BRANDY " ) == 0 )	else if ( str == " BRANDY " )
15273	increment test by one	N/A	N/A	test ++ ;	test ++ ;
15274	else if str is " CHAMPAGNE "	N/A	N/A	else if ( strcmp ( str , " CHAMPAGNE " ) == 0 )	else if ( str == " CHAMPAGNE " )
15275	increment test by one	N/A	N/A	test ++ ;	test ++ ;
15276	else if str is " GIN "	N/A	N/A	else if ( strcmp ( str , " GIN " ) == 0 )	else if ( str == " GIN " )
15277	increment test by one	N/A	N/A	test ++ ;	test ++ ;
15278	else if str is " RUM "	N/A	N/A	else if ( strcmp ( str , " RUM " ) == 0 )	else if ( str == " RUM " )
15279	increment test	N/A	N/A	test ++ ;	test ++ ;
15280	else if str is " SAKE "	N/A	N/A	else if ( strcmp ( str , " SAKE " ) == 0 )	else if ( str == " SAKE " )
15281	increment test	N/A	N/A	test ++ ;	test ++ ;
15282	else if str is " TEQUILA "	N/A	N/A	else if ( strcmp ( str , " TEQUILA " ) == 0 )	else if ( str == " TEQUILA " )
15283	increment test	N/A	N/A	test ++ ;	test ++ ;
15284	else if str is " VODKA "	N/A	N/A	else if ( strcmp ( str , " VODKA " ) == 0 )	else if ( str == " VODKA " )
15285	increment test	N/A	N/A	test ++ ;	test ++ ;
15286	else if str is " WHISKEY "	N/A	N/A	else if ( strcmp ( str , " WHISKEY " ) == 0 )	else if ( str == " WHISKEY " )
15287	increment test by one	N/A	N/A	test ++ ;	test ++ ;
15288	else if str is " WINE "	N/A	N/A	else if ( strcmp ( str , " WINE " ) == 0 )	else if ( str == " WINE " )
15289	increment test	N/A	N/A	test ++ ;	test ++ ;
15290	else if str [ 0 ] > = 48 and str [ 0 ] < = 57	N/A	N/A	else if ( str [ 0 ] >= 48 && str [ 0 ] <= 57 )	else if ( str [ 0 ] >= 48 && str [ 1 ] <= 57 )
15291	change len to length of str	N/A	N/A	len = strlen ( str ) ;	len = str. length ( ) ;
15292	change k to 0	N/A	N/A	k = 0 ;	k = 0 ;
15293	change maps to 0	N/A	N/A	maps = 0 ;	map < int, int > maps = 0 ;
15294	loop j from len - 1 to 0 inclusive counting down	N/A	N/A	for ( j = len - 1 ; j >= 0 ; j -- )	for ( int j = len - 1 ; j >= 0 ; j -- )
15295	assign str [ j ] - ' 0 ' to str [ j ]	N/A	N/A	str [ j ] = str [ j ] - ' 0 ' ;	str [ j ] = str [ k ] -'0';
15296	change maps to maps + ( str [ j ] * ( 10 . 0 in power k ) )	N/A	N/A	maps = maps + ( str [ j ] * pow ( 10.0 , k ) ) ;	map < int, int > maps + ( str [ j ] * ( pow ( 10.0, k ) ) ;
15297	increment k by one	N/A	N/A	k ++ ;	k ++ ;
15298	DUMMY	0.0	0.0	}	DUMMY
15299	change ans to maps	N/A	N/A	ans = ( int ) maps ;	ans = maps ;
15300	if ans is less than 18 , increment test by one	N/A	N/A	if ( ans < 18 ) { test ++ ; }	if ( ans < 18 ) test ++ ;
15301	DUMMY	0.0	0.0	}	DUMMY
15302	DUMMY	0.0	0.0	}	DUMMY
15303	print test	N/A	N/A	cout << test << endl ;	cout << test << endl ;
15304	DUMMY	0.0	0.0	}	DUMMY
15305	declare const int maxn = 1e6	N/A	N/A	const int maxn = 1e6 ;	const int maxn = 1e6 ;
15306	create an array of integers prime with maxn + 1 elements	N/A	N/A	int prime [ maxn + 1 ] ;	int prime [ maxn + 1 ] ;
15307	function getPrime	N/A	N/A	void getPrime ( )	void getPrime ( )
15308	set first sizeof ( prime ) bytes at the pointer prime to 0	N/A	N/A	memset ( prime , 0 , sizeof ( prime ) ) ;	memset ( prime, 0, sizeof ( prime ) ) ;
15309	for i from 2 to maxn inclusive	N/A	N/A	for ( int i = 2 ; i <= maxn ; i ++ )	for ( int i = 2 ; i <= maxn ; i ++ )
15310	if prime [ i ] is 0 , increment prime [ 0 ] and set prime [ prime [ 0 ] ] to i	N/A	N/A	if ( ! prime [ i ] ) prime [ ++ prime [ 0 ] ] = i ;	if ( prime [ i ] == 0 ) prime [ ++ prime [ 0 ] ] = i ;
15311	for j from 1 to prime [ 0 ] inclusive while prime [ j ] < = maxn / i , incrementing j	N/A	N/A	for ( int j = 1 ; j <= prime [ 0 ] && prime [ j ] <= maxn / i ; j ++ )	for ( int j = 1 ; j <= prime [ 0 ] && prime [ j ] <= maxn / i ; j ++ )
15312	prime [ prime [ j ] * i ] = 1	N/A	N/A	prime [ prime [ j ] * i ] = 1 ;	prime [ prime [ j ] * i ] = 1 ;
15313	if i % prime [ j ] is equal to 0 , break the loop	N/A	N/A	if ( i % prime [ j ] == 0 ) break ;	if ( i % prime [ j ] == 0 ) break ;
15314	DUMMY	0.0	0.0	}	DUMMY
15315	DUMMY	0.0	0.0	}	DUMMY
15316	DUMMY	0.0	0.0	}	DUMMY
15317	DUMMY	0.0	0.0	int main() {	DUMMY
15318	call getPrime ( )	N/A	N/A	getPrime ( ) ;	getPrime ( ) ;
15319	declare int variable n	N/A	N/A	int n ;	int n ;
15320	loop , reading n from the input	N/A	N/A	while ( cin >> n )	while ( cin >> n )
15321	declare vector of integers v	N/A	N/A	vector < int > v ;	vector < int > v ;
15322	clear v	N/A	N/A	v . clear ( ) ;	v. clear ( ) ;
15323	declare integer variables key = prime [ 1 ] and id = 1	N/A	N/A	int key = prime [ 1 ] , id = 1 ;	int key = prime [ 1 ], id = 1 ;
15324	loop i from 1 to n inclusive	N/A	N/A	for ( int i = 1 ; prime [ i ] <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
15325	create int key = prime [ i ]	N/A	N/A	int key = prime [ i ] ;	int key = prime [ i ] ;
15326	while key < = n	N/A	N/A	while ( key <= n )	while ( key <= n )
15327	push key into v	N/A	N/A	v . push_back ( key ) ;	v. push_back ( key ) ;
15328	multiply key by prime [ i ]	N/A	N/A	key *= prime [ i ] ;	key *= prime [ i ] ;
15329	DUMMY	0.0	0.0	}	DUMMY
15330	DUMMY	0.0	0.0	}	DUMMY
15331	print length of v	N/A	N/A	cout << v . size ( ) << endl ;	cout << v. size ( ) << endl ;
15332	for integer i = 0 to length of v exclusive , print v [ i ] and " \ n " if i = length of v - 1 or " " if it is not	N/A	N/A	for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << ( i == v . size ( ) - 1 ? " \n " : " " ) ;	for ( int i = 0 ; i < v. size ( ) ; i ++ ) { cout << v [ i ] << ( i == v. length ( ) - 1? " \n " : " " ) ; }
15333	DUMMY	0.0	0.0	}	DUMMY
15334	DUMMY	0.0	0.0	}	DUMMY
15335	maxn = const integer with maxn = 1010	N/A	N/A	const int maxn = 1010 ;	const int maxn = 1010 ;
15336	v = vector of integer	N/A	N/A	vector < int > v ;	vector < int > v ;
15337	is_prime = bool array of size maxn	N/A	N/A	bool is_prime [ maxn ] ;	bool is_prime [ maxn ] ;
15338	prime = integer array of size maxn	N/A	N/A	int prime [ maxn ] ;	int prime [ maxn ] ;
15339	k = integer	N/A	N/A	int k ;	int k ;
15340	in the function Euler that takes integer n	N/A	N/A	void Euler ( int n )	void Euler ( int n )
15341	i , j = integers	N/A	N/A	int i , j ;	int i, j ;
15342	k = 0	N/A	N/A	k = 0 ;	k = 0 ;
15343	for i = 2 to n exclusive	N/A	N/A	for ( i = 2 ; i < n ; i ++ )	for ( i = 2 ; i < n ; i ++ )
15344	if is_prime [ i ] is false , prime [ increment k ] = i	N/A	N/A	if ( is_prime [ i ] == false ) prime [ k ++ ] = i ;	if (! is_prime [ i ] ) prime [ ++ k ] = i ;
15345	for j < k and i * prime [ j ] < n	N/A	N/A	for ( j = 0 ; j < k && i * prime [ j ] < n ; j ++ )	for ( j < k && i * prime [ j ] < n ; j ++ )
15346	is_prime [ i * prime [ j ] ] = true	N/A	N/A	is_prime [ i * prime [ j ] ] = true ;	is_prime [ i * prime [ j ] ] = true ;
15347	if i modulo prime [ j ] is 0 , break loop	N/A	N/A	if ( i % prime [ j ] == 0 ) break ;	if ( i % prime [ j ] == 0 ) break ;
15348	DUMMY	0.0	0.0	}	DUMMY
15349	DUMMY	0.0	0.0	}	DUMMY
15350	DUMMY	0.0	0.0	}	DUMMY
15351	DUMMY	0.0	0.0	int main() {	DUMMY
15352	n , x = integer	N/A	N/A	int n , x ;	int n, x ;
15353	Euler of maxn	N/A	N/A	Euler ( maxn ) ;	Euler ( maxn ) ;
15354	ans = integer with ans = ( 0 )	N/A	N/A	int ans ( 0 ) ;	int ans = ( 0 ) ;
15355	read n	N/A	N/A	cin >> n ;	cin >> n ;
15356	for i = 0 to k exclusive	N/A	N/A	for ( int i = 0 ; i < k ; i ++ )	for ( int i = 0 ; i < k ; i ++ )
15357	if prime [ i ] < = n	N/A	N/A	if ( prime [ i ] <= n )	if ( prime [ i ] <= n )
15358	p = integer with p = prime [ i ]	N/A	N/A	int p = prime [ i ] ;	int p = prime [ i ] ;
15359	while p < = n	N/A	N/A	while ( p <= n )	while ( p <= n )
15360	append p in v	N/A	N/A	v . push_back ( p ) ;	v. push_back ( p ) ;
15361	p = p * prime [ i ]	N/A	N/A	p *= prime [ i ] ;	p *= prime [ i ] ;
15362	DUMMY	0.0	0.0	}	DUMMY
15363	DUMMY	0.0	0.0	}	DUMMY
15364	DUMMY	0.0	0.0	}	DUMMY
15365	print v . size ( )	N/A	N/A	cout << v . size ( ) << endl ;	cout << v. size ( ) << endl ;
15366	if v . size ( ) > 0	N/A	N/A	if ( v . size ( ) > 0 )	if ( v. size ( ) > 0 )
15367	for i = 0 to v . size ( ) - 1 exclusive , print v [ i ]	N/A	N/A	for ( int i = 0 ; i < v . size ( ) - 1 ; i ++ ) cout << v [ i ] << ' ' ;	for ( int i = 0 ; i < v. size ( ) - 1 ; i ++ ) cout << v [ i ] << endl ;
15368	print v [ v . size ( ) - 1 ]	N/A	N/A	cout << v [ v . size ( ) - 1 ] << endl ;	cout << v [ v. size ( ) - 1 ] << endl ;
15369	DUMMY	0.0	0.0	}	DUMMY
15370	DUMMY	0.0	0.0	return 0;	DUMMY
15371	DUMMY	0.0	0.0	}	DUMMY
15372	create integer array a with size 1005	N/A	N/A	int a [ 1005 ] ;	int a [ 1005 ] ;
15373	declare zhi with integer n as argument , returning boolean	N/A	N/A	bool zhi ( int n )	bool zhi ( int n )
15374	for i = 2 to n exclusive	N/A	N/A	for ( int i = 2 ; i < n ; i ++ )	for ( int i = 2 ; i < n ; i ++ )
15375	if n % i is 0 , return false from function	N/A	N/A	if ( n % i == 0 ) return false ;	if ( n % i == 0 ) return false ;
15376	DUMMY	0.0	0.0	}	DUMMY
15377	return true from function	N/A	N/A	return true ;	return true ;
15378	DUMMY	0.0	0.0	}	DUMMY
15379	DUMMY	0.0	0.0	int main() {	DUMMY
15380	create integer n	N/A	N/A	int n ;	int n ;
15381	while read n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
15382	if n is 1	N/A	N/A	if ( n == 1 )	if ( n == 1 )
15383	print 0 print newline	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
15384	break current loop iteration	N/A	N/A	continue ;	continue ;
15385	DUMMY	0.0	0.0	}	DUMMY
15386	set bytes from a to size of a to value 0	N/A	N/A	memset ( a , 0 , sizeof ( a ) ) ;	memset ( a, 0, sizeof ( a ) ) ;
15387	create integer j with j = 0	N/A	N/A	int j = 0 ;	int j = 0 ;
15388	for i = 2 to n inclusive	N/A	N/A	for ( int i = 2 ; i <= n ; i ++ )	for ( int i = 2 ; i <= n ; i ++ )
15389	if result of run zhi with i as argument is true	N/A	N/A	if ( zhi ( i ) )	if ( zhi ( i ) )
15390	set a [ j ] to i	N/A	N/A	a [ j ] = i ;	a [ j ] = i ;
15391	increment j	N/A	N/A	j ++ ;	j ++ ;
15392	create integer t with t = i	N/A	N/A	int t = i ;	int t = i ;
15393	set t to t * i	N/A	N/A	t *= i ;	t *= i ;
15394	while t is less than or equal to n	N/A	N/A	while ( t <= n )	while ( t <= n )
15395	set a [ j ] to t	N/A	N/A	a [ j ] = t ;	a [ j ] = t ;
15396	increment j	N/A	N/A	j ++ ;	j ++ ;
15397	set t to t * i	N/A	N/A	t *= i ;	t *= i ;
15398	DUMMY	0.0	0.0	}	DUMMY
15399	DUMMY	0.0	0.0	}	DUMMY
15400	DUMMY	0.0	0.0	}	DUMMY
15401	print j print newline	N/A	N/A	cout << j << endl ;	cout << j << endl ;
15402	for i = 0 to j - 1 exclusive , print a [ i ] print " "	N/A	N/A	for ( int i = 0 ; i < j - 1 ; i ++ ) { cout << a [ i ] << " " ; }	for ( int i = 0 ; i < j - 1 ; i ++ ) cout << a [ i ] << " " ;
15403	print a [ j - 1 ] print newline	N/A	N/A	cout << a [ j - 1 ] << endl ;	cout << a [ j - 1 ] << endl ;
15404	DUMMY	0.0	0.0	}	DUMMY
15405	DUMMY	0.0	0.0	}	DUMMY
15406	DUMMY	0.0	0.0	int main() {	DUMMY
15407	declare double variables a , b and c	N/A	N/A	double a , b , c ;	double a, b, c ;
15408	read a , b and c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
15409	print b / ( b + c ) * a	N/A	N/A	cout << b / ( b + c ) * a << endl ;	cout << b / ( b + c ) * a << endl ;
15410	DUMMY	0.0	0.0	return 0;	DUMMY
15411	DUMMY	0.0	0.0	}	DUMMY
15412	a , b , r = integers	N/A	N/A	double l , p , q ;	int a, b, r ;
15413	DUMMY	0.0	0.0	int main() {	DUMMY
15414	Read l , p , q	N/A	N/A	cin >> l >> p >> q ;	cin >> l >> p >> q ;
15415	print l / ( q + p ) * p and a new line	N/A	N/A	cout << l / ( q + p ) * p << endl ;	cout << l / ( q + p ) * p << endl ;
15416	DUMMY	0.0	0.0	return 0;	DUMMY
15417	DUMMY	0.0	0.0	}	DUMMY
15418	DUMMY	0.0	0.0	int main() {	DUMMY
15419	double integers = l , p , q	N/A	N/A	double l , p , q ;	double l, p, q ;
15420	read l , p , q	N/A	N/A	cin >> l >> p >> q ;	cin >> l >> p >> q ;
15421	output l / ( p + q ) * p	N/A	N/A	cout << l / ( p + q ) * p << " \n " ;	cout << l / ( p + q ) * p << endl ;
15422	DUMMY	0.0	0.0	return 0;	DUMMY
15423	DUMMY	0.0	0.0	}	DUMMY
15424	create constant integer maxn with maxn = integer casted 1e5 + 5	N/A	N/A	const int maxn = ( int ) 1e5 + 5 ;	const int maxn = ( int ) 1e5 + 5 ;
15425	create constant long long mod with mod = 1e9 + 7	N/A	N/A	const long long mod = 1e9 + 7 ;	const long long mod = 1e9 + 7 ;
15426	DUMMY	0.0	0.0	int main() {	DUMMY
15427	create doubles l , p , q	N/A	N/A	double l , p , q ;	double l, p, q ;
15428	read l read p read q	N/A	N/A	cin >> l >> p >> q ;	cin >> l >> p >> q ;
15429	create double t1 with t1 = ( ( 2 * l ) / ( p + q ) )	N/A	N/A	double t1 = ( ( 2 * l ) / ( p + q ) ) ;	double t1 = ( ( 2 * l ) / ( p + q ) ) ;
15430	create double t2 with t2 = l / ( p + q )	N/A	N/A	double t2 = l / ( p + q ) ;	double t2 = l / ( p + q ) ;
15431	create double ans with ans = p * ( t1 - t2 )	N/A	N/A	double ans = p * ( t1 - t2 ) ;	double ans = p * ( t1 - t2 ) ;
15432	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
15433	DUMMY	0.0	0.0	return 0;	DUMMY
15434	DUMMY	0.0	0.0	}	DUMMY
15435	DUMMY	0.0	0.0	int main() {	DUMMY
15436	define floating point numbers m , a , s	N/A	N/A	double m , a , s ;	float m, a, s ;
15437	define doubles i , j	N/A	N/A	double i , j ;	double i, j ;
15438	while read m , i , j	N/A	N/A	while ( cin >> m >> i >> j )	while ( cin >> m >> i >> j )
15439	set a to i + j	N/A	N/A	a = i + j ;	a = i + j ;
15440	assign m / a to s	N/A	N/A	s = m / a ;	s = m / a ;
15441	print s * i and a newline	N/A	N/A	cout << s * i << endl ;	cout << s * i << " \n " ;
15442	DUMMY	0.0	0.0	}	DUMMY
15443	DUMMY	0.0	0.0	return 0;	DUMMY
15444	DUMMY	0.0	0.0	}	DUMMY
15445	DUMMY	0.0	0.0	int main() {	DUMMY
15446	create int l , p and q	N/A	N/A	int l , p , q ;	int l, p, q ;
15447	read l , p and q	N/A	N/A	cin >> l >> p >> q ;	cin >> l >> p >> q ;
15448	print l * p / ( p + q )	N/A	N/A	cout << l * p / ( double ) ( p + q ) << endl ;	cout << l * p / ( p + q ) << endl ;
15449	DUMMY	0.0	0.0	return 0;	DUMMY
15450	DUMMY	0.0	0.0	}	DUMMY
15451	DUMMY	0.0	0.0	int main() {	DUMMY
15452	double integers = d , n , m	N/A	N/A	double d , n , m ;	double d, n, m ;
15453	read d , n , m	N/A	N/A	cin >> d >> n >> m ;	cin >> d >> n >> m ;
15454	output ( d * n ) / ( n + m )	N/A	N/A	cout << ( d * n ) / ( n + m ) << endl ;	cout << ( d * n ) / ( n + m ) << endl ;
15455	DUMMY	0.0	0.0	}	DUMMY
15456	inf = const integer with inf = 0x3f3f3f3f	N/A	N/A	const int inf = 0x3f3f3f3f ;	const int inf = ( 0x3f3f )3f ;
15457	mod1 = const integer with mod1 = 1e9 + 7	N/A	N/A	const int mod1 = 1e9 + 7 ;	const int mod1 = 1e9 + 7 ;
15458	mod = const long long with mod = 1e16	N/A	N/A	const long long mod = 1e16 ;	const long long mod = 1e16 ;
15459	maxn = const integer with maxn = 1000	N/A	N/A	const int maxn = 1000 ;	const int maxn = 1000 ;
15460	dx , dy = integer array of size 5 with dx = { 0 , 1 , 0 , - 1 , 0 } , dy = { 1 , 0 , - 1 , 0 , 0 }	N/A	N/A	int dx [ 5 ] = { 0 , 1 , 0 , - 1 , 0 } , dy [ 5 ] = { 1 , 0 , - 1 , 0 , 0 } ;	int dx [ 5 ] = { 0, 1, 0, - 1, - 2, 0 }, dy [ 5 } = { 1,0, - i, 0, 0 } ;
15461	dir = integer array of size [ 4 ] [ 2 ] with dir = { { 1 , 0 } , { - 1 , 0 } , { 0 , 1 } , { 0 , - 1 } }	N/A	N/A	int dir [ 4 ] [ 2 ] = { { 1 , 0 } , { - 1 , 0 } , { 0 , 1 } , { 0 , - 1 } } ;	int dir [ 4 ] [ 2 ] = { { 1, 0 }, { - 1, { 0, 1 }, 0, - 1 } } ;
15462	DUMMY	0.0	0.0	int main() {	DUMMY
15463	n , x , y = double	N/A	N/A	double n , x , y ;	double n, x, y ;
15464	read n , x , y	N/A	N/A	cin >> n >> x >> y ;	cin >> n >> x >> y ;
15465	d = double with d = n / ( x + y )	N/A	N/A	double d = n / ( x + y ) ;	double d = n / ( x + y ) ;
15466	e = double with e = d * x	N/A	N/A	double e = d * x ;	double e = d * x ;
15467	print e	N/A	N/A	cout << e << endl ;	cout << e << endl ;
15468	DUMMY	0.0	0.0	return 0;	DUMMY
15469	DUMMY	0.0	0.0	}	DUMMY
15470	create integer array h with size 3	N/A	N/A	int h [ 3 ] ;	int h [ 3 ] ;
15471	DUMMY	0.0	0.0	int main() {	DUMMY
15472	create long long doubles a , b , c	N/A	N/A	long double a , b , c ;	double a, b, c ;
15473	read a read b read c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
15474	create long long double f with f = b + c	N/A	N/A	long double f = b + c ;	long long double f = b + c ;
15475	create long long double t with t = a / f	N/A	N/A	long double t = a / f ;	long long double t = a / f ;
15476	print b * t print ' \ n '	N/A	N/A	cout << b * t << ' \n ' ;	cout << b * t <<'\n';
15477	DUMMY	0.0	0.0	return 0;	DUMMY
15478	DUMMY	0.0	0.0	}	DUMMY
15479	DUMMY	0.0	0.0	int main() {	DUMMY
15480	create doubles l , p and q	N/A	N/A	double l , p , q ;	double l, p, q ;
15481	read input to l , p and q	N/A	N/A	cin >> l >> p >> q ;	cin >> l >> p >> q ;
15482	declare double variable t_total = 3 * l / ( p + q )	N/A	N/A	double t_total = 3 * l / ( p + q ) ;	double t_total = 3 * l / ( p + q ) ;
15483	declare double t1 = l / ( p + q )	N/A	N/A	double t1 = l / ( p + q ) ;	double t1 = l / ( p + q ) ;
15484	print ( t_total - 2 * t1 ) * p	N/A	N/A	cout << ( t_total - 2 * t1 ) * p << endl ;	cout << ( t_total - 2 * t1 ) * p << endl ;
15485	DUMMY	0.0	0.0	}	DUMMY
15486	DUMMY	0.0	0.0	int main() {	DUMMY
15487	l , x , y = double	N/A	N/A	double l , x , y ;	double l, x, y ;
15488	read l	N/A	N/A	cin >> l ;	cin >> l ;
15489	read x , y	N/A	N/A	cin >> x >> y ;	cin >> x >> y ;
15490	if y > x	N/A	N/A	if ( y > x )	if ( y > x )
15491	print l - ( ( l / ( x + y ) ) * the greatest value between x and y )	N/A	N/A	cout << l - ( ( l / ( x + y ) ) * max ( x , y ) ) << endl ;	cout << l - ( ( l / ( x + y ) ) * max ( x, y ) << endl ;
15492	else	N/A	N/A	else	else
15493	print ( ( l / ( x + y ) ) * the greatest value between x and y )	N/A	N/A	cout << ( l / ( x + y ) ) * max ( x , y ) << endl ;	cout << ( ( l / ( x + y ) ) * max ( x, y ) << endl ;
15494	DUMMY	0.0	0.0	}	DUMMY
15495	DUMMY	0.0	0.0	return 0;	DUMMY
15496	DUMMY	0.0	0.0	}	DUMMY
15497	N = const long long with N = 1e5	N/A	N/A	const long long N = 1e5 ;	const long long N = 1e5 ;
15498	l , p , q = flaot	N/A	N/A	float l , p , q ;	bool l, p, q ;
15499	DUMMY	0.0	0.0	int main() {	DUMMY
15500	read l then p then q	N/A	N/A	cin >> l >> p >> q ;	cin >> l >> p >> q ;
15501	print l / ( p + q ) * p	N/A	N/A	cout << l / ( p + q ) * p ;	cout << l / ( p + q ) * p << endl ;
15502	print newline	N/A	N/A	cout << " \n " ;	cout << endl ;
15503	DUMMY	0.0	0.0	return 0;	DUMMY
15504	DUMMY	0.0	0.0	}	DUMMY
15505	DUMMY	0.0	0.0	int main() {	DUMMY
15506	set a , b and c to 0	N/A	N/A	double a = 0 , b = 0 , c = 0 ;	long long a = 0, b = 1, c = 0 ;
15507	print a , b and c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
15508	if b equal to c	N/A	N/A	if ( b == c )	if ( b == c )
15509	print 0 . 5 * a	N/A	N/A	cout << 0.5 * a << endl ;	cout << 0.5 * a << endl ;
15510	DUMMY	0.0	0.0	return 0;	DUMMY
15511	DUMMY	0.0	0.0	}	DUMMY
15512	print b / ( c + b ) * a and a newline	N/A	N/A	cout << b / ( c + b ) * a << endl ;	cout << b / ( c + b ) * a << " \n " ;
15513	DUMMY	0.0	0.0	}	DUMMY
15514	create constant integer N with N = 5000 + 100	N/A	N/A	const int N = 5000 + 100 ;	const int N = 5000 + 100 ;
15515	DUMMY	0.0	0.0	int main() {	DUMMY
15516	create doubles l , q , p , t , ans	N/A	N/A	double l , q , p , t , ans ;	double l, q, p, t, ans ;
15517	while read l is true	N/A	N/A	while ( cin >> l )	while ( cin >> l )
15518	read p read q	N/A	N/A	cin >> p >> q ;	cin >> p >> q ;
15519	set t to l / ( p + q )	N/A	N/A	t = l / ( p + q ) ;	t = l / ( p + q ) ;
15520	set ans to p * t	N/A	N/A	ans = p * t ;	ans = p * t ;
15521	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
15522	DUMMY	0.0	0.0	}	DUMMY
15523	DUMMY	0.0	0.0	return 0;	DUMMY
15524	DUMMY	0.0	0.0	}	DUMMY
15525	DUMMY	0.0	0.0	int main() {	DUMMY
15526	l , p , q = double	N/A	N/A	double l , p , q ;	double l, p, q ;
15527	read l , p , q	N/A	N/A	cin >> l >> p >> q ;	cin >> l >> p >> q ;
15528	print result of p * l / ( p + q )	N/A	N/A	cout << p * l / ( p + q ) << endl ;	cout << p * l / ( p + q ) << endl ;
15529	DUMMY	0.0	0.0	}	DUMMY
15530	DUMMY	0.0	0.0	int main() {	DUMMY
15531	let l , p , q be double values	N/A	N/A	double l , p , q ;	double l, p, q ;
15532	read l , p , q	N/A	N/A	cin >> l >> p >> q ;	cin >> l >> p >> q ;
15533	print ( l * p ) / ( p + q ) and newline	N/A	N/A	cout << ( l * p ) / ( p + q ) << endl ;	cout << ( l * p ) / ( p + q ) << endl ;
15534	DUMMY	0.0	0.0	return 0;	DUMMY
15535	DUMMY	0.0	0.0	}	DUMMY
15536	DUMMY	0.0	0.0	int main() {	DUMMY
15537	set float a , s , c , d , e all to 0 and set float for i , j , k , l , f	N/A	N/A	float a = 0 , s = 0 , c = 0 , d = 0 , e = 0 , i , j , k , l , f ;	float a, s, c, d, e = 0, i, j, k, l, f ;
15538	read k , l , f	N/A	N/A	cin >> k >> l >> f ;	cin >> k >> l >> f ;
15539	set s to ( l + f ) / 2	N/A	N/A	s = ( l + f ) / 2 ;	s = ( l + f ) / 2 ;
15540	set s to k / s	N/A	N/A	s = k / s ;	s = k / s ;
15541	set s to s / 2	N/A	N/A	s = s / 2 ;	s /= 2 ;
15542	set a to l * s	N/A	N/A	a = l * s ;	a = l * s ;
15543	output a	N/A	N/A	cout << a << endl ;	cout << a << endl ;
15544	DUMMY	0.0	0.0	return 0;	DUMMY
15545	DUMMY	0.0	0.0	}	DUMMY
15546	DUMMY	0.0	0.0	int main() {	DUMMY
15547	create doubles l , p and q	N/A	N/A	double l , p , q ;	double l, p, q ;
15548	read l , p and q	N/A	N/A	cin >> l >> p >> q ;	cin >> l >> p >> q ;
15549	print ( l / ( p + q ) ) * p and " \ n "	N/A	N/A	cout << ( l / ( p + q ) ) * p << " \n " ;	cout << ( l / ( p + q ) ) * p << " \n " ;
15550	DUMMY	0.0	0.0	return 0;	DUMMY
15551	DUMMY	0.0	0.0	}	DUMMY
15552	a , b , c , tt = long long integers	N/A	N/A	long long int a , b , c , tt ;	long long int a, b, c, tt ;
15553	DUMMY	0.0	0.0	int main() {	DUMMY
15554	read a , b , c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
15555	output ( float ) a / ( b + c ) * b	N/A	N/A	cout << ( float ) a / ( b + c ) * b << endl ;	cout << ( float ) a / ( b + c ) * b << endl ;
15556	DUMMY	0.0	0.0	}	DUMMY
15557	MOD = const long long integer with MOD = 1000000007	N/A	N/A	const long long int MOD = 1000000007 ;	const long long int MOD = 1000000007 ;
15558	N , M , K , H , W , L , R = long long integer	N/A	N/A	long long int N , M , K , H , W , L , R ;	long long int N, M, K, H, W, L, R ;
15559	DUMMY	0.0	0.0	int main() {	DUMMY
15560	a , b , c = long double	N/A	N/A	long double a , b , c ;	long double a, b, c ;
15561	read a , b , c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
15562	a = a / ( b + c )	N/A	N/A	a /= ( b + c ) ;	a = a / ( b + c ) ;
15563	a = a * b	N/A	N/A	a *= b ;	a = a * b ;
15564	print a	N/A	N/A	cout << a << endl ;	cout << a << endl ;
15565	DUMMY	0.0	0.0	return 0;	DUMMY
15566	DUMMY	0.0	0.0	}	DUMMY
15567	DUMMY	0.0	0.0	int main() {	DUMMY
15568	declare int variables l , p and q	N/A	N/A	int l , p , q ;	int l, p, q ;
15569	create doubles sum and su	N/A	N/A	double sum , su ;	double sum, su ;
15570	read l , p and q and keep looping	N/A	N/A	while ( cin >> l >> p >> q )	while ( cin >> l >> p >> q )
15571	change sum to l / ( 2 * ( p + q ) )	N/A	N/A	sum = ( double ) l / ( 2 * ( p + q ) ) ;	sum = l / ( 2 * ( p + q ) ) ;
15572	assign l - sum * q * 2 to su	N/A	N/A	su = ( double ) l - sum * q * 2 ;	su = l - sum * q * 2 ;
15573	print su	N/A	N/A	cout << su << endl ;	cout << su << endl ;
15574	DUMMY	0.0	0.0	}	DUMMY
15575	DUMMY	0.0	0.0	}	DUMMY
15576	DUMMY	0.0	0.0	int main() {	DUMMY
15577	create doubles l , a , b	N/A	N/A	double l , a , b ;	double l, a, b ;
15578	read l read a read b	N/A	N/A	cin >> l >> a >> b ;	cin >> l >> a >> b ;
15579	print l / ( a + b ) * a print newline	N/A	N/A	cout << l / ( a + b ) * a << endl ;	cout << l / ( a + b ) * a << endl ;
15580	DUMMY	0.0	0.0	return 0;	DUMMY
15581	DUMMY	0.0	0.0	}	DUMMY
15582	DUMMY	0.0	0.0	int main() {	DUMMY
15583	declare doubles d , a and b	N/A	N/A	double d , a , b ;	double d, a, b ;
15584	read d , a and b	N/A	N/A	cin >> d >> a >> b ;	cin >> d >> a >> b ;
15585	create double t = d / ( a + b )	N/A	N/A	double t = d / ( a + b ) ;	double t = d / ( a + b ) ;
15586	print t * a	N/A	N/A	cout << t * a << endl ;	cout << t * a << endl ;
15587	DUMMY	0.0	0.0	}	DUMMY
15588	DUMMY	0.0	0.0	int main() {	DUMMY
15589	let a double	N/A	N/A	double a ;	double a ;
15590	let l , p , q doubles	N/A	N/A	double l , p , q ;	double l, p, q ;
15591	read l , p , and q	N/A	N/A	cin >> l >> p >> q ;	cin >> l >> p >> q ;
15592	set a to l * p / ( p + q )	N/A	N/A	a = l * p / ( p + q ) ;	a = l * p / ( p + q ) ;
15593	print a	N/A	N/A	cout << a << endl ;	cout << a << endl ;
15594	DUMMY	0.0	0.0	return 0;	DUMMY
15595	DUMMY	0.0	0.0	}	DUMMY
15596	DUMMY	0.0	0.0	int main() {	DUMMY
15597	declare floats l , p and q	N/A	N/A	float l , p , q ;	float l, p, q ;
15598	read input to l , p and q	N/A	N/A	cin >> l >> p >> q ;	cin >> l >> p >> q ;
15599	print l / ( p + q ) * p	N/A	N/A	cout << l / ( p + q ) * p << endl ;	cout << l / ( p + q ) * p << endl ;
15600	DUMMY	0.0	0.0	return 0;	DUMMY
15601	DUMMY	0.0	0.0	}	DUMMY
15602	declare constant double PI with PI = acosign of - 1 . 0	N/A	N/A	const double PI = acos ( - 1.0 ) ;	const double PI = acos ( - 1.0 ) ;
15603	declare fast_in_out with no arguments , returning void	N/A	N/A	void fast_in_out ( ) { }	void fast_in_out ( ) { }
15604	declare pause with no arguments , returning void	N/A	N/A	void pause ( ) { }	void pause ( ) { }
15605	DUMMY	0.0	0.0	int main() {	DUMMY
15606	run fast_in_out	N/A	N/A	fast_in_out ( ) ;	fast_in_out ( ) ;
15607	declare ar as integer array = { 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256 , 512 }	N/A	N/A	int ar [ ] = { 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256 , 512 } ;	int ar [ ] = { 2, 4, 8, 16, 32, 64, 128, 256, 512 } ;
15608	declare integers n , b , q	N/A	N/A	int n , b , q ;	int n, b, q ;
15609	read n and b and q	N/A	N/A	cin >> n >> b >> q ;	cin >> n >> b >> q ;
15610	declare integers x = 0 , y = n * q	N/A	N/A	int x = 0 , y = n * q ;	int x = 0, y = n * q ;
15611	for i = 8 to 0 inclusive , decrementing i	N/A	N/A	for ( int i = 8 ; i >= 0 ; i -- )	for ( int i = 8 ; i >= 0 ; i -- )
15612	if n is less than ar [ i ] , break current loop iteration	N/A	N/A	if ( n < ar [ i ] ) continue ;	if ( n < ar [ i ] ) continue ;
15613	declare integer k with k = ar [ i ]	N/A	N/A	int k = ar [ i ] ;	int k = ar [ i ] ;
15614	let n be n - k	N/A	N/A	n = n - k ;	n = n - k ;
15615	increment n by k / 2	N/A	N/A	n += k / 2 ;	n += k / 2 ;
15616	increment i	N/A	N/A	i ++ ;	i ++ ;
15617	let k = k * b + ( k / 2 )	N/A	N/A	k = k * b + ( k / 2 ) ;	k = k * b + ( k / 2 ) ;
15618	increment x by k	N/A	N/A	x += k ;	x += k ;
15619	DUMMY	0.0	0.0	}	DUMMY
15620	print x , " " , y , ' \ n '	N/A	N/A	cout << x << " " << y << ' \n ' ;	cout << x << " " << y <<'\n';
15621	run pause	N/A	N/A	pause ( ) ;	pause ( ) ;
15622	DUMMY	0.0	0.0	return 0;	DUMMY
15623	DUMMY	0.0	0.0	}	DUMMY
15624	create ints n , b , p , x = 0 , and y	N/A	N/A	int n , b , p , x = 0 , y ;	int n, b, p, x = 0, y ;
15625	DUMMY	0.0	0.0	int main() {	DUMMY
15626	read n , b , and p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
15627	set b to 2 * b + 1	N/A	N/A	b = 2 * b + 1 ;	b = 2 * b + 1 ;
15628	set y to n * p	N/A	N/A	y = n * p ;	y = n * p ;
15629	while n is greater than 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
15630	create integer k = 1	N/A	N/A	int k = 1 ;	int k = 1 ;
15631	while 2 * k is less than or equal to n , set k to k * 2	N/A	N/A	while ( 2 * k <= n ) k *= 2 ;	while ( 2 * k <= n ) { k *= 2 ; }
15632	set x to x + b * k / 2	N/A	N/A	x += b * k / 2 ;	x += b * k / 2 ;
15633	set n to n - k / 2	N/A	N/A	n -= k / 2 ;	n = n - k / 2 ;
15634	DUMMY	0.0	0.0	}	DUMMY
15635	print x , " " , and y	N/A	N/A	cout << x << " " << y << ' \n ' ;	cout << x << " " << y << endl ;
15636	DUMMY	0.0	0.0	return 0;	DUMMY
15637	DUMMY	0.0	0.0	}	DUMMY
15638	INF = const long long int with INF = ( 1LL bitshift left by 60 ) - 1	N/A	N/A	const long long int INF = ( 1LL << 60 ) - 1 ;	const long long int INF = ( 1LL << 60 ) - 1 ;
15639	MAX = const long long int with MAX = 2000001	N/A	N/A	const long long int MAX = 2000001 ;	const long long int MAX = 2000001 ;
15640	in function fast_exp taking three long long ints base , exp and m and returning a long long int	N/A	N/A	long long int fast_exp ( long long int base , long long int exp , long long int m )	long long int fast_exp ( long long base, long long exp, Long long m )
15641	res = long long int with res = 1	N/A	N/A	long long int res = 1 ;	long long int res = 1 ;
15642	loop while exp is greater than 0	N/A	N/A	while ( exp > 0 )	while ( exp > 0 )
15643	if exp is uneven set res to ( res * base ) mod m	N/A	N/A	if ( exp % 2 == 1 ) { res = ( res * base ) % m ; }	if ( exp % 2 == 1 ) res = ( res * base ) % m ;
15644	set base to ( base * base ) mod m	N/A	N/A	base = ( base * base ) % m ;	base = ( base * base ) % m ;
15645	set exp to exp / 2	N/A	N/A	exp /= 2 ;	exp /= 2 ;
15646	DUMMY	0.0	0.0	}	DUMMY
15647	return res mod m	N/A	N/A	return res % m ;	return res % m ;
15648	DUMMY	0.0	0.0	}	DUMMY
15649	DUMMY	0.0	0.0	int main() {	DUMMY
15650	n , b , p = int	N/A	N/A	int n , b , p ;	int n, b, p ;
15651	read n then b then p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
15652	bottle , towel = int with bottle = 0 and towel = 0	N/A	N/A	int bottle = 0 , towel = 0 ;	int bottle = 0, towel = 0 ;
15653	set towel to p * n	N/A	N/A	towel = p * n ;	towel = p * n ;
15654	loop while n is greater than 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
15655	k = int with k = 1	N/A	N/A	int k = 1 ;	int k = 1 ;
15656	loop while k is less or equal to n set k to k * 2	N/A	N/A	while ( k <= n ) { k *= 2 ; }	while ( k <= n ) { k *= 2 ; }
15657	set k to k / 2	N/A	N/A	k /= 2 ;	k /= 2 ;
15658	set n to ( n - k ) + k / 2	N/A	N/A	n = ( n - k ) + k / 2 ;	n = ( n - k ) + k / 2 ;
15659	increment bottle by ( k / 2 ) * ( 2 * b + 1 )	N/A	N/A	bottle += ( k / 2 ) * ( 2 * b + 1 ) ;	bottle += ( k / 2 ) * ( 2 * b + 1 ) ;
15660	DUMMY	0.0	0.0	}	DUMMY
15661	print bottle and towel	N/A	N/A	cout << bottle << " " << towel << endl ;	cout << bottle << " " << towel << endl ;
15662	DUMMY	0.0	0.0	return 0;	DUMMY
15663	DUMMY	0.0	0.0	}	DUMMY
15664	DUMMY	0.0	0.0	int main() {	DUMMY
15665	n , m , p = int	N/A	N/A	int n , m , p ;	int n, m, p ;
15666	read n , m , p	N/A	N/A	cin >> n >> m >> p ;	cin >> n >> m >> p ;
15667	ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
15668	c = n	N/A	N/A	int c = n ;	int c = n ;
15669	while n is not 1	N/A	N/A	while ( n != 1 )	while ( n!= 1 )
15670	add n / 2 to ans	N/A	N/A	ans += n / 2 ;	ans += n / 2 ;
15671	subtract n / 2 from n	N/A	N/A	n -= n / 2 ;	n -= n / 2 ;
15672	DUMMY	0.0	0.0	}	DUMMY
15673	print ans * ( m * 2 + 1 ) , space , c * p	N/A	N/A	cout << ans * ( m * 2 + 1 ) << " " << c * p << endl ;	cout << ans * ( m * 2 + 1 ) << " " << c * p << endl ;
15674	DUMMY	0.0	0.0	}	DUMMY
15675	create const ints N = 1e6 + 5 , MAX = 3e7 and MOD = 1e9 + 7	N/A	N/A	const int N = 1e6 + 5 , MAX = 3e7 , MOD = 1e9 + 7 ;	const int N = 1e6 + 5, MAX = 3e7, MOD = ( 1e9 + 7 ) ;
15676	declare ints n , p , b , x and y	N/A	N/A	int n , p , b , x , y ;	int n, p, b, x, y ;
15677	DUMMY	0.0	0.0	int main() {	DUMMY
15678	read n , p and b	N/A	N/A	cin >> n >> p >> b ;	cin >> n >> p >> b ;
15679	set y to b * n	N/A	N/A	y = b * n ;	y = b * n ;
15680	while n is not 0	N/A	N/A	while ( n )	while ( n )
15681	if n / 2 is true	N/A	N/A	if ( n / 2 )	if ( n / 2 )
15682	increase x by ( n - n % 2 ) * p + n / 2	N/A	N/A	x += ( ( n - n % 2 ) * p + n / 2 ) ;	x += ( n - n % 2 ) * p + n / 2 ;
15683	else	N/A	N/A	else	else
15684	break the loop	N/A	N/A	break ;	break ;
15685	assign n / 2 + n % 2 to n	N/A	N/A	n = n / 2 + n % 2 ;	n = n / 2 + n % 2 ;
15686	DUMMY	0.0	0.0	}	DUMMY
15687	print x , " " , y and " \ n "	N/A	N/A	cout << x << " " << y << " \n " ;	cout << x << " " << y << " \n " ;
15688	DUMMY	0.0	0.0	}	DUMMY
15689	DUMMY	0.0	0.0	int main() {	DUMMY
15690	create integers m , b , p , total and total_p where total = 0	N/A	N/A	int m , b , p , total = 0 , total_p ;	int m, b, p, total = 0, total_p ;
15691	read variables m , b and p from the input	N/A	N/A	cin >> m >> b >> p ;	cin >> m >> b >> p ;
15692	assign m * p to total_p	N/A	N/A	total_p = m * p ;	total_p = m * p ;
15693	start infinite loop	N/A	N/A	while ( 1 )	while ( 1 )
15694	declare integer variable k = [ ] ( int n ) - > int	N/A	N/A	int k = [ ] ( int n ) -> int	int k = [ ] ( int n ) -> int ( ) ;
15695	declare ints i = 1 and res = pow ( 2 , 0 )	N/A	N/A	int i = 1 , res = pow ( 2 , 0 ) ;	int res = pow ( 2, 0 ), i = 1 ;
15696	looping infinitely	N/A	N/A	while ( 1 )	while ( true )
15697	declare new integer variable temp = 2 in the power of i	N/A	N/A	int temp = pow ( 2 , i ) ;	int temp = ( int ) pow ( 2, i ) ;
15698	if temp is greater than n , break	N/A	N/A	if ( temp > n ) break ;	if ( temp > n ) break ;
15699	set res to temp	N/A	N/A	res = temp ;	res = temp ;
15700	increment i by one	N/A	N/A	i ++ ;	i ++ ;
15701	DUMMY	0.0	0.0	}	DUMMY
15702	return res	N/A	N/A	return res ;	return res ;
15703	( m )	N/A	N/A	( m ) ;	( m ) ;
15704	create integer variable with name matches and value = k / 2	N/A	N/A	int matches = k / 2 ;	int matches = k / 2 ;
15705	change total to sum of total and matches * ( 2 * b )	N/A	N/A	total += matches * ( 2 * b ) ;	total += matches * ( 2 * b ) ;
15706	increase total by matches	N/A	N/A	total += matches ;	total += matches ;
15707	assign ( k / 2 ) + ( m - k ) to m	N/A	N/A	m = ( k / 2 ) + ( m - k ) ;	m = ( k / 2 ) + ( m - k ) ;
15708	if matches = 0 , break the loop	N/A	N/A	if ( matches == 0 ) break ;	if ( matches == 0 ) break ;
15709	DUMMY	0.0	0.0	}	DUMMY
15710	print total , " " and total_p	N/A	N/A	cout << total << " " << total_p << endl ;	cout << total << " " << total_p << endl ;
15711	DUMMY	0.0	0.0	return 0;	DUMMY
15712	DUMMY	0.0	0.0	}	DUMMY
15713	DUMMY	0.0	0.0	int main() {	DUMMY
15714	n , agua , toalha = int with toalha = 0	N/A	N/A	int n , agua , toalha = 0 ;	int n, agua, toalha = 0 ;
15715	read n then agua then toalha	N/A	N/A	cin >> n >> agua >> toalha ;	cin >> n >> agua >> toalha ;
15716	nrod , tagua , ttoalha = int with ttoalha = 0	N/A	N/A	int nrod , tagua , ttoalha = 0 ;	int nrod, tagua, ttoalha = 0 ;
15717	set nrod to n - 1	N/A	N/A	nrod = n - 1 ;	nrod = n - 1 ;
15718	set tagua to nrod + nrod * agua * 2	N/A	N/A	tagua = nrod + nrod * agua * 2 ;	tagua = nrod + nrod * agua * 2 ;
15719	set ttoalha to toalha * n	N/A	N/A	ttoalha = toalha * n ;	ttoalha = toalha * n ;
15720	print tagua and ttoalha	N/A	N/A	cout << tagua << " " << ttoalha << endl ;	cout << tagua << " " << ttoalha << endl ;
15721	DUMMY	0.0	0.0	return 0;	DUMMY
15722	DUMMY	0.0	0.0	}	DUMMY
15723	DUMMY	0.0	0.0	int main() {	DUMMY
15724	let n , b , p be integers	N/A	N/A	int n , b , p ;	int n, b, p ;
15725	read n , b , p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
15726	let bottles , towels be integers with bottles = 0 , towels = n * p	N/A	N/A	int bottles = 0 , towels = n * p ;	int bottles = 0, towels = n * p ;
15727	while n is greater than 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
15728	let matches be a integer with matches = ( 1 < < ( int ) log2 ( n ) ) / 2	N/A	N/A	int matches = ( 1 << ( int ) log2 ( n ) ) / 2 ;	int matches = ( 1 << ( int ) log2 ( n ) ) / 2 ;
15729	increment bottles by matches * ( 2 * b + 1 )	N/A	N/A	bottles += matches * ( 2 * b + 1 ) ;	bottles += matches * ( 2 * b + 1 ) ;
15730	decrement n by matches	N/A	N/A	n -= matches ;	n -= matches ;
15731	DUMMY	0.0	0.0	}	DUMMY
15732	print bottles and space and towels and newline	N/A	N/A	cout << bottles << " " << towels << endl ;	cout << bottles << " " << towels << endl ;
15733	DUMMY	0.0	0.0	return 0;	DUMMY
15734	DUMMY	0.0	0.0	}	DUMMY
15735	create ints n , b , and p	N/A	N/A	int n , b , p ;	int n, b, p ;
15736	DUMMY	0.0	0.0	int main() {	DUMMY
15737	read n , b , and p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
15738	set b to b * 2 + 1	N/A	N/A	b = b * 2 + 1 ;	b = b * 2 + 1 ;
15739	create integer now = 1	N/A	N/A	int now = 1 ;	int now = 1 ;
15740	while now is less than or equal to n , shift the bits of now one place to the left	N/A	N/A	while ( now <= n ) { now <<= 1 ; }	while ( now <= n ) now >>= 1 ;
15741	shift the bits of now one place to the right	N/A	N/A	now >>= 1 ;	now >>= 1 ;
15742	create int t = n	N/A	N/A	int t = n ;	int t = n ;
15743	let long long integer ans = 0	N/A	N/A	long long ans = 0 ;	long long ans = 0 ;
15744	while t is greater than 1	N/A	N/A	while ( t > 1 )	while ( t > 1 )
15745	set ans to ans + 1LL * now / 2 * b	N/A	N/A	ans += 1LL * now / 2 * b ;	ans += 1LL * now / 2 * b ;
15746	set t to t - now / 2	N/A	N/A	t -= now / 2 ;	t -= now / 2 ;
15747	while now is truthy and now > t is true , shift the bits of now one place to the right	N/A	N/A	while ( now && now > t ) { now >>= 1 ; }	while ( now && now > t ) now >>= 1 ;
15748	DUMMY	0.0	0.0	}	DUMMY
15749	print ans , " " , and n * p	N/A	N/A	cout << ans << " " << n * p << endl ;	cout << ans << " " << n * p << endl ;
15750	DUMMY	0.0	0.0	return 0;	DUMMY
15751	DUMMY	0.0	0.0	}	DUMMY
15752	declare g taking in int n and returning integer	N/A	N/A	int g ( int n )	int g ( int n )
15753	while _builtin_popcount ( n ) is greater than 1 , set n to n & ( n - 1 )	N/A	N/A	while ( __builtin_popcount ( n ) > 1 ) n = n & ( n - 1 ) ;	while ( _builtin_popcount ( n ) > 1 ) { n &= ( n - 1 ) ; }
15754	return n	N/A	N/A	return n ;	return n ;
15755	DUMMY	0.0	0.0	}	DUMMY
15756	DUMMY	0.0	0.0	int main() {	DUMMY
15757	let ints n , b , p , r = 0 , and m	N/A	N/A	int n , b , p , r = 0 , m ;	int n, b, p, r = 0, m ;
15758	read n , b , and p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
15759	set m to n	N/A	N/A	m = n ;	m = n ;
15760	while n is greater than 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
15761	create int x = g ( n )	N/A	N/A	int x = g ( n ) ;	int x = g ( n ) ;
15762	set r to r + x * ( b )	N/A	N/A	r += x * ( b ) ;	r += x * ( b ) ;
15763	set r to r + x / 2	N/A	N/A	r += x / 2 ;	r += x / 2 ;
15764	set n to n - x / 2	N/A	N/A	n -= x / 2 ;	n = n - x / 2 ;
15765	DUMMY	0.0	0.0	}	DUMMY
15766	print r , " " , and p * m	N/A	N/A	cout << r << " " << p * m << endl ;	cout << r << " " << p * m << endl ;
15767	DUMMY	0.0	0.0	return 0;	DUMMY
15768	DUMMY	0.0	0.0	}	DUMMY
15769	DUMMY	0.0	0.0	int main() {	DUMMY
15770	create ints participants , bottles , and towels	N/A	N/A	int participants , bottles , towels ;	int participants, bottles, towels ;
15771	let ints total_b = 0 , total_t = 0 , and matches	N/A	N/A	int total_b = 0 , total_t = 0 , matches ;	int total_b = 0, total_t ( 0 ), matches ;
15772	read participants , bottles , and towels	N/A	N/A	cin >> participants >> bottles >> towels ;	cin >> participants >> bottles >> towels ;
15773	set total_t to the result of participants * towels	N/A	N/A	total_t = participants * towels ;	total_t = participants * towels ;
15774	while participants is not 1	N/A	N/A	while ( participants != 1 )	while ( participants!= 1 )
15775	set matches to participants / 2	N/A	N/A	matches = participants / 2 ;	matches = participants / 2 ;
15776	if participants modulo 2 is equal to 1	N/A	N/A	if ( participants % 2 == 1 )	if ( participants % 2 == 1 )
15777	set total_ b to total_b + ( participants - 1 ) * bottles + matches	N/A	N/A	total_b += ( participants - 1 ) * bottles + matches ;	total_b += ( participants - 1 ) * bottles + matches ;
15778	set participants to participants / 2 + 1	N/A	N/A	participants = participants / 2 + 1 ;	participants = participants / 2 + 1 ;
15779	otherwise do	N/A	N/A	else	else
15780	set total_b to total_b + participants * bottles + matches	N/A	N/A	total_b += participants * bottles + matches ;	total_b += participants * bottles + matches ;
15781	set participants to the result of participants / 2	N/A	N/A	participants = participants / 2 ;	participants = participants / 2 ;
15782	DUMMY	0.0	0.0	}	DUMMY
15783	DUMMY	0.0	0.0	}	DUMMY
15784	print total_b , " " , and total_t	N/A	N/A	cout << total_b << " " << total_t << endl ;	cout <<total_b << " " << total_t << endl ;
15785	DUMMY	0.0	0.0	return 0;	DUMMY
15786	DUMMY	0.0	0.0	}	DUMMY
15787	create map m1 from long long ints to long long ints	N/A	N/A	map < long long int , long long int > m1 ;	map < long long, long long > m1 ;
15788	create map iterator itr from long long ints to long long ints	N/A	N/A	map < long long int , long long int > :: iterator itr ;	map < long long, long long > :: iterator itr ;
15789	DUMMY	0.0	0.0	int main() {	DUMMY
15790	create long long int n , b , and p	N/A	N/A	long long int n , b , p ;	long long int n, b, p ;
15791	read n , b , and p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
15792	make long long int ans2 = n * p	N/A	N/A	long long int ans2 = n * p ;	long long ans2 = n * p ;
15793	make long long int ans1 = 0	N/A	N/A	long long int ans1 = 0 ;	long long ans1 = 0 ;
15794	while n is greater than 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
15795	let long long int i	N/A	N/A	long long int i ;	long long int i ;
15796	for i = 0 , loop indefinitely	N/A	N/A	for ( i = 0 ; ; i ++ )	for ( i = 0 ; ; i ++ )
15797	if pow ( 2 , i ) is greater than n , break loop	N/A	N/A	if ( pow ( 2 , i ) > n ) break ;	if ( pow ( 2, i ) > n ) break ;
15798	DUMMY	0.0	0.0	}	DUMMY
15799	decrease i	N/A	N/A	i -- ;	i -- ;
15800	create long long integer z = pow ( 2 , i )	N/A	N/A	long long int z = pow ( 2 , i ) ;	long long int z = pow ( 2, i ) ;
15801	set ans1 to ans1 + ( z / 2 ) * ( 2 * b + 1 )	N/A	N/A	ans1 += ( z / 2 ) * ( 2 * b + 1 ) ;	ans1 += ( z / 2 ) * ( 2 * b + 1 ) ;
15802	set n to n - z / 2	N/A	N/A	n = n - z / 2 ;	n -= z / 2 ;
15803	DUMMY	0.0	0.0	}	DUMMY
15804	print ans1 , " " , and ans2	N/A	N/A	cout << ans1 << " " << ans2 << endl ;	cout << ans1 << " " << ans2 << endl ;
15805	DUMMY	0.0	0.0	return 0;	DUMMY
15806	DUMMY	0.0	0.0	}	DUMMY
15807	N = int	N/A	N/A	int N ;	int N ;
15808	A = int	N/A	N/A	int A ;	int A ;
15809	T = int	N/A	N/A	int T ;	int T ;
15810	values = two dimensional int array of sizes 1001 and 1001	N/A	N/A	int values [ 1001 ] [ 1001 ] ;	int values [ T ] [ 1001 ] ;
15811	pagamento = int array of size 1001	N/A	N/A	int pagamento [ 1001 ] ;	int pagamento [ 1001 ] ;
15812	aguinha = int	N/A	N/A	int aguinha ;	int aguinha ;
15813	in function strlen taking char array of size 1001 t and returning int	N/A	N/A	int strlen ( char t [ 1001 ] )	int strlen ( char a [ 1001 ] )
15814	ret = int with ret = 0	N/A	N/A	int ret = 0 ;	int ret = 0 ;
15815	loop while t [ ret ] is not ' \ 0 ' increment ret	N/A	N/A	while ( t [ ret ] != ' \0 ' ) { ret ++ ; }	while ( t [ ret ]!='\0') ret ++ ;
15816	return ret	N/A	N/A	return ret ;	return ret ;
15817	DUMMY	0.0	0.0	}	DUMMY
15818	in function maxfunc taking int t1 , int t2 and returning int	N/A	N/A	int maxfunc ( int t1 , int t2 )	int maxfunc ( int t1, int t2 )
15819	ret = int with ret = t1	N/A	N/A	int ret = t1 ;	int ret = t1 ;
15820	if t2 > t1 set ret to t2	N/A	N/A	if ( t2 > t1 ) { ret = t2 ; }	if ( t2 > t1 ) ret = t2 ;
15821	return ret	N/A	N/A	return ret ;	return ret ;
15822	DUMMY	0.0	0.0	}	DUMMY
15823	in function minfunc taking int t1 , int t2 and returning int	N/A	N/A	int minfunc ( int t1 , int t2 )	int minfunc ( int t1, int t2 )
15824	ret = int with ret = t1	N/A	N/A	int ret = t1 ;	int ret = t1 ;
15825	if t2 < t1 set ret to t2	N/A	N/A	if ( t2 < t1 ) { ret = t2 ; }	if ( t2 < t1 ) ret = t2 ;
15826	return ret	N/A	N/A	return ret ;	return ret ;
15827	DUMMY	0.0	0.0	}	DUMMY
15828	in function epar taking int x and returning int	N/A	N/A	int epar ( int x )	int epar ( int x )
15829	ret = int with ret = 0	N/A	N/A	int ret = 0 ;	int ret = 0 ;
15830	if x is even set ret to 1	N/A	N/A	if ( ( x % 2 ) == 0 ) { ret = 1 ; }	if ( x % 2 == 0 ) ret = 1 ;
15831	return ret	N/A	N/A	return ret ;	return ret ;
15832	DUMMY	0.0	0.0	}	DUMMY
15833	in function atoifunc taking char x and returning int	N/A	N/A	int atoifunc ( char x )	int atoifunc ( char x )
15834	return x - ' 0 '	N/A	N/A	return x - ' 0 ' ;	return x -'0';
15835	DUMMY	0.0	0.0	}	DUMMY
15836	DUMMY	0.0	0.0	int main() {	DUMMY
15837	result = int with result = =	N/A	N/A	int result = 0 ;	int result = 0 ;
15838	size = int	N/A	N/A	int size ;	int size ;
15839	set N to 0	N/A	N/A	N = 0 ;	int N = 0 ;
15840	N = int	N/A	N/A	int N ;	int N ;
15841	A = int	N/A	N/A	int A ;	int A ;
15842	T = int	N/A	N/A	int T ;	int T ;
15843	read N then A then T	N/A	N/A	cin >> N >> A >> T ;	cin >> N >> A >> T ;
15844	set aguinha to A * 2 + 1	N/A	N/A	aguinha = A * 2 + 1 ;	int aguinha = A * 2 + 1 ;
15845	njogos = int with njogos = 0	N/A	N/A	int njogos = 0 ;	int njogos = 0 ;
15846	resta = int with resta = N	N/A	N/A	int resta = N ;	int resta = N ;
15847	loop while resta is not 1	N/A	N/A	while ( resta != 1 )	while ( resta!= 1 )
15848	increment njogos by resta / 2	N/A	N/A	njogos += resta / 2 ;	njogos += resta / 2 ;
15849	if epar of resta	N/A	N/A	if ( epar ( resta ) )	if ( epar ( resta ) )
15850	set resta to resta / a	N/A	N/A	resta = ( resta / 2 ) ;	resta /= a ;
15851	else	N/A	N/A	else	else
15852	set resta to resta / 2 + 1	N/A	N/A	resta = ( resta / 2 ) + 1 ;	resta = resta / 2 + 1 ;
15853	DUMMY	0.0	0.0	}	DUMMY
15854	DUMMY	0.0	0.0	}	DUMMY
15855	print njogos * aguinha and N * T	N/A	N/A	cout << njogos * aguinha << ' ' << N * T << endl ;	cout << njogos * aguinha << " " << N * T << endl ;
15856	DUMMY	0.0	0.0	return 0;	DUMMY
15857	DUMMY	0.0	0.0	}	DUMMY
15858	DUMMY	0.0	0.0	int main() {	DUMMY
15859	n , b , p = int	N/A	N/A	int n , b , p ;	int n, b, p ;
15860	read n then b then p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
15861	fp = int with fp = n * p	N/A	N/A	int fp = n * p ;	int fp = n * p ;
15862	m = int with m = 0	N/A	N/A	int m = 0 ;	int m = 0 ;
15863	loop while n > 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
15864	po = int with po = floor of log2 of n	N/A	N/A	int po = floor ( log2 ( n ) ) ;	int po = floor ( log2 ( n ) ) ;
15865	compete = int with compete = pow of 2 , po	N/A	N/A	int compete = pow ( 2 , po ) ;	int compete = pow ( 2, po ) ;
15866	diff = int with diff = n - pow of 2 , po	N/A	N/A	int diff = n - pow ( 2 , po ) ;	int diff = n - pow ( 2, po ) ;
15867	increment m by compete / 2	N/A	N/A	m += compete / 2 ;	m += ( compete / 2 ) ;
15868	set n to compete / 2 + diff	N/A	N/A	n = compete / 2 + diff ;	n = compete / 2 + diff ;
15869	DUMMY	0.0	0.0	}	DUMMY
15870	fb = int with fb = m * 2 * b + m	N/A	N/A	int fb = m * 2 * b + m ;	int fb = m * 2 * b + m ;
15871	print fb and fp	N/A	N/A	cout << fb << " " << fp << endl ;	cout << fb << " " << fp << endl ;
15872	DUMMY	0.0	0.0	return 0;	DUMMY
15873	DUMMY	0.0	0.0	}	DUMMY
15874	DUMMY	0.0	0.0	int main() {	DUMMY
15875	let n , b , p be integers	N/A	N/A	int n , b , p ;	int n, b, p ;
15876	read n , b , p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
15877	let ats1 , ats2 be integers with ats1 = 0 , ats2 = p * n	N/A	N/A	int ats1 = 0 , ats2 = p * n ;	int ats1 = 0, ats2 = p * n ;
15878	while n is not equal to 1	N/A	N/A	while ( n != 1 )	while ( n!= 1 )
15879	let k be a integer with k = 1	N/A	N/A	int k = 1 ;	int k = 1 ;
15880	while 2 * k < = n , k is equal to k * 2	N/A	N/A	while ( 2 * k <= n ) k *= 2 ;	while ( 2 * k <= n ) k *= 2 ;
15881	increment ats1 by k * b + k / 2	N/A	N/A	ats1 += k * b + k / 2 ;	ats1 += k * b + k / 2 ;
15882	decrement n by k / 2	N/A	N/A	n -= k / 2 ;	n -= k / 2 ;
15883	DUMMY	0.0	0.0	}	DUMMY
15884	print ats1 and space and ats2 and newline	N/A	N/A	cout << ats1 << " " << ats2 << " \n " ;	cout << ( ats1 ) << " " << ats2 << endl ;
15885	DUMMY	0.0	0.0	}	DUMMY
15886	DUMMY	0.0	0.0	int main() {	DUMMY
15887	create integer variables p , b , t and x	N/A	N/A	int p , b , t , x ;	int p, b, t, x ;
15888	read input to p , b and t	N/A	N/A	cin >> p >> b >> t ;	cin >> p >> b >> t ;
15889	create new integer match with value 0	N/A	N/A	int match = 0 ;	int match = 0 ;
15890	change x to p	N/A	N/A	x = p ;	x = p ;
15891	while p ! = 1	N/A	N/A	while ( p != 1 )	while ( p!= 1 )
15892	change match to match + ( p / 2 )	N/A	N/A	match += ( p / 2 ) ;	match += ( p / 2 ) ;
15893	set p to ( p / 2 ) + ( p % 2 )	N/A	N/A	p = ( p / 2 ) + ( p % 2 ) ;	p = ( p / 2 ) + ( p % 2 ) ;
15894	DUMMY	0.0	0.0	}	DUMMY
15895	print match + ( 2 * match * b ) , " " and x * t to the standard output	N/A	N/A	cout << match + ( 2 * match * b ) << " " << x * t << endl ;	cout << match + ( 2 * match * b ) << " " << x * t << endl ;
15896	DUMMY	0.0	0.0	}	DUMMY
15897	DUMMY	0.0	0.0	int main() {	DUMMY
15898	n , p , b = integers	N/A	N/A	int n , p , b ;	int n, p, b ;
15899	read n , p , b	N/A	N/A	cin >> n >> p >> b ;	cin >> n >> p >> b ;
15900	print ( n - 1 ) * p * 2 + ( n - 1 )	N/A	N/A	cout << ( n - 1 ) * p * 2 + ( n - 1 ) << " " ;	cout << ( n - 1 ) * p * 2 + ( n / 1 ) << endl ;
15901	print b * n	N/A	N/A	cout << b * n << endl ;	cout << b * n << endl ;
15902	DUMMY	0.0	0.0	return 0;	DUMMY
15903	DUMMY	0.0	0.0	}	DUMMY
15904	in the function solve	N/A	N/A	void solve ( )	void solve ( )
15905	n , b , p = integers	N/A	N/A	int n , b , p ;	int n, b, p ;
15906	read n , b , p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
15907	br = integer with br = 0	N/A	N/A	int br = 0 ;	int br = 0 ;
15908	tr = integer with tr = n * p ;	N/A	N/A	int tr = n * p ;	int tr = n * p ;
15909	while n > 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
15910	x = integer with x = 1	N/A	N/A	int x = 1 ;	int x = 1 ;
15911	while 2 * x < n , x = x * 2	N/A	N/A	while ( 2 * x < n ) { x *= 2 ; }	while ( 2 * x < n ) x *= 2 ;
15912	br = br + x * ( 2 * b + 1	N/A	N/A	br += x * ( 2 * b + 1 ) ;	br += x * ( 2 * b + 1 ) ;
15913	n = n - x	N/A	N/A	n -= x ;	n -= x ;
15914	DUMMY	0.0	0.0	}	DUMMY
15915	print br , " " , tr	N/A	N/A	cout << br << " " << tr << endl ;	cout << br << " " << tr << endl ;
15916	DUMMY	0.0	0.0	}	DUMMY
15917	DUMMY	0.0	0.0	int main() {	DUMMY
15918	call solve	N/A	N/A	solve ( ) ;	solve ( ) ;
15919	DUMMY	0.0	0.0	}	DUMMY
15920	DUMMY	0.0	0.0	int main() {	DUMMY
15921	n , b , p , k , ptot , btot = int	N/A	N/A	int n , b , p , k , ptot , btot ;	int n, b, p, k, ptot, btot ;
15922	read n then b then p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
15923	set ptot to p * n	N/A	N/A	ptot = p * n ;	ptot = p * n ;
15924	set btot to 0	N/A	N/A	btot = 0 ;	btot = 0 ;
15925	loop while n is greater than 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
15926	set k to 1 bitshift left by ( floor of log2 of n ) as int	N/A	N/A	k = 1 << ( ( int ) floor ( log2 ( n ) ) ) ;	k = 1 << ( int ) ( log2 ( n ) ) ;
15927	decrement n by k / 2	N/A	N/A	n = n - ( k / 2 ) ;	n -= k / 2 ;
15928	increment btot by ( k * b ) + ( k / 2 )	N/A	N/A	btot += ( ( k * b ) + ( k / 2 ) ) ;	btot += ( k * b ) + ( k / 2 ) ;
15929	DUMMY	0.0	0.0	}	DUMMY
15930	print btot and ptot	N/A	N/A	cout << btot << " " << ptot << " \n " ;	cout << btot << " " << ptot << endl ;
15931	DUMMY	0.0	0.0	return 0;	DUMMY
15932	DUMMY	0.0	0.0	}	DUMMY
15933	declare gcd with long longs a , b as arguments , returning long long	N/A	N/A	long long gcd ( long long a , long long b )	long long gcd ( long long a, long long b )
15934	if b is 0 , return a from function	N/A	N/A	if ( b == 0 ) return a ;	if ( b == 0 ) return a ;
15935	return result of gcd ( b , a % b )	N/A	N/A	return gcd ( b , a % b ) ;	return gcd ( b, a % b ) ;
15936	DUMMY	0.0	0.0	}	DUMMY
15937	declare long long lcm with long longs a , b as arguments	N/A	N/A	long long lcm ( long long a , long long b )	long long lcm ( long long a, long long b )
15938	return a * b / gcd ( a , b ) from function	N/A	N/A	return a * b / gcd ( a , b ) ;	return a * b / gcd ( a, b ) ;
15939	DUMMY	0.0	0.0	}	DUMMY
15940	declare long long f with long longs n , b as arguments	N/A	N/A	long long f ( long long n , long long b )	long long f ( long long n, long long b )
15941	if n is less than or equal to 1 , return 0	N/A	N/A	if ( n <= 1 ) return 0 ;	if ( n <= 1 ) return 0 ;
15942	declare i as long long = 1	N/A	N/A	long long i = 1 ;	long long i = 1 ;
15943	while i * 2 is less than or equal to n , let i be i * 2	N/A	N/A	while ( i * 2 <= n ) i *= 2 ;	while ( i * 2 <= n ) i *= 2 ;
15944	return result of run f with ( n - i + i / 2 , b ) as arguments + i / 2 * ( 2 * b + 1 )	N/A	N/A	return f ( n - i + i / 2 , b ) + i / 2 * ( 2 * b + 1 ) ;	return f ( n - i + i / 2, b ) + ( i ) / 2 * ( 2 * b + 1 ) ;
15945	DUMMY	0.0	0.0	}	DUMMY
15946	DUMMY	0.0	0.0	int main() {	DUMMY
15947	declare long longs n , b , p	N/A	N/A	long long n , b , p ;	long long n, b, p ;
15948	read n read b read p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
15949	print result of run f ( n , b ) , print " " , n * p , newline	N/A	N/A	cout << f ( n , b ) << " " << n * p << endl ;	cout << f ( n, b ) << " " << n * p << endl ;
15950	DUMMY	0.0	0.0	}	DUMMY
15951	DUMMY	0.0	0.0	int main() {	DUMMY
15952	n , b , p , m = int	N/A	N/A	int n , b , p , m ;	int n, b, p, m ;
15953	read n then b then p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
15954	set p to p * n	N/A	N/A	p = p * n ;	p *= n ;
15955	for m = 0 to n is greater or equal to 2 setting m to m + n / 2 and n to n / 2 + n mod 2	N/A	N/A	for ( m = 0 ; n >= 2 ; m = m + n / 2 , n = n / 2 + n % 2 )	for ( m = 0 ; n >= 2 ; m += n / 2, n /= 2 + n % 2 )
15956	noop	N/A	N/A	;	;
15957	print ( b * 2 + 1 ) * m and p	N/A	N/A	cout << ( b * 2 + 1 ) * m << " " << p << endl ;	cout << ( b * 2 + 1 ) * m << " " << p << endl ;
15958	DUMMY	0.0	0.0	return 0;	DUMMY
15959	DUMMY	0.0	0.0	}	DUMMY
15960	declare integer array p2 = { 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256 }	N/A	N/A	int p2 [ ] = { 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256 } ;	int p2 [ ] = { 1, 2, 4, 8, 16, 32, 64, 128, 256 } ;
15961	DUMMY	0.0	0.0	int main() {	DUMMY
15962	declare integers n , b , p , k , m	N/A	N/A	int n , b , p , k , m ;	int n, b, p, k, m ;
15963	declare integer bn = 0	N/A	N/A	int bn = 0 ;	int bn = 0 ;
15964	read n , b , p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
15965	let m be n	N/A	N/A	m = n ;	m = n ;
15966	while m is greater than 1	N/A	N/A	while ( m > 1 )	while ( m > 1 )
15967	for k = 8 to 0 inclusive , decrementing k	N/A	N/A	for ( k = 8 ; k >= 0 ; k -- )	for ( k = 8 ; k >= 0 ; k -- )
15968	if p2 [ k ] is less than or equal to m	N/A	N/A	if ( p2 [ k ] <= m )	if ( p2 [ k ] <= m )
15969	increment bn by p2 [ k ] / 2 + p2 [ k ] * b	N/A	N/A	bn += p2 [ k ] / 2 + p2 [ k ] * b ;	bn += ( p2 [ k ] / 2 ) + ( p3 [ k - 1 ] * b ) ;
15970	end loop	N/A	N/A	break ;	break ;
15971	DUMMY	0.0	0.0	}	DUMMY
15972	DUMMY	0.0	0.0	}	DUMMY
15973	let m be p2 [ k ] / 2 + ( m - p2 [ k ] )	N/A	N/A	m = p2 [ k ] / 2 + ( m - p2 [ k ] ) ;	m = p2 [ k ] / 2 + ( m - p2. k ] ) ;
15974	DUMMY	0.0	0.0	}	DUMMY
15975	print bn and " " and n * p and newline	N/A	N/A	cout << bn << " " << n * p << endl ;	cout << bn << " " << n * p << endl ;
15976	DUMMY	0.0	0.0	return 0;	DUMMY
15977	DUMMY	0.0	0.0	}	DUMMY
15978	declare new integer water	N/A	N/A	int water ;	int water ;
15979	create integers s , n , b and p	N/A	N/A	int s , n , b , p ;	int s, n, b, p ;
15980	DUMMY	0.0	0.0	int main() {	DUMMY
15981	read from the input to n , b and p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
15982	declare new integer called k = n	N/A	N/A	int k = n ;	int k = n ;
15983	set water to 0	N/A	N/A	water = 0 ;	water = 0 ;
15984	while n is not 1	N/A	N/A	while ( n != 1 )	while ( n!= 1 )
15985	change s to n / 2	N/A	N/A	s = n / 2 ;	s = n / 2 ;
15986	if n is even	N/A	N/A	if ( n % 2 == 0 )	if ( n % 2 == 0 )
15987	set n to n divided by 2	N/A	N/A	n /= 2 ;	n /= 2 ;
15988	else	N/A	N/A	else	else
15989	change n to n / 2 + 1	N/A	N/A	n = n / 2 + 1 ;	n = n / 2 + 1 ;
15990	DUMMY	0.0	0.0	}	DUMMY
15991	change water to sum of water and s * ( 2 * b + 1 )	N/A	N/A	water += s * ( 2 * b + 1 ) ;	water += s * ( 2 * b + 1 ) ;
15992	DUMMY	0.0	0.0	}	DUMMY
15993	print water , " " and k * p to the standard output	N/A	N/A	cout << water << " " << k * p << endl ;	cout << water << " " << k * p << endl ;
15994	DUMMY	0.0	0.0	}	DUMMY
15995	function read ( no args , return long long )	N/A	N/A	inline long long read ( )	long long read ( )
15996	c = getchar ( )	N/A	N/A	char c = getchar ( ) ;	char c = getchar ( ) ;
15997	while c is not ' - ' and ( c < ' 0 ' or c > ' 9 ' ) c = getchar ( )	N/A	N/A	while ( c != ' - ' && ( c < ' 0 ' || c > ' 9 ' ) ) c = getchar ( ) ;	while ( c!='-'&& ( c <'0'|| c >'9') ) c = getchar ( ) ;
15998	k = 0 , kk = 1	N/A	N/A	long long k = 0 , kk = 1 ;	long long k = 0, kk = 1 ;
15999	if c is ' - ' c = getchar ( ) , kk = - 1	N/A	N/A	if ( c == ' - ' ) c = getchar ( ) , kk = - 1 ;	if ( c =='-') c = getchar ( ), kk = - 1 ;
16000	while c > = ' 0 ' and c < = ' 9 ' k = k * 10 + c - ' 0 ' , c = getchar ( )	N/A	N/A	while ( c >= ' 0 ' && c <= ' 9 ' ) k = k * 10 + c - ' 0 ' , c = getchar ( ) ;	while ( c >='0'&& c <='9') { k = k * 10 + c -'1 ', c = getchar ( ) ; }
16001	return kk * k	N/A	N/A	return kk * k ;	return kk * k ;
16002	DUMMY	0.0	0.0	}	DUMMY
16003	function write ( get long long x , return nothing )	N/A	N/A	void write ( long long x )	void write ( long long x )
16004	if x < 0 x = - x , putchar ( ' - ' )	N/A	N/A	if ( x < 0 ) x = - x , putchar ( ' - ' ) ;	if ( x < 0 ) x = - x, putchar ('-') ;
16005	if x / 10 write ( w / 10 )	N/A	N/A	if ( x / 10 ) write ( x / 10 ) ;	if ( x / 10 == write ( w / 10 ) )
16006	putchar ( x modulo 10 + ' 0 ' )	N/A	N/A	putchar ( x % 10 + ' 0 ' ) ;	putchar ( x % 10 +'0') ;
16007	DUMMY	0.0	0.0	}	DUMMY
16008	function writlne ( get long long x , return nothing )	N/A	N/A	void writeln ( long long x )	void writlne ( long long x )
16009	write ( x )	N/A	N/A	write ( x ) ;	write ( x ) ;
16010	puts ( " " )	N/A	N/A	puts ( " " ) ;	puts ( " " ) ;
16011	DUMMY	0.0	0.0	}	DUMMY
16012	n , b , p = long long	N/A	N/A	long long n , b , p ;	long long n, b, p ;
16013	DUMMY	0.0	0.0	int main() {	DUMMY
16014	n = read ( )	N/A	N/A	n = read ( ) ;	n = read ( ) ;
16015	b = read ( )	N/A	N/A	b = read ( ) ;	b = read ( ) ;
16016	p = read ( )	N/A	N/A	p = read ( ) ;	p = read ( ) ;
16017	write ( ( b + b + 1 ) * ( n - 1 ) )	N/A	N/A	write ( ( b + b + 1 ) * ( n - 1 ) ) ;	write ( ( b + b + 1 ) * ( n - 1 ) ) ;
16018	putchar ( ' ' )	N/A	N/A	putchar ( ' ' ) ;	putchar (' ') ;
16019	writeln ( p * n )	N/A	N/A	writeln ( p * n ) ;	writeln ( p * n ) ;
16020	DUMMY	0.0	0.0	}	DUMMY
16021	in function solve that returns nothing	N/A	N/A	void solve ( ) ;	void solve ( )
16022	in function speed_up that returns nothing	N/A	N/A	void speed_up ( ) { }	void speed_up ( ) { }
16023	DUMMY	0.0	0.0	int main() {	DUMMY
16024	call speed_up	N/A	N/A	speed_up ( ) ;	speed_up ( ) ;
16025	call solve	N/A	N/A	solve ( ) ;	solve ( ) ;
16026	DUMMY	0.0	0.0	return 0;	DUMMY
16027	DUMMY	0.0	0.0	}	DUMMY
16028	in function solve that returns nothing	N/A	N/A	void solve ( )	void solve ( )
16029	n , b , p = long long	N/A	N/A	long long n , b , p ;	long long n, b, p ;
16030	read n , b , p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
16031	y = long long = n * p	N/A	N/A	long long y = n * p ;	long long y = n * p ;
16032	sor = long long = 0	N/A	N/A	long long sor = 0 ;	long long sor = 0 ;
16033	while n > 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
16034	st = long long = 2	N/A	N/A	long long st = 2 ;	long long st = 2 ;
16035	while st * 2 < = n , then st = st * 2	N/A	N/A	while ( st * 2 <= n ) st *= 2 ;	while ( st * 2 <= n ) st *= 2 ;
16036	sor = sor + ( st / 2 ) * ( b * 2 + 1 )	N/A	N/A	sor += ( st / 2 ) * ( b * 2 + 1 ) ;	sor += ( st / 2 ) * ( b * 2 + 1 ) ;
16037	n = n - st / 2	N/A	N/A	n -= st / 2 ;	n -= st / 2 ;
16038	DUMMY	0.0	0.0	}	DUMMY
16039	print sor y	N/A	N/A	cout << sor << " " << y << " \n " ;	cout << sor << endl ;
16040	DUMMY	0.0	0.0	}	DUMMY
16041	DUMMY	0.0	0.0	int main() {	DUMMY
16042	declare ints n , b and p	N/A	N/A	int n , b , p ;	int n, b, p ;
16043	read variables n , b and p from the input	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
16044	create ints bowl = 0 and towl = n * p	N/A	N/A	int bowl = 0 , towl = n * p ;	int bowl = 0, towl = n * p ;
16045	while n > 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
16046	new integer k = pow ( 2 , ( log ( n ) / log ( 2 ) ) )	N/A	N/A	int k = pow ( 2 , ( int ) ( log ( n ) / log ( 2 ) ) ) ;	int k = pow ( 2, ( log ( n ) / log ( 2 ) ) ) ;
16047	increase bowl by k / 2 * ( 2 * b + 1 )	N/A	N/A	bowl += k / 2 * ( 2 * b + 1 ) ;	dow += k / 2 * ( 2 * b + 1 ) ;
16048	change n to n - k / 2	N/A	N/A	n -= k / 2 ;	n = n - k / 2 ;
16049	DUMMY	0.0	0.0	}	DUMMY
16050	print bowl , ' ' and towl to the standard output	N/A	N/A	cout << bowl << ' ' << towl << endl ;	cout << bowl <<' '<< towl << endl ;
16051	DUMMY	0.0	0.0	return 0;	DUMMY
16052	DUMMY	0.0	0.0	}	DUMMY
16053	DUMMY	0.0	0.0	int main() {	DUMMY
16054	declare new integers n , agua and toalha with toalha = 0	N/A	N/A	int n , agua , toalha = 0 ;	int n, agua, toalha = 0 ;
16055	read user input to n , agua and toalha	N/A	N/A	cin >> n >> agua >> toalha ;	cin >> n >> agua >> toalha ;
16056	declare integers nrod , tagua and ttoalha with ttoalha = 0	N/A	N/A	int nrod , tagua , ttoalha = 0 ;	int nrod, tagua, ttoalha = 0 ;
16057	assign n - 1 to nrod	N/A	N/A	nrod = n - 1 ;	nrod = n - 1 ;
16058	change tagua to nrod + nrod * agua * 2	N/A	N/A	tagua = nrod + nrod * agua * 2 ;	tagua = nrod + nrod * agua * 2 ;
16059	assign toalha * n to ttoalha	N/A	N/A	ttoalha = toalha * n ;	ttoalha = toalha * n ;
16060	print tagua , " " and ttoalha	N/A	N/A	cout << tagua << " " << ttoalha << endl ;	cin >> tagua >> " " >> ttoalha ;
16061	DUMMY	0.0	0.0	return 0;	DUMMY
16062	DUMMY	0.0	0.0	}	DUMMY
16063	DUMMY	0.0	0.0	int main() {	DUMMY
16064	n , b , p = int	N/A	N/A	int n , b , p ;	int n, b, p ;
16065	read n then b then p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
16066	bottles = int with bottles = 0	N/A	N/A	int bottles = 0 ;	int bottles = 0 ;
16067	towels = int with towels = n * p	N/A	N/A	int towels = n * p ;	int towels = n * p ;
16068	loop while n is greater than 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
16069	k = int with k = 0	N/A	N/A	int k = 0 ;	int k = 0 ;
16070	for i = 32 - 1 to 0 inclusive decrementing i	N/A	N/A	for ( int i = 32 - 1 ; i >= 0 ; i -- )	for ( int i = 32 - 1 ; i >= 0 ; i -- )
16071	if n bitwise - and ( 1 bitshift left by i ) is 1	N/A	N/A	if ( n & ( 1 << i ) )	if ( n & ( 1 << i ) == 1 )
16072	set k to 1 bitshift left by i	N/A	N/A	k = ( 1 << i ) ;	k = 1 << i ;
16073	break	N/A	N/A	break ;	break ;
16074	DUMMY	0.0	0.0	}	DUMMY
16075	DUMMY	0.0	0.0	}	DUMMY
16076	set n to ( n - k ) + k / 2	N/A	N/A	n = ( n - k ) + k / 2 ;	n = ( n - k ) + k / 2 ;
16077	increment bottles by b * k + k / 2	N/A	N/A	bottles += b * k + k / 2 ;	bottles += b * k + k / 2 ;
16078	DUMMY	0.0	0.0	}	DUMMY
16079	print bottles and towels	N/A	N/A	cout << bottles << " " << towels << " \n " ;	cout << bottles << " " << towels << endl ;
16080	DUMMY	0.0	0.0	}	DUMMY
16081	DUMMY	0.0	0.0	int main() {	DUMMY
16082	let m , b , p , total , total_p be integers with total = 0	N/A	N/A	int m , b , p , total = 0 , total_p ;	int m, b, p, total = 0, total_p ;
16083	read m , b , p	N/A	N/A	cin >> m >> b >> p ;	cin >> m >> b >> p ;
16084	the value of total_p = m * p	N/A	N/A	total_p = m * p ;	total_p = m * p ;
16085	while 1 is an infinite loop since condition is always true	N/A	N/A	while ( 1 )	while ( 1 )
16086	le k be a integer with k = [ ] ( int n ) - > int	N/A	N/A	int k = [ ] ( int n ) -> int	int k = [ ] ( int n ) ;
16087	let i , res be integers with i = 1 , res = 2 ^ 0	N/A	N/A	int i = 1 , res = pow ( 2 , 0 ) ;	int i = 1, res = pow ( 2, 0 ) ;
16088	while 1 is an infinite loop since condition is always true	N/A	N/A	while ( 1 )	while ( 1 )
16089	let temp be a integer with temp = 2 ^ i	N/A	N/A	int temp = pow ( 2 , i ) ;	int temp = pow ( 2, i ) ;
16090	if temp is greater than n , stop	N/A	N/A	if ( temp > n ) break ;	if ( temp > n ) break ;
16091	the value of res = temp	N/A	N/A	res = temp ;	res = temp ;
16092	increment i by 1	N/A	N/A	i ++ ;	i ++ ;
16093	DUMMY	0.0	0.0	}	DUMMY
16094	return the value of res	N/A	N/A	return res ;	return res ;
16095	m	N/A	N/A	( m ) ;	m ++ ;
16096	let matches be a integer with matches = k / 2	N/A	N/A	int matches = k / 2 ;	int matches = k / 2 ;
16097	increment total by matches * ( 2 * b )	N/A	N/A	total += matches * ( 2 * b ) ;	total += matches * ( 2 * b ) ;
16098	increment total by matches	N/A	N/A	total += matches ;	total += matches ;
16099	the value of m = ( k / 2 ) + ( m - k )	N/A	N/A	m = ( k / 2 ) + ( m - k ) ;	m = ( k / 2 ) + ( m - k ) ;
16100	if matches is equal to 0 , stop	N/A	N/A	if ( matches == 0 ) break ;	if ( matches == 0 ) { break ; }
16101	DUMMY	0.0	0.0	}	DUMMY
16102	print total and space and total_p and newline	N/A	N/A	cout << total << " " << total_p << endl ;	cout << total << " " << total_p << endl ;
16103	DUMMY	0.0	0.0	return 0;	DUMMY
16104	DUMMY	0.0	0.0	}	DUMMY
16105	DUMMY	0.0	0.0	int main() {	DUMMY
16106	i , b , p , j , n , m , k = int	N/A	N/A	int i , b , p , j , n , m , k ;	int i, b, p, j, n, m, k ;
16107	read n , b , p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
16108	print ( 2 * b + 1 ) * ( n - 1 ) and space and n * p	N/A	N/A	cout << ( 2 * b + 1 ) * ( n - 1 ) << " " << n * p << endl ;	cout << ( 2 * b + 1 ) * ( n - 1 ) << " " << n * p << endl ;
16109	DUMMY	0.0	0.0	}	DUMMY
16110	DUMMY	0.0	0.0	int main() {	DUMMY
16111	declare new long longs n , b and p	N/A	N/A	long long n , b , p ;	long long n, b, p ;
16112	read variables n , b and p from the input	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
16113	B is a new long long = 0	N/A	N/A	long long B = 0 ;	long long B = 0 ;
16114	declare new long long called T = n * p	N/A	N/A	long long T = n * p ;	long long T = n * p ;
16115	while n > 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
16116	create long long variable with name now = 1	N/A	N/A	long long now = 1 ;	long long now = 1 ;
16117	while now * 2 < = n	N/A	N/A	while ( now * 2 <= n ) now *= 2 ;	while ( now * 2 <= n )
16118	change B to B + ( now / 2 ) * ( 2 * b + 1 )	N/A	N/A	B += ( now / 2 ) * ( 2 * b + 1 ) ;	B += ( now / 2 ) * ( 2 * b + 1 ) ;
16119	set n to now / 2 + ( n - now )	N/A	N/A	n = now / 2 + ( n - now ) ;	n = now / 2 + ( n - now ) ;
16120	DUMMY	0.0	0.0	}	DUMMY
16121	print B , " " and T	N/A	N/A	cout << B << " " << T << endl ;	cout << B << " " << T << endl ;
16122	DUMMY	0.0	0.0	return 0;	DUMMY
16123	DUMMY	0.0	0.0	}	DUMMY
16124	DUMMY	0.0	0.0	int main() {	DUMMY
16125	declare new integers N , B and P	N/A	N/A	int N , B , P ;	int N, B, P ;
16126	read from the input to N , B and P	N/A	N/A	cin >> N >> B >> P ;	cin >> N >> B >> P ;
16127	Ile is a new integer variable with value 0	N/A	N/A	int Ile = 0 ;	int Ile = 0 ;
16128	create new integer variable Reczniki with value N * P	N/A	N/A	int Reczniki = N * P ;	int Reczniki = N * P ;
16129	while N > 1	N/A	N/A	while ( N > 1 )	while ( N > 1 )
16130	declare integer variable Potega with value 1	N/A	N/A	int Potega = 1 ;	int Potega = 1 ;
16131	while Potega * 2 < = N	N/A	N/A	while ( Potega * 2 <= N ) { Potega *= 2 ; }	while ( Potega * 2 <= N )
16132	declare new integer IleMeczy = Potega / 2	N/A	N/A	int IleMeczy = Potega / 2 ;	int IleMeczy = Potega / 2 ;
16133	add IleMeczy * 2 * B + IleMeczy to Ile	N/A	N/A	Ile += IleMeczy * 2 * B + IleMeczy ;	Ile += IleMeczy * 2 * B + Ilemeczy ;
16134	change N to ( N - Potega ) + IleMeczy	N/A	N/A	N = ( N - Potega ) + IleMeczy ;	N = ( N - Potega ) + IleMeczy ;
16135	DUMMY	0.0	0.0	}	DUMMY
16136	print Ile , " " , Reczniki and " \ n "	N/A	N/A	cout << Ile << " " << Reczniki << " \n " ;	cout << Ile << " " << Reczniki << " \n " ;
16137	DUMMY	0.0	0.0	}	DUMMY
16138	DUMMY	0.0	0.0	int main() {	DUMMY
16139	create int n , b , p	N/A	N/A	int n , b , p ;	int n, b, p ;
16140	read n , b , p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
16141	print ( n - 1 ) * ( 2 * b + 1 ) , " " , n * p and a newline	N/A	N/A	cout << ( n - 1 ) * ( 2 * b + 1 ) << " " << n * p << " \n " ;	cout << ( n - 1 ) * ( 2 * b + 1 ) << " " << n * p << " \n " ;
16142	DUMMY	0.0	0.0	return 0;	DUMMY
16143	DUMMY	0.0	0.0	}	DUMMY
16144	DUMMY	0.0	0.0	int main() {	DUMMY
16145	P = array of 9 int filled with 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256	N/A	N/A	int P [ 9 ] = { 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256 } ;	int P [ 9 ] = { 1, 2, 4, 8, 16, 32, 64, 128, 256 } ;
16146	n , b , p = int	N/A	N/A	int n , b , p ;	int n, b, p ;
16147	read n , b , p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
16148	B = 0	N/A	N/A	int B = 0 ;	int B = 0 ;
16149	N = n	N/A	N/A	int N = n ;	int N = n ;
16150	while n > 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
16151	k = int	N/A	N/A	int k ;	int k ;
16152	for i = 8 down to - 1 exclusive	N/A	N/A	for ( int i = 8 ; i > - 1 ; i -- )	for ( int i = 8 ; i > - 1 ; i -- )
16153	if P [ i ] < = n	N/A	N/A	if ( P [ i ] <= n )	if ( P [ i ] <= n )
16154	k = P [ i ]	N/A	N/A	k = P [ i ] ;	k = P [ i ] ;
16155	break	N/A	N/A	break ;	break ;
16156	DUMMY	0.0	0.0	}	DUMMY
16157	DUMMY	0.0	0.0	}	DUMMY
16158	add k * ( 2 * b + 1 ) / 2 to B	N/A	N/A	B += k * ( 2 * b + 1 ) / 2 ;	B += k * ( 2 * b + 1 ) / 2 ;
16159	subtract k / 2 from n	N/A	N/A	n -= k / 2 ;	n -= k / 2 ;
16160	DUMMY	0.0	0.0	}	DUMMY
16161	print B , space , N * p	N/A	N/A	cout << B << " " << N * p << endl ;	cout << B << " " << N * p << endl ;
16162	DUMMY	0.0	0.0	return 0;	DUMMY
16163	DUMMY	0.0	0.0	}	DUMMY
16164	declare fast with no arguments , returning void	N/A	N/A	void fast ( ) { }	void fast ( ) { }
16165	declare mn = 1e9 as long long	N/A	N/A	long long mn = 1e9 ;	long long mn = 1e9 ;
16166	declare lucky with long longs a , c , integer b as arguments , returning void	N/A	N/A	void lucky ( long long a , long long c , int b )	void lucky ( long long a, long long c, int b )
16167	if a is greater than 1e11 , return from function	N/A	N/A	if ( a > 1e11 ) return ;	if ( a > 1e11 ) return ;
16168	if a is greater than or equal to b and c is 0 , let mn be minimum of mn and a	N/A	N/A	if ( a >= b && c == 0 ) mn = min ( mn , a ) ;	if ( a >= b && c == 0 ) mn = min ( mn, a ) ;
16169	run lucky with a * 10 + 7 , c - 1 , b as arguments	N/A	N/A	lucky ( a * 10 + 7 , c - 1 , b ) ;	lucky ( a * 10 + 7, c - 1, b ) ;
16170	run lucky with a * 10 + 4 , c + 1 , b as arguments	N/A	N/A	lucky ( a * 10 + 4 , c + 1 , b ) ;	lucky ( a * 10 + 4, c + 1, b ) ;
16171	DUMMY	0.0	0.0	}	DUMMY
16172	declare integer n	N/A	N/A	int n ;	int n ;
16173	declare fff with string s , integer c as arguments , returning void	N/A	N/A	void fff ( string s , int c )	void fff ( string s, int c )
16174	if size of s is 2 * n	N/A	N/A	if ( s . size ( ) == 2 * n )	if ( s. size ( ) == 2 * n )
16175	if c is 0 , print s and newline	N/A	N/A	if ( c == 0 ) cout << s << endl ;	if ( c == 0 ) cout << s << endl ;
16176	return from function	N/A	N/A	return ;	return ;
16177	DUMMY	0.0	0.0	}	DUMMY
16178	run fff with s + " ( " , c + 1 as arguments	N/A	N/A	fff ( s + " ( " , c + 1 ) ;	fff ( s + " ( ", c + 1 ) ;
16179	if c is greater than 0 , run fff with s + " ) " , c - 1 as arguments	N/A	N/A	if ( c > 0 ) fff ( s + " ) " , c - 1 ) ;	if ( c > 0 ) fff ( s + " ) ", c - 1 ) ;
16180	DUMMY	0.0	0.0	}	DUMMY
16181	declare toint with string s as argument , returning long long	N/A	N/A	long long toint ( string s )	long long toint ( string s )
16182	declare a = 0 , c = 1 as long longs	N/A	N/A	long long a = 0 , c = 1 ;	long long a = 0, c = 1 ;
16183	end statement	N/A	N/A	;	;
16184	for i = 0 to size of s exclusive	N/A	N/A	for ( int i = 0 ; i < s . size ( ) ; i ++ )	for ( int i = 0 ; i < s. size ( ) ; i ++ )
16185	increment a by ( s [ size of s - i - 1 ] - ' 0 ' ) * c	N/A	N/A	a += ( s [ s . size ( ) - i - 1 ] - ' 0 ' ) * c ;	a += ( s [ s. size ( ) - i - 1 ] -'0') * c ;
16186	let c be c * 10	N/A	N/A	c *= 10 ;	c *= 10 ;
16187	DUMMY	0.0	0.0	}	DUMMY
16188	return a from function	N/A	N/A	return a ;	return a ;
16189	DUMMY	0.0	0.0	}	DUMMY
16190	DUMMY	0.0	0.0	int main() {	DUMMY
16191	run fast	N/A	N/A	fast ( ) ;	fast ( ) ;
16192	declare a , b = 0 , c = 0 , d = 1 , sum = 0 , x = 0 as long longs	N/A	N/A	long long a , b = 0 , c = 0 , d = 1 , sum = 0 , x = 0 ;	long long a, b = 0, c == 0, d = 1, sum = 0 }, x = 0 ;
16193	declare strings s , ss = " "	N/A	N/A	string s , ss = " " ;	string s, ss = " " ;
16194	read a , b , c	N/A	N/A	cin >> a >> b >> c ;	cin >> a >> b >> c ;
16195	let d be a	N/A	N/A	d = a ;	d = a ;
16196	while a is greater than 1	N/A	N/A	while ( a > 1 )	while ( a > 1 )
16197	let x be a / 2	N/A	N/A	x = a / 2 ;	x = a / 2 ;
16198	decrement a by x	N/A	N/A	a -= x ;	a -= x ;
16199	while decrement x is ture , increment sum by ( ( 2 * b ) + 1 )	N/A	N/A	while ( x -- ) sum += ( ( 2 * b ) + 1 ) ;	while ( x -- ) sum += ( ( 2 * b ) + 1 ) ;
16200	DUMMY	0.0	0.0	}	DUMMY
16201	print sum and " " and d * c and " \ n "	N/A	N/A	cout << sum << " " << d * c << " \n " ;	cout << sum << " " << d * c << " \n " ;
16202	DUMMY	0.0	0.0	return 0;	DUMMY
16203	DUMMY	0.0	0.0	}	DUMMY
16204	n , b , p = long long int	N/A	N/A	long long int n , b , p ;	long long int n, b, p ;
16205	DUMMY	0.0	0.0	int main() {	DUMMY
16206	read n , b , p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
16207	bByGame = long long integer with bByGame = b * 2 + 1	N/A	N/A	long long int bByGame = b * 2 + 1 ;	long long int bByGame = b * 2 + 1 ;
16208	towels = long long integer with towels = p * n	N/A	N/A	long long int towels = p * n ;	long long int towels = p * n ;
16209	bottles = long long integer with bottles = 0	N/A	N/A	long long int bottles = 0 ;	long long int bottles = 0 ;
16210	while n > 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
16211	num = long long integer with num = log2 ( n )	N/A	N/A	long long int num = log2 ( n ) ;	long long int num = log2 ( n ) ;
16212	bottles = bottles + num * bByGame	N/A	N/A	bottles += num * bByGame ;	bottles += num * bByGame ;
16213	n = n - num	N/A	N/A	n -= num ;	n -= num ;
16214	DUMMY	0.0	0.0	}	DUMMY
16215	print bottles , " " , towels	N/A	N/A	cout << bottles << " " << towels << endl ;	cout << bottles << " " << towels << endl ;
16216	DUMMY	0.0	0.0	return 0;	DUMMY
16217	DUMMY	0.0	0.0	}	DUMMY
16218	function min with int arguments a and b that returns integer	N/A	N/A	int min ( int a , int b )	int min ( int a, int b )
16219	return a if a < b , or b otherwise	N/A	N/A	return a < b ? a : b ;	return a < b? a : b ;
16220	DUMMY	0.0	0.0	}	DUMMY
16221	max is an integer function with int arguments a and b	N/A	N/A	int max ( int a , int b )	int max ( int a, int b )
16222	return a if a > b , or b otherwise	N/A	N/A	return a > b ? a : b ;	return a > b? a : b ;
16223	DUMMY	0.0	0.0	}	DUMMY
16224	DUMMY	0.0	0.0	int main() {	DUMMY
16225	declare integer variables n , b , p and matches with the value of matches = 0	N/A	N/A	int n , b , p , matches = 0 ;	int n, b, p, matches = 0 ;
16226	create integer variable with name x = 256	N/A	N/A	int x = 256 ;	int x = 256 ;
16227	read n , b and p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
16228	declare integer N with value n	N/A	N/A	int N = n ;	int N = n ;
16229	while n ! = 1	N/A	N/A	while ( n != 1 )	while ( n!= 1 )
16230	if x is greater than n	N/A	N/A	if ( x > n )	if ( x > n )
16231	change the value of x to x divided by 2	N/A	N/A	x /= 2 ;	x /= 2 ;
16232	skip the rest of the loop	N/A	N/A	continue ;	continue ;
16233	DUMMY	0.0	0.0	}	DUMMY
16234	subtract x / 2 from n	N/A	N/A	n -= x / 2 ;	n -= x / 2 ;
16235	add x / 2 to matches	N/A	N/A	matches += x / 2 ;	matches += x / 2 ;
16236	DUMMY	0.0	0.0	}	DUMMY
16237	print matches * ( 1 + 2 * b ) , " " and N * p to the standard output	N/A	N/A	cout << matches * ( 1 + 2 * b ) << " " << N * p << endl ;	cout << matches * ( 1 + 2 * b ) << " " << N * p << endl ;
16238	DUMMY	0.0	0.0	}	DUMMY
16239	DUMMY	0.0	0.0	int main() {	DUMMY
16240	n , b , p = long long	N/A	N/A	long long n , b , p ;	long long n, b, p ;
16241	read n then b then p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
16242	s1 , s2 = long long with s1 = 0LL and s2 = p * n	N/A	N/A	long long s1 = 0LL , s2 = p * n ;	long long s1 = 0LL, s2 = p * n ;
16243	loop while n > 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
16244	k = long long with k = 1	N/A	N/A	long long k = 1 ;	long long k = 1 ;
16245	loop while k < n set k to k * 2	N/A	N/A	while ( k < n ) k *= 2 ;	while ( k < n ) k *= 2 ;
16246	if k > n set k to k / 2	N/A	N/A	if ( k > n ) k /= 2 ;	if ( k > n ) k /= 2 ;
16247	increment s1 by ( k / 2 ) * ( 2 * b + 1 )	N/A	N/A	s1 += ( k / 2 ) * ( 2 * b + 1 ) ;	s1 += ( k / 2 ) * ( 2 * b + 1 ) ;
16248	m = long long with m = n - k	N/A	N/A	long long m = n - k ;	long long m = n - k ;
16249	l = long long with l = k / 2	N/A	N/A	long long l = k / 2 ;	long long l = k / 2 ;
16250	set n to l + m	N/A	N/A	n = l + m ;	n = l + m ;
16251	DUMMY	0.0	0.0	}	DUMMY
16252	print s1 and s2	N/A	N/A	cout << s1 << " " << s2 << ' \n ' ;	cout << s1 << " " << s2 << endl ;
16253	DUMMY	0.0	0.0	return 0;	DUMMY
16254	DUMMY	0.0	0.0	}	DUMMY
16255	create new constant integer maxn with value 1e6 + 5	N/A	N/A	const int maxn = 1e6 + 5 ;	const int maxn = 1e6 + 5 ;
16256	create constant integer variable mod = 1e9 + 7	N/A	N/A	const int mod = 1e9 + 7 ;	const int mod = 1e9 + 7 ;
16257	create long long arrays fac and y with size maxn	N/A	N/A	long long fac [ maxn ] , y [ maxn ] ;	long long fac [ maxn ], y [ maxm ] ;
16258	declare long long variables n and k	N/A	N/A	long long n , k ;	long long n, k ;
16259	long long function qpow with long long arguments a , b and c	N/A	N/A	long long qpow ( long long a , long long b , long long c )	long long qpow ( long long a [ ], long long b [ ] and long long c )
16260	declare long long variable with name ans with value 1	N/A	N/A	long long ans = 1 ;	long long ans = 1 ;
16261	change a to the remainder of a divided by c	N/A	N/A	a %= c ;	a %= c ;
16262	change b to b modulo c	N/A	N/A	b %= c ;	b %= c ;
16263	while b > 0	N/A	N/A	while ( b > 0 )	while ( b > 0 )
16264	if b is even , set ans to ( ans * a ) modulo c	N/A	N/A	if ( b % 2 == 1 ) ans = ( ans * a ) % c ;	if ( b % 2 == 0 ) ans = ( ans * a ) % c ;
16265	change b to b / 2	N/A	N/A	b = b / 2 ;	b /= 2 ;
16266	change a to a squared modulo c	N/A	N/A	a = ( a * a ) % c ;	a = a * a % c ;
16267	DUMMY	0.0	0.0	}	DUMMY
16268	return ans	N/A	N/A	return ans ;	return ans ;
16269	DUMMY	0.0	0.0	}	DUMMY
16270	integer function pow_2 with integer argument m	N/A	N/A	int pow_2 ( int m )	int pow_2 ( int m )
16271	create new integer called res with value 1	N/A	N/A	int res = 1 ;	int res = 1 ;
16272	declare new integer variable left = 1	N/A	N/A	int left = 1 ;	int left = 1 ;
16273	looping infinitely	N/A	N/A	while ( true )	while ( true )
16274	if res < < left < = m and res < < ( left + 1 ) > m , return res	N/A	N/A	if ( res << left <= m && res << ( left + 1 ) > m ) return res << left ;	if ( res << left <= m && res << ( left + 1 ) > m ) { return res ; }
16275	increment left	N/A	N/A	left ++ ;	left ++ ;
16276	DUMMY	0.0	0.0	}	DUMMY
16277	DUMMY	0.0	0.0	}	DUMMY
16278	DUMMY	0.0	0.0	int main() {	DUMMY
16279	create ints n , b and p	N/A	N/A	int n , b , p ;	int n, b, p ;
16280	declare new integer called ans with value 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
16281	read standard input to n , b and p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
16282	declare integer tow with value n * p	N/A	N/A	int tow = n * p ;	int tow = n * p ;
16283	declare new integer called left with value 0	N/A	N/A	int left = 0 ;	int left = 0 ;
16284	while n > 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
16285	create integer k with value pow_2 of n	N/A	N/A	int k = pow_2 ( n ) ;	int k = pow_2 ( n ) ;
16286	set left to n - k	N/A	N/A	left = n - k ;	left = n - k ;
16287	add b * k + k / 2 to ans	N/A	N/A	ans += b * k + k / 2 ;	ans += b * k + k / 2 ;
16288	change n to k / 2 + left	N/A	N/A	n = k / 2 + left ;	n = k / 2 + left ;
16289	DUMMY	0.0	0.0	}	DUMMY
16290	print ans , ' ' , tow and ' \ n ' to standard output	N/A	N/A	cout << ans << ' ' << tow << ' \n ' ;	cout << ans <<' '<< tow <<'\n';
16291	DUMMY	0.0	0.0	return 0;	DUMMY
16292	DUMMY	0.0	0.0	}	DUMMY
16293	DUMMY	0.0	0.0	int main() {	DUMMY
16294	let participants , bottles , towels be integers	N/A	N/A	int participants , bottles , towels ;	int participants, bottles, towels ;
16295	let total_b , total_t , matches be integers with total_b = 0 , total_t = 0	N/A	N/A	int total_b = 0 , total_t = 0 , matches ;	int total_b = 0, total_t = 0 ;
16296	read participants , bottles , towels	N/A	N/A	cin >> participants >> bottles >> towels ;	cin >> participants >> bottles >> towels ;
16297	the value of total_t = participants * towels	N/A	N/A	total_t = participants * towels ;	total_t = participants * towels ;
16298	while participants is not equal to 1	N/A	N/A	while ( participants != 1 )	while ( participants!= 1 )
16299	the value of matches = participants / 2	N/A	N/A	matches = participants / 2 ;	matches = participants / 2 ;
16300	if participants modulo 2 is equal to 1	N/A	N/A	if ( participants % 2 == 1 )	if ( participants % 2 == 1 )
16301	total_b is equal to total_b + ( participants - 1 ) * bottles + matches	N/A	N/A	total_b += ( participants - 1 ) * bottles + matches ;	total_b += ( participants - 1 ) * bottles + matches ;
16302	the value of participants = participants / 2 + 1	N/A	N/A	participants = participants / 2 + 1 ;	participants = participants / 2 + 1 ;
16303	else do the following	N/A	N/A	else	else
16304	total_b is equal to total_b + participants * bottles + matches	N/A	N/A	total_b += participants * bottles + matches ;	total_b += participants * bottles + matches ;
16305	the value of participants = participants / 2	N/A	N/A	participants = participants / 2 ;	participants = participants / 2 ;
16306	DUMMY	0.0	0.0	}	DUMMY
16307	DUMMY	0.0	0.0	}	DUMMY
16308	print total_b and space and total_t and newline	N/A	N/A	cout << total_b << " " << total_t << endl ;	puts ( total_b, " ", total_t ) ;
16309	DUMMY	0.0	0.0	return 0;	DUMMY
16310	DUMMY	0.0	0.0	}	DUMMY
16311	DUMMY	0.0	0.0	int main() {	DUMMY
16312	n , b , p = int	N/A	N/A	int n , b , p ;	int n, b, p ;
16313	read n then b then p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
16314	print ( n - 1 ) * ( b * 2 + 1 ) and p * n	N/A	N/A	cout << ( n - 1 ) * ( b * 2 + 1 ) << " " << p * n << ' \n ' ;	cout << ( n - 1 ) * ( b * 2 + 1 ) << " " << p * n << endl ;
16315	DUMMY	0.0	0.0	return 0;	DUMMY
16316	DUMMY	0.0	0.0	}	DUMMY
16317	N , B , P = int	N/A	N/A	int N , B , P ;	int N, B, P ;
16318	qplays = int	N/A	N/A	int qplays ;	int qplays ;
16319	qplayers = int	N/A	N/A	int qplayers ;	int qplayers ;
16320	qoutplayers = int	N/A	N/A	int qoutplayers ;	int qoutplayers ;
16321	tplays = int	N/A	N/A	int tplays ;	int tplays ;
16322	tplayers = int	N/A	N/A	int tplayers ;	int tplayers ;
16323	in function calc taking int n	N/A	N/A	void calc ( int n )	void calc ( int n )
16324	k = int with k = 1	N/A	N/A	int k = 1 ;	int k = 1 ;
16325	loop while k < n set k to k bithsift left by 1	N/A	N/A	while ( k < n ) k <<= 1 ;	for ( ; k < n ; k = k * k )
16326	if k > n set k to k bitshift right by 1	N/A	N/A	if ( k > n ) k >>= 1 ;	if ( k > n ) k >>= 1 ;
16327	set qplays to k - 1	N/A	N/A	qplays = k - 1 ;	qplays = k - 1 ;
16328	set qoutplayers to n - k	N/A	N/A	qoutplayers = n - k ;	qoutplayers = n - k ;
16329	set qplayers to 0	N/A	N/A	qplayers = 0 ;	qplayers = 0 ;
16330	loop while k > = 1	N/A	N/A	while ( k >= 1 )	while ( k >= 1 )
16331	increment qplayers by k	N/A	N/A	qplayers += k ;	qplayers += k ;
16332	set k to k bitshift right by 1	N/A	N/A	k >>= 1 ;	k >>= 1 ;
16333	DUMMY	0.0	0.0	}	DUMMY
16334	decrement qplayers	N/A	N/A	-- qplayers ;	qplayers -- ;
16335	DUMMY	0.0	0.0	}	DUMMY
16336	DUMMY	0.0	0.0	int main() {	DUMMY
16337	read N then B then P	N/A	N/A	cin >> N >> B >> P ;	cin >> N >> B >> P ;
16338	set tplays to 0	N/A	N/A	tplays = 0 ;	tplays = 0 ;
16339	set tplayers to 0	N/A	N/A	tplayers = 0 ;	tplayers = 0 ;
16340	set qoutplayers to 0	N/A	N/A	qoutplayers = 0 ;	qoutplayers = 0 ;
16341	n = int with n = N	N/A	N/A	int n = N ;	int n = N ;
16342	do	N/A	N/A	do	do
16343	call calc of n	N/A	N/A	calc ( n ) ;	calc ( n ) ;
16344	increment tplayers by qplayers	N/A	N/A	tplayers += qplayers ;	tplayers += qplayers ;
16345	increment tplays by qplays	N/A	N/A	tplays += qplays ;	tplays += qplays ;
16346	set n to 1 + qoutplayers	N/A	N/A	n = 1 + qoutplayers ;	n = 1 + qoutplayers ;
16347	while qoutplayers > 0	N/A	N/A	while ( qoutplayers > 0 ) ;	while ( qoutplayers > 0 )
16348	print ( ( tplayers * B ) + tplays ) and N * P	N/A	N/A	cout << ( ( tplayers * B ) + tplays ) << " " << ( N * P ) << " \n " ;	cout << ( ( tplayers * B ) + tplays ) << " N * P " << endl ;
16349	DUMMY	0.0	0.0	return 0;	DUMMY
16350	DUMMY	0.0	0.0	}	DUMMY
16351	n , b , p , x , ans = long long	N/A	N/A	long long n , b , p , x , ans ;	long long n, b, p, x, ans ;
16352	l = bool with l = true	N/A	N/A	bool l = true ;	bool l = true ;
16353	DUMMY	0.0	0.0	int main() {	DUMMY
16354	read n , b , p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
16355	x = n	N/A	N/A	x = n ;	x = n ;
16356	while n > 1	N/A	N/A	while ( n > 1 )	while ( n > 1 )
16357	ans = ans + ( n / 2 ) * ( b * 2 + 1 )	N/A	N/A	ans += ( n / 2 ) * ( b * 2 + 1 ) ;	ans += ( n / 2 ) * ( b * 2 + 1 ) ;
16358	n = ceil ( n / 2 . 0 )	N/A	N/A	n = ceil ( n / 2.0 ) ;	n = ceil ( n / 2.0 ) ;
16359	DUMMY	0.0	0.0	}	DUMMY
16360	print ans , " " , x * p	N/A	N/A	cout << ans << " " << x * p << endl ;	cout << ans << " " << x * p << endl ;
16361	DUMMY	0.0	0.0	return 0;	DUMMY
16362	DUMMY	0.0	0.0	}	DUMMY
16363	DUMMY	0.0	0.0	int main() {	DUMMY
16364	create integers n , m , p	N/A	N/A	int n , m , p ;	int n, m, p ;
16365	get n , m , p	N/A	N/A	cin >> n >> m >> p ;	cin >> n >> m >> p ;
16366	create integer ans with ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
16367	create integer c with c = n	N/A	N/A	int c = n ;	int c = n ;
16368	while n not equal to 1 do the following	N/A	N/A	while ( n != 1 )	while ( n!= 1 )
16369	add n / 2 to ans	N/A	N/A	ans += n / 2 ;	ans += n / 2 ;
16370	subtract n / 2 from n	N/A	N/A	n -= n / 2 ;	n -= n / 2 ;
16371	DUMMY	0.0	0.0	}	DUMMY
16372	compute and print two expressions ans * ( m * 2 + 1 ) and c * p with a blank space between	N/A	N/A	cout << ans * ( m * 2 + 1 ) << " " << c * p << endl ;	cout << ans * ( m * 2 + 1 ) << " " << c * p << endl ;
16373	DUMMY	0.0	0.0	}	DUMMY
16374	p2 = int array with the values 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256	N/A	N/A	int p2 [ ] = { 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256 } ;	int p2 [ ] = { 1, 2, 4, 8, 16, 32, 64, 128, 256 } ;
16375	DUMMY	0.0	0.0	int main() {	DUMMY
16376	n , b , p , k , m = int	N/A	N/A	int n , b , p , k , m ;	int n, b, p, k, m ;
16377	bn = int with bn = 0	N/A	N/A	int bn = 0 ;	int bn = 0 ;
16378	read n then b then p	N/A	N/A	cin >> n >> b >> p ;	cin >> n >> b >> p ;
16379	set m to n	N/A	N/A	m = n ;	m = n ;
16380	loop while m is greater than 1	N/A	N/A	while ( m > 1 )	while ( m > 1 )
16381	for k = 8 to 0 inclusive decrementing k	N/A	N/A	for ( k = 8 ; k >= 0 ; k -- )	for ( k = 8 ; k >= 0 ; k -- )
16382	if p2 [ k ] is less or equal to m	N/A	N/A	if ( p2 [ k ] <= m )	if ( p2 [ k ] <= m )
16383	increment bn by p2 [ k ] / 2 + p2 [ k ] * b	N/A	N/A	bn += p2 [ k ] / 2 + p2 [ k ] * b ;	bn += ( p2 [ k ] / 2 ) + ( p3 [ k - 1 ] * b ) ;
16384	break	N/A	N/A	break ;	break ;
16385	DUMMY	0.0	0.0	}	DUMMY
16386	DUMMY	0.0	0.0	}	DUMMY
16387	set m to p2 [ k ] / 2 + ( m - p2 [ k ] )	N/A	N/A	m = p2 [ k ] / 2 + ( m - p2 [ k ] ) ;	m = p2 [ k ] / 2 + ( m - p2. k ] ) ;
16388	DUMMY	0.0	0.0	}	DUMMY
16389	print bn and n * p	N/A	N/A	cout << bn << " " << n * p << endl ;	cout << bn << " " << n * p << endl ;
16390	DUMMY	0.0	0.0	return 0;	DUMMY
16391	DUMMY	0.0	0.0	}	DUMMY
16392	DUMMY	0.0	0.0	int main() {	DUMMY
16393	n , p = int	N/A	N/A	int n , p ;	int n, p ;
16394	str = string array of size 45	N/A	N/A	string str [ 45 ] ;	string str [ 45 ] ;
16395	sum , now = long long	N/A	N/A	long long sum , now ;	long long sum, now ;
16396	read n then p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16397	set sum and now to 0	N/A	N/A	sum = 0 , now = 0 ;	sum = now = 0 ;
16398	for i = n - 1 to 0 inclusive decrementing i read str [ i ]	N/A	N/A	for ( int i = n - 1 ; i >= 0 ; i -- ) cin >> str [ i ] ;	for ( int i = n - 1 ; i >= 0 ; i -- ) { cin >> str [ i ] ; }
16399	for i = 0 to n - 1 inclusive	N/A	N/A	for ( int i = 0 ; i <= n - 1 ; i ++ )	for ( long long i = 0 ; i <= n - 1 ; i ++ )
16400	if str [ i ] is " half "	N/A	N/A	if ( str [ i ] == " half " )	if ( str [ i ] == " half " )
16401	increment sum by now * p	N/A	N/A	sum += now * p ;	sum += now * p ;
16402	set now to now * 2	N/A	N/A	now = now * 2 ;	now *= 2 ;
16403	else	N/A	N/A	else	else
16404	increment sum by now * p + p / 2	N/A	N/A	sum += now * p + p / 2 ;	sum += now * p + p / 2 ;
16405	set now to now * 2 + 1	N/A	N/A	now = now * 2 + 1 ;	now = now * 2 + 1 ;
16406	DUMMY	0.0	0.0	}	DUMMY
16407	DUMMY	0.0	0.0	}	DUMMY
16408	print sum	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
16409	DUMMY	0.0	0.0	return 0;	DUMMY
16410	DUMMY	0.0	0.0	}	DUMMY
16411	DUMMY	0.0	0.0	int main() {	DUMMY
16412	create long longs n , p	N/A	N/A	long long n , p ;	long long n, p ;
16413	read n read p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16414	create string array str with size n	N/A	N/A	string str [ n ] ;	string str [ n ] ;
16415	create long long i	N/A	N/A	long long i ;	long long i ;
16416	create long longs ans , fans with fans = 0	N/A	N/A	long long ans , fans = 0 ;	long long ans, fans = 0 ;
16417	for i = 0 to n exclusive , read str [ i ]	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) cin >> str [ i ] ;	for ( i = 0 ; i < n ; i ++ ) { cin >> str [ i ] ; }
16418	reverse sort elements from str to str + n	N/A	N/A	reverse ( str , str + n ) ;	reverse ( str, str + n ) ;
16419	if str [ 0 ] is " half "	N/A	N/A	if ( str [ 0 ] == " half " )	if ( str [ 0 ] =='half')
16420	set ans to 2	N/A	N/A	ans = 2 ;	ans = 2 ;
16421	else	N/A	N/A	else	else
16422	set ans to 1	N/A	N/A	ans = 1 ;	ans = 1 ;
16423	increment fans by ans * p / 2	N/A	N/A	fans += ans * p / 2 ;	fans += ans * p / 2 ;
16424	for i = 1 to n exclusive	N/A	N/A	for ( i = 1 ; i < n ; i ++ )	for ( int i = 1 ; i < n ; i ++ )
16425	if str [ i ] is " half "	N/A	N/A	if ( str [ i ] == " half " )	if ( str [ i ] == " half " )
16426	set ans to ans * 2	N/A	N/A	ans *= 2 ;	ans *= 2 ;
16427	else	N/A	N/A	else	else
16428	set ans to ans * 2 + 1	N/A	N/A	ans = ans * 2 + 1 ;	ans = ans * 2 + 1 ;
16429	increment fans by ans * p / 2	N/A	N/A	fans += ans * p / 2 ;	ans += ans * p / 2 ;
16430	DUMMY	0.0	0.0	}	DUMMY
16431	print fans print newline	N/A	N/A	cout << fans << endl ;	cout << fans << endl ;
16432	DUMMY	0.0	0.0	}	DUMMY
16433	declare solve	N/A	N/A	void solve ( )	void solve ( )
16434	create ints n and p	N/A	N/A	int n , p ;	int n, p ;
16435	read n and p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16436	let long double ans = 0	N/A	N/A	long double ans = 0 ;	long double ans = 0 ;
16437	let int cnt = 0	N/A	N/A	int cnt = 0 ;	int cnt = 0 ;
16438	create string vector v	N/A	N/A	vector < string > v ;	vector < string > v ;
16439	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
16440	let string s	N/A	N/A	string s ;	string s ;
16441	read s	N/A	N/A	cin >> s ;	cin >> s ;
16442	append s to vector v	N/A	N/A	v . push_back ( s ) ;	v. push_back ( s ) ;
16443	DUMMY	0.0	0.0	}	DUMMY
16444	reverse order of contents of vector v	N/A	N/A	reverse ( v . begin ( ) , v . end ( ) ) ;	reverse ( v. begin ( ), v. end ( ) ) ;
16445	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
16446	if v [ i ] is equal to " halfplus "	N/A	N/A	if ( v [ i ] == " halfplus " )	if ( v [ i ] == " halfplus " )
16447	set ans to ans + 0 . 5	N/A	N/A	ans += 0.5 ;	ans += 0.5 ;
16448	set ans to ans * 2	N/A	N/A	ans *= 2 ;	ans *= 2 ;
16449	increment cnt	N/A	N/A	cnt ++ ;	cnt ++ ;
16450	otherwise do :	N/A	N/A	else	else
16451	set ans to ans * 2	N/A	N/A	ans *= 2 ;	ans *= 2 ;
16452	DUMMY	0.0	0.0	}	DUMMY
16453	DUMMY	0.0	0.0	}	DUMMY
16454	print the result of ( long long ) ( ans ) * p - cnt * ( p / 2 )	N/A	N/A	cout << ( long long ) ( ans ) * p - cnt * ( p / 2 ) << endl ;	cout << ( long long ) ( ans ) * p - cnt * ( p / 2 ) << endl ;
16455	DUMMY	0.0	0.0	}	DUMMY
16456	DUMMY	0.0	0.0	int main() {	DUMMY
16457	call solve ( )	N/A	N/A	solve ( ) ;	solve ( ) ;
16458	DUMMY	0.0	0.0	return 0;	DUMMY
16459	DUMMY	0.0	0.0	}	DUMMY
16460	DUMMY	0.0	0.0	int main() {	DUMMY
16461	str = string array of size 41	N/A	N/A	string str [ 41 ] ;	string str [ 41 ] ;
16462	n , p , i , flag = int with flag = 0	N/A	N/A	int n , p , i , flag = 0 ;	int n, p, i, flag = 0 ;
16463	a = long long with a = 0	N/A	N/A	long long a = 0 ;	long long a = 0 ;
16464	read n then p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16465	for i = 1 to n inclusive read str [ i ]	N/A	N/A	for ( i = 1 ; i <= n ; i ++ ) { cin >> str [ i ] ; }	for ( i = 1 ; i <= n ; i ++ ) cin >> str [ i ] ;
16466	if str [ i - 1 ] is " halfplus "	N/A	N/A	if ( str [ i - 1 ] == " halfplus " )	if ( str [ i - 1 ] == " halfplus " )
16467	increment a by p / 2	N/A	N/A	a += p / 2 ;	a += p / 2 ;
16468	increment flag	N/A	N/A	flag ++ ;	flag ++ ;
16469	DUMMY	0.0	0.0	}	DUMMY
16470	for j = i - 2 to 0 decrementing j	N/A	N/A	for ( int j = i - 2 ; j > 0 ; j -- )	for ( int j = i - 2 ; j > 0 ; j -- )
16471	if str [ j ] is " halfplus "	N/A	N/A	if ( str [ j ] == " halfplus " )	if ( str [ j ] == " halfplus " )
16472	set a to a + ( a + flag * p / 2 + p / 2 )	N/A	N/A	a = a + ( a + flag * p / 2 + p / 2 ) ;	a += ( a + flag * p / 2 + p / 1 ) ;
16473	increment flag	N/A	N/A	flag ++ ;	flag ++ ;
16474	DUMMY	0.0	0.0	}	DUMMY
16475	if str [ j ] is " half " increment a by a + flag * p / 2	N/A	N/A	if ( str [ j ] == " half " ) { a = a + ( a + flag * p / 2 ) ; }	if ( str [ j ] == " half " ) a += a + flag * p / 2 ;
16476	DUMMY	0.0	0.0	}	DUMMY
16477	print a	N/A	N/A	cout << a << endl ;	cout << a << endl ;
16478	DUMMY	0.0	0.0	}	DUMMY
16479	op = array of strings 444	N/A	N/A	string op [ 444 ] ;	string op [ 444 ] ;
16480	DUMMY	0.0	0.0	int main() {	DUMMY
16481	let n , p be long integers	N/A	N/A	long long n , p ;	long long n, p ;
16482	read n and p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16483	the value of p = p / 2	N/A	N/A	p /= 2 ;	p /= 2 ;
16484	for i = 1 to n inclusive , read op [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { cin >> op [ i ] ; }	for ( int i = 1 ; i <= n ; i ++ ) cin >> op [ i ] ;
16485	let ans , send be long integers with ans = 0 , send = 0	N/A	N/A	long long ans = 0 , send = 0 ;	long long ans = 0, send = 0 ;
16486	for i is equal to n , i > = 1 , decrement i by 1	N/A	N/A	for ( int i = n ; i >= 1 ; i -- )	for ( int i = n ; i >= 1 ; i -- )
16487	send = send * 2	N/A	N/A	send *= 2 ;	send *= 2 ;
16488	if op [ i ] is equal to halfplus , increment send by 1	N/A	N/A	if ( op [ i ] == " halfplus " ) { send ++ ; }	if ( op [ i ] == " half " ) send ++ ;
16489	increment ans by send	N/A	N/A	ans += send ;	ans += send ;
16490	DUMMY	0.0	0.0	}	DUMMY
16491	print ans * p and newline	N/A	N/A	cout << ans * p << endl ;	cout << ans * p << endl ;
16492	DUMMY	0.0	0.0	return 0;	DUMMY
16493	DUMMY	0.0	0.0	}	DUMMY
16494	in the function GCD that takes integer a , b	N/A	N/A	int GCD ( int a , int b )	void GCD ( int a, int b )
16495	if a < b , swap a and b	N/A	N/A	if ( a < b ) swap ( a , b ) ;	if ( a < b ) swap ( a, b ) ;
16496	a = a modulo b	N/A	N/A	a %= b ;	a %= b ;
16497	if a is 0	N/A	N/A	if ( a == 0 )	if ( a == 0 )
16498	return b	N/A	N/A	return b ;	return b ;
16499	else	N/A	N/A	else	else
16500	return GCD of a and b	N/A	N/A	return GCD ( a , b ) ;	return GCD ( a, b ) ;
16501	DUMMY	0.0	0.0	}	DUMMY
16502	INF = const integer with INF = 1000000000	N/A	N/A	const int INF = 1000000000 ;	const int INF = 1000000000 ;
16503	INF64 = const long long with INF64 = 1e18 ;	N/A	N/A	const long long INF64 = 1e18 ;	const long long INF64 = 1e18 ;
16504	N = const integer with N = 2020	N/A	N/A	const int N = 2020 ;	const int N = 2020 ;
16505	M = const integer with M = 2000	N/A	N/A	const int M = 2000 ;	const int M = 2000 ;
16506	MOD = const integer with MOD = 1000000007	N/A	N/A	const int MOD = 1000000007 ;	const int MOD = 1000000007 ;
16507	DUMMY	0.0	0.0	int main() {	DUMMY
16508	n , p = long long	N/A	N/A	long long n , p ;	long long n, p ;
16509	read n , p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16510	a = vector of integer with a = n	N/A	N/A	vector < int > a ( n ) ;	vector < int > a ( n ) ;
16511	for i = 0 to cast to int ( n )	N/A	N/A	for ( int i = 0 ; i < int ( n ) ; i ++ )	for ( int i = 0 ; i < int ( n ) ; i ++ )
16512	s = string	N/A	N/A	string s ;	string s ;
16513	read s	N/A	N/A	cin >> s ;	cin >> s ;
16514	if s is half	N/A	N/A	if ( s == " half " )	if ( s % 2 == 1 )
16515	a [ i ] = 0	N/A	N/A	a [ i ] = 0 ;	a [ i ] = 0 ;
16516	else	N/A	N/A	else	else
16517	a [ i ] = 1	N/A	N/A	a [ i ] = 1 ;	a [ i ] = 1 ;
16518	DUMMY	0.0	0.0	}	DUMMY
16519	k = long long with k = 0	N/A	N/A	long long k = 0 ;	long long k = 0 ;
16520	half = long long with half = 0	N/A	N/A	long long half = 0 ;	long long half = 0 ;
16521	for i = n - 1 down to 0	N/A	N/A	for ( int i = n - 1 ; i >= 0 ; i -- )	for ( long long i = n - 1 ; i >= 0 ; i -- )
16522	k = k * 2 + a [ i ]	N/A	N/A	k = k * 2 + a [ i ] ;	k = k * 2 + a [ i ] ;
16523	half = half + a [ i ]	N/A	N/A	half += a [ i ] ;	half += a [ i ] ;
16524	DUMMY	0.0	0.0	}	DUMMY
16525	res = long long with res = k * p - half * ( p / 2 )	N/A	N/A	long long res = k * p - half * ( p / 2 ) ;	long long res = k * p - half * ( p / 2 ) ;
16526	print res	N/A	N/A	cout << res << endl ;	cout << res << endl ;
16527	DUMMY	0.0	0.0	}	DUMMY
16528	set maxn to 5005	N/A	N/A	const int maxn = 5005 ;	const int maxn = 5005 ;
16529	assign 0x3f3f3f3f to inf	N/A	N/A	const int inf = 0x3f3f3f3f ;	const long long inf = 0x3f3f2f3ff ;
16530	DUMMY	0.0	0.0	int main() {	DUMMY
16531	create int a and b	N/A	N/A	int a , b ;	int a, b ;
16532	read a , b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
16533	create string s of size 50	N/A	N/A	string s [ 50 ] ;	string s [ 50 ] ;
16534	for i = 1 to a inclusive , read s [ i ]	N/A	N/A	for ( int i = 1 ; i <= a ; i ++ ) { cin >> s [ i ] ; }	for ( int i = 1 ; i <= a ; i ++ ) cin >> s [ i ] ;
16535	set ans to b / 2 and num to 1	N/A	N/A	long long ans = b / 2 , num = 1 ;	int ans = b / 2, num = 1 ;
16536	for i = a - 1 to 1 inclusive	N/A	N/A	for ( int i = a - 1 ; i >= 1 ; i -- )	for ( int i = a - 1 ; i >= 1 ; -- i )
16537	if s [ i ] = halfplus	N/A	N/A	if ( s [ i ] == " halfplus " )	if ( s [ i ] % 2 == 1 )
16538	set ans to ans + ( num + 0 . 5 ) * b	N/A	N/A	ans += ( num + 0.5 ) * b ;	ans += ( num + 0.5 ) * b ;
16539	assign num * 2 + 1 to num	N/A	N/A	num = num * 2 + 1 ;	num = num * 2 + 1 ;
16540	else	N/A	N/A	else	else
16541	set ans to ans + bum * b	N/A	N/A	ans += num * b ;	ans += ( bum * b ) ;
16542	num = num * 2	N/A	N/A	num *= 2 ;	num *= 2 ;
16543	DUMMY	0.0	0.0	}	DUMMY
16544	DUMMY	0.0	0.0	}	DUMMY
16545	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
16546	DUMMY	0.0	0.0	return 0;	DUMMY
16547	DUMMY	0.0	0.0	}	DUMMY
16548	create string array s with size 2525	N/A	N/A	string s [ 2525 ] ;	string s [ 2525 ] ;
16549	DUMMY	0.0	0.0	int main() {	DUMMY
16550	create long longs n , p , m , l , with m = 0 , l = 0	N/A	N/A	long long n , p , m = 0 , l = 0 ;	long long n, p, m = 0, l = 0 ;
16551	read n read p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16552	for i = 1 to n inclusive , read s [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ;
16553	for i = n to 1 inclusive , decrementing i	N/A	N/A	for ( int i = n ; i >= 1 ; i -- )	for ( int i = n ; i >= 1 ; i -- )
16554	set m to m * 2	N/A	N/A	m *= 2 ;	m *= 2 ;
16555	if s [ i ] is " halfplus " increment m	N/A	N/A	if ( s [ i ] == " halfplus " ) m ++ ;	if ( s [ i ] == " halfplus " ) m ++ ;
16556	increment l by m	N/A	N/A	l += m ;	l += m ;
16557	DUMMY	0.0	0.0	}	DUMMY
16558	print l * p / 2 print newline	N/A	N/A	cout << l * p / 2 << endl ;	cout << l * p / 2 << endl ;
16559	DUMMY	0.0	0.0	return 0;	DUMMY
16560	DUMMY	0.0	0.0	}	DUMMY
16561	DUMMY	0.0	0.0	int main() {	DUMMY
16562	declare integers n , p and halfs where halfs = 0	N/A	N/A	int n , p , halfs = 0 ;	int n, p, halfs = 0 ;
16563	create long long current = 0	N/A	N/A	long long current = 0 ;	long long current = 0 ;
16564	read n and p from the user input	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16565	create new stack of strings s	N/A	N/A	stack < string > s ;	stack < string > s ;
16566	create string variable temp	N/A	N/A	string temp ;	string temp ;
16567	for i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
16568	read standard input to temp	N/A	N/A	cin >> temp ;	cin >> temp ;
16569	push temp to the stack s	N/A	N/A	s . push ( temp ) ;	s. push ( temp ) ;
16570	if temp is equal to " halfplus " , increment halfs	N/A	N/A	if ( temp == " halfplus " ) halfs ++ ;	if ( temp == " halfplus " ) halfs ++ ;
16571	DUMMY	0.0	0.0	}	DUMMY
16572	if top element of s is equal to " halfplus "	N/A	N/A	if ( s . top ( ) == " halfplus " )	if ( s. top ( ) == " halfplus " )
16573	assign 1 to current	N/A	N/A	current = 1 ;	current = 1 ;
16574	remove top element from s	N/A	N/A	s . pop ( ) ;	s. pop ( ) ;
16575	DUMMY	0.0	0.0	}	DUMMY
16576	loop while s is not empty	N/A	N/A	while ( ! s . empty ( ) )	while (! s. empty ( ) )
16577	change the value of current to current multiplied by 2	N/A	N/A	current *= 2 ;	current *= 2 ;
16578	if value of the top element of s is " halfplus " , increment current by one	N/A	N/A	if ( s . top ( ) == " halfplus " ) current ++ ;	if ( s. top ( ) == " halfplus " ) current ++ ;
16579	remove top element from s	N/A	N/A	s . pop ( ) ;	s. pop ( ) ;
16580	DUMMY	0.0	0.0	}	DUMMY
16581	change current to current * p - ( 0 . 5 * p * halfs )	N/A	N/A	current = current * p - ( 0.5 * p * halfs ) ;	current = current * p - ( 0.5 * p * halfs ) ;
16582	print current	N/A	N/A	cout << current << endl ;	cout << current << endl ;
16583	DUMMY	0.0	0.0	return 0;	DUMMY
16584	DUMMY	0.0	0.0	}	DUMMY
16585	let ret an array of long longs of length 50	N/A	N/A	long long ret [ 50 ] ;	long long ret [ 50 ] ;
16586	DUMMY	0.0	0.0	int main() {	DUMMY
16587	let n , p ints	N/A	N/A	int n , p ;	int n, p ;
16588	read n and p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16589	let ans , temp be long longs with ans = 1 , tmp = 0	N/A	N/A	long long ans = 1 , tmp = 0 ;	long long ans = 1, tmp = 0 ;
16590	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
16591	let s a string	N/A	N/A	string s ;	string s ;
16592	read s	N/A	N/A	cin >> s ;	cin >> s ;
16593	if s is half	N/A	N/A	if ( s == " half " )	if ( s % 2 == 1 )
16594	set ret [ i ] to 1	N/A	N/A	ret [ i ] = 1 ;	ret [ i ] = 1 ;
16595	otherwise	N/A	N/A	else	else
16596	set ret [ i ] to 2 and increment tmp	N/A	N/A	ret [ i ] = 2 , tmp ++ ;	ret [ i ] = 2, tmp ++ ;
16597	DUMMY	0.0	0.0	}	DUMMY
16598	for i = n - 2 down to 0 inclusive	N/A	N/A	for ( int i = n - 2 ; i >= 0 ; i -- )	for ( int i = n - 2 ; i >= 0 ; i -- )
16599	if ret [ i ] is 1	N/A	N/A	if ( ret [ i ] == 1 )	if ( ret [ i ] == 1 )
16600	multiply ans by 2	N/A	N/A	ans = ans * 2 ;	ans *= 2 ;
16601	otherwise	N/A	N/A	else	else
16602	set ans to ans * 2 + 1	N/A	N/A	ans = ans * 2 + 1 ;	ans = ans * 2 + 1 ;
16603	DUMMY	0.0	0.0	}	DUMMY
16604	set ans to ans * p - tmp * ( p / 2 )	N/A	N/A	ans = ans * p - tmp * ( p / 2 ) ;	ans = ans * p - tmp * ( p / 2 ) ;
16605	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
16606	DUMMY	0.0	0.0	return 0;	DUMMY
16607	DUMMY	0.0	0.0	}	DUMMY
16608	DUMMY	0.0	0.0	int main() {	DUMMY
16609	create long long ints n , p , count = 0 , and y = 0	N/A	N/A	long long n , p , count = 0 , y = 0 ;	long long n, p, count = 0, y = 0 ;
16610	let string x	N/A	N/A	string x ;	string x ;
16611	read n and p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16612	make string vector a	N/A	N/A	vector < string > a ;	vector < string > a ;
16613	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
16614	read x	N/A	N/A	cin >> x ;	cin >> x ;
16615	append x to vector a	N/A	N/A	a . push_back ( x ) ;	a. push_back ( x ) ;
16616	DUMMY	0.0	0.0	}	DUMMY
16617	for i = n - 1 to 0	N/A	N/A	for ( int i = n - 1 ; i >= 0 ; i -- )	for ( int i = n - 1 ; i >= 0 ; i -- )
16618	if a [ i ] is equal to " halfplus "	N/A	N/A	if ( a [ i ] == " halfplus " )	if ( a [ i ] == " halfplus " )
16619	set count to count * 2 + 1	N/A	N/A	count = count * 2 + 1 ;	count = count * 2 + 1 ;
16620	increment y	N/A	N/A	y ++ ;	y ++ ;
16621	DUMMY	0.0	0.0	}	DUMMY
16622	if a [ i ] is equal to " half " , set count to 2 * count	N/A	N/A	if ( a [ i ] == " half " ) { count = 2 * count ; }	if ( a [ i ] == " half " ) count = 2 * count ;
16623	DUMMY	0.0	0.0	}	DUMMY
16624	let long long int ans = p * count - ( p * y ) / 2	N/A	N/A	long long ans = p * count - ( p * y ) / 2 ;	long long int ans = p * count - ( p * y ) / 2 ;
16625	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
16626	DUMMY	0.0	0.0	return 0;	DUMMY
16627	DUMMY	0.0	0.0	}	DUMMY
16628	declare long longs p , he and shu	N/A	N/A	long long p , he , shu ;	long long p, he, shu ;
16629	declare integer n	N/A	N/A	int n ;	int n ;
16630	declare an array of strings s with 50 elements	N/A	N/A	string s [ 50 ] ;	string s [ 50 ] ;
16631	DUMMY	0.0	0.0	int main() {	DUMMY
16632	read input to n and p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16633	divide p by 2	N/A	N/A	p /= 2 ;	p /= 2 ;
16634	for i = 1 to n inclusive , read s [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ;
16635	for integer i = n to 1 inclusive counting down	N/A	N/A	for ( int i = n ; i >= 1 ; i -- )	for ( int i = n ; i >= 1 ; i -- )
16636	set shu to shu * 2	N/A	N/A	shu = shu * 2 ;	shu *= 2 ;
16637	if s [ i ] ! = " half " , increase shu by 1	N/A	N/A	if ( s [ i ] != " half " ) shu += 1 ;	if ( s [ i ]!= " half " ) shu ++ ;
16638	add shu to he	N/A	N/A	he += shu ;	he += shu ;
16639	DUMMY	0.0	0.0	}	DUMMY
16640	print he * p	N/A	N/A	cout << he * p << endl ;	cout << he * p << endl ;
16641	DUMMY	0.0	0.0	return 0;	DUMMY
16642	DUMMY	0.0	0.0	}	DUMMY
16643	set N to 1e6 + 5 , MAX to 3e7 and MOD = 1e9 + 7	N/A	N/A	const int N = 1e6 + 5 , MAX = 3e7 , MOD = 1e9 + 7 ;	const int N = ( 1e6 + 5 ), MAX = ( 3e7 ), MOD = 1e9 + 7 ;
16644	create int n and p	N/A	N/A	int n , p ;	int n, p ;
16645	create string a [ N ]	N/A	N/A	string a [ N ] ;	string a [ N ] ;
16646	let ans be ans ans	N/A	N/A	long long ans ;	int ans = ans ;
16647	DUMMY	0.0	0.0	int main() {	DUMMY
16648	read n and p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16649	for i = 0 to n exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
16650	curr = 0	N/A	N/A	long long curr = 0 ;	int curr = 0 ;
16651	for i = n - 1 to 0 inclusive	N/A	N/A	for ( int i = n - 1 ; i >= 0 ; i -- )	for ( int i = n - 1 ; i >= 0 ; i -- )
16652	if a [ i ] = half	N/A	N/A	if ( a [ i ] == " half " )	if ( a [ i ] == 2 )
16653	set ans to ans + curr * p	N/A	N/A	ans += curr * p ;	ans += curr * p ;
16654	assign curr * 2 to curr	N/A	N/A	curr *= 2 ;	curr *= 2 ;
16655	else	N/A	N/A	else	else
16656	assign ans + curr * p to ans	N/A	N/A	ans += curr * p ;	ans += curr * p ;
16657	set ans to ans + p / 2	N/A	N/A	ans += p / 2 ;	ans += p / 2 ;
16658	set curr = curr * 2	N/A	N/A	curr *= 2 ;	curr *= 2 ;
16659	increment curr	N/A	N/A	curr ++ ;	curr ++ ;
16660	DUMMY	0.0	0.0	}	DUMMY
16661	DUMMY	0.0	0.0	}	DUMMY
16662	print ans and a newline	N/A	N/A	cout << ans << " \n " ;	cout << ans <<'\n';
16663	DUMMY	0.0	0.0	}	DUMMY
16664	DUMMY	0.0	0.0	int main() {	DUMMY
16665	let n and p be long long integers	N/A	N/A	long long int n , p ;	long long n, p ;
16666	read n and p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16667	let cost be a long long in with value 0	N/A	N/A	long long int cost = 0 ;	long long cost = 0 ;
16668	arr with n elements = string	N/A	N/A	string arr [ n ] ;	string arr [ n ] ;
16669	read i long long elements into arr from 0 to n exclusive	N/A	N/A	for ( long long int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }	for ( long long i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }
16670	let num = long long int with value 0	N/A	N/A	long long int num = 0 ;	long long int num = 0 ;
16671	for i from n - 1 to 0 inclusive decreasing	N/A	N/A	for ( long long int i = n - 1 ; i >= 0 ; i -- )	for ( long long int i = n - 1 ; i >= 0 ; i -- )
16672	if arr at element i equals halfplus	N/A	N/A	if ( arr [ i ] == " halfplus " )	if ( arr [ i ] =='half')
16673	num equals num times 2 plus 1	N/A	N/A	num = ( num * 2 ) + 1 ;	num *= 2 + 1 ;
16674	else	N/A	N/A	else	else
16675	num equals itself times 2	N/A	N/A	num = ( num * 2 ) ;	num *= 2 ;
16676	DUMMY	0.0	0.0	}	DUMMY
16677	for i from 0 to n exclusive	N/A	N/A	for ( long long int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
16678	if arr at i equals halfplus	N/A	N/A	if ( arr [ i ] == " halfplus " )	if ( arr [ i ] == half plus ( 1 ) )
16679	cost equals cost plus ( num / 2 ) * p + ( p / 2 )	N/A	N/A	cost += ( num / 2 ) * p + ( p / 2 ) ;	cost += ( num / 2 ) * p + ( p / 2.0 ) ;
16680	num equals num minus half of num minus 1	N/A	N/A	num = num - ( num / 2 ) - 1 ;	num -= ( num / 2 ) - 1 ;
16681	else	N/A	N/A	else	else
16682	cost equals cost plus ( num / 2 ) * p	N/A	N/A	cost += ( num / 2 ) * p ;	cost += ( num / 2 ) * p ;
16683	num equals num minus half of num	N/A	N/A	num = num - ( num / 2 ) ;	num -= num / 2 ;
16684	DUMMY	0.0	0.0	}	DUMMY
16685	DUMMY	0.0	0.0	}	DUMMY
16686	print cost	N/A	N/A	cout << cost << endl ;	cout << cost << endl ;
16687	DUMMY	0.0	0.0	}	DUMMY
16688	create constant long long mod with mod = 1e9 + 7	N/A	N/A	const long long mod = 1e9 + 7 ;	const long long mod = 1e9 + 7 ;
16689	create constant double esp with esp = 1e - 5	N/A	N/A	const double esp = 1e-5 ;	const double esp = 1e-5 ;
16690	DUMMY	0.0	0.0	int main() {	DUMMY
16691	create long longs n , p	N/A	N/A	long long n , p ;	long long n, p ;
16692	create string array a with size 50	N/A	N/A	string a [ 50 ] ;	string a [ 50 ] ;
16693	while read n read p is true	N/A	N/A	while ( cin >> n >> p )	while ( cin >> n >> p )
16694	for i = 1 to n inclusive , read a [ i ]	N/A	N/A	for ( long long i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;	for ( long long i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
16695	create long longs num , t , with num = 1 , t = 1	N/A	N/A	long long num = 1 , t = 1 ;	long long num = 1, t = 1 ;
16696	for i = n - 1 to 1 inclusive , decrementing i	N/A	N/A	for ( int i = n - 1 ; i >= 1 ; i -- )	for ( long long i = n - 1 ; i >= 1 ; -- i )
16697	if a [ i ] is " halfplus "	N/A	N/A	if ( a [ i ] == " halfplus " )	if ( a [ i ] == " halfplus " )
16698	set num to ( num + 0 . 5 ) * 2	N/A	N/A	num = ( num + 0.5 ) * 2 ;	num = ( num + 0.5 ) * 2 ;
16699	increment t	N/A	N/A	t ++ ;	t ++ ;
16700	else	N/A	N/A	else	else
16701	set num to num * 2	N/A	N/A	num = num * 2 ;	num *= 2 ;
16702	DUMMY	0.0	0.0	}	DUMMY
16703	DUMMY	0.0	0.0	}	DUMMY
16704	create long long ans with ans = 0	N/A	N/A	long long ans = 0 ;	long long ans = 0 ;
16705	set ans to num * p - t * ( p / 2 )	N/A	N/A	ans = num * p - t * ( p / 2 ) ;	ans = num * p - t * ( p / 2 ) ;
16706	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
16707	DUMMY	0.0	0.0	}	DUMMY
16708	DUMMY	0.0	0.0	}	DUMMY
16709	create string array s with size 41	N/A	N/A	string s [ 41 ] ;	string s [ 41 ] ;
16710	create long longs n , p , sum	N/A	N/A	long long n , p , sum ;	long long n, p, sum ;
16711	create double curr	N/A	N/A	double curr ;	double curr ;
16712	DUMMY	0.0	0.0	int main() {	DUMMY
16713	read n read p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16714	for i = 0 to n exclusive , read s [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> s [ i ] ; }
16715	for i = n - 1 to 0 inclusive , decrementing i	N/A	N/A	for ( int i = n - 1 ; i >= 0 ; i -- )	for ( long long i = n - 1 ; i >= 0 ; i -- )
16716	if s [ i ] is " halfplus " , increment curr by 0 . 5	N/A	N/A	if ( s [ i ] == " halfplus " ) curr += 0.5 ;	if ( s [ i ] == " halfplus " ) curr += 0.5 ;
16717	increment sum by curr * p	N/A	N/A	sum += curr * p ;	sum += curr * p ;
16718	set curr to curr * 2	N/A	N/A	curr *= 2 ;	curr *= 2 ;
16719	DUMMY	0.0	0.0	}	DUMMY
16720	print sum print newline	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
16721	DUMMY	0.0	0.0	return 0;	DUMMY
16722	DUMMY	0.0	0.0	}	DUMMY
16723	declare constant int N = 1e6	N/A	N/A	const int N = 1e6 ;	const int N = 1e6 ;
16724	create integer array aa with size N + 2	N/A	N/A	int aa [ N + 2 ] ;	int aa [ N + 2 ] ;
16725	DUMMY	0.0	0.0	int main() {	DUMMY
16726	declare integers n and p	N/A	N/A	int n , p ;	int n, p ;
16727	read n and p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16728	for i from 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
16729	declare string s	N/A	N/A	string s ;	string s ;
16730	read input to s	N/A	N/A	cin >> s ;	cin >> s ;
16731	if s is equal to " half "	N/A	N/A	if ( s == " half " )	if ( s == " half " )
16732	set aa [ i ] to 0	N/A	N/A	aa [ i ] = 0 ;	aa [ i ] = 0 ;
16733	else	N/A	N/A	else	else
16734	set aa [ i ] to 1	N/A	N/A	aa [ i ] = 1 ;	aa [ i ] = 1 ;
16735	DUMMY	0.0	0.0	}	DUMMY
16736	declare long longs app and ans where ans = 0	N/A	N/A	long long app , ans = 0 ;	long long app, ans = 0 ;
16737	for integer i = n to 1 inclusive decrementing i	N/A	N/A	for ( int i = n ; i >= 1 ; i -- )	for ( int i = n ; i >= 1 ; i -- )
16738	if i = n	N/A	N/A	if ( i == n )	if ( i == n )
16739	set app to 1	N/A	N/A	app = 1 ;	app = 1 ;
16740	else	N/A	N/A	else	else
16741	set app to app * 2 + aa [ i ]	N/A	N/A	app = app * 2 + aa [ i ] ;	app = app * 2 + aa [ i ] ;
16742	add ( ( app / 2 ) * 1LL ) * p to ans	N/A	N/A	ans += ( ( app / 2 ) * 1LL ) * p ;	ans += ( ( app / 2 ) * 1LL ) * p ;
16743	if app is odd , increase ans by p / 2	N/A	N/A	if ( app % 2 ) ans += ( p / 2 ) ;	if ( app % 2!= 0 ) ans += p / 2 ;
16744	DUMMY	0.0	0.0	}	DUMMY
16745	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
16746	DUMMY	0.0	0.0	return 0;	DUMMY
16747	DUMMY	0.0	0.0	}	DUMMY
16748	DUMMY	0.0	0.0	int main() {	DUMMY
16749	create ints n and p	N/A	N/A	int n , p ;	int n, p ;
16750	read n	N/A	N/A	cin >> n ;	cin >> n ;
16751	read p	N/A	N/A	cin >> p ;	cin >> p ;
16752	create long double apples = 0	N/A	N/A	long double apples = 0 ;	long double apples = 0 ;
16753	let long long answer = 0	N/A	N/A	long long answer = 0 ;	long long answer = 0 ;
16754	create string vector data	N/A	N/A	vector < string > data ;	vector < string > data ;
16755	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( long long i = 0 ; i < n ; i ++ )
16756	create string temp	N/A	N/A	string temp ;	string temp ;
16757	read temp	N/A	N/A	cin >> temp ;	cin >> temp ;
16758	append temp to data	N/A	N/A	data . push_back ( temp ) ;	data. push_back ( temp ) ;
16759	DUMMY	0.0	0.0	}	DUMMY
16760	for i = n - 1 to 0	N/A	N/A	for ( int i = n - 1 ; i >= 0 ; i -- )	for ( int i = n - 1 ; i >= 0 ; i -- )
16761	if data [ i ] is equal to " halfplus "	N/A	N/A	if ( data [ i ] == " halfplus " )	if ( data [ i ] == " halfplus " )
16762	set apples to apples + 0 . 5	N/A	N/A	apples += 0.5 ;	apples += 0.5 ;
16763	set apples to apples * 2	N/A	N/A	apples *= 2 ;	apples *= 2 ;
16764	set answer to answer + ( apples / 2 . 0 ) * p	N/A	N/A	answer += ( apples / 2.0 ) * p ;	answer += ( apples / 2.0 ) * p ;
16765	else	N/A	N/A	else	else
16766	set apples to apples * 2	N/A	N/A	apples *= 2 ;	apples *= 2 ;
16767	set answer to answer + ( apples / 2 . 0 ) * p	N/A	N/A	answer += ( apples / 2.0 ) * p ;	answer += ( apples / 2.0 ) * p ;
16768	DUMMY	0.0	0.0	}	DUMMY
16769	DUMMY	0.0	0.0	}	DUMMY
16770	print answer	N/A	N/A	cout << answer << endl ;	cout << answer << endl ;
16771	read n	N/A	N/A	cin >> n ;	cin >> n ;
16772	DUMMY	0.0	0.0	}	DUMMY
16773	declare string array op size 444	N/A	N/A	string op [ 444 ] ;	string op [ 444 ] ;
16774	DUMMY	0.0	0.0	int main() {	DUMMY
16775	declare long longs n , p	N/A	N/A	long long n , p ;	long long n, p ;
16776	read n , p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16777	let p be p / 2	N/A	N/A	p /= 2 ;	p /= 2 ;
16778	for i = 1 to n inclusive , read op [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { cin >> op [ i ] ; }	for ( long long i = 1 ; i <= n ; i ++ ) cin >> op [ i ] ;
16779	declare long longs ans = 0 , send = 0	N/A	N/A	long long ans = 0 , send = 0 ;	long long ans = 0, send = 0 ;
16780	for i = n to 1 inclusive , decrementing i	N/A	N/A	for ( int i = n ; i >= 1 ; i -- )	for ( int i = n ; i >= 1 ; i -- )
16781	let send be send * 2	N/A	N/A	send *= 2 ;	send *= 2 ;
16782	if op [ i ] is " halfplus " , increment send	N/A	N/A	if ( op [ i ] == " halfplus " ) { send ++ ; }	if ( op [ i ] == " halfplus " ) send ++ ;
16783	increment ans by send	N/A	N/A	ans += send ;	ans += send ;
16784	DUMMY	0.0	0.0	}	DUMMY
16785	print ans * p , newline	N/A	N/A	cout << ans * p << endl ;	cout << ans * p << endl ;
16786	DUMMY	0.0	0.0	return 0;	DUMMY
16787	DUMMY	0.0	0.0	}	DUMMY
16788	create long longs n , p , k with k = 0	N/A	N/A	long long n , p , k = 0 ;	long long n, p, k = 0 ;
16789	DUMMY	0.0	0.0	int main() {	DUMMY
16790	read n read p	N/A	N/A	cin >> n >> p ;	cin >> n >> p ;
16791	create boolean vector a initialized with n	N/A	N/A	vector < bool > a ( n ) ;	vector < bool > a ( n ) ;
16792	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
16793	create string t	N/A	N/A	string t ;	string t ;
16794	read t	N/A	N/A	cin >> t ;	cin >> t ;
16795	set a [ i ] to length of t is greater than 4	N/A	N/A	a [ i ] = t . length ( ) > 4 ;	a [ i ] = t. size ( ) > 4 ;
16796	increment k by a [ i ]	N/A	N/A	k += a [ i ] ;	k += a [ i ] ;
16797	DUMMY	0.0	0.0	}	DUMMY
16798	create double ans with ans = 0	N/A	N/A	double ans = 0 ;	double ans = 0 ;
16799	create long long sum with sum = 0	N/A	N/A	long long sum = 0 ;	long long sum = 0 ;
16800	reverse sort elements from beginning of a to end of a	N/A	N/A	reverse ( a . begin ( ) , a . end ( ) ) ;	reverse ( a. begin ( ), a. end ( ) ) ;
16801	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
16802	if a [ i ] is true	N/A	N/A	if ( a [ i ] )	if ( a [ i ] )
16803	set ans to ans * 2 + 0 . 5	N/A	N/A	ans = ans * 2 + 0.5 ;	ans = ans * 2 + 0.5 ;
16804	increment sum by ans * p	N/A	N/A	sum += ans * p ;	sum += ans * p ;
16805	else	N/A	N/A	else	else
16806	set ans to ans * 2	N/A	N/A	ans *= 2 ;	ans *= 2 ;
16807	increment sum by ans * p	N/A	N/A	sum += ans * p ;	sum += ans * p ;
16808	DUMMY	0.0	0.0	}	DUMMY
16809	DUMMY	0.0	0.0	}	DUMMY
16810	print sum print newline	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
16811	DUMMY	0.0	0.0	return 0;	DUMMY
16812	DUMMY	0.0	0.0	}	DUMMY
16813	N = int	N/A	N/A	int N ;	int N ;
16814	P = long long	N/A	N/A	long long P ;	long long P ;
16815	S = array of 2000010 string	N/A	N/A	string S [ 2000010 ] ;	string S [ 2000010 ] ;
16816	DUMMY	0.0	0.0	int main() {	DUMMY
16817	read N , P	N/A	N/A	cin >> N >> P ;	cin >> N >> P ;
16818	for i = 1 to N inclusive read S [ i ]	N/A	N/A	for ( int i = 1 ; i <= N ; i ++ ) { cin >> S [ i ] ; }	for ( int i = 1 ; i <= N ; i ++ ) cin >> S [ i ] ;
16819	fans = 0	N/A	N/A	long double fans = 0 ;	int fans = 0 ;
16820	for i = N down to 1 inclusive	N/A	N/A	for ( int i = N ; i >= 1 ; i -- )	for ( int i = N ; i >= 1 ; i -- )
16821	if S [ i ] is " halfplus "	N/A	N/A	if ( S [ i ] == " halfplus " )	if ( S [ i ] == " halfplus " )
16822	add 0 . 5 to fans	N/A	N/A	fans += 0.5 ;	Fans += 0.5 ;
16823	multiply fans by 2	N/A	N/A	fans *= 2.00000000 ;	fans *= 2 ;
16824	else	N/A	N/A	else	else
16825	multiply fans by 2	N/A	N/A	fans *= 2.00000000 ;	fans *= 2 ;
16826	DUMMY	0.0	0.0	}	DUMMY
16827	DUMMY	0.0	0.0	}	DUMMY
16828	cost = 0	N/A	N/A	long double cost = 0 ;	int cost = 0 ;
16829	for i = 1 to N inclusive	N/A	N/A	for ( int i = 1 ; i <= N ; i ++ )	for ( int i = 1 ; i <= N ; i ++ )
16830	add ( fans / 2 ) * P to cost	N/A	N/A	cost += ( fans / 2.00000 ) * ( P ) ;	cost += ( fans / 2 ) * P ;
16831	if S [ i ] is " half "	N/A	N/A	if ( S [ i ] == " half " )	if ( S [ i ] == " half " )
16832	divide fans by 2	N/A	N/A	fans /= 2.000 ;	frests /= 2 ;
16833	else	N/A	N/A	else	else
16834	divide fans by 2	N/A	N/A	fans /= 2.000 ;	fans /= 2 ;
16835	subtract 0 . 5 from fans	N/A	N/A	fans -= 0.500 ;	fans -= 0.5 ;
16836	DUMMY	0.0	0.0	}	DUMMY
16837	DUMMY	0.0	0.0	}	DUMMY
16838	print cost with 0 decimal digits	N/A	N/A	cout << fixed << setprecision ( 0 ) << cost << endl ;	cout. precision ( 0 ) ;
16839	DUMMY	0.0	0.0	return 0;	DUMMY
16840	DUMMY	0.0	0.0	}	DUMMY
16841	c array of size 500005 ] , s , bit array size of 100 , origin array size of 100 = long long integers	N/A	N/A	long long c [ 500005 ] , s , bit [ 100 ] , origin [ 100 ] ;	long long int c [ 500005 ], s, bit [ 100 ], origin [ 10 ] ;
16842	DUMMY	0.0	0.0	int main() {	DUMMY
16843	integers = n	N/A	N/A	int n ;	int n ;
16844	read n	N/A	N/A	cin >> n ;	cin >> n ;
16845	for i = 0 to less than n do the following	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
16846	ong a , b = long long integers	N/A	N/A	long long a , b ;	long long a, b ;
16847	read a , b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
16848	set s ^ = a , c [ i ] to a ^ b	N/A	N/A	s ^= a , c [ i ] = a ^ b ;	s ^= a, c [ i ] = a ^ b ;
16849	DUMMY	0.0	0.0	}	DUMMY
16850	set integer cnt to 0	N/A	N/A	int cnt = 0 ;	int cnt = 0 ;
16851	for i = 0 to less than n do the following	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
16852	for j = 0 to less than cnt do the following	N/A	N/A	for ( int j = 0 ; j < cnt ; ++ j )	for ( int j = 0 ; j < cnt ; j ++ )
16853	if c [ i ] & bit [ j ] is true	N/A	N/A	if ( c [ i ] & bit [ j ] ) c [ i ] ^= origin [ j ] ;	if ( c [ i ] & bit [ j ] )
16854	set if ( c [ i ] ) is true then origin [ cnt ] equals c [ i ] , bit [ cnt ] equals c [ i ] and - c [ i ] , and add 1 to cnt	N/A	N/A	if ( c [ i ] ) origin [ cnt ] = c [ i ] , bit [ cnt ] = c [ i ] & - c [ i ] , ++ cnt ;	if ( c [ i ] ) origin [ cnt ] += c [ 1 ], bit [ cc ] += - c [ j ] ;
16855	DUMMY	0.0	0.0	}	DUMMY
16856	for j = 0 to less than cnt do the following	N/A	N/A	for ( int j = 0 ; j < cnt ; ++ j )	for ( int j = 0 ; j < cnt ; j ++ )
16857	if s & bit [ j ] is true	N/A	N/A	if ( s & bit [ j ] ) s ^= origin [ j ] ;	if ( s & bit [ j ] )
16858	if s is true	N/A	N/A	if ( s )	if ( s )
16859	output 1 / 1	N/A	N/A	cout << " 1/1 " << endl ;	cout << 1 / 1 << endl ;
16860	else	N/A	N/A	else	else
16861	output ( 1ll , cnt ) - 1 , / , ( 1ll < < cnt )	N/A	N/A	cout << ( 1ll << cnt ) - 1 << ' / ' << ( 1ll << cnt ) << endl ;	cout << ( 1ll << cnt ) - 1 << " / " << ( long long ) cnt << endl ;
16862	DUMMY	0.0	0.0	return 0;	DUMMY
16863	DUMMY	0.0	0.0	}	DUMMY
16864	DUMMY	0.0	0.0	int main() {	DUMMY
16865	create integer n	N/A	N/A	int n ;	int n ;
16866	create vector of integers T with 1001 element filled with 1	N/A	N/A	vector < int > T ( 1001 , 1 ) ;	vector < int > T ( 1001, 1 ) ;
16867	create vector of chararcters rla	N/A	N/A	vector < char > rla ;	vector < char > rla ;
16868	read n	N/A	N/A	cin >> n ;	cin >> n ;
16869	for i = 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
16870	create character c	N/A	N/A	char c ;	char c ;
16871	read c	N/A	N/A	cin >> c ;	cin >> c ;
16872	push c to rla	N/A	N/A	rla . push_back ( c ) ;	rla. push_back ( c ) ;
16873	DUMMY	0.0	0.0	}	DUMMY
16874	for integer i = 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
16875	if rla [ i ] is ' R '	N/A	N/A	if ( rla [ i ] == ' R ' )	if ( rla [ i ] =='R')
16876	T [ i + 1 ] = max ( T [ i + 1 ] , T [ i ] + 1 )	N/A	N/A	T [ i + 1 ] = max ( T [ i + 1 ] , T [ i ] + 1 ) ;	T [ i + 1 ] = max ( T [ 1 ], T [ i ] + 1 ) ;
16877	else if rla [ i ] is ' = '	N/A	N/A	else if ( rla [ i ] == ' = ' )	else if ( rla [ i ] =='=')
16878	T [ i + 1 ] = T [ i ]	N/A	N/A	T [ i + 1 ] = T [ i ] ;	T [ i + 1 ] = T [ i ] ;
16879	DUMMY	0.0	0.0	}	DUMMY
16880	DUMMY	0.0	0.0	}	DUMMY
16881	for i = n - 2 to 0	N/A	N/A	for ( int i = n - 2 ; i >= 0 ; i -- )	for ( int i = n - 2 ; i >= 0 ; i -- )
16882	if rla [ i ] is ' L '	N/A	N/A	if ( rla [ i ] == ' L ' )	if ( rla [ i ] =='L')
16883	assign value of max of T [ i ] and T [ i + 1 ] + 1 to T [ i ]	N/A	N/A	T [ i ] = max ( T [ i ] , T [ i + 1 ] + 1 ) ;	T [ i ] = max ( T [ 1 ], T [ i + 1 ] + 1 ) ;
16884	else if rla [ i ] is ' = '	N/A	N/A	else if ( rla [ i ] == ' = ' )	else if ( rla [ i ] =='=')
16885	set T [ i ] to T [ i + 1 ]	N/A	N/A	T [ i ] = T [ i + 1 ] ;	T [ i ] = T [ i + 1 ] ;
16886	DUMMY	0.0	0.0	}	DUMMY
16887	DUMMY	0.0	0.0	}	DUMMY
16888	for i = 0 to n exclusive print T [ i ] , " \ n " and [ i = = n - 1 ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cout << T [ i ] << " \n " [ i == n - 1 ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cout << T [ i ] << " \n " && [ i == n - 1 ] ; }
16889	print flush	N/A	N/A	cout << flush ;	cout << flush << endl ;
16890	DUMMY	0.0	0.0	return 0;	DUMMY
16891	DUMMY	0.0	0.0	}	DUMMY
16892	vector_in is a int vector function with int argument n	N/A	N/A	vector < int > vector_in ( int n )	vector < int > vector_in ( int n )
16893	create vector of integers v with n elements	N/A	N/A	vector < int > v ( n ) ;	vector < int > v ( n ) ;
16894	loop i from 0 to n exclusive , reading v [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> v [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> v [ i ] ;
16895	return v	N/A	N/A	return v ;	return v ;
16896	DUMMY	0.0	0.0	}	DUMMY
16897	function vector_out with vector of ints argument v	N/A	N/A	void vector_out ( vector < int > v )	void vector_out ( vector < int > v )
16898	for i from 0 to length of v exclusive , print v [ i ] and " "	N/A	N/A	for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << " " ;	for ( int i = 0 ; i < v. size ( ) ; i ++ ) { cout << v [ i ] << " " ; }
16899	print new line	N/A	N/A	cout << endl ;	cout << endl ;
16900	DUMMY	0.0	0.0	}	DUMMY
16901	function vector_sum with vector of ints argument v that returns integer	N/A	N/A	int vector_sum ( vector < int > v )	int vector_sum ( vector < int > v )
16902	create integer sum	N/A	N/A	int sum ;	int sum ;
16903	for i = 0 to length of v exclusive , increase sum by v [ i ]	N/A	N/A	for ( int i = 0 ; i < v . size ( ) ; i ++ ) sum += v [ i ] ;	for ( int i = 0 ; i < v. size ( ) ; i ++ ) sum += v [ i ] ;
16904	return sum	N/A	N/A	return sum ;	return sum ;
16905	DUMMY	0.0	0.0	}	DUMMY
16906	DUMMY	0.0	0.0	int main() {	DUMMY
16907	declare int n	N/A	N/A	int n ;	int n ;
16908	create vector of integers T with 1001 element filled with 1	N/A	N/A	vector < int > T ( 1001 , 1 ) ;	vector < int > T ( 1001, 1 ) ;
16909	create characters vector rla	N/A	N/A	vector < char > rla ;	vector < char > rla ;
16910	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
16911	loop i from 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
16912	declare character variable c	N/A	N/A	char c ;	char c ;
16913	read c	N/A	N/A	cin >> c ;	cin >> c ;
16914	push c into rla	N/A	N/A	rla . push_back ( c ) ;	rla. push_back ( c ) ;
16915	DUMMY	0.0	0.0	}	DUMMY
16916	for i from 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
16917	if rla [ i ] = ' R '	N/A	N/A	if ( rla [ i ] == ' R ' )	if ( rla [ i ] =='R')
16918	set T [ i + 1 ] to max of T [ i + 1 ] and T [ i ] + 1	N/A	N/A	T [ i + 1 ] = max ( T [ i + 1 ] , T [ i ] + 1 ) ;	T [ i + 1 ] = max ( T [ 1 ], T [ i ] + 1 ) ;
16919	else if rla [ i ] is ' = '	N/A	N/A	else if ( rla [ i ] == ' = ' )	else if ( rla [ i ] =='=')
16920	change T [ i + 1 ] to T [ i ]	N/A	N/A	T [ i + 1 ] = T [ i ] ;	T [ i + 1 ] = T [ i ] ;
16921	DUMMY	0.0	0.0	}	DUMMY
16922	DUMMY	0.0	0.0	}	DUMMY
16923	for integer i = n - 2 to 0 inclusive counting down	N/A	N/A	for ( int i = n - 2 ; i >= 0 ; i -- )	for ( int i = n - 2 ; i >= 0 ; i -- )
16924	if rla [ i ] is equal to ' L '	N/A	N/A	if ( rla [ i ] == ' L ' )	if ( rla [ i ] =='L')
16925	assign max of T [ i ] and T [ i + 1 ] + 1 to T [ i ]	N/A	N/A	T [ i ] = max ( T [ i ] , T [ i + 1 ] + 1 ) ;	T [ i ] = max ( T [ j ], T [ i + 1 ] + 1 ) ;
16926	else if rla [ i ] is ' = '	N/A	N/A	else if ( rla [ i ] == ' = ' )	else if ( rla [ i ] =='=')
16927	set T [ i ] to T [ i + 1 ]	N/A	N/A	T [ i ] = T [ i + 1 ] ;	T [ i ] = T [ i + 1 ] ;
16928	DUMMY	0.0	0.0	}	DUMMY
16929	DUMMY	0.0	0.0	}	DUMMY
16930	for i from 0 to n exclusive , print T [ i ] and " \ n " [ i = n - 1 ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cout << T [ i ] << " \n " [ i == n - 1 ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cout << T [ i ] << " \n " [ i == n - 1 ] ; }
16931	print flush	N/A	N/A	cout << flush ;	cout << flush << endl ;
16932	DUMMY	0.0	0.0	return 0;	DUMMY
16933	DUMMY	0.0	0.0	}	DUMMY
16934	n = long long integers	N/A	N/A	long long int n ;	long long int n ;
16935	integers = answer array with size of 2000	N/A	N/A	int answer [ 2000 ] ;	int answer [ 2000 ] ;
16936	DUMMY	0.0	0.0	int main() {	DUMMY
16937	read n	N/A	N/A	cin >> n ;	cin >> n ;
16938	set integer small to 1	N/A	N/A	int small = 1 ;	int small = 1 ;
16939	create character variable s	N/A	N/A	char s [ n ] ;	char s ;
16940	read n values into array s	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ ) cin >> s [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> s [ i ] ; }
16941	make n values of array answer = 1	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) answer [ i ] = 1 ;	for ( int i = 0 ; i < n ; i ++ ) { answer [ i ] = 1 ; }
16942	for i = n - 2 to greater than or equal to 0 then do	N/A	N/A	for ( int i = n - 2 ; i >= 0 ; i -- )	for ( int i = n - 2 ; i >= 0 ; i -- )
16943	if s [ i ] is L then do the following	N/A	N/A	if ( s [ i ] == ' L ' )	if ( s [ i ] =='L')
16944	set answer [ i ] to answer [ i + 1 ] + 1	N/A	N/A	answer [ i ] = answer [ i + 1 ] + 1 ;	answer [ i ] = answer [ i + 1 ] + 1 ;
16945	else if s [ i ] is = then do the following	N/A	N/A	else if ( s [ i ] == ' = ' )	else if ( s [ i ] =='L')
16946	set answer [ i ] to answer [ i + 1 ]	N/A	N/A	answer [ i ] = answer [ i + 1 ] ;	answer [ i ] = answer [ i + 1 ] ;
16947	DUMMY	0.0	0.0	}	DUMMY
16948	for i = 0 to less than n - 1 do the following	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
16949	if s [ i ] = R and answer [ i ] is greater than or equal to answer [ i + 1 ] then do the following	N/A	N/A	if ( s [ i ] == ' R ' && answer [ i ] >= answer [ i + 1 ] )	if ( ( s [ i ] =='R') && ( answer [ 1 ] >= answer [ i + 1 ] ) )
16950	set answer [ i + 1 ] to answer [ i ] + 1	N/A	N/A	answer [ i + 1 ] = answer [ i ] + 1 ;	answer [ i + 1 ] += 1 ;
16951	else if s [ i ] is = then do the following	N/A	N/A	else if ( s [ i ] == ' = ' )	else if ( s [ i ] =='R')
16952	set answer [ i + 1 ] to answer [ i ]	N/A	N/A	answer [ i + 1 ] = answer [ i ] ;	answer [ i + 1 ] = answer [ i ] ;
16953	DUMMY	0.0	0.0	}	DUMMY
16954	output n values from array answer	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cout << answer [ i ] << " \n " [ i == n - 1 ] ;	for ( int i = 0 ; i < n ; i ++ ) { cout << answer [ i ] << endl ; }
16955	DUMMY	0.0	0.0	}	DUMMY
16956	mod = const long long with mod = 1000000007	N/A	N/A	long long const mod = 1000000007 ;	const long long mod = 1000000007 ;
16957	in function powmod taking two long longs a and b and returning a long long	N/A	N/A	long long powmod ( long long a , long long b )	long long powmod ( long long a, long long b )
16958	res = long long with res = 1	N/A	N/A	long long res = 1 ;	long long res = 1 ;
16959	set a to a mod mod	N/A	N/A	a %= mod ;	a %= mod ;
16960	call assert on b is greater or equal to 0	N/A	N/A	assert ( b >= 0 ) ;	assert ( b ) ;
16961	loop while b is not 0 setting b to b bitwise rightshift 1 each time	N/A	N/A	for ( ; b ; b >>= 1 )	for ( ; b ; b >>= 1 )
16962	if b bitwise and 1 is 1 then set re to res * a modulo mod	N/A	N/A	if ( b & 1 ) res = res * a % mod ;	if ( b & 1 ) re = res * a % mod ;
16963	set a to a * a modulo mod	N/A	N/A	a = a * a % mod ;	a = a * a % mod ;
16964	DUMMY	0.0	0.0	}	DUMMY
16965	return res	N/A	N/A	return res ;	return res ;
16966	DUMMY	0.0	0.0	}	DUMMY
16967	in = ifstream of " txt . in "	N/A	N/A	ifstream in ( " txt.in " ) ;	ifstream in ( " txt.in " ) ;
16968	out = ofstream of " txt . out "	N/A	N/A	ofstream out ( " txt.out " ) ;	ofstream out ( " txt.out " ) ;
16969	DUMMY	0.0	0.0	int main() {	DUMMY
16970	call fixed and setprecision of 12 on cout	N/A	N/A	cout << fixed << setprecision ( 12 ) ;	cout << fixed << setprecision ( 12 ) ;
16971	a , b = long long	N/A	N/A	long long a , b ;	long long a, b ;
16972	read a then b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
16973	n = long long	N/A	N/A	long long n ;	long long n ;
16974	read n	N/A	N/A	cin >> n ;	cin >> n ;
16975	mx = double with mx = 2e9	N/A	N/A	double mx = 2e9 ;	double mx = 2e9 ;
16976	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; ++ i )	for ( long long i = 1 ; i <= n ; i ++ )
16977	x , y , k = long long	N/A	N/A	long long x , y , k ;	long long x, y, k ;
16978	read x then y then k	N/A	N/A	cin >> x >> y >> k ;	cin >> x >> y >> k ;
16979	dis = double with dis = result of sqrt of ( x - a ) * ( x - a ) + ( y - b ) * ( y - b ) / k	N/A	N/A	double dis = sqrt ( ( x - a ) * ( x - a ) + ( y - b ) * ( y - b ) ) / k ;	double dis = sqrt ( x -'a') * ( x 'a') + ( y -'b'* ( y 'b') / k ;
16980	mx = min of mx and dis	N/A	N/A	mx = min ( mx , dis ) ;	mx = min ( mx, dis ) ;
16981	DUMMY	0.0	0.0	}	DUMMY
16982	print mx	N/A	N/A	cout << mx << ' \n ' ;	cout << mx << endl ;
16983	DUMMY	0.0	0.0	return 0;	DUMMY
16984	DUMMY	0.0	0.0	}	DUMMY
16985	DUMMY	0.0	0.0	int main() {	DUMMY
16986	create integers n and i and an arrays of integers a and b with size 100000	N/A	N/A	int n , i , a [ 100000 ] , b [ 100000 ] ;	int n, i, a [ 100000 ], b [ 1000000 ] ;
16987	read n	N/A	N/A	cin >> n ;	cin >> n ;
16988	read n elements into a	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }	for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
16989	for i = 0 to n - 1 exclusive , set value of b [ i ] to a [ i ] + a [ i + 1 ]	N/A	N/A	for ( i = 0 ; i < n - 1 ; i ++ ) { b [ i ] = a [ i ] + a [ i + 1 ] ; }	for ( i = 0 ; i < n - 1 ; i ++ ) { b [ i ] = a [ 1 ] + a [ i + 1 ] ; }
16990	set value of b [ n - 1 ] to a [ n - 1 ]	N/A	N/A	b [ n - 1 ] = a [ n - 1 ] ;	b [ n - 1 ] = a [ n -- 1 ] ;
16991	for i = 0 to n - 1 exclusive print b [ i ] and " "	N/A	N/A	for ( i = 0 ; i < n - 1 ; i ++ ) { cout << b [ i ] << " " ; }	for ( i = 0 ; i < n - 1 ; i ++ ) { cout << b [ i ] << " " ; }
16992	print b [ n - 1 ]	N/A	N/A	cout << b [ n - 1 ] << endl ;	cout << b [ n - 1 ] << endl ;
16993	DUMMY	0.0	0.0	return 0;	DUMMY
16994	DUMMY	0.0	0.0	}	DUMMY
16995	declare integers n , z and a	N/A	N/A	int n , z , a ;	int n, z, a ;
16996	DUMMY	0.0	0.0	int main() {	DUMMY
16997	read n	N/A	N/A	cin >> n ;	cin >> n ;
16998	for integer i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
16999	read a	N/A	N/A	cin >> a ;	cin >> a ;
17000	if i ! = 1 , print a + z and " "	N/A	N/A	if ( i != 1 ) { cout << a + z << " " ; }	if ( i!= 1 ) cout << a + z << " " ;
17001	set z to a	N/A	N/A	z = a ;	z = a ;
17002	DUMMY	0.0	0.0	}	DUMMY
17003	print a	N/A	N/A	cout << a << endl ;	cout << a ;
17004	DUMMY	0.0	0.0	return 0;	DUMMY
17005	DUMMY	0.0	0.0	}	DUMMY
17006	DUMMY	0.0	0.0	int main() {	DUMMY
17007	declare integer variable n	N/A	N/A	int n ;	int n ;
17008	read n	N/A	N/A	cin >> n ;	cin >> n ;
17009	create long long array a with 100050 elements	N/A	N/A	long long a [ 100050 ] ;	long long a [ 100050 ] ;
17010	for integer i = 0 to n exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }
17011	for integer i = 1 to n exclusive , print a [ i ] + a [ i - 1 ] and " "	N/A	N/A	for ( int i = 1 ; i < n ; i ++ ) cout << a [ i ] + a [ i - 1 ] << " " ;	for ( int i = 1 ; i < n ; i ++ ) { cout << a [ i ] + a [ 1 ] << " " ; }
17012	print a [ n - 1 ]	N/A	N/A	cout << a [ n - 1 ] << endl ;	cout << a [ n - 1 ] << endl ;
17013	DUMMY	0.0	0.0	return 0;	DUMMY
17014	DUMMY	0.0	0.0	}	DUMMY
17015	DUMMY	0.0	0.0	int main() {	DUMMY
17016	create long long integers n , i	N/A	N/A	long long int n , i ;	long long int n, i ;
17017	read n	N/A	N/A	cin >> n ;	cin >> n ;
17018	create long long integer array arr of size n	N/A	N/A	long long int arr [ n ] ;	long long int arr [ n ] ;
17019	for i = 0 to n exclusive , read arr [ i ]	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }	for ( i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }
17020	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
17021	if i is n - 1	N/A	N/A	if ( i == n - 1 )	if ( i == n - 1 )
17022	print arr [ n - 1 ] print newline	N/A	N/A	cout << arr [ n - 1 ] << endl ;	cout << arr [ n - 1 ] << endl ;
17023	else	N/A	N/A	else	else
17024	print arr [ i ] + arr [ i + 1 ] print " "	N/A	N/A	cout << arr [ i ] + arr [ i + 1 ] << " " ;	cout << arr [ i ] + arr [ 1 ] << " " ;
17025	DUMMY	0.0	0.0	}	DUMMY
17026	DUMMY	0.0	0.0	}	DUMMY
17027	DUMMY	0.0	0.0	}	DUMMY
17028	a = int array of size 100005	N/A	N/A	int a [ 100005 ] ;	int a [ 100005 ] ;
17029	DUMMY	0.0	0.0	int main() {	DUMMY
17030	n = int	N/A	N/A	int n ;	int n ;
17031	while reading n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
17032	for i = i to n inclusive rad a [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }
17033	for i = 1 to n print a [ i ] + a [ i + 1 ]	N/A	N/A	for ( int i = 1 ; i < n ; i ++ ) { cout << a [ i ] + a [ i + 1 ] << ' ' ; }	for ( int i = 1 ; i <= n ; i ++ ) { cout << a [ i ] + a [ 1 ] << endl ; }
17034	print a [ n ]	N/A	N/A	cout << a [ n ] << endl ;	cout << a [ n ] << endl ;
17035	DUMMY	0.0	0.0	}	DUMMY
17036	DUMMY	0.0	0.0	}	DUMMY
17037	DUMMY	0.0	0.0	int main() {	DUMMY
17038	n = integer	N/A	N/A	int n ;	int n ;
17039	x , k = integers with k = 0	N/A	N/A	int k = 0 , x ;	int x, k = 0 ;
17040	Read n	N/A	N/A	cin >> n ;	cin >> n ;
17041	for i = 0 to n exclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
17042	Read x	N/A	N/A	cin >> x ;	cin >> x ;
17043	if i is not equal to 1 , then print NO and a new line	N/A	N/A	if ( i != 1 ) cout << x + k << " " ;	if ( i!= 1 ) cout << " NO " << endl ;
17044	set k to x	N/A	N/A	k = x ;	k = x ;
17045	DUMMY	0.0	0.0	}	DUMMY
17046	print x and a new line	N/A	N/A	cout << x << endl ;	cout << x << endl ;
17047	DUMMY	0.0	0.0	return 0;	DUMMY
17048	DUMMY	0.0	0.0	}	DUMMY
17049	x , y = long long arrays of size 100005 each	N/A	N/A	long long x [ 100005 ] , y [ 100005 ] ;	long long x [ 100005 ], y [ 100000 ] ;
17050	DUMMY	0.0	0.0	int main() {	DUMMY
17051	a , b = long long	N/A	N/A	long long a , b ;	long long a, b ;
17052	read a	N/A	N/A	cin >> a ;	cin >> a ;
17053	set x to all 0	N/A	N/A	memset ( x , 0 , sizeof ( x ) ) ;	memset ( x, 0, sizeof ( x ) ) ;
17054	set y to all 0	N/A	N/A	memset ( y , 0 , sizeof ( y ) ) ;	memset ( y, 0, sizeof ( y ) ) ;
17055	for b = 0 to a read x [ b ]	N/A	N/A	for ( b = 0 ; b < a ; b ++ ) cin >> x [ b ] ;	for ( b = 0 ; b < a ; b ++ ) { cin >> x [ b ] ; }
17056	for b = 0 to a set y [ b ] to x [ b ] + x [ b + 1 ]	N/A	N/A	for ( b = 0 ; b < a ; b ++ ) y [ b ] = x [ b ] + x [ b + 1 ] ;	for ( b = 0 ; b < a ; b ++ ) { y [ b ] += x [ b + 1 ] ; }
17057	for b = 0 to a - 1 print y [ b ] and ' '	N/A	N/A	for ( b = 0 ; b < a - 1 ; b ++ ) cout << y [ b ] << ' ' ;	for ( int b = 0 ; b < a - 1 ; b ++ ) { cout << y [ b ] <<' '; }
17058	print y [ a - 1 ]	N/A	N/A	cout << y [ a - 1 ] << endl ;	cout << y [ a - 1 ] << endl ;
17059	DUMMY	0.0	0.0	return 0;	DUMMY
17060	DUMMY	0.0	0.0	}	DUMMY
17061	DUMMY	0.0	0.0	int main() {	DUMMY
17062	n = integer	N/A	N/A	int n ;	int n ;
17063	read n	N/A	N/A	cin >> n ;	cin >> n ;
17064	arr = integer array of size n	N/A	N/A	int arr [ n ] ;	int arr [ n ] ;
17065	for i = 0 to n exclusive read arr [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }
17066	for i = 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
17067	increase arr [ i ] by arr [ i + 1 ]	N/A	N/A	arr [ i ] += arr [ i + 1 ] ;	arr [ i ] += arr [ i + 1 ] ;
17068	print arr [ i ] followed by a space	N/A	N/A	cout << arr [ i ] << " " ;	cout << arr [ i ] << " " ;
17069	DUMMY	0.0	0.0	}	DUMMY
17070	print arr [ n - 1 ]	N/A	N/A	cout << arr [ n - 1 ] << " \n " ;	cout << arr [ n - 1 ] << endl ;
17071	DUMMY	0.0	0.0	}	DUMMY
17072	DUMMY	0.0	0.0	int main() {	DUMMY
17073	create integer n , create integer array arr with size 100010	N/A	N/A	int n , arr [ 100010 ] ;	int n, arr [ 100010 ] ;
17074	read n	N/A	N/A	cin >> n ;	cin >> n ;
17075	for i = 0 to n exclusive , read arr [ i1 ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i1 ] ; }
17076	for i = 1 to n exclusive , print arr [ i ] + arr [ i - 1 ] print " "	N/A	N/A	for ( int i = 1 ; i < n ; i ++ ) { cout << arr [ i ] + arr [ i - 1 ] << " " ; }	for ( int i = 1 ; i < n ; i ++ ) { cout << arr [ i ] + arr [ 1 ] << " " ; }
17077	print arr [ n - 1 ] print newline	N/A	N/A	cout << arr [ n - 1 ] << endl ;	cout << arr [ n - 1 ] << endl ;
17078	DUMMY	0.0	0.0	return 0;	DUMMY
17079	DUMMY	0.0	0.0	}	DUMMY
17080	DUMMY	0.0	0.0	int main() {	DUMMY
17081	create integer n create integer array ara with size 100000	N/A	N/A	int n , ara [ 100000 ] ;	int n, ara [ 100000 ] ;
17082	read n	N/A	N/A	cin >> n ;	cin >> n ;
17083	for i = 0 to n exclusive , read ara [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> ara [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> ara [ i ] ; }
17084	for i = 0 to n - 1 exclusive , print ara [ i ] + ara [ i + 1 ] print ' '	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ ) { cout << ara [ i ] + ara [ i + 1 ] << ' ' ; }	for ( int i = 0 ; i < n - 1 ; i ++ ) { cout << ( ara [ i ] + ( arr [ i + 1 ] ) ) <<' '; }
17085	print ara [ n - 1 ] print newline	N/A	N/A	cout << ara [ n - 1 ] << endl ;	cout << ara [ n - 1 ] << endl ;
17086	DUMMY	0.0	0.0	}	DUMMY
17087	DUMMY	0.0	0.0	int main() {	DUMMY
17088	create integers n , k1 , k2 , i	N/A	N/A	int n , k1 , k2 , i ;	int n, k1, k2, i ;
17089	read n	N/A	N/A	cin >> n ;	cin >> n ;
17090	read k1	N/A	N/A	cin >> k1 ;	cin >> k1 ;
17091	for i = 1 to n exclusive	N/A	N/A	for ( i = 1 ; i < n ; i ++ )	for ( i = 1 ; i < n ; i ++ )
17092	read k2	N/A	N/A	cin >> k2 ;	cin >> k2 ;
17093	print k2 + k1 print " "	N/A	N/A	cout << k2 + k1 << " " ;	cout << k2 + k1 << " " ;
17094	set k1 to k2	N/A	N/A	k1 = k2 ;	k1 = k2 ;
17095	DUMMY	0.0	0.0	}	DUMMY
17096	print k1 print newline	N/A	N/A	cout << k1 << endl ;	cout << k1 << endl ;
17097	DUMMY	0.0	0.0	return 0;	DUMMY
17098	DUMMY	0.0	0.0	}	DUMMY
17099	DUMMY	0.0	0.0	int main() {	DUMMY
17100	create int n , r , s i , j and arrays a and b of length 100001	N/A	N/A	int n , a [ 100001 ] , r , s , b [ 100001 ] , i , j = 0 ;	int n, r, a [ 100001 ], b [ 1000001 ], s i, j ;
17101	read n	N/A	N/A	cin >> n ;	cin >> n ;
17102	for i = 1 to n inclusive , read a [ i ]	N/A	N/A	for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;	for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
17103	increment j	N/A	N/A	j ++ ;	j ++ ;
17104	b [ j ] = a [ n ]	N/A	N/A	b [ j ] = a [ n ] ;	b [ j ] = a [ n ] ;
17105	for i = n to 1 exclusive	N/A	N/A	for ( i = n ; i > 1 ; i -- )	for ( i = n ; i > 1 ; i -- )
17106	set r = a [ i ] + a [ i - 1 ]	N/A	N/A	r = a [ i ] + a [ i - 1 ] ;	r = a [ i ] + a [ j - 1 ] ;
17107	add 1 to j	N/A	N/A	j ++ ;	j ++ ;
17108	assign r to b [ j ]	N/A	N/A	b [ j ] = r ;	b [ j ] = r ;
17109	DUMMY	0.0	0.0	}	DUMMY
17110	for i = j to 0 exclusive	N/A	N/A	for ( i = j ; i > 0 ; i -- )	for ( int i = j ; i > 0 ; i -- )
17111	print b [ i ]	N/A	N/A	cout << b [ i ] ;	cout << b [ i ] << endl ;
17112	if i different fro 1 , print " "	N/A	N/A	if ( i != 1 ) cout << " " ;	if ( i!= 1 ) cout << " " ;
17113	DUMMY	0.0	0.0	}	DUMMY
17114	print a newline	N/A	N/A	cout << endl ;	<< " \n " ;
17115	DUMMY	0.0	0.0	return 0;	DUMMY
17116	DUMMY	0.0	0.0	}	DUMMY
17117	DUMMY	0.0	0.0	int main() {	DUMMY
17118	n = integer	N/A	N/A	int n ;	int n ;
17119	x , k = integers with k = 0	N/A	N/A	int k = 0 , x ;	int x, k = 0 ;
17120	Read n	N/A	N/A	cin >> n ;	cin >> n ;
17121	for i = 1 to n exclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
17122	Read x	N/A	N/A	cin >> x ;	cin >> x ;
17123	if i is not 1 , then print x + k and a new line	N/A	N/A	if ( i != 1 ) cout << x + k << " " ;	if ( i!= 1 ) { cout << x + k << endl ; }
17124	set k to x	N/A	N/A	k = x ;	k = x ;
17125	DUMMY	0.0	0.0	}	DUMMY
17126	print x and a new line	N/A	N/A	cout << x << endl ;	cout << x << endl ;
17127	DUMMY	0.0	0.0	return 0;	DUMMY
17128	DUMMY	0.0	0.0	}	DUMMY
17129	DUMMY	0.0	0.0	int main() {	DUMMY
17130	create int number , i , temp , flag , index and result , set index , result to 0	N/A	N/A	int number , i , temp , flag , index = 0 , result = 0 ;	int number, i, temp, flag, index = 0, result = 0 ;
17131	create string str	N/A	N/A	string str ;	string str ;
17132	read number	N/A	N/A	cin >> number ;	cin >> number ;
17133	read str	N/A	N/A	cin >> str ;	cin >> str ;
17134	set arr [ number ] to 0	N/A	N/A	int arr [ number ] = { 0 } ;	arr [ number ] = 0 ;
17135	for i = 0 to number exclusive	N/A	N/A	for ( i = 0 ; i < number ; i ++ )	for ( i = 0 ; i < number ; i ++ )
17136	assign 0 to flag	N/A	N/A	flag = 0 ;	int flag = 0 ;
17137	set temp to 0	N/A	N/A	temp = 0 ;	temp = 0 ;
17138	while str [ i ] = B	N/A	N/A	while ( str [ i ] == ' B ' )	while ( str [ i ] =='B')
17139	increment i	N/A	N/A	i ++ ;	i ++ ;
17140	assign 1 to flag	N/A	N/A	flag = 1 ;	flag = 1 ;
17141	increment temp	N/A	N/A	temp ++ ;	temp ++ ;
17142	DUMMY	0.0	0.0	}	DUMMY
17143	if flag = 1	N/A	N/A	if ( flag == 1 )	if ( flag == 1 )
17144	decrement i	N/A	N/A	i -- ;	i -- ;
17145	add 1 to result	N/A	N/A	result ++ ;	result ++ ;
17146	assign temp to arr [ index ]	N/A	N/A	arr [ index ] = temp ;	arr [ index ] = temp ;
17147	increment index	N/A	N/A	index ++ ;	index ++ ;
17148	DUMMY	0.0	0.0	}	DUMMY
17149	DUMMY	0.0	0.0	}	DUMMY
17150	print result	N/A	N/A	cout << result << endl ;	cout << result << endl ;
17151	for i = 0 to result exclusive	N/A	N/A	for ( i = 0 ; i < result ; i ++ )	for ( int i = 0 ; i < result ; i ++ )
17152	if i = result - 1	N/A	N/A	if ( i == result - 1 )	if ( i == result - 1 )
17153	print arr [ i ]	N/A	N/A	cout << arr [ i ] << endl ;	cout << arr [ i ] ;
17154	break	N/A	N/A	break ;	break ;
17155	DUMMY	0.0	0.0	}	DUMMY
17156	print arr [ i ] , " "	N/A	N/A	cout << arr [ i ] << " " ;	cout << arr [ i ] << " " ;
17157	DUMMY	0.0	0.0	}	DUMMY
17158	DUMMY	0.0	0.0	return 0;	DUMMY
17159	DUMMY	0.0	0.0	}	DUMMY
17160	DUMMY	0.0	0.0	int main() {	DUMMY
17161	create int n	N/A	N/A	int n ;	int n ;
17162	create string s	N/A	N/A	string s ;	string s ;
17163	read n and s	N/A	N/A	cin >> n >> s ;	cin >> n >> s ;
17164	declare integer variable cnt = - 1 and an array of integers ans with 100 elements filled with 0	N/A	N/A	int cnt = - 1 , ans [ 100 ] = { 0 } ;	int ans [ 100 ] = { 0 }, cnt = - 1 ;
17165	create character p = ' W '	N/A	N/A	char p = ' W ' ;	char p ='W';
17166	loop i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; ++ i )	for ( int i = 0 ; i < n ; i ++ )
17167	declare character variable c = s [ i ]	N/A	N/A	char c = s [ i ] ;	char c = s [ i ] ;
17168	if c = ' B '	N/A	N/A	if ( c == ' B ' )	if ( c =='B')
17169	if p = ' W '	N/A	N/A	if ( p == ' W ' ) { ++ cnt ; }	if ( p =='W')
17170	increase ans [ cnt ]	N/A	N/A	++ ans [ cnt ] ;	ans [ cnt ] ++ ;
17171	DUMMY	0.0	0.0	}	DUMMY
17172	set p to c	N/A	N/A	p = c ;	p = c ;
17173	DUMMY	0.0	0.0	}	DUMMY
17174	print cnt + 1	N/A	N/A	cout << cnt + 1 << endl ;	cout << cnt + 1 << endl ;
17175	if cnt + 1 is greater than 0	N/A	N/A	if ( cnt + 1 > 0 )	if ( cnt + 1 > 0 )
17176	declare boolean first = true	N/A	N/A	bool first = true ;	bool first = true ;
17177	loop i from 0 to cnt inclusive	N/A	N/A	for ( int i = 0 ; i <= cnt ; ++ i )	for ( int i = 0 ; i <= cnt ; i ++ )
17178	if first is true	N/A	N/A	if ( first )	if ( first )
17179	set first to false	N/A	N/A	first = false ;	first = false ;
17180	else	N/A	N/A	else	else
17181	print " "	N/A	N/A	cout << " " ;	cout << " " ;
17182	print ans [ i ]	N/A	N/A	cout << ans [ i ] ;	cout << ans [ i ] ;
17183	DUMMY	0.0	0.0	}	DUMMY
17184	print new line	N/A	N/A	cout << endl ;	cout << endl ;
17185	DUMMY	0.0	0.0	}	DUMMY
17186	DUMMY	0.0	0.0	return 0;	DUMMY
17187	DUMMY	0.0	0.0	}	DUMMY
17188	DUMMY	0.0	0.0	int main() {	DUMMY
17189	n = int	N/A	N/A	int n ;	int n ;
17190	a = char array of size 100005	N/A	N/A	char a [ 100005 ] ;	char a [ 100005 ] ;
17191	b = int array of size 100005	N/A	N/A	int b [ 100005 ] ;	int b [ 100005 ] ;
17192	loop while reading n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
17193	set all values of a to 0	N/A	N/A	memset ( a , 0 , sizeof ( a ) ) ;	memset ( a, 0, sizeof ( a ) ) ;
17194	set all values of b to 0	N/A	N/A	memset ( b , 0 , sizeof ( b ) ) ;	memset ( b, 0, sizeof ( b ) ) ;
17195	read a	N/A	N/A	cin >> a ;	cin >> a ;
17196	j , count = int with j = 1 and count = 0	N/A	N/A	int j = 1 , count = 0 ;	int j = 1, count = 0 ;
17197	for i = 0 to n	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
17198	if a [ i ] is ' B '	N/A	N/A	if ( a [ i ] == ' B ' )	if ( a [ i ] =='B')
17199	increment b [ j ]	N/A	N/A	b [ j ] ++ ;	b [ j ] ++ ;
17200	else if a [ i ] is ' W ' and a [ i + 1 ] is ' B '	N/A	N/A	else if ( a [ i ] == ' W ' && a [ i + 1 ] == ' B ' )	else if ( ( a [ i ] =='W') && ( ( i + 1 ) =='B') )
17201	increment j	N/A	N/A	j ++ ;	j ++ ;
17202	DUMMY	0.0	0.0	}	DUMMY
17203	for i = 1 to j inclusive	N/A	N/A	for ( int i = 1 ; i <= j ; i ++ )	for ( int i = 1 ; i <= j ; i ++ )
17204	if b [ i ] is not 0 then increment count	N/A	N/A	if ( b [ i ] != 0 ) count ++ ;	if ( b [ i ] ) count ++ ;
17205	print count	N/A	N/A	cout << count << endl ;	cout << count << endl ;
17206	if count is not 0	N/A	N/A	if ( count != 0 )	if ( count!= 0 )
17207	for i = 1 to j	N/A	N/A	for ( int i = 1 ; i < j ; i ++ )	for ( int i = 1 ; i <= j ; i ++ )
17208	if b [ i ] is not 0 print b [ i ] and " "	N/A	N/A	if ( b [ i ] != 0 ) cout << b [ i ] << " " ;	if ( b [ i ]!= 0 ) { cout << b [ 1 ] << " " ; }
17209	print b [ j ]	N/A	N/A	cout << b [ j ] << endl ;	cout << b [ j ] << endl ;
17210	DUMMY	0.0	0.0	}	DUMMY
17211	DUMMY	0.0	0.0	}	DUMMY
17212	DUMMY	0.0	0.0	return 0;	DUMMY
17213	DUMMY	0.0	0.0	}	DUMMY
17214	let a , b be long integers	N/A	N/A	long long a , b ;	long long a, b ;
17215	ans = array of long integers of length 100	N/A	N/A	long long ans [ 100 ] ;	long long ans [ 100 ] ;
17216	let flag be a integer with flag = 0	N/A	N/A	int flag = 0 ;	int flag = 0 ;
17217	let k be a integer	N/A	N/A	int k ;	int k ;
17218	let void dfs ( long long a , int i ) be a dfs function	N/A	N/A	void dfs ( long long a , int i )	void dfs ( long long a, int i )
17219	if flag or a greater than b , return the value	N/A	N/A	if ( flag || a > b ) { return ; }	if ( flag || a > b ) return ;
17220	the value of ans [ i ] = a	N/A	N/A	ans [ i ] = a ;	ans [ i ] = a ;
17221	if a is equal to b	N/A	N/A	if ( a == b )	if ( a == b )
17222	flag is equal to 1	N/A	N/A	flag = 1 ;	flag = 1 ;
17223	k value is assigned to i	N/A	N/A	k = i ;	i = k ;
17224	return	N/A	N/A	return ;	return ;
17225	DUMMY	0.0	0.0	}	DUMMY
17226	depth first search of a * 2 , i + 1	N/A	N/A	dfs ( a * 2 , i + 1 ) ;	dfs ( a * 2, i + 1 ) ;
17227	depth first search of a * 10 + 1 , i + 1	N/A	N/A	dfs ( a * 10 + 1 , i + 1 ) ;	dfs ( a * 10 + 1, i + 1 ) ;
17228	DUMMY	0.0	0.0	}	DUMMY
17229	DUMMY	0.0	0.0	int main() {	DUMMY
17230	read a , b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17231	depth first search of a , 0	N/A	N/A	dfs ( a , 0 ) ;	dfs ( a, 0 ) ;
17232	if flag is equal to 0	N/A	N/A	if ( flag == 0 )	if ( flag == 0 )
17233	print NO and newline	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
17234	else do the following	N/A	N/A	else	else
17235	print YES and newline	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
17236	print k + 1 and newline	N/A	N/A	cout << k + 1 << endl ;	cout << k + 1 << endl ;
17237	print ans [ 0 ]	N/A	N/A	cout << ans [ 0 ] ;	cout << ans [ 0 ] ;
17238	for i = 1 to k inclusive , print space and ans [ i ]	N/A	N/A	for ( int i = 1 ; i <= k ; i ++ ) { cout << ' ' << ans [ i ] ; }	for ( int i = 1 ; i <= k ; i ++ ) { cout << " " << ans [ i ] << endl ; }
17239	print newline	N/A	N/A	cout << endl ;	cout << endl ;
17240	DUMMY	0.0	0.0	}	DUMMY
17241	DUMMY	0.0	0.0	return 0;	DUMMY
17242	DUMMY	0.0	0.0	}	DUMMY
17243	let a , b integers	N/A	N/A	int a , b ;	int a, b ;
17244	DUMMY	0.0	0.0	int main() {	DUMMY
17245	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17246	let v be a vector of ints	N/A	N/A	vector < int > v ;	vector < int > v ;
17247	let ok be an int with value 1	N/A	N/A	int ok = 1 ;	int ok = 1 ;
17248	while b > a	N/A	N/A	while ( b > a )	while ( b > a )
17249	append b to v	N/A	N/A	v . push_back ( b ) ;	v. push_back ( b ) ;
17250	if b & 1 is 0	N/A	N/A	if ( ( b & 1 ) == 0 )	if ( b & 1 )
17251	set b to b / 2	N/A	N/A	b = b / 2 ;	b /= 2 ;
17252	else if b mod 10 is 1	N/A	N/A	else if ( b % 10 == 1 )	else if ( b % 10 == 1 )
17253	set b to b / 10	N/A	N/A	b = b / 10 ;	b /= 10 ;
17254	else	N/A	N/A	else	else
17255	set ok to 0	N/A	N/A	ok = 0 ;	ok = 0 ;
17256	break	N/A	N/A	break ;	break ;
17257	DUMMY	0.0	0.0	}	DUMMY
17258	DUMMY	0.0	0.0	}	DUMMY
17259	if b is different from a	N/A	N/A	if ( b != a )	if ( b!= a )
17260	set ok to 0	N/A	N/A	ok = 0 ;	ok = 0 ;
17261	else	N/A	N/A	else	else
17262	append a to v	N/A	N/A	v . push_back ( a ) ;	v. push_back ( a ) ;
17263	if not ok	N/A	N/A	if ( ! ok )	if (! ok )
17264	print NO	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
17265	else	N/A	N/A	else	else
17266	print YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
17267	print the size of v	N/A	N/A	cout << v . size ( ) << endl ;	cout << v. size ( ) << endl ;
17268	for i = size of v - 1 to 0 exclusive , print v [ i ]	N/A	N/A	for ( int i = v . size ( ) - 1 ; i > 0 ; i -- ) cout << v [ i ] << " " ;	for ( int i = v. size ( ) - 1 ; i > 0 ; i -- ) { cout << v [ i ] << endl ; }
17269	print v [ 0 ]	N/A	N/A	cout << v [ 0 ] << endl ;	cout << v [ 0 ] ;
17270	DUMMY	0.0	0.0	}	DUMMY
17271	DUMMY	0.0	0.0	return 0;	DUMMY
17272	DUMMY	0.0	0.0	}	DUMMY
17273	declare long long variables a , b and n	N/A	N/A	long long a , b , n ;	long long a, b, n ;
17274	declare long long array ans with size 1010	N/A	N/A	long long ans [ 1010 ] ;	long long ans [ 1010 ] ;
17275	declare boolean flag	N/A	N/A	bool flag ;	bool flag ;
17276	function dfs with long long arguments x , y and step	N/A	N/A	void dfs ( long long x , long long y , long long step )	void dfs ( long long x, long long y, long int step )
17277	change ans [ step ] to x	N/A	N/A	ans [ step ] = x ;	ans [ step ] = x ;
17278	if flag is true or x > y , return	N/A	N/A	if ( flag || x > y ) return ;	if ( flag == true || x > y ) return ;
17279	if x = y	N/A	N/A	if ( x == y )	if ( x == y )
17280	assign step to n	N/A	N/A	n = step ;	n = step ;
17281	set flag to true	N/A	N/A	flag = true ;	flag = true ;
17282	return	N/A	N/A	return ;	return ;
17283	DUMMY	0.0	0.0	}	DUMMY
17284	call dfs ( x * 2 , y , step + 1 )	N/A	N/A	dfs ( x * 2 , y , step + 1 ) ;	dfs ( x * 2, y, step + 1 ) ;
17285	if flag is false , call dfs ( x * 10 + 1 , y , step + 1 )	N/A	N/A	if ( ! flag ) dfs ( x * 10 + 1 , y , step + 1 ) ;	if (! flag ) dfs ( x * 10 + 1, y, step + 1 ) ;
17286	DUMMY	0.0	0.0	}	DUMMY
17287	DUMMY	0.0	0.0	int main() {	DUMMY
17288	loop , reading a and b from the input	N/A	N/A	while ( cin >> a >> b )	while ( cin >> a >> b )
17289	change flag to false	N/A	N/A	flag = false ;	flag = false ;
17290	call dfs ( a , b , 1 )	N/A	N/A	dfs ( a , b , 1 ) ;	dfs ( a, b, 1 ) ;
17291	if flag is true	N/A	N/A	if ( flag )	if ( flag )
17292	print " YES "	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
17293	print n	N/A	N/A	cout << n << endl ;	cout << n << endl ;
17294	loop i from 1 to n inclusive , print ans [ i ] and ' \ n ' if i = n , or ' '	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cout << ans [ i ] << ( i == n ? ' \n ' : ' ' ) ;	for ( int i = 1 ; i <= n ; i ++ ) cout << ans [ i ] << ( i == n?'\n':' ') ;
17295	else	N/A	N/A	else	else
17296	print " NO "	N/A	N/A	cout << " NO " << endl ;	cout << " NO\n " ;
17297	DUMMY	0.0	0.0	}	DUMMY
17298	DUMMY	0.0	0.0	}	DUMMY
17299	DUMMY	0.0	0.0	return 0;	DUMMY
17300	DUMMY	0.0	0.0	}	DUMMY
17301	create integer stack S	N/A	N/A	stack < int > S ;	stack < int > S ;
17302	declare funcion with long longs a , b as arguments , returning integer	N/A	N/A	int funcion ( long long a , long long b )	int funcion ( long long a, long long b )
17303	create integer	N/A	N/A	int r ;	int n ;
17304	if a is b , return 1 from function	N/A	N/A	if ( a == b ) return 1 ;	if ( a == b ) return 1 ;
17305	if a is less than b	N/A	N/A	if ( a < b )	if ( a < b )
17306	set r to result of run funcion with 2 * a , b as arguments	N/A	N/A	r = funcion ( 2 * a , b ) ;	r = funcion ( 2 * a, b ) ;
17307	if r is 1	N/A	N/A	if ( r == 1 )	if ( r == 1 )
17308	add element 1 to end of S	N/A	N/A	S . push ( 1 ) ;	S. push_back ( 1 ) ;
17309	return 1 from function	N/A	N/A	return 1 ;	return 1 ;
17310	DUMMY	0.0	0.0	}	DUMMY
17311	set r to result of run funcion with ( 10 * a ) + 1 , b as arguments	N/A	N/A	r = funcion ( ( 10 * a ) + 1 , b ) ;	r = funcion ( 10 * a ) + 1, b ;
17312	if r is 1	N/A	N/A	if ( r == 1 )	if ( r == 1 )
17313	add element 2 to end of S	N/A	N/A	S . push ( 2 ) ;	S. push_back ( 2 ) ;
17314	return 1 from function	N/A	N/A	return 1 ;	return 1 ;
17315	DUMMY	0.0	0.0	}	DUMMY
17316	else	N/A	N/A	else	else
17317	DUMMY	0.0	0.0	return 0;	DUMMY
17318	DUMMY	0.0	0.0	}	DUMMY
17319	DUMMY	0.0	0.0	int main() {	DUMMY
17320	create long longs a , b	N/A	N/A	long long a , b ;	long long a, b ;
17321	create integers op , ans	N/A	N/A	int op , ans ;	int op, ans ;
17322	read a read b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17323	set ans to result of run funcion with a , b as arguments	N/A	N/A	ans = funcion ( a , b ) ;	ans = funcion ( a, b ) ;
17324	if ans is 0	N/A	N/A	if ( ans == 0 )	if ( ans == 0 )
17325	print " NO " print ' \ n '	N/A	N/A	cout << " NO " << ' \n ' ;	cout << " NO " <<'\n';
17326	else	N/A	N/A	else	else
17327	print " YES " print ' \ n '	N/A	N/A	cout << " YES " << ' \n ' ;	cout << " YES " <<'\n';
17328	print size of S + 1 print ' \ n '	N/A	N/A	cout << S . size ( ) + 1 << ' \n ' ;	cout << S. size ( ) + 1 <<'\n';
17329	print a	N/A	N/A	cout << a ;	cin >> a ;
17330	while S is not empty	N/A	N/A	while ( ! S . empty ( ) )	while (! S. empty ( ) )
17331	set op to top of S	N/A	N/A	op = S . top ( ) ;	op = S. top ( ) ;
17332	remove element from top of S	N/A	N/A	S . pop ( ) ;	S. pop ( ) ;
17333	if op is 1	N/A	N/A	if ( op == 1 )	if ( op == 1 )
17334	set a to a * 2	N/A	N/A	a *= 2 ;	a *= 2 ;
17335	else	N/A	N/A	else	else
17336	set a to a * 10	N/A	N/A	a *= 10 ;	a = a * 10 ;
17337	increment a	N/A	N/A	a ++ ;	a ++ ;
17338	DUMMY	0.0	0.0	}	DUMMY
17339	print " " print a	N/A	N/A	cout << " " << a ;	cout << " " << a ;
17340	DUMMY	0.0	0.0	}	DUMMY
17341	print ' \ n '	N/A	N/A	cout << ' \n ' ;	cout <<'\n';
17342	DUMMY	0.0	0.0	}	DUMMY
17343	DUMMY	0.0	0.0	}	DUMMY
17344	ASS = array of integers of length 50	N/A	N/A	int ASS [ 50 ] ;	int ASS [ 50 ] ;
17345	let sum be a integer	N/A	N/A	int sum ;	int sum ;
17346	let flag be a boolean value	N/A	N/A	bool flag ;	bool flag ;
17347	let int digui ( int a , int b ) accepts integer values	N/A	N/A	int digui ( int a , int b )	int digui ( int a, int b )
17348	if a is less than b	N/A	N/A	if ( a < b )	if ( a < b )
17349	set the value of flag to 1	N/A	N/A	flag = 1 ;	flag = 1 ;
17350	DUMMY	0.0	0.0	return 0;	DUMMY
17351	DUMMY	0.0	0.0	}	DUMMY
17352	if a is equal to b , return 0	N/A	N/A	if ( a == b ) return 0 ;	if ( a == b ) { return 0 ; }
17353	if a modulo 2 is equal to 0	N/A	N/A	if ( a % 2 == 0 )	if ( a % 2 == 0 )
17354	increase sum by 1	N/A	N/A	sum ++ ;	sum ++ ;
17355	let ASS [ sum - 1 ] is equal to a / 2	N/A	N/A	ASS [ sum - 1 ] = a / 2 ;	ASS [ sum - 1 ] = a / 2 ;
17356	return digui of a / 2 , b	N/A	N/A	return digui ( a / 2 , b ) ;	return digui ( a / 2, b ) ;
17357	else if a modulo 10 is equal to 1	N/A	N/A	else if ( a % 10 == 1 )	else if ( a % 10 == 1 )
17358	increase sum by 1	N/A	N/A	sum ++ ;	sum ++ ;
17359	let ASS [ sum - 1 ] is equal to ( a - 1 ) / 10	N/A	N/A	ASS [ sum - 1 ] = ( a - 1 ) / 10 ;	ASS [ sum - 1 ] = ( a - 1 ) / 10 ;
17360	return digui of ( a - 1 ) / 10 , b	N/A	N/A	return digui ( ( a - 1 ) / 10 , b ) ;	return digui ( ( a - 1 ) / 10, b ) ;
17361	else do the following	N/A	N/A	else	else
17362	set the value of flag to 1	N/A	N/A	flag = 1 ;	flag = 1 ;
17363	DUMMY	0.0	0.0	}	DUMMY
17364	DUMMY	0.0	0.0	int main() {	DUMMY
17365	let m , n be integers	N/A	N/A	int m , n ;	int m, n ;
17366	read m and n	N/A	N/A	cin >> m >> n ;	cin >> m >> n ;
17367	digui of n , m	N/A	N/A	digui ( n , m ) ;	digui ( n, m ) ;
17368	if flag is equal to 0	N/A	N/A	if ( flag == 0 )	if ( flag == 0 )
17369	print YES and newline and sum + 1 and newline	N/A	N/A	cout << " YES " << endl << sum + 1 << endl ;	cout << " YES\n " << sum + 1 << endl ;
17370	for integer i = sum - 1 , i > = 0 , decrease i by 1 , print ASS [ i ] and space	N/A	N/A	for ( int i = sum - 1 ; i >= 0 ; i -- ) cout << ASS [ i ] << " " ;	for ( int i = sum - 1 ; i >= 0 ; i -- ) { cout << " ASS [ i ] << " " ; }
17371	print n and new line	N/A	N/A	cout << n << endl ;	cout << n << endl ;
17372	else do the following	N/A	N/A	else	else
17373	print NO and newline	N/A	N/A	cout << " NO " << endl ;	cout << " NO\n " ;
17374	DUMMY	0.0	0.0	return 0;	DUMMY
17375	DUMMY	0.0	0.0	}	DUMMY
17376	let k and flag be long ints with flag = 0	N/A	N/A	long int k , flag = 0 ;	long int k, flag = 0 ;
17377	declare vector of long long integers ans	N/A	N/A	vector < long long int > ans ;	vector < long long int > ans ;
17378	function dfs with long long int arguments n and level	N/A	N/A	void dfs ( long long int n , long long int level )	void dfs ( long long int n, long long integer level )
17379	if n is equal to k , assign 1 to flag	N/A	N/A	if ( n == k ) { flag = 1 ; }	if ( n == k ) flag = 1 ;
17380	if 2 * n < = k and flag = 0 , call dfs ( 2 * n , level + 1 )	N/A	N/A	if ( 2 * n <= k && flag == 0 ) { dfs ( 2 * n , level + 1 ) ; }	if ( 2 * n <= k && flag == 0 ) dfs ( 2.0 * n, level + 1 ) ;
17381	if 10 * n + 1 < = k and flag = 0 , call dfs ( 10 * n + 1 , level + 1 )	N/A	N/A	if ( 10 * n + 1 <= k && flag == 0 ) { dfs ( 10 * n + 1 , level + 1 ) ; }	if ( ( 10 * n + 1 ) <= k && flag == 0 ) dfs ( 10.0 n + i, level + i ) ;
17382	if flag = 1 , push n to ans	N/A	N/A	if ( flag == 1 ) { ans . push_back ( n ) ; }	if ( flag == 1 ) ans. push_back ( n ) ;
17383	return	N/A	N/A	return ;	return ;
17384	DUMMY	0.0	0.0	}	DUMMY
17385	DUMMY	0.0	0.0	int main() {	DUMMY
17386	create long long int n	N/A	N/A	long long int n ;	long long int n ;
17387	read n and k	N/A	N/A	cin >> n >> k ;	cin >> n >> k ;
17388	call dfs ( n , 1 )	N/A	N/A	dfs ( n , 1 ) ;	dfs ( n, 1 ) ;
17389	if flag is 1	N/A	N/A	if ( flag == 1 )	if ( flag == 1 )
17390	print " YES "	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
17391	declare int sz = length of ans	N/A	N/A	int sz = ans . size ( ) ;	int sz = ans. length ( ) ;
17392	print sz	N/A	N/A	cout << sz << endl ;	cout << sz << endl ;
17393	for i = sz - 1 to 1 inclusive decrementing i , print ans [ i ] and " "	N/A	N/A	for ( long long int i = sz - 1 ; i >= 1 ; i -- ) { cout << ans [ i ] << " " ; }	for ( int i = sz - 1 ; i >= 1 ; -- i ) { cout << ans [ i ] << " " ; }
17394	if sz > = 1 , print ans [ 0 ]	N/A	N/A	if ( sz >= 1 ) cout << ans [ 0 ] << endl ;	if ( sz >= 1 ) cout << ans [ 0 ] << endl ;
17395	DUMMY	0.0	0.0	return 0;	DUMMY
17396	else	N/A	N/A	else	else
17397	print " NO "	N/A	N/A	cout << " NO " << endl ;	cout << " NO\n " ;
17398	DUMMY	0.0	0.0	}	DUMMY
17399	DUMMY	0.0	0.0	return 0;	DUMMY
17400	DUMMY	0.0	0.0	}	DUMMY
17401	N = const integer with N = 1e5 + 50	N/A	N/A	const int N = 1e5 + 50 ;	const int N = 1e5 + 50 ;
17402	a , b , cnt = long long	N/A	N/A	long long a , b , cnt ;	long long a, b, cnt ;
17403	ans = long long array of size N	N/A	N/A	long long ans [ N ] ;	long long ans [ N ] ;
17404	i , j , k , t , m , n = integers	N/A	N/A	int i , j , k , t , m , n ;	int i, j, k, t, m, n ;
17405	in the function dfs that takes long long st , step	N/A	N/A	void dfs ( long long st , long long step )	void dfs ( long long st )
17406	if st > b , return	N/A	N/A	if ( st > b ) return ;	if ( st > b ) return ;
17407	ans [ step ] = st	N/A	N/A	ans [ step ] = st ;	ans [ step ] = st ;
17408	if st is b	N/A	N/A	if ( st == b )	if ( st == b )
17409	cnt = step	N/A	N/A	cnt = step ;	cnt = step ;
17410	print YES	N/A	N/A	cout << " YES " << ' \n ' ;	cout << " YES\n " ;
17411	print cnt + 1	N/A	N/A	cout << cnt + 1 << ' \n ' ;	cout << cnt + 1 << endl ;
17412	print ans [ 0 ]	N/A	N/A	cout << ans [ 0 ] ;	cout << ans [ 0 ] << endl ;
17413	for i = 1 to cnt exclusive , print " " , ans [ i ]	N/A	N/A	for ( i = 1 ; i < cnt + 1 ; i ++ ) cout << " " << ans [ i ] ;	for ( int i = 1 ; i < cnt ; i ++ ) cout << " " << ans [ i ] << endl ;
17414	print new line	N/A	N/A	cout << ' \n ' ;	cout << endl ;
17415	return	N/A	N/A	return ;	return ;
17416	DUMMY	0.0	0.0	}	DUMMY
17417	if st * 2 < = b , dfs on st * 2 and step + 1	N/A	N/A	if ( st * 2 <= b ) dfs ( st * 2 , step + 1 ) ;	if ( st * 2 <= b ) dfs ( st. begin ( ) + 2, step + 1 ) ;
17418	if st * 10 + 1 < = b , dfs on st * 10 + 1 and step + 1	N/A	N/A	if ( st * 10 + 1 <= b ) dfs ( st * 10 + 1 , step + 1 ) ;	if ( st * 10 + 1 <= b ) dfs ( st. begin ( ) + 10, step + 1 ) ;
17419	DUMMY	0.0	0.0	}	DUMMY
17420	DUMMY	0.0	0.0	int main() {	DUMMY
17421	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17422	cnt = 0	N/A	N/A	cnt = 0 ;	int cnt = 0 ;
17423	dfs on a and 0	N/A	N/A	dfs ( a , 0 ) ;	dfs ( a, 0 ) ;
17424	if not cnt , print NO	N/A	N/A	if ( ! cnt ) cout << " NO " << ' \n ' ;	if (! cnt ) cout << " NO " << endl ;
17425	DUMMY	0.0	0.0	return 0;	DUMMY
17426	DUMMY	0.0	0.0	}	DUMMY
17427	a , b , jum = long long	N/A	N/A	long long a , b , jum ;	long long a, b, jum ;
17428	v = long long vector	N/A	N/A	vector < long long > v ;	vector < long long > v ;
17429	DUMMY	0.0	0.0	int main() {	DUMMY
17430	read a then b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17431	loop while b is greater than 0	N/A	N/A	while ( b >= 1 )	while ( b > 0 )
17432	increment jum	N/A	N/A	jum ++ ;	jum ++ ;
17433	append b to v	N/A	N/A	v . push_back ( b ) ;	v. push_back ( b ) ;
17434	if a is b then break loop	N/A	N/A	if ( a == b ) { break ; }	if ( a == b ) break ;
17435	if a b is less than a	N/A	N/A	if ( b < a )	if ( a b < a )
17436	print " NO "	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
17437	DUMMY	0.0	0.0	return 0;	DUMMY
17438	else if b is even	N/A	N/A	else if ( b % 2 == 0 )	else if ( b % 2 == 0 )
17439	set b to b / 2	N/A	N/A	b = b / 2 ;	b /= 2 ;
17440	else if b is uneven	N/A	N/A	else if ( b % 2 == 1 )	else if ( b % 2 == 1 )
17441	decrement b	N/A	N/A	b -- ;	b -- ;
17442	if b is a multiple of 10	N/A	N/A	if ( b % 10 == 0 )	if ( b % 10 == 0 )
17443	set b to b / 10	N/A	N/A	b = b / 10 ;	b /= 10 ;
17444	else	N/A	N/A	else	else
17445	print " NO "	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
17446	DUMMY	0.0	0.0	return 0;	DUMMY
17447	DUMMY	0.0	0.0	}	DUMMY
17448	DUMMY	0.0	0.0	}	DUMMY
17449	DUMMY	0.0	0.0	}	DUMMY
17450	sort v	N/A	N/A	sort ( v . begin ( ) , v . end ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
17451	print " YES " and jum	N/A	N/A	cout << " YES " << endl << jum << endl ;	cout << " YES " << endl << jum ;
17452	for i = 0 to jum	N/A	N/A	for ( int i = 0 ; i < jum ; i ++ )	for ( int i = 0 ; i < jum ; i ++ )
17453	print v [ i ]	N/A	N/A	cout << v [ i ] ;	cout << v [ i ] ;
17454	if i is less than jum - 1	N/A	N/A	if ( i < jum - 1 )	if ( i < jum - 1 )
17455	print " "	N/A	N/A	cout << " " ;	cout << " " ;
17456	else	N/A	N/A	else	else
17457	print newline	N/A	N/A	cout << endl ;	cout << endl ;
17458	DUMMY	0.0	0.0	}	DUMMY
17459	DUMMY	0.0	0.0	}	DUMMY
17460	declare long integer array perm with size 2 * 100000 + 5	N/A	N/A	long int perm [ 2 * 100000 + 5 ] ;	long int perm [ 2 * 100000 + 5 ] ;
17461	DUMMY	0.0	0.0	int main() {	DUMMY
17462	declare long integer variables n , x , cycle , v , k and xo where cycle = 0 and xo = 1	N/A	N/A	long int n , x , cycle = 0 , v , k , xo = 1 ;	long int n, x, cycle = 0, v, k, xo = 1 ;
17463	read n	N/A	N/A	cin >> n ;	cin >> n ;
17464	for integer i = 1 to n inclusive , read perm [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> perm [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> perm [ i ] ;
17465	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
17466	read x	N/A	N/A	cin >> x ;	cin >> x ;
17467	xo ^ = x	N/A	N/A	xo ^= x ;	nex ^= x ;
17468	DUMMY	0.0	0.0	}	DUMMY
17469	for integer i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
17470	continue loop from the start if if perm [ i ] is false	N/A	N/A	if ( ! perm [ i ] ) continue ;	if (! perm [ i ] ) continue ;
17471	increase cycle	N/A	N/A	cycle ++ ;	cycle ++ ;
17472	assign value of i to v	N/A	N/A	v = i ;	v = i ;
17473	while perm [ v ] is true	N/A	N/A	while ( perm [ v ] )	while ( perm [ v ] )
17474	assign value of perm [ v ] to k	N/A	N/A	k = perm [ v ] ;	k = perm [ v ] ;
17475	set perm [ v ] to 0	N/A	N/A	perm [ v ] = 0 ;	perm [ v ] = 0 ;
17476	set v to k	N/A	N/A	v = k ;	v = k ;
17477	DUMMY	0.0	0.0	}	DUMMY
17478	DUMMY	0.0	0.0	}	DUMMY
17479	if cycle = 1 , change cycle to 0	N/A	N/A	if ( cycle == 1 ) cycle = 0 ;	if ( cycle == 1 ) cycle = 0 ;
17480	print cycle + xo	N/A	N/A	cout << cycle + xo << endl ;	cout << cycle + xo << endl ;
17481	DUMMY	0.0	0.0	return 0;	DUMMY
17482	DUMMY	0.0	0.0	}	DUMMY
17483	let n be a integer	N/A	N/A	int n ;	int n ;
17484	p = array of integers of length 200100	N/A	N/A	int p [ 200100 ] ;	int p [ 200100 ] ;
17485	b = array of integers of length 200100	N/A	N/A	int b [ 200100 ] ;	int b [ 200100 ] ;
17486	vis = array of integers of length 200200	N/A	N/A	int vis [ 200200 ] ;	int vis [ 200200 ] ;
17487	let dfs be a function which accepts integer x value	N/A	N/A	void dfs ( int x )	void dfs ( int x )
17488	the xth element of array vis is equal to 1	N/A	N/A	vis [ x ] = 1 ;	vis [ x ] = 1 ;
17489	if ( not vis [ xth element of array p ] , dfs ( xth element of array p )	N/A	N/A	if ( ! vis [ p [ x ] ] ) dfs ( p [ x ] ) ;	if (! vis [ p [ x ] ) dfs ( p [ y ] ) ;
17490	DUMMY	0.0	0.0	}	DUMMY
17491	DUMMY	0.0	0.0	int main() {	DUMMY
17492	read n	N/A	N/A	cin >> n ;	cin >> n ;
17493	for ( i = 1 to n inclusive ) , read ith element of array p	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> p [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> p [ i ] ;
17494	let cnt be a integer with cnt value as 0	N/A	N/A	int cnt = 0 ;	int cnt = 0 ;
17495	for ( i = 1 to n inclusive )	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
17496	read ith element of array b	N/A	N/A	cin >> b [ i ] ;	cin >> b [ i ] ;
17497	if ( ith element of array b is equal to 1 ) , increase cnt by 1	N/A	N/A	if ( b [ i ] == 1 ) cnt ++ ;	if ( b [ i ] == 1 ) cnt ++ ;
17498	DUMMY	0.0	0.0	}	DUMMY
17499	let ans be a integer with ans value is equal to 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
17500	if ( cnt modulus 2 is equal to 0 ) , increase ans by 1	N/A	N/A	if ( cnt % 2 == 0 ) ans ++ ;	if ( cnt % 2 == 0 ) ans ++ ;
17501	let the value of cnt is equal to 0	N/A	N/A	cnt = 0 ;	cnt = 0 ;
17502	for ( i = 1 to n inclusive )	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
17503	if ( not ith element of array vis )	N/A	N/A	if ( ! vis [ i ] )	if (! vis [ i ] )
17504	increase cnt value by 1	N/A	N/A	cnt ++ ;	cnt ++ ;
17505	dfs of i	N/A	N/A	dfs ( i ) ;	dfs ( i ) ;
17506	DUMMY	0.0	0.0	}	DUMMY
17507	DUMMY	0.0	0.0	}	DUMMY
17508	if ( cnt is equal to 1 ) , cnt is equal to 0	N/A	N/A	if ( cnt == 1 ) cnt = 0 ;	if ( cnt == 1 ) cnt = 0 ;
17509	print ans + cnt and newline	N/A	N/A	cout << ans + cnt << endl ;	cout << ans + cnt << endl ;
17510	DUMMY	0.0	0.0	return 0;	DUMMY
17511	DUMMY	0.0	0.0	}	DUMMY
17512	create constant integer N with N = 6e5 + 10	N/A	N/A	const int N = 6e5 + 10 ;	const int N = 6e5 + 10 ;
17513	create integer arrays v , A , B with v size N , A size N , B size N	N/A	N/A	int v [ N ] , A [ N ] , B [ N ] ;	int v [ N ], A [ N -- ], B [ N - 1 ] ;
17514	create integer n	N/A	N/A	int n ;	int n ;
17515	declare dfs with integer x as argument	N/A	N/A	void dfs ( int x )	void dfs ( int x )
17516	if v [ x ] is true , return from function	N/A	N/A	if ( v [ x ] ) return ;	if ( v [ x ] ) return ;
17517	set v [ x ] to 1	N/A	N/A	v [ x ] = 1 ;	v [ x ] = 1 ;
17518	run dfs with A [ x ] as argument	N/A	N/A	dfs ( A [ x ] ) ;	dfs ( A [ x ] ) ;
17519	DUMMY	0.0	0.0	}	DUMMY
17520	DUMMY	0.0	0.0	int main() {	DUMMY
17521	read n	N/A	N/A	cin >> n ;	cin >> n ;
17522	create integer ans with ans = 0	N/A	N/A	int ans = 0 ;	int ans = 0 ;
17523	for i = 1 to n inclusive , read A [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; ++ i ) cin >> A [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> A [ i ] ;
17524	for i = 1 to n inclusive , read B [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; ++ i ) cin >> B [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> B [ i ] ;
17525	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; ++ i )	for ( int i = 1 ; i <= n ; i ++ )
17526	if v [ i ] is 0 , run dfs with i as argument , increment ans	N/A	N/A	if ( v [ i ] == 0 ) dfs ( i ) , ++ ans ;	if (! v [ i ] ) dfs ( i ), ans ++ ;
17527	DUMMY	0.0	0.0	}	DUMMY
17528	create integer t with t = 1	N/A	N/A	int t = 1 ;	int t = 1 ;
17529	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; ++ i )	for ( int i = 1 ; i <= n ; i ++ )
17530	if B [ i ] is true , set t to t ^ 1	N/A	N/A	if ( B [ i ] ) t ^= 1 ;	if ( B [ i ] ) t ^= 1 ;
17531	DUMMY	0.0	0.0	}	DUMMY
17532	if ans is 1 , decrement ans	N/A	N/A	if ( ans == 1 ) -- ans ;	if ( ans == 1 ) ans -- ;
17533	print ans + t print newline	N/A	N/A	cout << ans + t << endl ;	cout << ans + t << endl ;
17534	DUMMY	0.0	0.0	}	DUMMY
17535	declare constant integer N = 2e5 + 5	N/A	N/A	const int N = 2e5 + 5 ;	const int N = 2e5 + 5 ;
17536	create integer arrays Prv and vis with N elements	N/A	N/A	int Prv [ N ] , vis [ N ] ;	int Prv [ N ], vis [ N + 1 ] ;
17537	dfs is a void function with integer argument u	N/A	N/A	void dfs ( int u )	void dfs ( int u )
17538	if vis [ u ] is not 0 , return	N/A	N/A	if ( vis [ u ] ) return ;	if ( vis [ u ] ) return ;
17539	set value of vis [ u ] to true	N/A	N/A	vis [ u ] = true ;	vis [ u ] = true ;
17540	call function dfs with arguments Prv [ u ]	N/A	N/A	dfs ( Prv [ u ] ) ;	dfs ( Prv [ u ] ) ;
17541	DUMMY	0.0	0.0	}	DUMMY
17542	DUMMY	0.0	0.0	int main() {	DUMMY
17543	declare integer variable n	N/A	N/A	int n ;	int n ;
17544	read n	N/A	N/A	cin >> n ;	cin >> n ;
17545	for integer i = 1 to n inclusive read Prv [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> Prv [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> Prv [ i ] ;
17546	create integer now = 1	N/A	N/A	int now = 1 ;	int now = 1 ;
17547	for integer i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
17548	create integer x	N/A	N/A	int x ;	int x ;
17549	read x	N/A	N/A	cin >> x ;	cin >> x ;
17550	increase now by x	N/A	N/A	now += x ;	now += x ;
17551	DUMMY	0.0	0.0	}	DUMMY
17552	declare integer Res = 0	N/A	N/A	int Res = 0 ;	int Res = 0 ;
17553	for integer i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
17554	if vis [ i ] is 0	N/A	N/A	if ( ! vis [ i ] )	if ( vis [ i ] == 0 )
17555	call function dfs with argument i	N/A	N/A	dfs ( i ) ;	dfs ( i ) ;
17556	increment Res	N/A	N/A	Res ++ ;	Res ++ ;
17557	DUMMY	0.0	0.0	}	DUMMY
17558	DUMMY	0.0	0.0	}	DUMMY
17559	decrement Res if Res = 1	N/A	N/A	if ( Res == 1 ) Res -- ;	if ( Res == 1 ) Res -- ;
17560	print Res + ( now % 2 ) and " \ n "	N/A	N/A	cout << ( Res + ( now % 2 ) ) << " \n " ;	cout << Res + ( now % 2 ) << " \n " ;
17561	DUMMY	0.0	0.0	return 0;	DUMMY
17562	DUMMY	0.0	0.0	}	DUMMY
17563	DUMMY	0.0	0.0	int main() {	DUMMY
17564	create int i , j and n	N/A	N/A	int i , j , n ;	int i, j, n ;
17565	set int arrays p , b and status of length 200000 to all 0	N/A	N/A	int p [ 200000 ] , b [ 200000 ] , status [ 200000 ] = { 0 } ;	int p [ 200000 ] = { 0 }, b [ 2e5 + 10 } = { }, status [ 2000000 + 10 ] ={ 0 } ;
17566	set count and result to 0	N/A	N/A	int count = 0 , result = 0 ;	int count = 0, result = 0 ;
17567	read n	N/A	N/A	cin >> n ;	cin >> n ;
17568	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
17569	read p [ i ]	N/A	N/A	cin >> p [ i ] ;	cin >> p [ i ] ;
17570	decrement p [ i ]	N/A	N/A	p [ i ] -- ;	p [ i ] -- ;
17571	DUMMY	0.0	0.0	}	DUMMY
17572	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
17573	read b [ i ]	N/A	N/A	cin >> b [ i ] ;	cin >> b [ i ] ;
17574	if b [ i ] = 1 , increment count	N/A	N/A	if ( b [ i ] == 1 ) count ++ ;	if ( b [ i ] == 1 ) count ++ ;
17575	DUMMY	0.0	0.0	}	DUMMY
17576	if count is even , increment result	N/A	N/A	if ( count % 2 == 0 ) result ++ ;	if ( count % 2 == 0 ) result ++ ;
17577	count = 0	N/A	N/A	count = 0 ;	count = 0 ;
17578	if i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
17579	if status [ i ] equal to 0	N/A	N/A	if ( status [ i ] == 0 )	if ( status [ i ] == 0 )
17580	assign 1 to status [ i ]	N/A	N/A	status [ i ] = 1 ;	status [ i ] = 1 ;
17581	set t to p [ i ]	N/A	N/A	int t = p [ i ] ;	t = p [ i ] ;
17582	while t different from 1	N/A	N/A	while ( t != i )	while ( t )
17583	status [ t ] = 1	N/A	N/A	status [ t ] = 1 ;	status [ t ] = 1 ;
17584	t = p [ t ]	N/A	N/A	t = p [ t ] ;	t = p [ t ] ;
17585	DUMMY	0.0	0.0	}	DUMMY
17586	add 1 to count	N/A	N/A	count ++ ;	count ++ ;
17587	DUMMY	0.0	0.0	}	DUMMY
17588	DUMMY	0.0	0.0	}	DUMMY
17589	if count greater than 1 , set result to result + count	N/A	N/A	if ( count > 1 ) result += count ;	if ( count > 1 ) result += count ;
17590	print result	N/A	N/A	cout << result << endl ;	cout << result << endl ;
17591	DUMMY	0.0	0.0	return 0;	DUMMY
17592	DUMMY	0.0	0.0	}	DUMMY
17593	n , m , k = static long long	N/A	N/A	static long long n , m , k ;	static long long n, m, k ;
17594	DUMMY	0.0	0.0	int main() {	DUMMY
17595	n = int	N/A	N/A	int n ;	int n ;
17596	read n	N/A	N/A	cin >> n ;	cin >> n ;
17597	p = vector of n int	N/A	N/A	vector < int > p ( n ) ;	vector < int > p ( n ) ;
17598	for i = 0 to n exclusive read p [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] ; }
17599	res = 0	N/A	N/A	int res = 0 ;	int res = 0 ;
17600	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
17601	x = int	N/A	N/A	int x ;	int x ;
17602	read x	N/A	N/A	cin >> x ;	cin >> x ;
17603	add x to res	N/A	N/A	res += x ;	res += x ;
17604	DUMMY	0.0	0.0	}	DUMMY
17605	res = ( res + 1 ) modulo 2	N/A	N/A	res = ( res + 1 ) % 2 ;	res = ( res + 1 ) % 2 ;
17606	visited = vector of n bool	N/A	N/A	vector < bool > visited ( n ) ;	vector < bool > visited ( n ) ;
17607	count = - 1	N/A	N/A	int count = - 1 ;	int count = - 1 ;
17608	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
17609	if visited [ i ] continue	N/A	N/A	if ( visited [ i ] ) continue ;	if ( visited [ i ] ) continue ;
17610	increment count	N/A	N/A	count ++ ;	count ++ ;
17611	j = i	N/A	N/A	int j = i ;	j = i ;
17612	while not visited [ j ]	N/A	N/A	while ( ! visited [ j ] )	while (! visited [ j ] )
17613	visited [ j ] = true	N/A	N/A	visited [ j ] = true ;	visited [ j ] = true ;
17614	j = p [ j ] - 1	N/A	N/A	j = p [ j ] - 1 ;	j = p [ j ] - 1 ;
17615	DUMMY	0.0	0.0	}	DUMMY
17616	DUMMY	0.0	0.0	}	DUMMY
17617	if count > 0 increment res	N/A	N/A	if ( count > 0 ) res ++ ;	if ( count > 0 ) res ++ ;
17618	add count to res	N/A	N/A	res += count ;	res += count ;
17619	print res	N/A	N/A	cout << res << endl ;	cout << res << endl ;
17620	DUMMY	0.0	0.0	}	DUMMY
17621	create integer n	N/A	N/A	int n ;	int n ;
17622	create constant integer MAXN with MAXN = 200005	N/A	N/A	const int MAXN = 200005 ;	const int MAXN = 200005 ;
17623	create integer array p with size MAXN	N/A	N/A	int p [ MAXN ] ;	int p [ MAXN ] ;
17624	create boolean array vis with size MAXN	N/A	N/A	bool vis [ MAXN ] ;	bool vis [ MAXN ] ;
17625	declare dfs with integer idx as argument , returning void	N/A	N/A	void dfs ( int idx )	void dfs ( int idx )
17626	set vis [ idx ] to true	N/A	N/A	vis [ idx ] = true ;	vis [ idx ] = true ;
17627	if not vis [ p [ idx ] ] , run dfs with p [ idx ] as argument	N/A	N/A	if ( ! vis [ p [ idx ] ] ) dfs ( p [ idx ] ) ;	if (! vis [ p [ idx ] ] ) dfs ( p [idx ] ) ;
17628	DUMMY	0.0	0.0	}	DUMMY
17629	DUMMY	0.0	0.0	int main() {	DUMMY
17630	read n	N/A	N/A	cin >> n ;	cin >> n ;
17631	for i = 1 to n inclusive , read p [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> p [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> p [ i ] ;
17632	create integer counter with counter = 0	N/A	N/A	int counter = 0 ;	int counter = 0 ;
17633	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
17634	create integer b	N/A	N/A	int b ;	int b ;
17635	read b	N/A	N/A	cin >> b ;	cin >> b ;
17636	if b is 1 , increment counter	N/A	N/A	if ( b == 1 ) counter ++ ;	if ( b == 1 ) counter ++ ;
17637	DUMMY	0.0	0.0	}	DUMMY
17638	create integer cycle with cycle = 0	N/A	N/A	int cycle = 0 ;	int cycle = 0 ;
17639	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
17640	if not vis [ i ]	N/A	N/A	if ( ! vis [ i ] )	if (! vis [ i ] )
17641	run dfs with i as argument	N/A	N/A	dfs ( i ) ;	dfs ( i ) ;
17642	increment cycle	N/A	N/A	cycle ++ ;	cycle ++ ;
17643	DUMMY	0.0	0.0	}	DUMMY
17644	if cycle is 1	N/A	N/A	if ( cycle == 1 )	if ( cycle == 1 )
17645	print 1 - counter % 2 print " \ n "	N/A	N/A	cout << 1 - counter % 2 << " \n " ;	cout << 1 - counter % 2 << " \n " ;
17646	else	N/A	N/A	else	else
17647	print cycle + 1 - counter % 2 print " \ n "	N/A	N/A	cout << cycle + 1 - counter % 2 << " \n " ;	cout << cycle + 1 - counter % 2 << " \n " ;
17648	DUMMY	0.0	0.0	return 0;	DUMMY
17649	DUMMY	0.0	0.0	}	DUMMY
17650	DUMMY	0.0	0.0	int main() {	DUMMY
17651	create strings s1 and s2	N/A	N/A	string s1 , s2 ;	string s1, s2 ;
17652	read s1 and s2	N/A	N/A	cin >> s1 >> s2 ;	cin >> s1 >> s2 ;
17653	if s1 is equal to s2	N/A	N/A	if ( s1 == s2 )	if ( s1 == s2 )
17654	print " - 1 \ n "	N/A	N/A	cout << " -1\n " ;	cout << " -1\n " ;
17655	else	N/A	N/A	else	else
17656	print the max of s1 . size ( ) and s2 . size ( )	N/A	N/A	cout << max ( s1 . size ( ) , s2 . size ( ) ) << ' \n ' ;	cout << max ( s1. size ( ), s2. size( ) ) << endl ;
17657	DUMMY	0.0	0.0	}	DUMMY
17658	DUMMY	0.0	0.0	return 0;	DUMMY
17659	DUMMY	0.0	0.0	}	DUMMY
17660	dx = int array with the values 0 , 1 , 0 , - 1 , 1 , 1 , - 1 , - 1	N/A	N/A	int dx [ ] = { 0 , 1 , 0 , - 1 , 1 , 1 , - 1 , - 1 } ;	int dx [ 4 ] = { 0, 1, 0, - 1, 1, 1, " -1\n " } ;
17661	dy = int array with the values 1 , 0 , - 1 , 0 , 1 , - 1 , 1 , - 1	N/A	N/A	int dy [ ] = { 1 , 0 , - 1 , 0 , 1 , - 1 , 1 , - 1 } ;	int dy [ 4 ] = { 1, 0, - 1, - 0, 1, + 1, 1 } ;
17662	define empty function fast	N/A	N/A	void fast ( ) { }	void fast ( ) { }
17663	DUMMY	0.0	0.0	int main() {	DUMMY
17664	call fast	N/A	N/A	fast ( ) ;	fast ( ) ;
17665	s , t = string	N/A	N/A	string s , t ;	string s, t ;
17666	read s then t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
17667	print - 1 if s is t else print max of size of s and size of t	N/A	N/A	cout << ( s == t ? - 1 : ( int ) max ( s . size ( ) , t . size ( ) ) ) << " \n " ;	cout << ( s == t? - 1 : max ( s. size ( ), t. length ( ) ) ) << endl ;
17668	DUMMY	0.0	0.0	}	DUMMY
17669	DUMMY	0.0	0.0	int main() {	DUMMY
17670	create strings a and b	N/A	N/A	string a , b ;	string a, b ;
17671	read standard input to a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17672	if a = b , print - 1 to the standard output and exit the program	N/A	N/A	if ( a == b ) cout << - 1 << endl , exit ( 0 ) ;	if ( a == b ) cout << - 1 << endl, exit ( 0 ) ;
17673	print max of length of a and length of b	N/A	N/A	cout << max ( a . size ( ) , b . size ( ) ) << endl ;	cout << max ( a. length ( ), b. size ( ) ) << endl ;
17674	DUMMY	0.0	0.0	}	DUMMY
17675	declare constant long long N = 1e8 + 3	N/A	N/A	const long long N = 1e8 + 3 ;	const long long N = 1e8 + 3 ;
17676	declare constant long long MN = 1e9 + 7	N/A	N/A	const long long MN = 1e9 + 7 ;	const long long MN = 1e9 + 7 ;
17677	declare constant long long MX = - 1e9 - 7	N/A	N/A	const long long MX = - 1e9 - 7 ;	const long long MX = - 1e9 - 7 ;
17678	declare long longs n , m , cnt , mx = MX	N/A	N/A	long long n , m , cnt , mx = MX ;	long long n, m, cnt, mx = MX ;
17679	declare a , b as strings	N/A	N/A	string a , b ;	string a, b ;
17680	declare pair of long long , long long pr	N/A	N/A	pair < long long , long long > pr ;	pair < long long, long long > pr ;
17681	declare string vector v	N/A	N/A	vector < string > v ;	vector < string > v ;
17682	declare map from string to long long mp	N/A	N/A	map < string , long long > mp ;	map < string, long long > mp ;
17683	declare long long set st	N/A	N/A	set < long long > st ;	set < long long > st ;
17684	declare long long set iterator it	N/A	N/A	set < long long > :: iterator it ;	set < long long > :: iterator it ;
17685	DUMMY	0.0	0.0	int main() {	DUMMY
17686	read a , b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17687	if maximum of ( size of a and size of b ) is greater than minimum of ( size of a and size of b )	N/A	N/A	if ( max ( a . size ( ) , b . size ( ) ) > min ( a . size ( ) , b . size ( ) ) )	if ( max ( a. size ( ), b. size( ) ) > min ( b.size ( ) ) )
17688	print maximum of ( size of a and size of b )	N/A	N/A	cout << max ( a . size ( ) , b . size ( ) ) ;	cout << max ( a. size ( ), ( long long ) b.size ( ) ) << endl ;
17689	else	N/A	N/A	else	else
17690	while true	N/A	N/A	while ( true )	while ( true )
17691	if a is not b	N/A	N/A	if ( a != b )	if ( a!= b )
17692	print size of a	N/A	N/A	cout << a . size ( ) ;	cout << a. size ( ) << endl ;
17693	end loop	N/A	N/A	break ;	break ;
17694	DUMMY	0.0	0.0	}	DUMMY
17695	let a be substring of a from 0 to size of a - 1	N/A	N/A	a = a . substr ( 0 , a . size ( ) - 1 ) ;	a = a. substr ( 0, a. size ( ) - 1 ) ;
17696	let b be substring of b from 0 to size of b - 1	N/A	N/A	b = b . substr ( 0 , b . size ( ) - 1 ) ;	b = b. substr ( 0, b. size ( ) - 1 ) ;
17697	if size of a is 0	N/A	N/A	if ( a . size ( ) == 0 )	if ( a. size ( ) == 0 )
17698	print - 1	N/A	N/A	cout << - 1 ;	cout << - 1 << endl ;
17699	end loop	N/A	N/A	break ;	break ;
17700	DUMMY	0.0	0.0	}	DUMMY
17701	DUMMY	0.0	0.0	}	DUMMY
17702	DUMMY	0.0	0.0	}	DUMMY
17703	print " \ n "	N/A	N/A	cout << " \n " ;	cout << " \n " ;
17704	DUMMY	0.0	0.0	return 0;	DUMMY
17705	DUMMY	0.0	0.0	}	DUMMY
17706	DUMMY	0.0	0.0	int main() {	DUMMY
17707	declare character array s1 with size 100006 s2 with size 100003	N/A	N/A	char s1 [ 100006 ] , s2 [ 100003 ] ;	char s1 [ 100006 ], s2 [ 100003 ] ;
17708	while read s1 , s2	N/A	N/A	while ( cin >> s1 >> s2 )	while ( cin >> s1 >> s2 )
17709	declare p as integer = string comparison between s1 and s2	N/A	N/A	int p = strcmp ( s1 , s2 ) ;	int p = strcmp ( s1, s2 ) ;
17710	declare len1 as integer = string length of s1	N/A	N/A	int len1 = strlen ( s1 ) ;	int len1 = strlen ( s1 ) ;
17711	declare len2 as integer = string length of s2	N/A	N/A	int len2 = strlen ( s2 ) ;	int len2 = strlen ( s2 ) ;
17712	if p is 0	N/A	N/A	if ( p == 0 )	if ( p == 0 )
17713	print " - 1 " print newline	N/A	N/A	cout << " -1 " << endl ;	cout << " -1 " << endl ;
17714	DUMMY	0.0	0.0	return 0;	DUMMY
17715	DUMMY	0.0	0.0	}	DUMMY
17716	if len1 is greater than len2	N/A	N/A	if ( len1 > len2 )	if ( len1 > len2 )
17717	print len1 , newline	N/A	N/A	cout << len1 << endl ;	cout << len1 << endl ;
17718	else	N/A	N/A	else	else
17719	print len2 , newline	N/A	N/A	cout << len2 << endl ;	cout << len2 << endl ;
17720	DUMMY	0.0	0.0	}	DUMMY
17721	DUMMY	0.0	0.0	}	DUMMY
17722	DUMMY	0.0	0.0	int main() {	DUMMY
17723	s , ss = string	N/A	N/A	string s , ss ;	string s, ss ;
17724	read s then ss	N/A	N/A	cin >> s >> ss ;	cin >> s >> ss ;
17725	if s is ss	N/A	N/A	if ( s == ss )	if ( s == ss )
17726	print - 1	N/A	N/A	cout << - 1 << " \n " ;	cout << - 1 << endl ;
17727	else	N/A	N/A	else	else
17728	print max of length of ss and length of s	N/A	N/A	cout << max ( ss . length ( ) , s . length ( ) ) << " \n " ;	cout << max ( ss. size ( ), s. length ( ) ) << endl ;
17729	DUMMY	0.0	0.0	return 0;	DUMMY
17730	DUMMY	0.0	0.0	}	DUMMY
17731	DUMMY	0.0	0.0	int main() {	DUMMY
17732	i , res = 0	N/A	N/A	long long i = 0 , res = 0 ;	int i = 0, res = 0 ;
17733	s1 , s2 = string	N/A	N/A	string s1 , s2 ;	string s1, s2 ;
17734	read s1 , s2	N/A	N/A	cin >> s1 >> s2 ;	cin >> s1 >> s2 ;
17735	if s1 = = s2	N/A	N/A	if ( s1 == s2 )	if ( s1 == s2 )
17736	res = - 1	N/A	N/A	res = - 1 ;	res = - 1 ;
17737	else	N/A	N/A	else	else
17738	res = max ( size of s1 , size of s2 )	N/A	N/A	res = max ( s1 . size ( ) , s2 . size ( ) ) ;	res = max ( s1. size ( ), s2. length ( ) ) ;
17739	print res	N/A	N/A	cout << res << endl ;	cout << res << endl ;
17740	DUMMY	0.0	0.0	return 0;	DUMMY
17741	DUMMY	0.0	0.0	}	DUMMY
17742	DUMMY	0.0	0.0	int main() {	DUMMY
17743	declare strings a and b	N/A	N/A	string a , b ;	string a, b ;
17744	read standard input to a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17745	declare integer variables l = length of a , and ll = length of b	N/A	N/A	int l = a . size ( ) , ll = b . size ( ) ;	int l = a. length ( ), ll = b. size ( ) ;
17746	if l ! = ll	N/A	N/A	if ( l != ll )	if ( l!= ll )
17747	print max of l and ll to the standard output	N/A	N/A	cout << max ( l , ll ) << endl ;	cout << max ( l, ll ) << endl ;
17748	else if a = b	N/A	N/A	else if ( a == b )	else if ( a == b )
17749	print - 1 to the standard output	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
17750	else	N/A	N/A	else	else
17751	print length of a to the standard output	N/A	N/A	cout << a . size ( ) << endl ;	cout << a. size ( ) << endl ;
17752	DUMMY	0.0	0.0	}	DUMMY
17753	DUMMY	0.0	0.0	return 0;	DUMMY
17754	DUMMY	0.0	0.0	}	DUMMY
17755	a , b = string	N/A	N/A	string a , b ;	string a, b ;
17756	DUMMY	0.0	0.0	int main() {	DUMMY
17757	read a then b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17758	if a is not b	N/A	N/A	if ( a != b )	if ( a!= b )
17759	print max of size of a , size of b	N/A	N/A	cout << max ( a . size ( ) , b . size ( ) ) << endl ;	cout << max ( a. length ( ), b. size ( ) ) << endl ;
17760	DUMMY	0.0	0.0	return 0;	DUMMY
17761	else	N/A	N/A	else	else
17762	print " - 1 "	N/A	N/A	cout << " -1 " << endl ;	cout << " -1 " << endl ;
17763	DUMMY	0.0	0.0	return 0;	DUMMY
17764	DUMMY	0.0	0.0	}	DUMMY
17765	DUMMY	0.0	0.0	}	DUMMY
17766	DUMMY	0.0	0.0	int main() {	DUMMY
17767	create string A	N/A	N/A	string A ;	string A ;
17768	read A	N/A	N/A	cin >> A ;	cin >> A ;
17769	let string B	N/A	N/A	string B ;	string B ;
17770	read B	N/A	N/A	cin >> B ;	cin >> B ;
17771	if A is equal to B	N/A	N/A	if ( A == B )	if ( A == B )
17772	print - 1	N/A	N/A	cout << - 1 << " \n " ;	cout << - 1 << endl ;
17773	DUMMY	0.0	0.0	return 0;	DUMMY
17774	DUMMY	0.0	0.0	}	DUMMY
17775	print max of A . size ( ) and B . size ( )	N/A	N/A	cout << max ( A . size ( ) , B . size ( ) ) << " \n " ;	cout << max ( ( A. size ( ) ), ( int ) B. size_t ) << endl ;
17776	DUMMY	0.0	0.0	return 0;	DUMMY
17777	DUMMY	0.0	0.0	}	DUMMY
17778	create new constant long long integer INF with value 8e18	N/A	N/A	const long long int INF = ( long long int ) ( 8e18 ) ;	const long long int INF = 8e18 ;
17779	create new constant long long integer called MOD = 998244353	N/A	N/A	const long long int MOD = 998244353 ;	const long long int MOD = 998244353 ;
17780	DUMMY	0.0	0.0	int main() {	DUMMY
17781	declare string variables a and b	N/A	N/A	string a , b ;	string a, b ;
17782	read input to a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17783	if length of a ! = length of b	N/A	N/A	if ( a . length ( ) != b . length ( ) )	if ( a. length ( )!= b. size ( ) )
17784	print max of length of a and length of b and ' \ n '	N/A	N/A	cout << max ( a . length ( ) , b . length ( ) ) << ' \n ' ;	cout << max ( a. length ( ), b. size ( ) ) <<'\n';
17785	else if a ! = b	N/A	N/A	else if ( a != b )	else if ( a!= b )
17786	print length of a and ' \ n '	N/A	N/A	cout << a . length ( ) << ' \n ' ;	cout << a. size ( ) <<'\n';
17787	else	N/A	N/A	else	else
17788	print - 1 and ' \ n '	N/A	N/A	cout << - 1 << ' \n ' ;	cout << - 1 <<'\n';
17789	DUMMY	0.0	0.0	return 0;	DUMMY
17790	DUMMY	0.0	0.0	}	DUMMY
17791	DUMMY	0.0	0.0	int main() {	DUMMY
17792	let a , b be strings	N/A	N/A	string a , b ;	string a, b ;
17793	let c be a integer with c = 0	N/A	N/A	int c = 0 ;	int c = 0 ;
17794	read a , b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17795	let len1 be a integer with len1 is equal to length of a	N/A	N/A	int len1 = a . size ( ) ;	int len1 = a. length ( ) ;
17796	let len2 be a integer with len2 is equal to length of b	N/A	N/A	int len2 = b . size ( ) ;	int len2 = b. length ( ) ;
17797	if a is equal to b	N/A	N/A	if ( a == b )	if ( a == b )
17798	print - 1 and newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
17799	else do the following	N/A	N/A	else	else
17800	print maximum of len1 , len2 and newline	N/A	N/A	cout << max ( len1 , len2 ) << endl ;	cout << max ( len1, len2 ) << endl ;
17801	DUMMY	0.0	0.0	}	DUMMY
17802	DUMMY	0.0	0.0	return 0;	DUMMY
17803	DUMMY	0.0	0.0	}	DUMMY
17804	INF is a new constant integer = 0x3f3f3f3f	N/A	N/A	const int INF = 0x3f3f3f3f ;	const int INF = ( 0x3f3f )3f ;
17805	create new constant integer mod with value 998244353	N/A	N/A	const int mod = 998244353 ;	const int mod = 998244353 ;
17806	declare character arrays a and b with 100005 elements	N/A	N/A	char a [ 100005 ] , b [ 100005 ] ;	char a [ 100005 ], b [ 100000 ] ;
17807	DUMMY	0.0	0.0	int main() {	DUMMY
17808	read input to a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17809	if content of a and b matches	N/A	N/A	if ( strcmp ( a , b ) == 0 )	if ( cin >> a >> b )
17810	return puts ( " - 1 " )	N/A	N/A	return puts ( " -1 " ) , 0 ;	return puts ( " -1 " ) ;
17811	else	N/A	N/A	else	else
17812	print max of length of a and length of b to the standard output	N/A	N/A	cout << max ( strlen ( a ) , strlen ( b ) ) << endl ;	cout << max ( a. length ( ), b. size ( ) ) << endl ;
17813	DUMMY	0.0	0.0	return 0;	DUMMY
17814	DUMMY	0.0	0.0	}	DUMMY
17815	DUMMY	0.0	0.0	int main() {	DUMMY
17816	s , s1 = string	N/A	N/A	string s , s1 ;	string s, s1 ;
17817	read s then s1	N/A	N/A	cin >> s >> s1 ;	cin >> s >> s1 ;
17818	if s is s1	N/A	N/A	if ( s == s1 )	if ( s == s1 )
17819	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
17820	else	N/A	N/A	else	else
17821	print max of size of s , size of s1	N/A	N/A	cout << max ( s . size ( ) , s1 . size ( ) ) << endl ;	cout << max ( s. size ( ), s1. length ( ) ) << endl ;
17822	DUMMY	0.0	0.0	}	DUMMY
17823	declare strings n , n2	N/A	N/A	string n , n2 ;	string n, n2 ;
17824	declare compare with strings s1 , s2 , integer length as arguments , returning boolean	N/A	N/A	bool compare ( string s1 , string s2 , int length )	bool compare ( string s1, string s2, int length )
17825	for i = 0 to length exclusive	N/A	N/A	for ( int i = 0 ; i < length ; i ++ )	for ( int i = 0 ; i < length ; i ++ )
17826	if s1 [ i ] is not s2 [ i ] , return false from function	N/A	N/A	if ( s1 [ i ] != s2 [ i ] ) { return false ; }	if ( s1 [ i ]!= s2 [ 1 ] ) return false ;
17827	DUMMY	0.0	0.0	}	DUMMY
17828	return true from function	N/A	N/A	return true ;	return true ;
17829	DUMMY	0.0	0.0	}	DUMMY
17830	DUMMY	0.0	0.0	int main() {	DUMMY
17831	read n , n2	N/A	N/A	cin >> n >> n2 ;	cin >> n >> n2 ;
17832	declare l1 , l2 , greater as integers	N/A	N/A	int l1 , l2 , greater ;	int l1, l2, greater ;
17833	let l1 be greater = length of n	N/A	N/A	l1 = greater = n . length ( ) ;	l1 = greater = n. length ( ) ;
17834	let l2 be length of n2	N/A	N/A	l2 = n2 . length ( ) ;	l2 = n2. length ( ) ;
17835	if l2 is greater than l1 , let greater be l2	N/A	N/A	if ( l2 > l1 ) { greater = l2 ; }	if ( l2 > l1 ) greater = l2 ;
17836	if l1 is l2	N/A	N/A	if ( l1 == l2 )	if ( l1 == l2 )
17837	declare x as boolean = result of run compare with n , n2 , l1 as arguments	N/A	N/A	bool x = compare ( n , n2 , l1 ) ;	bool x = compare ( n, n2, l1 ) ;
17838	if x is true	N/A	N/A	if ( x )	if ( x )
17839	print - 1 and newline	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
17840	DUMMY	0.0	0.0	return 0;	DUMMY
17841	else	N/A	N/A	else	else
17842	print l1 print newline	N/A	N/A	cout << l1 << endl ;	cout << l1 << endl ;
17843	DUMMY	0.0	0.0	return 0;	DUMMY
17844	DUMMY	0.0	0.0	}	DUMMY
17845	DUMMY	0.0	0.0	}	DUMMY
17846	print greater print newline	N/A	N/A	cout << greater << endl ;	cout << greater << endl ;
17847	DUMMY	0.0	0.0	return 0;	DUMMY
17848	DUMMY	0.0	0.0	}	DUMMY
17849	DUMMY	0.0	0.0	int main() {	DUMMY
17850	a , b = string	N/A	N/A	string a , b ;	string a, b ;
17851	read a then b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17852	sz1 , sz2 = int with sz1 = size of a and sz2 = size of b	N/A	N/A	int sz1 = a . size ( ) , sz2 = b . size ( ) ;	int sz1 = a. size ( ), sz2 = b. length ( ) ;
17853	if a is b	N/A	N/A	if ( a == b )	if ( a == b )
17854	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
17855	else	N/A	N/A	else	else
17856	print max of sz1 , sz2	N/A	N/A	cout << max ( sz1 , sz2 ) << endl ;	cout << max ( sz1, sz2 ) << endl ;
17857	DUMMY	0.0	0.0	return 0;	DUMMY
17858	DUMMY	0.0	0.0	}	DUMMY
17859	DUMMY	0.0	0.0	int main() {	DUMMY
17860	declare string variables s1 and s2	N/A	N/A	string s1 , s2 ;	string s1, s2 ;
17861	read from the input to s1 and s2	N/A	N/A	cin >> s1 >> s2 ;	cin >> s1 >> s2 ;
17862	if s1 is equal to s2	N/A	N/A	if ( s1 == s2 )	if ( s1 == s2 )
17863	print - 1 and a new line	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
17864	else	N/A	N/A	else	else
17865	print max of length of s1 and length of s2 to the standard output	N/A	N/A	cout << max ( s1 . length ( ) , s2 . length ( ) ) << endl ;	cout << max ( s1. length ( ), s2. size ( ) ) << endl ;
17866	DUMMY	0.0	0.0	}	DUMMY
17867	DUMMY	0.0	0.0	int main() {	DUMMY
17868	let a , b strings	N/A	N/A	string a , b ;	string a, b ;
17869	read in a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17870	if a same as b	N/A	N/A	if ( a == b )	if ( a == b )
17871	print - 1 to stdout	N/A	N/A	puts ( " -1 " ) ;	puts ( " -1 " ) ;
17872	otherwise	N/A	N/A	else	else
17873	print max ( length of a , length of b )	N/A	N/A	cout << max ( a . length ( ) , b . length ( ) ) << endl ;	cout << max ( a. size ( ), b. length ( ) ) << endl ;
17874	DUMMY	0.0	0.0	return 0;	DUMMY
17875	DUMMY	0.0	0.0	}	DUMMY
17876	N , INF = const int with N = 1e5 + 10 and INF = 1e9 + 7	N/A	N/A	const int N = 1e5 + 10 , INF = 1e9 + 7 ;	const int N = ( int ) 1e5 + 10, INF = 1e9 + 7 ;
17877	a , b = string	N/A	N/A	string a , b ;	string a, b ;
17878	DUMMY	0.0	0.0	int main() {	DUMMY
17879	read a then b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17880	if a is b	N/A	N/A	if ( a == b )	if ( a == b )
17881	print - 1	N/A	N/A	cout << - 1 << ' \n ' ;	cout << - 1 << endl ;
17882	else	N/A	N/A	else	else
17883	print max of size of a and size of b	N/A	N/A	cout << max ( ( int ) a . size ( ) , ( int ) b . size ( ) ) << ' \n ' ;	cout << max ( ( a ). size ( ), ( b ). length ( ) ) << endl ;
17884	DUMMY	0.0	0.0	return 0;	DUMMY
17885	DUMMY	0.0	0.0	}	DUMMY
17886	DUMMY	0.0	0.0	int main() {	DUMMY
17887	a , b = string	N/A	N/A	string a , b ;	string a, b ;
17888	read a then b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17889	if a is not b	N/A	N/A	if ( a != b )	if ( a!= b )
17890	print max of length of a and length of b	N/A	N/A	cout << max ( a . length ( ) , b . length ( ) ) << endl ;	cout << max ( a. length ( ), b. size ( ) ) << endl ;
17891	else	N/A	N/A	else	else
17892	print " - 1 "	N/A	N/A	cout << " -1\n " ;	cout << " -1 " << endl ;
17893	DUMMY	0.0	0.0	}	DUMMY
17894	E = exp ( 1 )	N/A	N/A	const double E = exp ( 1 ) ;	E = exp ( 1.0 ) ;
17895	maxn = 1000010	N/A	N/A	const int maxn = 1e6 + 10 ;	const int maxn = 1000010 ;
17896	ch = array of maxn char	N/A	N/A	char ch [ maxn ] ;	char ch [ maxn ] ;
17897	ch1 = array of maxn char	N/A	N/A	char ch1 [ maxn ] ;	char ch1 [ maxn ] ;
17898	DUMMY	0.0	0.0	int main() {	DUMMY
17899	read ch	N/A	N/A	cin >> ch ;	cin >> ch ;
17900	read ch1	N/A	N/A	cin >> ch1 ;	cin >> ch1 ;
17901	l1 = length of ch	N/A	N/A	int l1 = strlen ( ch ) ;	l1 = strlen ( ch ) ;
17902	l2 = length of ch1	N/A	N/A	int l2 = strlen ( ch1 ) ;	l2 = ch1. length ( ) ;
17903	if ch and ch1 are equal	N/A	N/A	if ( strcmp ( ch , ch1 ) == 0 )	if ( ch == ch1 )
17904	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
17905	else	N/A	N/A	else	else
17906	print max ( l1 , l2 )	N/A	N/A	cout << max ( l1 , l2 ) << endl ;	cout << max ( l1, l2 ) << endl ;
17907	DUMMY	0.0	0.0	return 0;	DUMMY
17908	DUMMY	0.0	0.0	}	DUMMY
17909	DUMMY	0.0	0.0	int main() {	DUMMY
17910	create strings s and second	N/A	N/A	string s , second ;	string s, second ;
17911	read user input to s and second	N/A	N/A	cin >> s >> second ;	cin >> s >> second ;
17912	declare long long variables p and q = 0	N/A	N/A	long long p = 0 , q = 0 ;	long long p = 0, q = 0 ;
17913	create new long long called xx with value 0	N/A	N/A	long long xx = 0 ;	long long xx = 0 ;
17914	create new long long variable cnt = 0	N/A	N/A	long long cnt = 0 ;	long long cnt = 0 ;
17915	if s = second	N/A	N/A	if ( s == second )	if ( s == second )
17916	print " - 1 " to the standard output	N/A	N/A	cout << " -1 " << endl ;	cout << " -1 " ;
17917	DUMMY	0.0	0.0	return 0;	DUMMY
17918	DUMMY	0.0	0.0	}	DUMMY
17919	if length of s is greater than length of second	N/A	N/A	if ( s . size ( ) > second . size ( ) )	if ( s. length ( ) > second. size ( ) )
17920	print length of s to the standard output	N/A	N/A	cout << s . size ( ) << endl ;	cout << s. size ( ) << endl ;
17921	else	N/A	N/A	else	else
17922	print length of second	N/A	N/A	cout << second . size ( ) << endl ;	cout << second. size ( ) << endl ;
17923	DUMMY	0.0	0.0	return 0;	DUMMY
17924	DUMMY	0.0	0.0	}	DUMMY
17925	DUMMY	0.0	0.0	int main() {	DUMMY
17926	s1 , s2 = string	N/A	N/A	string s1 , s2 ;	string s1, s2 ;
17927	Read s1 and s2	N/A	N/A	cin >> s1 >> s2 ;	cin >> s1 >> s2 ;
17928	if s1 = s2	N/A	N/A	if ( s1 == s2 )	if ( s1 == s2 )
17929	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
17930	else	N/A	N/A	else	else
17931	print max of s1 and s2	N/A	N/A	cout << max ( s1 . size ( ) , s2 . size ( ) ) << endl ;	cout << max ( s1, s2 ) << endl ;
17932	DUMMY	0.0	0.0	}	DUMMY
17933	DUMMY	0.0	0.0	return 0;	DUMMY
17934	DUMMY	0.0	0.0	}	DUMMY
17935	DUMMY	0.0	0.0	int main() {	DUMMY
17936	create strings a and b	N/A	N/A	string a , b ;	string a, b ;
17937	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17938	let ints l = a . size ( ) and ll = b . size ( )	N/A	N/A	int l = a . size ( ) , ll = b . size ( ) ;	int l = ( a. size ( ) ), ll = ( b ). length ( ) ;
17939	if l is not equal to ll	N/A	N/A	if ( l != ll )	if ( l!= ll )
17940	print max ( l , ll )	N/A	N/A	cout << max ( l , ll ) << endl ;	cout << max ( l, ll ) << endl ;
17941	else if a is equal to b	N/A	N/A	else if ( a == b )	else if ( a == b )
17942	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
17943	else	N/A	N/A	else	else
17944	print a . size ( )	N/A	N/A	cout << a . size ( ) << endl ;	cout << a. size ( ) << endl ;
17945	DUMMY	0.0	0.0	}	DUMMY
17946	DUMMY	0.0	0.0	return 0;	DUMMY
17947	DUMMY	0.0	0.0	}	DUMMY
17948	DUMMY	0.0	0.0	int main() {	DUMMY
17949	a , b = string	N/A	N/A	string a , b ;	string a, b ;
17950	read a then b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17951	if size of a is not size of b	N/A	N/A	if ( a . size ( ) != b . size ( ) )	if ( a. size ( )!= b. length ( ) )
17952	print max of size of a and size of b	N/A	N/A	cout << max ( a . size ( ) , b . size ( ) ) << endl ;	cout << max ( ( a ). size ( ), ( b ). length ( ) ) << endl ;
17953	else if compare of b on a is 0	N/A	N/A	else if ( a . compare ( b ) == 0 )	else if ( a. compare ( b ) == 0 )
17954	print " - 1 "	N/A	N/A	cout << " -1 " << endl ;	cout << " -1 " << endl ;
17955	else	N/A	N/A	else	else
17956	s = int with s = size of a	N/A	N/A	int s = a . size ( ) ;	int s = a. size ( ) ;
17957	mp = string and int map	N/A	N/A	map < string , int > mp ;	map < string, int > mp ;
17958	x = int with x = s	N/A	N/A	int x = s ;	int x = s ;
17959	loop while x is greater than 0	N/A	N/A	while ( x > 0 )	while ( x > 0 )
17960	for i = 0 to s and i + x is less or equal to s	N/A	N/A	for ( int i = 0 ; i < s && i + x <= s ; i ++ )	for ( int i = 0 ; i < s && i + x <= s ; i ++ )
17961	st = string with st = substring of a starting at i and a length of x	N/A	N/A	string st ( a , i , x ) ;	string st = a. substr ( i, x. size ( ) ) ;
17962	set mp [ st ] to 1	N/A	N/A	mp [ st ] = 1 ;	mp [ st ] = 1 ;
17963	DUMMY	0.0	0.0	}	DUMMY
17964	for i = 0 to s and i + x is less or equal to s	N/A	N/A	for ( int i = 0 ; i < s && i + x <= s ; i ++ )	for ( int i = 0 ; i < s && i + x <= s ; i ++ )
17965	st = string with st = substring of b starting at i and a length of x	N/A	N/A	string st ( b , i , x ) ;	string st = b. substr ( i, x. length ( ) ) ;
17966	if mp [ st ] is 0	N/A	N/A	if ( mp [ st ] == 0 )	if ( mp [ st ] == 0 )
17967	print size of st	N/A	N/A	cout << st . size ( ) << endl ;	cout << st. size ( ) << endl ;
17968	DUMMY	0.0	0.0	return 0;	DUMMY
17969	DUMMY	0.0	0.0	}	DUMMY
17970	DUMMY	0.0	0.0	}	DUMMY
17971	decrement x	N/A	N/A	x -- ;	x -- ;
17972	DUMMY	0.0	0.0	}	DUMMY
17973	DUMMY	0.0	0.0	}	DUMMY
17974	DUMMY	0.0	0.0	}	DUMMY
17975	DUMMY	0.0	0.0	int main() {	DUMMY
17976	create strings a and b	N/A	N/A	string a , b ;	string a, b ;
17977	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
17978	if the length of a is not equal to the length of b	N/A	N/A	if ( a . length ( ) != b . length ( ) )	if ( a. length ( )!= b. size ( ) )
17979	print the max of length of a and length of b	N/A	N/A	cout << max ( a . length ( ) , b . length ( ) ) << endl ;	cout << max ( a. length ( ), b. size ( ) ) << endl ;
17980	else	N/A	N/A	else	else
17981	if a is equal to b	N/A	N/A	if ( a == b )	if ( a == b )
17982	print - 1	N/A	N/A	cout << - 1 << endl ;	cout << - 1 << endl ;
17983	else	N/A	N/A	else	else
17984	print the length of a	N/A	N/A	cout << a . length ( ) << endl ;	cout << a. size ( ) << endl ;
17985	DUMMY	0.0	0.0	}	DUMMY
17986	DUMMY	0.0	0.0	}	DUMMY
17987	DUMMY	0.0	0.0	return 0;	DUMMY
17988	DUMMY	0.0	0.0	}	DUMMY
17989	dx = int array with the values 0 , 1 , 0 , - 1 , 1 , 1 , - 1 , - 1	N/A	N/A	int dx [ ] = { 0 , 1 , 0 , - 1 , 1 , 1 , - 1 , - 1 } ;	int dx [ 4 ] = { 0, 1, 0, - 1, 1.0, 1.0, 0 } ;
17990	dy = int array with the values 1 , 0 , - 1 , 0 , 1 , - 1 , 1 , - 1	N/A	N/A	int dy [ ] = { 1 , 0 , - 1 , 0 , 1 , - 1 , 1 , - 1 } ;	int dy [ 4 ] = { 1, 0, - 1, - 0, 1,- 1, 1 } ;
17991	define empty function fast	N/A	N/A	void fast ( ) { }	void fast ( ) { }
17992	DUMMY	0.0	0.0	int main() {	DUMMY
17993	call fast	N/A	N/A	fast ( ) ;	fast ( ) ;
17994	s , t = string	N/A	N/A	string s , t ;	string s, t ;
17995	read s then t	N/A	N/A	cin >> s >> t ;	cin >> s >> t ;
17996	print - 1 if s is t else print max of size of s , size of t	N/A	N/A	cout << ( s == t ? - 1 : ( int ) max ( s . size ( ) , t . size ( ) ) ) << " \n " ;	cout << ( s == t? - 1 : max ( s. size ( ), t. length ( ) ) ) << endl ;
17997	DUMMY	0.0	0.0	}	DUMMY
17998	let n , c1 , c2 be long integers	N/A	N/A	long long n , c1 , c2 ;	long long n, c1, c2 ;
17999	let solve accepts long integer g	N/A	N/A	long long solve ( long long g )	void solve ( long long g )
18000	t1 , t2 , left , res be long integers with t1 = ceiling of ( double ) n / g , t2 = n / g , left = n , res = 0	N/A	N/A	long long t1 = ceil ( ( double ) n / g ) , t2 = n / g , left = n , res = 0 ;	long long t1 = ceil ( ( double ) n / g, t2 = n / G, left = n, res = 0 ;
18001	for t2 * g is not equal to left and left is greater than 0 , decrement left by t1 , decrement g by 1 , res = res + ( c1 + c2 * ( t1 - 1 ) * ( t1 - 1 ) )	N/A	N/A	for ( ; t2 * g != left && left > 0 ; left -= t1 , g -- ) res += ( c1 + c2 * ( t1 - 1 ) * ( t1 - 1 ) ) ;	for ( ; t2 * g!= left && left > 0 ; left -= t1, g -- ) res = res + ( c1 + c2 * ( t1 - 1 ) * t1 + 1 ) ) ;
18002	for g is greater than 0 , decrement left by t2 , decrement g by 1 , the value of res = res + ( c1 + c2 * ( t2 - 1 ) * ( t2 - 1 ) )	N/A	N/A	for ( ; g > 0 ; left -= t2 , g -- ) res += ( c1 + c2 * ( t2 - 1 ) * ( t2 - 1 ) ) ;	for ( ; g > 0 ; g --, left -= t2, g -- ) { res += ( c1 + c2 * ( t2 - 1 ) * (t2 - i ) ) ; }
18003	return the value of res	N/A	N/A	return res ;	return res ;
18004	DUMMY	0.0	0.0	}	DUMMY
18005	DUMMY	0.0	0.0	int main() {	DUMMY
18006	let t be a character	N/A	N/A	char t ;	char t ;
18007	read n , c1 , c2	N/A	N/A	cin >> n >> c1 >> c2 ;	cin >> n >> c1 >> c2 ;
18008	let p , r , i be long integers with p = 0 , r = 0	N/A	N/A	long long p = 0 , r = 0 , i ;	long long p = 0, r = 1, i ;
18009	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
18010	read t	N/A	N/A	cin >> t ;	cin >> t ;
18011	if t is equal to 1 increment p by 1 else increment r by 1	N/A	N/A	( t == ' 1 ' ) ? p ++ : r ++ ;	t == 1? p ++ : r ++ ;
18012	DUMMY	0.0	0.0	}	DUMMY
18013	let lo , hi be long integers with lo = 1 , hi = p	N/A	N/A	long long lo = 1 , hi = p ;	long long lo = 1, hi = p ;
18014	while lo is less than hi	N/A	N/A	while ( lo < hi )	while ( lo < hi )
18015	let diff be a long integer with diff = hi - lo	N/A	N/A	long long diff = hi - lo ;	long long diff = hi - lo ;
18016	let p1 , p2 be long integers with p1 = lo + diff / 3 , p2 = lo + ( 2 * diff + 2 ) / 3	N/A	N/A	long long p1 = lo + diff / 3 , p2 = lo + ( 2 * diff + 2 ) / 3 ;	long long p1 = lo + diff / 3, p2 = Lo + ( 2 * diff + 2 ) / 3 ;
18017	let s1 , s2 be a long integers with s1 = solve ( p1 ) , s2 = solve ( p2 )	N/A	N/A	long long s1 = solve ( p1 ) , s2 = solve ( p2 ) ;	long long int s1 = solve ( p1 ), s2 = fix ( p2 ) ;
18018	if s1 is equal to s2	N/A	N/A	if ( s1 == s2 )	if ( s1 == s2 )
18019	lo is equal to p1 + 1 , hi is equal to p2 - 1	N/A	N/A	lo = p1 + 1 , hi = p2 - 1 ;	lo = p1 + 1, hi = p2 - 1 ;
18020	else if s1 is greater than s2	N/A	N/A	else if ( s1 > s2 )	else if ( s1 > s2 )
18021	the value of lo = p1 + 1	N/A	N/A	lo = p1 + 1 ;	lo = p1 + 1 ;
18022	else do the following	N/A	N/A	else	else
18023	the value of hi = p2 - 1	N/A	N/A	hi = p2 - 1 ;	hi = p2 - 1 ;
18024	DUMMY	0.0	0.0	}	DUMMY
18025	print solve ( lo ) and newline	N/A	N/A	cout << solve ( lo ) << endl ;	cout << solve ( lo ) << endl ;
18026	DUMMY	0.0	0.0	}	DUMMY
18027	declare long longs n , c1 , c2	N/A	N/A	long long n , c1 , c2 ;	long long n, c1, c2 ;
18028	declare solve with long long g as argument , returning long long	N/A	N/A	long long solve ( long long g )	long long solve ( long long g )
18029	declare long longs t1 = round up ( double casted ( n ) / g ) , t2 = n / g , left = n , res = 0	N/A	N/A	long long t1 = ceil ( ( double ) n / g ) , t2 = n / g , left = n , res = 0 ;	long long t1 = ceil ( double ( n ) / g ), t2 = n / g, left = n, res = 0 ;
18030	for t2 * g is not left and left is greater than 0 , decrementing left by t1 , decrementing g , increment res by ( c1 + c2 * ( t1 - 1 ) * ( t1 - 1 ) )	N/A	N/A	for ( ; t2 * g != left && left > 0 ; left -= t1 , g -- ) res += ( c1 + c2 * ( t1 - 1 ) * ( t1 - 1 ) ) ;	for ( ; t2 * g!= left && left > 0 ; left -= t1, g -- ) { res += ( c1 + c2 * ( t1 - 1 ) * (t1 - 2 ) ) ; }
18031	for g is greater than 0 , decrementing left by t2 , decrementing g , increment res by ( c1 + c2 * ( t2 - 1 ) * ( t2 - 1 ) )	N/A	N/A	for ( ; g > 0 ; left -= t2 , g -- ) res += ( c1 + c2 * ( t2 - 1 ) * ( t2 - 1 ) ) ;	for ( g > 0 ; left > 0 && left > t2 ; g -- ) { res += ( c1 + c2 * ( t2 - 1 ) * (t2 - 2 ) ) ; }
18032	return res from function	N/A	N/A	return res ;	return res ;
18033	DUMMY	0.0	0.0	}	DUMMY
18034	DUMMY	0.0	0.0	int main() {	DUMMY
18035	declare t as character	N/A	N/A	char t ;	char t ;
18036	read n , c1 , c2	N/A	N/A	cin >> n >> c1 >> c2 ;	cin >> n >> c1 >> c2 ;
18037	declare long longs p = 0 , r = 0 , i	N/A	N/A	long long p = 0 , r = 0 , i ;	long long p == 0, r = 0, i ;
18038	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
18039	read t	N/A	N/A	cin >> t ;	cin >> t ;
18040	increment p if t is ' 1 ' , else increment r	N/A	N/A	( t == ' 1 ' ) ? p ++ : r ++ ;	p = t =='1 '? p ++ : r ++ ;
18041	DUMMY	0.0	0.0	}	DUMMY
18042	declare long long lo = 1 , hi = p	N/A	N/A	long long lo = 1 , hi = p ;	long long lo = 1, hi = p ;
18043	while lo is less than hi	N/A	N/A	while ( lo < hi )	while ( lo < hi )
18044	declare long long diff = hi - lo	N/A	N/A	long long diff = hi - lo ;	long long diff = hi - lo ;
18045	declare long longs p1 = lo + diff / 3 , p2 = lo + ( 2 * diff + 2 ) / 3	N/A	N/A	long long p1 = lo + diff / 3 , p2 = lo + ( 2 * diff + 2 ) / 3 ;	long long p1 = lo + diff / 3, p2 = ( lo + ( 2 * diff + 2 ) / 3 ) ;
18046	declare long longs s1 = result of run solve with p1 as argument , s2 = result of run solve ( p2 )	N/A	N/A	long long s1 = solve ( p1 ) , s2 = solve ( p2 ) ;	long long s1 = solve ( p1 ), s2 = solve( p2 ) ;
18047	if s1 is s2	N/A	N/A	if ( s1 == s2 )	if ( s1 == s2 )
18048	let lo be p1 + 1 , hi be p2 - 1	N/A	N/A	lo = p1 + 1 , hi = p2 - 1 ;	lo = p1 + 1, hi = p2 - 1 ;
18049	else if s1 is greater than s2	N/A	N/A	else if ( s1 > s2 )	else if ( s1 > s2 )
18050	let lo be p1 + 1	N/A	N/A	lo = p1 + 1 ;	lo = p1 + 1 ;
18051	else	N/A	N/A	else	else
18052	let hi be p2 - 1	N/A	N/A	hi = p2 - 1 ;	hi = p2 - 1 ;
18053	DUMMY	0.0	0.0	}	DUMMY
18054	print result of run solve with lo as argument , newline	N/A	N/A	cout << solve ( lo ) << endl ;	cout << solve ( lo ) << endl ;
18055	DUMMY	0.0	0.0	}	DUMMY
18056	DUMMY	0.0	0.0	int main() {	DUMMY
18057	create integer n	N/A	N/A	int n ;	int n ;
18058	create long longs c1 , c2	N/A	N/A	long long c1 , c2 ;	long long c1, c2 ;
18059	read n read c1 read c2	N/A	N/A	cin >> n >> c1 >> c2 ;	cin >> n >> c1 >> c2 ;
18060	create integer cnt with cnt = 0	N/A	N/A	int cnt = 0 ;	int cnt = 0 ;
18061	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
18062	create character c	N/A	N/A	char c ;	char c ;
18063	read c	N/A	N/A	cin >> c ;	cin >> c ;
18064	if c is ' 1 ' increment cnt	N/A	N/A	if ( c == ' 1 ' ) cnt ++ ;	if ( c =='1') cnt ++ ;
18065	DUMMY	0.0	0.0	}	DUMMY
18066	create long long ans with ans = 1e18	N/A	N/A	long long ans = 1e18 ;	long long ans = 1e18 ;
18067	for i = 1 to cnt inclusive	N/A	N/A	for ( int i = 1 ; i <= cnt ; i ++ )	for ( long long i = 1 ; i <= cnt ; i ++ )
18068	create long longs p , mod with p = n / i , mod = n % i	N/A	N/A	long long p = n / i , mod = n % i ;	long long p = n / i, mod = n % i ;
18069	create long long now with now = ( p - 1 ) * ( p - 1 ) * c2 * ( i - mod ) + c1 * i + p * p * mod * c2	N/A	N/A	long long now = ( p - 1 ) * ( p - 1 ) * c2 * ( i - mod ) + c1 * i + p * p * mod * c2 ;	long long now = ( long long ) * ( p - 1 ) * c2 * ( i - mod ) + c1 * i + p * p * % c2 ;
18070	set ans to minimum of ans and now	N/A	N/A	ans = min ( ans , now ) ;	ans = min ( ans, now ) ;
18071	DUMMY	0.0	0.0	}	DUMMY
18072	print ans print newline	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
18073	DUMMY	0.0	0.0	return 0;	DUMMY
18074	DUMMY	0.0	0.0	}	DUMMY
18075	DUMMY	0.0	0.0	int main() {	DUMMY
18076	create long longs n , m , i , j , p , q , cnt , c1 , c2 , x , y , mn	N/A	N/A	long long n , m , i , j , p , q , cnt , c1 , c2 , x , y , mn ;	long long n, m, i, j, p, q, cnt, c1, c2, x, y, mn ;
18077	create string s	N/A	N/A	string s ;	string s ;
18078	while read n read c1 read c2 is true	N/A	N/A	while ( cin >> n >> c1 >> c2 )	while ( cin >> n >> c1 >> c2 )
18079	read charaacter	N/A	N/A	getchar ( ) ;	getchar ( ) ;
18080	read s	N/A	N/A	cin >> s ;	cin >> s ;
18081	set cnt to 0	N/A	N/A	cnt = 0 ;	cnt = 0 ;
18082	set mn to LONG_LONG_MAX	N/A	N/A	mn = LONG_LONG_MAX ;	long long mn = LONG_LONG_MAX ;
18083	for i = 0 to size of s exclusive	N/A	N/A	for ( i = 0 ; i < s . size ( ) ; i ++ )	for ( int i = 0 ; i < s. size ( ) ; i ++ )
18084	if s [ i ] is ' 1 ' , increment cnt	N/A	N/A	if ( s [ i ] == ' 1 ' ) cnt ++ ;	if ( s [ i ] =='1') cnt ++ ;
18085	DUMMY	0.0	0.0	}	DUMMY
18086	for i = 1 to cnt inclusive	N/A	N/A	for ( i = 1 ; i <= cnt ; i ++ )	for ( int i = 1 ; i <= cnt ; i ++ )
18087	set x to n / i	N/A	N/A	x = n / i ;	x = n / i ;
18088	set y to n % i	N/A	N/A	y = n % i ;	y = n % i ;
18089	set p to ( c1 + c2 * ( x - 1 ) * ( x - 1 ) ) * ( i - y )	N/A	N/A	p = ( c1 + c2 * ( x - 1 ) * ( x - 1 ) ) * ( i - y ) ;	long long p = ( c1 + c2 * ( x - 1 ) * ( long long ) x + 1 ) ) * i - y ;
18090	set q to ( c1 + ( c2 * x * x ) ) * y	N/A	N/A	q = ( c1 + ( c2 * x * x ) ) * y ;	q = ( c1 + ( c2 * x * x ) ) * y ;
18091	set m to p + q	N/A	N/A	m = p + q ;	m = p + q ;
18092	set mn to minimum of mn and m	N/A	N/A	mn = min ( mn , m ) ;	mn = min ( mn, m ) ;
18093	DUMMY	0.0	0.0	}	DUMMY
18094	print mn print newline	N/A	N/A	cout << mn << endl ;	cout << mn << endl ;
18095	DUMMY	0.0	0.0	}	DUMMY
18096	DUMMY	0.0	0.0	}	DUMMY
18097	declare constant int MAX_N = 2e5 + 10	N/A	N/A	const int MAX_N = 2e5 + 10 ;	const int MAX_N = 2e5 + 10 ;
18098	declare constant int MAX_LOG = 62	N/A	N/A	const int MAX_LOG = 62 ;	const int MAX_LOG = 62 ;
18099	declare constant long long INF = 1e18 + 1	N/A	N/A	const long long INF = 1e18 + 1 ;	const long long INF = 1e18 + 1 ;
18100	declare constant long long MOD = 1e9 + 7	N/A	N/A	const long long MOD = 1e9 + 7 ;	const long long MOD = 1e9 + 7 ;
18101	declare long long variables n , c1 , c2 and ans with ans = INF	N/A	N/A	long long n , c1 , c2 , ans = INF ;	long long n, c1, c2, ans = INF ;
18102	create string s	N/A	N/A	string s ;	string s ;
18103	declare integer variable m	N/A	N/A	int m ;	int m ;
18104	DUMMY	0.0	0.0	int main() {	DUMMY
18105	read input to n , c1 and c2	N/A	N/A	cin >> n >> c1 >> c2 ;	cin >> n >> c1 >> c2 ;
18106	read s	N/A	N/A	cin >> s ;	cin >> s ;
18107	for i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
18108	if s [ i ] = ' 1 ' , increment m	N/A	N/A	if ( s [ i ] == ' 1 ' ) m ++ ;	if ( s [ i ] =='1') m ++ ;
18109	for i from 1 to m inclusive	N/A	N/A	for ( int i = 1 ; i <= m ; i ++ )	for ( int i = 1 ; i <= m ; i ++ )
18110	create long long k = n / i	N/A	N/A	long long k = n / i ;	long long k = n / i ;
18111	create long long r = n % i	N/A	N/A	long long r = n % i ;	long long r = n % i ;
18112	declare long long variable tmp = r * ( c1 + c2 * k * k )	N/A	N/A	long long tmp = r * ( c1 + c2 * ( k ) * k ) ;	long long tmp = r * ( c1 + c2 * k * k ) ;
18113	add ( i - r ) * ( c1 + c2 * ( k - 1 ) * ( k - 1 ) ) to tmp	N/A	N/A	tmp += ( i - r ) * ( c1 + c2 * ( k - 1 ) * ( k - 1 ) ) ;	tmp = tmp + ( i - r ) * ( c1 + c2 * ( k - 1 ) * n + 1 ) ) ;
18114	set ans to min of ans and tmp	N/A	N/A	ans = min ( ans , tmp ) ;	ans = min ( ans, tmp ) ;
18115	DUMMY	0.0	0.0	}	DUMMY
18116	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
18117	DUMMY	0.0	0.0	}	DUMMY
18118	n = long long	N/A	N/A	long long n ;	long long n ;
18119	DUMMY	0.0	0.0	int main() {	DUMMY
18120	read n	N/A	N/A	cin >> n ;	cin >> n ;
18121	if n is 1 print 4	N/A	N/A	if ( n == 1 ) cout << 4 ;	if ( n == 1 ) cout << 4 << endl ;
18122	if n is 2 print 22	N/A	N/A	if ( n == 2 ) cout << 22 ;	if ( n == 2 ) cout << 22 << endl ;
18123	if n is 3 print 27	N/A	N/A	if ( n == 3 ) cout << 27 ;	if ( n == 3 ) cout << 27 << endl ;
18124	if n is 4 print 58	N/A	N/A	if ( n == 4 ) cout << 58 ;	if ( n == 4 ) cout << 58 << endl ;
18125	if n is 5 print 85	N/A	N/A	if ( n == 5 ) cout << 85 ;	if ( n == 5 ) cout << 85 << endl ;
18126	if n is 6 print 94	N/A	N/A	if ( n == 6 ) cout << 94 ;	if ( n == 6 ) cout << 94 << endl ;
18127	if n is 7 print 121	N/A	N/A	if ( n == 7 ) cout << 121 ;	if ( n == 7 ) cout << 121 << endl ;
18128	if n is 8 print 166	N/A	N/A	if ( n == 8 ) cout << 166 ;	if ( n == 8 ) cout << 166 << endl ;
18129	if n is 9 print 202	N/A	N/A	if ( n == 9 ) cout << 202 ;	if ( n == 9 ) cout << 202 << endl ;
18130	if n is 10 print 265	N/A	N/A	if ( n == 10 ) cout << 265 ;	if ( n == 10 ) cout << 265 << endl ;
18131	if n is 11 print 274	N/A	N/A	if ( n == 11 ) cout << 274 ;	if ( n == 11 ) cout << 274 << endl ;
18132	if n is 12 print 319	N/A	N/A	if ( n == 12 ) cout << 319 ;	if ( n == 12 ) cout << " 319 " << endl ;
18133	if n is 13 print 346	N/A	N/A	if ( n == 13 ) cout << 346 ;	if ( n == 13 ) cout << 346 << endl ;
18134	if n is 14 print 355	N/A	N/A	if ( n == 14 ) cout << 355 ;	if ( n == 14 ) cout << 355 << endl ;
18135	if n is 15 print 378	N/A	N/A	if ( n == 15 ) cout << 378 ;	if ( n == 15 ) cout << 378 << endl ;
18136	if n is 16 print 382	N/A	N/A	if ( n == 16 ) cout << 382 ;	if ( n == 16 ) cout << 382 << endl ;
18137	if n is 17 print 391	N/A	N/A	if ( n == 17 ) cout << 391 ;	if ( n == 17 ) cout << 391 << endl ;
18138	if n is 18 print 438	N/A	N/A	if ( n == 18 ) cout << 438 ;	if ( n == 18 ) cout << 438 << endl ;
18139	if n is 19 print 454	N/A	N/A	if ( n == 19 ) cout << 454 ;	if ( n == 19 ) cout << 454 << endl ;
18140	if n is 20 print 483	N/A	N/A	if ( n == 20 ) cout << 483 ;	if ( n == 20 ) cout << 483 << endl ;
18141	if n is 21 print 517	N/A	N/A	if ( n == 21 ) cout << 517 ;	if ( n == 21 ) cout << 517 << endl ;
18142	if n is 22 print 526	N/A	N/A	if ( n == 22 ) cout << 526 ;	if ( n == 22 ) cout << 526 << endl ;
18143	if n is 23 print 535	N/A	N/A	if ( n == 23 ) cout << 535 ;	if ( n == 23 ) cout << 535 << endl ;
18144	if n is 24 print 562	N/A	N/A	if ( n == 24 ) cout << 562 ;	if ( n == 24 ) cout << 562 << endl ;
18145	if n is 25 print 576	N/A	N/A	if ( n == 25 ) cout << 576 ;	if ( n == 25 ) cout << 576 << endl ;
18146	if n is 26 print 588	N/A	N/A	if ( n == 26 ) cout << 588 ;	if ( n == 26 ) cout << 588 << endl ;
18147	if n is 27 print 627	N/A	N/A	if ( n == 27 ) cout << 627 ;	if ( n == 27 ) cout << 627 << endl ;
18148	if n is 28 print 634	N/A	N/A	if ( n == 28 ) cout << 634 ;	if ( n == 28 ) cout << 634 << endl ;
18149	if n is 29 print 636	N/A	N/A	if ( n == 29 ) cout << 636 ;	if ( n == 29 ) cout << 636 << endl ;
18150	if n is 30 print 645	N/A	N/A	if ( n == 30 ) cout << 645 ;	if ( n == 30 ) cout << 645 << endl ;
18151	print a new line	N/A	N/A	cout << endl ;	cout << endl ;
18152	DUMMY	0.0	0.0	return 0;	DUMMY
18153	DUMMY	0.0	0.0	}	DUMMY
18154	in the function es_primo that takes integer n and returns bool	N/A	N/A	bool es_primo ( int n )	bool es_primo ( int n )
18155	if n < 4 , return true	N/A	N/A	if ( n < 4 ) return true ;	if ( n < 4 ) return true ;
18156	for i = 2 to i * i < = n	N/A	N/A	for ( int i = 2 ; i * i <= n ; i ++ )	for ( int i = 2 ; i * i <= n ; i ++ )
18157	if n modulo i is 0 , return false	N/A	N/A	if ( n % i == 0 ) return false ;	if ( n % i == 0 ) return false ;
18158	DUMMY	0.0	0.0	}	DUMMY
18159	return true	N/A	N/A	return true ;	return true ;
18160	DUMMY	0.0	0.0	}	DUMMY
18161	in the function sum_digitos that takes integer n and returns int	N/A	N/A	int sum_digitos ( int n )	int sum_digitos ( int n )
18162	sum = integer with sum = 0	N/A	N/A	int sum = 0 ;	int sum = 0 ;
18163	while n > 0	N/A	N/A	while ( n > 0 )	while ( n > 0 )
18164	sum = sum + n modulo 10	N/A	N/A	sum += n % 10 ;	sum += n % 10 ;
18165	n = n / 10	N/A	N/A	n /= 10 ;	n /= 10 ;
18166	DUMMY	0.0	0.0	}	DUMMY
18167	return sum	N/A	N/A	return sum ;	return sum ;
18168	DUMMY	0.0	0.0	}	DUMMY
18169	in the function sum_factores that takes integer n and returns integer	N/A	N/A	int sum_factores ( int n )	int sum_factores ( int n )
18170	sum = integer with sum = 0	N/A	N/A	int sum = 0 ;	int sum = 0 ;
18171	for i = 2 to i * i < = n	N/A	N/A	for ( int i = 2 ; i * i <= n ; i ++ )	for ( int i = 2 ; i * i <= n ; i ++ )
18172	while n modulo i is 0	N/A	N/A	while ( n % i == 0 )	while ( n % i == 0 )
18173	sum = sum + sum_digitos ( i )	N/A	N/A	sum += sum_digitos ( i ) ;	sum += sum_digitos ( i ) ;
18174	n = n / i	N/A	N/A	n /= i ;	n /= i ;
18175	DUMMY	0.0	0.0	}	DUMMY
18176	DUMMY	0.0	0.0	}	DUMMY
18177	if n > 1 , sum = sum + sum_digitos ( n )	N/A	N/A	if ( n > 1 ) { sum += sum_digitos ( n ) ; }	if ( n > 1 ) sum += sum_digitos ( n ) ;
18178	return sum	N/A	N/A	return sum ;	return sum ;
18179	DUMMY	0.0	0.0	}	DUMMY
18180	in the function busca_sig that takes integer n and returns integer	N/A	N/A	int busca_sig ( int n )	int busca_sig ( int n )
18181	do increment n , while es_primo ( n ) or sum_digitos ( n ) is not sum_factores ( n )	N/A	N/A	do { n ++ ; } while ( es_primo ( n ) || sum_digitos ( n ) != sum_factores ( n ) ) ;	do { n ++ ; } while ( es_primo ( n ) || sum_digitos ( N )!= sum_factores ( n. ) ) ;
18182	return n	N/A	N/A	return n ;	return n ;
18183	DUMMY	0.0	0.0	}	DUMMY
18184	DUMMY	0.0	0.0	int main() {	DUMMY
18185	n = integer	N/A	N/A	int n ;	int n ;
18186	read n	N/A	N/A	cin >> n ;	cin >> n ;
18187	act = integer with act = 0	N/A	N/A	int act = 0 ;	int act = 0 ;
18188	for i = 1 to n , act = busca_sig ( act )	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { act = busca_sig ( act ) ; }	for ( int i = 1 ; i <= n ; i ++ ) { act = busca_sig ( act ) ; }
18189	print act	N/A	N/A	cout << act << " \n " ;	cout << act << endl ;
18190	DUMMY	0.0	0.0	return 0;	DUMMY
18191	DUMMY	0.0	0.0	}	DUMMY
18192	declare integer variable n	N/A	N/A	int n ;	int n ;
18193	declare string t	N/A	N/A	string t ;	string t ;
18194	declare int k	N/A	N/A	int k ;	int k ;
18195	create int ans_len	N/A	N/A	int ans_len ;	int ans_len ;
18196	create char array str with 20 * 100010 elements	N/A	N/A	char str [ 20 * 100010 ] ;	char str [ 20 * 100010 ] ;
18197	create int array chars s with size 80 * 100010	N/A	N/A	int chars [ 80 * 100010 ] ;	char s [ 80 * 100010 ] ;
18198	function push_up with int argument rt	N/A	N/A	void push_up ( int rt )	void push_up ( int rt )
18199	chars [ rt ] = chars [ rt < < 1 ] + chars [ rt < < 1 | 1 ]	N/A	N/A	chars [ rt ] = chars [ rt << 1 ] + chars [ rt << 1 | 1 ] ;	chars [ rt ] += chars [ Rt << 1 | 1 ] ;
18200	DUMMY	0.0	0.0	}	DUMMY
18201	void function update with int arguments L , R , left , right and rt	N/A	N/A	void update ( int L , int R , int left , int right , int rt )	void update ( int L, int R, int left, int right, int rt )
18202	if chars [ rt ] > = right - left + 1 , return	N/A	N/A	if ( chars [ rt ] >= right - left + 1 ) return ;	if ( chars [ rt ] >= right - left + 1 ) return ;
18203	if left is equal to right	N/A	N/A	if ( left == right )	if ( left == right )
18204	create char array s with rt elements	N/A	N/A	chars [ rt ] = 1 ;	char s [ rt ] ;
18205	set str [ left ] to t [ left - L ]	N/A	N/A	str [ left ] = t [ left - L ] ;	str [ left ] = t [ left - L ] ;
18206	return	N/A	N/A	return ;	return ;
18207	DUMMY	0.0	0.0	}	DUMMY
18208	if L > right or R < left , return	N/A	N/A	if ( L > right || R < left ) return ;	if ( L > right || R < left ) return ;
18209	int mid = ( left + right ) > > 1	N/A	N/A	int mid = ( left + right ) >> 1 ;	int mid = ( left + right ) >> 1 ;
18210	if mid > = R	N/A	N/A	if ( mid >= R )	if ( mid >= R )
18211	call update with arguments L , R , left , mid and rt < < 1	N/A	N/A	update ( L , R , left , mid , rt << 1 ) ;	update ( L, R, left, mid, rt << 1 ) ;
18212	else if mid is less than L	N/A	N/A	else if ( mid < L )	else if ( mid < L )
18213	call update with arguments L , R , mid + 1 , right and rt < < 1 | 1	N/A	N/A	update ( L , R , mid + 1 , right , rt << 1 | 1 ) ;	update ( L, R, mid + 1, right, rt << 1 | 1 ) ;
18214	else	N/A	N/A	else	else
18215	call update with arguments L , R , left , mid and rt < < 1	N/A	N/A	update ( L , R , left , mid , rt << 1 ) ;	update ( L, R, left, mid, rt << 1 ) ;
18216	call update with arguments L , R , mid + 1 , right and rt < < 1 | 1	N/A	N/A	update ( L , R , mid + 1 , right , rt << 1 | 1 ) ;	update ( L, R, mid + 1, right, rt << 1 | 1 ) ;
18217	DUMMY	0.0	0.0	}	DUMMY
18218	call push_up ( rt )	N/A	N/A	push_up ( rt ) ;	push_up ( rt ) ;
18219	DUMMY	0.0	0.0	}	DUMMY
18220	DUMMY	0.0	0.0	int main() {	DUMMY
18221	create int pos	N/A	N/A	int pos ;	int pos ;
18222	declare integer endpos	N/A	N/A	int endpos ;	int endpos ;
18223	read n and loop further	N/A	N/A	while ( cin >> n )	while ( cin >> n )
18224	change ans_len to 0	N/A	N/A	ans_len = 0 ;	ans_len = 0 ;
18225	for i from 1 to 2000010 exclusive , assign ' a ' to str [ i ]	N/A	N/A	for ( int i = 1 ; i < 2000010 ; i ++ ) str [ i ] = ' a ' ;	for ( int i = 1 ; i < 2000010 ; i ++ ) str [ i ] ='a';
18226	set sizeof ( chars ) bytes at the pointer chars to 0	N/A	N/A	memset ( chars , 0 , sizeof ( chars ) ) ;	memset ( chars, 0, sizeof ( chars ) ) ;
18227	for i from 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
18228	read input to t and k	N/A	N/A	cin >> t >> k ;	cin >> t >> k ;
18229	loop j from 1 to k inclusive	N/A	N/A	for ( int j = 1 ; j <= k ; j ++ )	for ( int j = 1 ; j <= k ; j ++ )
18230	read pos	N/A	N/A	cin >> pos ;	cin >> pos ;
18231	set endpos to pos + length of t - 1	N/A	N/A	endpos = pos + t . length ( ) - 1 ;	endpos = pos + t. size ( ) - 1 ;
18232	call update with arguments pos , endpos , 1 , 2000010 and 1	N/A	N/A	update ( pos , endpos , 1 , 2000010 , 1 ) ;	update ( pos, endpos, 1, 2000010, 1 ) ;
18233	if j = k	N/A	N/A	if ( j == k )	if ( j == k )
18234	change ans_len to endpos if endpos is greater than ans_len	N/A	N/A	if ( endpos > ans_len ) ans_len = endpos ;	ans_len = endpos > ans_len? endpos : endpos ;
18235	DUMMY	0.0	0.0	}	DUMMY
18236	DUMMY	0.0	0.0	}	DUMMY
18237	DUMMY	0.0	0.0	}	DUMMY
18238	for i from 1 to ans_len inclusive , print str [ i ]	N/A	N/A	for ( int i = 1 ; i <= ans_len ; i ++ ) cout << str [ i ] ;	for ( int i = 1 ; i <= ans_len ; i ++ ) cout << str [ i ] ;
18239	print new line	N/A	N/A	cout << endl ;	cout << endl ;
18240	DUMMY	0.0	0.0	}	DUMMY
18241	DUMMY	0.0	0.0	}	DUMMY
18242	DUMMY	0.0	0.0	int main() {	DUMMY
18243	create long long n , k , p	N/A	N/A	long long n , k , p ;	long long n, k, p ;
18244	read n read k read p	N/A	N/A	cin >> n >> k >> p ;	cin >> n >> k >> p ;
18245	create long long arrays pe , ke , with pe size 1001 , ke size 2002	N/A	N/A	long long pe [ 1001 ] , ke [ 2002 ] ;	long long pe [ 1001 ], ke [ 2002 ] ;
18246	for a = 0 to n exclusive , read pe [ a ]	N/A	N/A	for ( int a = 0 ; a < n ; a ++ ) cin >> pe [ a ] ;	for ( long long a = 0 ; a < n ; a ++ ) cin >> pe [ a ] ;
18247	for a = 0 to k exclusive , read ke [ a ]	N/A	N/A	for ( int a = 0 ; a < k ; a ++ ) cin >> ke [ a ] ;	for ( long long a = 0 ; a < k ; a ++ ) { cin >> ke [ a ] ; }
18248	sort elements from pe to pe + n	N/A	N/A	sort ( pe , pe + n ) ;	sort ( pe, pe + n ) ;
18249	sort elements from ke to pe + k	N/A	N/A	sort ( ke , ke + k ) ;	sort ( ke, ke + k ) ;
18250	create long long mins with mins = 99999999999999	N/A	N/A	long long mins = 99999999999999 ;	long long mins = 99999999999999 ;
18251	for a = 0 to k - n + 1 exclusive	N/A	N/A	for ( int a = 0 ; a < k - n + 1 ; a ++ )	for ( int a = 0 ; a < k - n + 1 ; a ++ )
18252	create long long tmp with tmp = 0	N/A	N/A	long long tmp = 0 ;	long long tmp = 0 ;
18253	for b = 0 to n exclusive , set tmp to maximum of tmp and absolute value of ( pe [ b ] - ke [ a + b ] ) + absolute value of ( ke [ a + b ] - p )	N/A	N/A	for ( int b = 0 ; b < n ; b ++ ) tmp = max ( tmp , abs ( pe [ b ] - ke [ a + b ] ) + abs ( ke [ a + b ] - p ) ) ;	for ( long long b = 0 ; b < n ; b ++ ) { tmp = max ( tmp, abs ( pe [ b ] - ke [ a + b ] ) + abs ( ke ['a'] - p ) ) ; }
18254	set mins to minimum of tmp and mins	N/A	N/A	mins = min ( tmp , mins ) ;	mins = min ( tmp, mins ) ;
18255	DUMMY	0.0	0.0	}	DUMMY
18256	print mins print newline	N/A	N/A	cout << mins << endl ;	cout << mins << endl ;
18257	DUMMY	0.0	0.0	return 0;	DUMMY
18258	DUMMY	0.0	0.0	}	DUMMY
18259	mod = const int with mod = 1000000007	N/A	N/A	const int mod = 1000000007 ;	const int mod = 1000000007 ;
18260	inf = const long long with inf = 1000000000000	N/A	N/A	const long long inf = 1000000000000 ;	const long long inf = 1000000000000 ;
18261	DUMMY	0.0	0.0	int main() {	DUMMY
18262	n , k , p = int	N/A	N/A	int n , k , p ;	int n, k, p ;
18263	read n then k then p	N/A	N/A	cin >> n >> k >> p ;	cin >> n >> k >> p ;
18264	A , B = vector of long longs	N/A	N/A	vector < long long > A , B ;	vector < long long > A, B ;
18265	for i = 0 to n	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
18266	x = long long	N/A	N/A	long long x ;	long long x ;
18267	read x	N/A	N/A	cin >> x ;	cin >> x ;
18268	append x to A	N/A	N/A	A . push_back ( x ) ;	A. push_back ( x ) ;
18269	DUMMY	0.0	0.0	}	DUMMY
18270	for i = 0 to k	N/A	N/A	for ( int i = 0 ; i < k ; i ++ )	for ( long long i = 0 ; i < k ; i ++ )
18271	x = long long	N/A	N/A	long long x ;	long long x ;
18272	read x	N/A	N/A	cin >> x ;	cin >> x ;
18273	append x to B	N/A	N/A	B . push_back ( x ) ;	B. push_back ( x ) ;
18274	DUMMY	0.0	0.0	}	DUMMY
18275	sort vector A	N/A	N/A	sort ( A . begin ( ) , A . end ( ) ) ;	sort ( A. begin ( ), A. end ( ) ) ;
18276	sort vector B	N/A	N/A	sort ( B . begin ( ) , B . end ( ) ) ;	sort ( B. begin ( ), B. end ( ) ) ;
18277	ans = long long with ans = inf	N/A	N/A	long long ans = inf ;	long long ans = inf ;
18278	for i = 0 to k - n inclusive	N/A	N/A	for ( int i = 0 ; i <= k - n ; i ++ )	for ( long long i = 0 ; i <= k - n ; i ++ )
18279	temp = long long with temp = 0	N/A	N/A	long long temp = 0 ;	long long temp = 0 ;
18280	index = int with index = i	N/A	N/A	int index = i ;	int index = i ;
18281	for j = 0 to n	N/A	N/A	for ( int j = 0 ; j < n ; j ++ )	for ( int j = 0 ; j < n ; j ++ )
18282	temp2 = long long with temp2 = 0	N/A	N/A	long long temp2 = 0 ;	long long temp2 = 0 ;
18283	set temp2 to the sum the absolute value of A [ j ] - B [ index ] and the absolute value of B [ index ] - p	N/A	N/A	temp2 = abs ( A [ j ] - B [ index ] ) + abs ( B [ index ] - p ) ;	temp2 += abs ( A [ j ] - B [ index ] ), abs ( B [ Index ] - p ) ;
18284	set temp to max between temp and temp2	N/A	N/A	temp = max ( temp , temp2 ) ;	temp = max ( temp, temp2 ) ;
18285	increment index	N/A	N/A	index ++ ;	index ++ ;
18286	DUMMY	0.0	0.0	}	DUMMY
18287	set ans to min between ans and temp	N/A	N/A	ans = min ( ans , temp ) ;	ans = min ( ans, temp ) ;
18288	DUMMY	0.0	0.0	}	DUMMY
18289	print ans	N/A	N/A	cout << ans << ' \n ' ;	cout << ans << endl ;
18290	DUMMY	0.0	0.0	return 0;	DUMMY
18291	DUMMY	0.0	0.0	}	DUMMY
18292	N = constant integer with value of 2e5 + 50	N/A	N/A	const int N = 2e5 + 50 ;	const int N = 2e5 + 50 ;
18293	M = constant integer with value of 1e6	N/A	N/A	const int M = 1e6 ;	const int M = 1e6 ;
18294	oo = constant long long with value of 1e18	N/A	N/A	const long long oo = 1e18 ;	const long long oo = 1e18 ;
18295	mod = constant integer with value of 1e9 + 7	N/A	N/A	const int mod = 1e9 + 7 ;	const int mod = 1e9 + 7 ;
18296	a , b = long long arrays with a length of 1010 and b length of 2010	N/A	N/A	long long a [ 1010 ] , b [ 2010 ] ;	long long a [ 1010 ], b [ 2010 ] ;
18297	n , k , p = long long	N/A	N/A	long long n , k , p ;	long long n, k, p ;
18298	in function can that takes long long variable md and returns a boolean	N/A	N/A	bool can ( long long md )	bool can ( long long md )
18299	id = long long with value of 0	N/A	N/A	long long id = 0 ;	long long id = 0 ;
18300	for i = 0 to k exclusive	N/A	N/A	for ( int i = 0 ; i < k ; i ++ )	for ( long long i = 0 ; i < k ; i ++ )
18301	if the absolute value of ( a [ id ] - b [ i ] ) plus the absolute value of ( b [ i ] - p ) is greater than md then continue	N/A	N/A	if ( abs ( a [ id ] - b [ i ] ) + abs ( b [ i ] - p ) > md ) continue ;	if ( abs ( a [ id ] - b [ i ] ) + abs ( b [ 1 ] - p ) > md ) continue ;
18302	add 1 to id	N/A	N/A	id ++ ;	id ++ ;
18303	if id equals n return 1	N/A	N/A	if ( id == n ) return 1 ;	if ( id == n ) return 1 ;
18304	DUMMY	0.0	0.0	}	DUMMY
18305	DUMMY	0.0	0.0	return 0;	DUMMY
18306	DUMMY	0.0	0.0	}	DUMMY
18307	DUMMY	0.0	0.0	int main() {	DUMMY
18308	read n , k , and p	N/A	N/A	cin >> n >> k >> p ;	cin >> n >> k >> p ;
18309	for i = 0 to n exclusive read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
18310	for i = 0 to k exclusive read b [ i ]	N/A	N/A	for ( int i = 0 ; i < k ; i ++ ) cin >> b [ i ] ;	for ( int i = 0 ; i < k ; i ++ ) cin >> b [ i ] ;
18311	sort the first n elements of a	N/A	N/A	sort ( a , a + n ) ;	sort ( a, a + n ) ;
18312	sort the first k elements of b	N/A	N/A	sort ( b , b + k ) ;	sort ( b, b + k ) ;
18313	md , lo , hi , and ans = long long with lo value of 0 and hi value of 2e9 and ans value of 0	N/A	N/A	long long md , lo = 0 , hi = 2e9 , ans = 0 ;	long long md, lo = 0, hi = 2e9, ans = 0 ;
18314	while lo is less than or equal to hi	N/A	N/A	while ( lo <= hi )	while ( lo <= hi )
18315	set md to half of lo plus hi	N/A	N/A	md = ( lo + hi ) / 2 ;	md = lo / hi ;
18316	if call can with argument of md is true	N/A	N/A	if ( can ( md ) )	if ( can ( md ) )
18317	set hi to md minus 1	N/A	N/A	hi = md - 1 ;	hi = md -- ;
18318	set ans to md	N/A	N/A	ans = md ;	ans = md ;
18319	else	N/A	N/A	else	else
18320	set lo to md plus 1	N/A	N/A	lo = md + 1 ;	lo = md + 1 ;
18321	DUMMY	0.0	0.0	}	DUMMY
18322	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
18323	DUMMY	0.0	0.0	}	DUMMY
18324	N = const long long with N = 1000 + 5	N/A	N/A	const long long N = 1000 + 5 ;	const long long N = 1000 + 5 ;
18325	N = const long long with K = 2000 + 5	N/A	N/A	const long long K = 2000 + 5 ;	const long long K = 2000 + 5 ;
18326	n , m , fi = long long	N/A	N/A	long long n , m , fi ;	long long n, m, fi ;
18327	p = array of N long long	N/A	N/A	long long p [ N ] ;	long long p [ N ] ;
18328	k = array of K long long	N/A	N/A	long long k [ K ] ;	long long k [ K ] ;
18329	in the function di that takes long long a and b and returns long long	N/A	N/A	long long di ( long long a , long long b )	long long di ( long long a, long long b )
18330	return abs of a - b	N/A	N/A	return abs ( a - b ) ;	return abs ( a - b ) ;
18331	DUMMY	0.0	0.0	}	DUMMY
18332	in the function ok that takes long long t and returns bool	N/A	N/A	bool ok ( long long t )	bool ok ( long long t )
18333	set poz to 1	N/A	N/A	long long poz = 1 ;	poz = 1 ;
18334	for i = 1 to n inclusive	N/A	N/A	for ( long long i = 1 ; i <= n ; i ++ )	for ( long long i = 1 ; i <= n ; i ++ )
18335	if poz > m return 0	N/A	N/A	if ( poz > m ) return 0 ;	if ( poz > m ) return 0 ;
18336	while 1	N/A	N/A	while ( 1 )	while ( 1 )
18337	tot = long long with tot = di of p [ i ] and k [ poz ] + di of k [ poz ] and fi	N/A	N/A	long long tot = di ( p [ i ] , k [ poz ] ) + di ( k [ poz ] , fi ) ;	long long tot = di ( p [ i ], k [ poz ] ) + di ( k [ pz ], fi ) ;
18338	if tot < = t break loop	N/A	N/A	if ( tot <= t ) break ;	if ( tot <= t ) break ;
18339	increment poz	N/A	N/A	poz ++ ;	poz ++ ;
18340	if poz > m return 0	N/A	N/A	if ( poz > m ) return 0 ;	if ( poz > m ) return 0 ;
18341	DUMMY	0.0	0.0	}	DUMMY
18342	increment poz	N/A	N/A	poz ++ ;	poz ++ ;
18343	DUMMY	0.0	0.0	}	DUMMY
18344	return 1	N/A	N/A	return 1 ;	return 1 ;
18345	DUMMY	0.0	0.0	}	DUMMY
18346	DUMMY	0.0	0.0	int main() {	DUMMY
18347	read n , m , fi	N/A	N/A	cin >> n >> m >> fi ;	cin >> n >> m >> fi ;
18348	for i = 1 to n inclusive read p [ i ]	N/A	N/A	for ( long long i = 1 ; i <= n ; i ++ ) { cin >> p [ i ] ; }	for ( int i = 1 ; i <= n ; i ++ ) cin >> p [ i ] ;
18349	for i = 1 to m inclusive read k [ i ]	N/A	N/A	for ( long long i = 1 ; i <= m ; i ++ ) { cin >> k [ i ] ; }	for ( int i = 1 ; i <= m ; i ++ ) cin >> k [ i ] ;
18350	sort p + 1 and p + n + 1	N/A	N/A	sort ( p + 1 , p + n + 1 ) ;	sort ( p + 1, p + n + 1 ) ;
18351	sort k + 1 and k + m + 1	N/A	N/A	sort ( k + 1 , k + m + 1 ) ;	sort ( k + 1, k + m + 1 ) ;
18352	r , pas = long long with r = - 1 , pas = 1LL < < 60	N/A	N/A	long long r = - 1 , pas = ( 1LL << 60 ) ;	long long r = - 1, pas = 1LL << 60 ;
18353	while pas	N/A	N/A	while ( pas )	while ( pas )
18354	if ok ( r + pas ) is 0 r = r + pas	N/A	N/A	if ( ok ( r + pas ) == 0 ) { r += pas ; }	if ( ok ( r + pas ) == 0 ) { r += pas ; }
18355	pas = pas > > 1	N/A	N/A	pas >>= 1 ;	pas >>= 1 ;
18356	DUMMY	0.0	0.0	}	DUMMY
18357	increment r	N/A	N/A	r ++ ;	r ++ ;
18358	print r	N/A	N/A	cout << r << " \n " ;	cout << r << endl ;
18359	DUMMY	0.0	0.0	return 0;	DUMMY
18360	DUMMY	0.0	0.0	}	DUMMY
18361	create long longs n , k , p	N/A	N/A	long long n , k , p ;	long long n, k, p ;
18362	create long long arrays a , b , with a size 1005 , b size 2005	N/A	N/A	long long a [ 1005 ] , b [ 2005 ] ;	long long a [ 1005 ], b [ 2005 ] ;
18363	declare moze with long long x as argument , returning boolean	N/A	N/A	bool moze ( long long x )	bool moze ( long long x )
18364	create long long h with h = 0	N/A	N/A	long long h = 0 ;	long long h = 0 ;
18365	for i = 0 to n exclusive	N/A	N/A	for ( long long i = 0 ; i < n ; i ++ )	for ( long long i = 0 ; i < n ; i ++ )
18366	if h is k , return false from function	N/A	N/A	if ( h == k ) return false ;	if ( h == k ) return false ;
18367	create boolean sat with sat = false	N/A	N/A	bool sat = false ;	bool sat = false ;
18368	while h is less than k	N/A	N/A	while ( h < k )	while ( h < k )
18369	create long long d with d = absolute value of ( a [ i ] - b [ h ] ) + absolute value of ( b [ h ] - p )	N/A	N/A	long long d = abs ( a [ i ] - b [ h ] ) + abs ( b [ h ] - p ) ;	long long d = abs ( a [ i ] - b [ h ] ) + abs ( b [ u ] - p ) ;
18370	increment h	N/A	N/A	h ++ ;	h ++ ;
18371	if d is less than or equal to x	N/A	N/A	if ( d <= x )	if ( d <= x )
18372	set sat to true	N/A	N/A	sat = true ;	sat = true ;
18373	break loop	N/A	N/A	break ;	break ;
18374	DUMMY	0.0	0.0	}	DUMMY
18375	DUMMY	0.0	0.0	}	DUMMY
18376	if not sat , return false from function	N/A	N/A	if ( ! sat ) return false ;	if (! sat ) return false ;
18377	DUMMY	0.0	0.0	}	DUMMY
18378	return true from function	N/A	N/A	return true ;	return true ;
18379	DUMMY	0.0	0.0	}	DUMMY
18380	DUMMY	0.0	0.0	int main() {	DUMMY
18381	read n read k read p	N/A	N/A	cin >> n >> k >> p ;	cin >> n >> k >> p ;
18382	for i = 0 to n exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
18383	for i = 0 to k exclusive , read b [ i ]	N/A	N/A	for ( int i = 0 ; i < k ; i ++ ) cin >> b [ i ] ;	for ( int i = 0 ; i < k ; i ++ ) cin >> b [ i ] ;
18384	sort elements from a to a + n	N/A	N/A	sort ( a , a + n ) ;	sort ( a, a + n ) ;
18385	sort elements from b to b + n	N/A	N/A	sort ( b , b + k ) ;	sort ( b, b + n ) ;
18386	create long longs l , r , o , with l = 0 , r = 4e9 , o = - 1	N/A	N/A	long long l = 0 , r = 4e9 , o = - 1 ;	long long l = 0, r = 4e9, o = - 1 ;
18387	while l is less than or equal to r	N/A	N/A	while ( l <= r )	while ( l <= r )
18388	create long long m with m = ( l + r ) bitshift right 1	N/A	N/A	long long m = ( l + r ) >> 1 ;	long long m = ( l + r ) >> 1 ;
18389	if result of run moze with m as argument is true	N/A	N/A	if ( moze ( m ) )	if ( moze ( m ) )
18390	set o to m	N/A	N/A	o = m ;	o = m ;
18391	set r to m - 1	N/A	N/A	r = m - 1 ;	r = m - 1 ;
18392	else	N/A	N/A	else	else
18393	set l to m + 1	N/A	N/A	l = m + 1 ;	l = m + 1 ;
18394	DUMMY	0.0	0.0	}	DUMMY
18395	DUMMY	0.0	0.0	}	DUMMY
18396	print o print ' \ n '	N/A	N/A	cout << o << ' \n ' ;	cout << o <<'\n';
18397	DUMMY	0.0	0.0	}	DUMMY
18398	MOD = const int with MOD = 1e9 + 7	N/A	N/A	const int MOD = 1e9 + 7 ;	const int MOD = 1e9 + 7 ;
18399	INF = const long long int with INF = 1e18	N/A	N/A	const long long int INF = 1e18 ;	const long long int INF = 1e18 ;
18400	keya , per = vectors of long long int	N/A	N/A	vector < long long int > key , per ;	vector < long long int > keya, per ;
18401	ans = long long int with ans = INF	N/A	N/A	long long int ans = INF ;	long long int ans = INF ;
18402	DUMMY	0.0	0.0	int main() {	DUMMY
18403	i , j , k , n , p , x = integers	N/A	N/A	int i , j , k , n , p , x ;	int i, j, k, n, p, x ;
18404	read n , k , p	N/A	N/A	cin >> n >> k >> p ;	cin >> n >> k >> p ;
18405	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
18406	read x	N/A	N/A	cin >> x ;	cin >> x ;
18407	append x in per	N/A	N/A	per . push_back ( x ) ;	per. push_back ( x ) ;
18408	DUMMY	0.0	0.0	}	DUMMY
18409	for i = 0 to k exclusive	N/A	N/A	for ( i = 0 ; i < k ; i ++ )	for ( i = 0 ; i < k ; i ++ )
18410	read x	N/A	N/A	cin >> x ;	cin >> x ;
18411	append x in key	N/A	N/A	key . push_back ( x ) ;	key. push_back ( x ) ;
18412	DUMMY	0.0	0.0	}	DUMMY
18413	sort begin of per and end of per	N/A	N/A	sort ( per . begin ( ) , per . end ( ) ) ;	sort ( per. begin ( ), per. end ( ) ) ;
18414	sort begin of key and end of key	N/A	N/A	sort ( key . begin ( ) , key . end ( ) ) ;	sort ( key. begin ( ), key. end ( ) ) ;
18415	for j = 0 to j + n - 1 < k	N/A	N/A	for ( j = 0 ; j + n - 1 < k ; j ++ )	for ( int j = 0 ; j + n - 1 < k ; j ++ )
18416	now = long long int with now = 0	N/A	N/A	long long int now = 0 ;	long long int now = 0 ;
18417	for i = 0 to n exclusive now = max of now and abs ( per [ i ] - key [ j + i ] ) + abs ( key [ j + i ] - p )	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { now = max ( now , abs ( per [ i ] - key [ j + i ] ) + abs ( key [ j + i ] - p ) ) ; }	for ( long long int i = 0 ; i < n ; i ++ ) { now = max ( now, abs ( per [ i ] - key [ j + i ] ) + abs ( key [ i + j ] - p ) ) ; }
18418	ans = min of ans and now	N/A	N/A	ans = min ( ans , now ) ;	ans = min ( ans, now ) ;
18419	DUMMY	0.0	0.0	}	DUMMY
18420	print ans	N/A	N/A	cout << ans << ' \n ' ;	cout << ans << endl ;
18421	DUMMY	0.0	0.0	return 0;	DUMMY
18422	DUMMY	0.0	0.0	}	DUMMY
18423	DUMMY	0.0	0.0	int main() {	DUMMY
18424	create long longs n , k , p	N/A	N/A	long long n , k , p ;	long long n, k, p ;
18425	read n read k read p	N/A	N/A	cin >> n >> k >> p ;	cin >> n >> k >> p ;
18426	create long long arrays pe , ke , with pe size 1001 , ke size 2002	N/A	N/A	long long pe [ 1001 ] , ke [ 2002 ] ;	long long pe [ 1001 ], ke [ 2002 ] ;
18427	for a = 0 to n exclusive , read pe [ a ]	N/A	N/A	for ( int a = 0 ; a < n ; a ++ ) cin >> pe [ a ] ;	for ( long long a = 0 ; a < n ; a ++ ) cin >> pe [ a ] ;
18428	for a = 0 to k exclusive , read ke [ a ]	N/A	N/A	for ( int a = 0 ; a < k ; a ++ ) cin >> ke [ a ] ;	for ( long long a = 0 ; a < k ; a ++ ) { cin >> ke [ a ] ; }
18429	sort elements from pe to pe + n	N/A	N/A	sort ( pe , pe + n ) ;	sort ( pe, pe + n ) ;
18430	sort elements from ke to ke + n	N/A	N/A	sort ( ke , ke + k ) ;	sort ( ke, ke + n ) ;
18431	create long long mins with mins = 99999999999999	N/A	N/A	long long mins = 99999999999999 ;	long long mins = 99999999999999 ;
18432	for a = 0 to k - n + 1 exclusive	N/A	N/A	for ( int a = 0 ; a < k - n + 1 ; a ++ )	for ( int a = 0 ; a < k - n + 1 ; a ++ )
18433	create long long tmp with tmp = 0	N/A	N/A	long long tmp = 0 ;	long long tmp = 0 ;
18434	for b = 0 to n exclusive , set tmp to maximum of ( tmp and absolute value of ( pe [ b ] - ke [ a + b ] ) + absolute value of ( ke [ a + b ] - p ) )	N/A	N/A	for ( int b = 0 ; b < n ; b ++ ) tmp = max ( tmp , abs ( pe [ b ] - ke [ a + b ] ) + abs ( ke [ a + b ] - p ) ) ;	for ( long long b = 0 ; b < n ; b ++ ) { tmp = max ( tmp, abs ( pe [ b ] - ke [ a + b ] ) + abs ( ke ['a'] - p ) ) ; }
18435	set mins to minimum of tmp and mins	N/A	N/A	mins = min ( tmp , mins ) ;	mins = min ( tmp, mins ) ;
18436	DUMMY	0.0	0.0	}	DUMMY
18437	print mins print newline	N/A	N/A	cout << mins << endl ;	cout << mins << endl ;
18438	DUMMY	0.0	0.0	return 0;	DUMMY
18439	DUMMY	0.0	0.0	}	DUMMY
18440	n , k , p = integer	N/A	N/A	int n , k , p ;	int n, k, p ;
18441	person = long long array of size 1005 , key = long long array of size 2005	N/A	N/A	long long person [ 1005 ] , key [ 2005 ] ;	long long person [ 1005 ], key [ 2005 ] ;
18442	ans , tmp = long long	N/A	N/A	long long ans , tmp ;	long long ans, tmp ;
18443	DUMMY	0.0	0.0	int main() {	DUMMY
18444	while read n , k , p	N/A	N/A	while ( cin >> n >> k >> p )	while ( cin >> n >> k >> p )
18445	ans = 99999999999999LL	N/A	N/A	ans = 99999999999999LL ;	ans = 99999999999999LL ;
18446	for i = 0 to n exclusive , read person [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> person [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> person [ i ] ; }
18447	for i = 0 to k exclusive , read key [ i ]	N/A	N/A	for ( int i = 0 ; i < k ; i ++ ) { cin >> key [ i ] ; }	for ( int i = 0 ; i < k ; i ++ ) cin >> key [ i ] ;
18448	sort person and person + n	N/A	N/A	sort ( person , person + n ) ;	sort ( person, person + n ) ;
18449	sort key and key + k	N/A	N/A	sort ( key , key + k ) ;	sort ( key, key + k ) ;
18450	for i = 0 to i + n < = k	N/A	N/A	for ( int i = 0 ; i + n <= k ; i ++ )	for ( int i = 0 ; i + n <= k ; i ++ )
18451	tmp = 0	N/A	N/A	tmp = 0 ;	int tmp = 0 ;
18452	for j = 0 to n exclusive , tmp = max of tmp and abs of key [ i + j ] - person [ j ] + abs of p - key [ i + j ]	N/A	N/A	for ( int j = 0 ; j < n ; j ++ ) { tmp = max ( tmp , abs ( key [ i + j ] - person [ j ] ) + abs ( p - key [ i + j ] ) ) ; }	for ( int j = 0 ; j < n ; j ++ ) { tmp = max ( tmp, abs ( key [ i + j ] - person [ j ] ) + abs ( p - key [ j + k ] ) ) ; }
18453	ans = min of tmp and ans	N/A	N/A	ans = min ( tmp , ans ) ;	ans = min ( tmp, ans ) ;
18454	DUMMY	0.0	0.0	}	DUMMY
18455	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
18456	DUMMY	0.0	0.0	}	DUMMY
18457	DUMMY	0.0	0.0	return 0;	DUMMY
18458	DUMMY	0.0	0.0	}	DUMMY
18459	create 64 bit integer infint64_t with infint64_t = 9223372036854775807LL	N/A	N/A	const int64_t infint64_t = 9223372036854775807LL ;	long long infint64_t = 9223372036854775807LL ;
18460	declare solve with no arguments , returning void	N/A	N/A	void solve ( )	void solve ( )
18461	create 64 bit integers n , k , p	N/A	N/A	int64_t n , k , p ;	int64_t n, k, p ;
18462	read n read k read p	N/A	N/A	cin >> n >> k >> p ;	cin >> n >> k >> p ;
18463	create 64 bit integer vector a initialized with n	N/A	N/A	vector < int64_t > a ( n ) ;	vector < int64_t > a ( n ) ;
18464	for i = 0 to n exclusive , read a [ i ]	N/A	N/A	for ( int64_t i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }	for ( int64_t i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
18465	sort elements from beginning of a to end of a	N/A	N/A	sort ( a . begin ( ) , a . end ( ) ) ;	sort ( a. begin ( ), a. end ( ) ) ;
18466	create 64 bit integer vector b initialized with k	N/A	N/A	vector < int64_t > b ( k ) ;	vector < int64_t > b ( k ) ;
18467	for i = 0 to k exclusive , read b [ i ]	N/A	N/A	for ( int64_t i = 0 ; i < k ; i ++ ) { cin >> b [ i ] ; }	for ( int64_t i = 0 ; i < k ; i ++ ) cin >> b [ i ] ;
18468	sort elements from beginning of b to end of b	N/A	N/A	sort ( b . begin ( ) , b . end ( ) ) ;	sort ( b. begin ( ), b. end ( ) ) ;
18469	create 64 bit integer best with best = infint64_t	N/A	N/A	int64_t best = infint64_t ;	long long int64_t best = infint32_t ;
18470	for i = 0 to k - n inclusive	N/A	N/A	for ( int64_t i = 0 ; i <= k - n ; i ++ )	for ( int64_t i = 0 ; i <= k - n ; i ++ )
18471	create 64 bit integer curWorst with curWorst = 0	N/A	N/A	int64_t curWorst = 0 ;	int64_t curWorst = 0 ;
18472	for j = 0 to n exclusive	N/A	N/A	for ( int64_t j = 0 ; j < n ; j ++ )	for ( int64_t j = 0 ; j < n ; j ++ )
18473	create 64 bit integer cur with cur = absolute value of ( b [ i + j ] - p ) + absolute value of ( b [ i + j ] - a [ j ] )	N/A	N/A	int64_t cur = abs ( b [ i + j ] - p ) + abs ( b [ i + j ] - a [ j ] ) ;	long long int64_t cur = abs ( b [ i + j ] - p ) + abs ( ( long long int ) b [ j + i ] - a [ j ] ) ;
18474	set curWorst to maximum of curWorst and cur	N/A	N/A	curWorst = max ( curWorst , cur ) ;	curWorst = max ( curWorst, cur ) ;
18475	DUMMY	0.0	0.0	}	DUMMY
18476	set best to minimum of best and curWorst	N/A	N/A	best = min ( best , curWorst ) ;	best = min ( best, curWorst ) ;
18477	DUMMY	0.0	0.0	}	DUMMY
18478	print best print newline	N/A	N/A	cout << best << endl ;	cout << best << endl ;
18479	DUMMY	0.0	0.0	}	DUMMY
18480	DUMMY	0.0	0.0	int main() {	DUMMY
18481	run solve	N/A	N/A	solve ( ) ;	solve ( ) ;
18482	DUMMY	0.0	0.0	return 0;	DUMMY
18483	DUMMY	0.0	0.0	}	DUMMY
18484	DUMMY	0.0	0.0	int main() {	DUMMY
18485	create long long t	N/A	N/A	long long t ;	long long t ;
18486	read t	N/A	N/A	cin >> t ;	cin >> t ;
18487	decrement t and loop further , while t > 0	N/A	N/A	while ( t -- )	while ( t -- )
18488	declare long longs a and b	N/A	N/A	long long a , b ;	long long a, b ;
18489	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
18490	long long c = pow ( a * b , 1 . 0 / 3 . 0 )	N/A	N/A	long long c = pow ( a * b , 1.0 / 3.0 ) ;	long long c = pow ( a * b, 1.0 / 3.0 ) ;
18491	increment c while c * c * c < a * b	N/A	N/A	while ( c * c * c < a * b ) c ++ ;	while ( ( c * c ) * c < a * b ) c ++ ;
18492	decrement c while c * c * c > a * b	N/A	N/A	while ( c * c * c > a * b ) c -- ;	while ( ( c * c ) * c > a * b ) c -- ;
18493	if c * c * c = a * b & & a % c = 0 & & b % c = 0	N/A	N/A	if ( c * c * c == a * b && a % c == 0 && b % c == 0 )	if ( ( c * c ) * c == a * b && a % c == 0 && b % d == 0 )
18494	print " Yes \ n "	N/A	N/A	cout << " Yes\n " ;	cout << " Yes\n " ;
18495	else	N/A	N/A	else	else
18496	print " No \ n "	N/A	N/A	cout << " No\n " ;	cout << " No\n " ;
18497	DUMMY	0.0	0.0	}	DUMMY
18498	DUMMY	0.0	0.0	}	DUMMY
18499	DUMMY	0.0	0.0	return 0;	DUMMY
18500	DUMMY	0.0	0.0	}	DUMMY
18501	DUMMY	0.0	0.0	int main() {	DUMMY
18502	let q be a long integer	N/A	N/A	long long q ;	long long q ;
18503	read q	N/A	N/A	cin >> q ;	cin >> q ;
18504	while q value is decreased by 1	N/A	N/A	while ( q -- )	while ( q -- )
18505	let a , b be long integers	N/A	N/A	long long a , b ;	long long a, b ;
18506	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
18507	let prod be long integer with prod = a * b	N/A	N/A	long long prod = a * b ;	long long prod = a * b ;
18508	let round1 be long integer with round1 = round ( cbrt ( prod ) )	N/A	N/A	long long round1 = round ( cbrt ( prod ) ) ;	long long round1 = round ( cbrt ( prod ) ) ;
18509	if a modulus round1 is equal to 0 and b modulus round1 is equal to 0	N/A	N/A	if ( a % round1 == 0 && b % round1 == 0 )	if ( ( a % round1 == 0 ) && ( b % floor1 == 1 ) )
18510	if round1 is equal to 1	N/A	N/A	if ( round1 == 1 )	if ( round1 == 1 )
18511	if a is equal to 1 and b is equal to 1	N/A	N/A	if ( a == 1 && b == 1 )	if ( a == 1 && b == 1 )
18512	print Yes	N/A	N/A	cout << " Yes "	cout << " Yes " << endl ;
18513	print newline	N/A	N/A	<< " \n " ;	cout << endl ;
18514	else do the following	N/A	N/A	else	else
18515	print No	N/A	N/A	cout << " No "	cout << " No " << endl ;
18516	print newline	N/A	N/A	<< " \n " ;	<< " \n " ;
18517	else do the following	N/A	N/A	else	else
18518	print Yes	N/A	N/A	cout << " Yes "	cout << " Yes "
18519	print newline	N/A	N/A	<< " \n " ;	<< " \n " ;
18520	else do the following	N/A	N/A	else	else
18521	print No	N/A	N/A	cout << " No "	cout << " No "
18522	print newline	N/A	N/A	<< " \n " ;	<< " \n " ;
18523	DUMMY	0.0	0.0	}	DUMMY
18524	DUMMY	0.0	0.0	return 0;	DUMMY
18525	DUMMY	0.0	0.0	}	DUMMY
18526	DUMMY	0.0	0.0	int main() {	DUMMY
18527	q = long long	N/A	N/A	long long q ;	long long q ;
18528	read q	N/A	N/A	cin >> q ;	cin >> q ;
18529	while q is not 0 subtract 1 from q do	N/A	N/A	while ( q -- )	while ( q -- )
18530	a , b = long long	N/A	N/A	long long a , b ;	long long a, b ;
18531	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
18532	prod = long long with value of a * b	N/A	N/A	long long prod = a * b ;	long long prod = a * b ;
18533	round1 = long long with value of the cubic root of prod rounded to the nearest whole number	N/A	N/A	long long round1 = round ( cbrt ( prod ) ) ;	long long round1 = ceil ( prod. size ( ) - 1 ) ;
18534	if a mod round1 equals 0 and b mod round1 equals 0	N/A	N/A	if ( a % round1 == 0 && b % round1 == 0 )	if ( ( a % round1 == 0 ) && ( b % floor1 == 1 ) )
18535	if round1 equals 1	N/A	N/A	if ( round1 == 1 )	if ( round1 == 1 )
18536	if a and b equal 1	N/A	N/A	if ( a == 1 && b == 1 )	if ( a == 1 && b == 1 )
18537	print Yes	N/A	N/A	cout << " Yes "	cout << " Yes " << endl ;
18538	print a new line	N/A	N/A	<< " \n " ;	<< " \n " ;
18539	else	N/A	N/A	else	else
18540	print No	N/A	N/A	cout << " No "	cout << " No " << endl ;
18541	print a new line	N/A	N/A	<< " \n " ;	<< " \n " ;
18542	else	N/A	N/A	else	else
18543	print Yes	N/A	N/A	cout << " Yes "	cout << " Yes "
18544	print a new line	N/A	N/A	<< " \n " ;	<< " \n " ;
18545	else	N/A	N/A	else	else
18546	print No	N/A	N/A	cout << " No "	cout << " No "
18547	print a new line	N/A	N/A	<< " \n " ;	<< " \n " ;
18548	DUMMY	0.0	0.0	}	DUMMY
18549	DUMMY	0.0	0.0	return 0;	DUMMY
18550	DUMMY	0.0	0.0	}	DUMMY
18551	in function maxx taking two references to long long ints a and b and returning a long long int	N/A	N/A	long long int maxx ( long long int & a , long long int & b )	long long int maxx ( long long a, long long b )
18552	return a if it is greater than b else return b	N/A	N/A	return a > b ? a : b ;	return a > b? a : b ;
18553	DUMMY	0.0	0.0	}	DUMMY
18554	in function minn taking two references to long long ints a and b and returning a long long int	N/A	N/A	long long int minn ( long long int & a , long long int & b )	long long int minn ( long long a, long long b )
18555	return b if a is greater than b else return a	N/A	N/A	return a > b ? b : a ;	return a > b? b : a ;
18556	DUMMY	0.0	0.0	}	DUMMY
18557	define empty function boostISO	N/A	N/A	void boostIO ( ) { }	void boostISO ( ) { }
18558	in function gcd taking two long long ints a and b and returning a long long int	N/A	N/A	long long int gcd ( long long int a , long long int b )	long long gcd ( long long a, long long b )
18559	return a if b is 0 else return gcd of b and a mod b	N/A	N/A	return b == 0 ? a : gcd ( b , a % b ) ;	return b == 0? a : gcd ( b, a % b ) ;
18560	DUMMY	0.0	0.0	}	DUMMY
18561	in function int_gcd taking two ints a and b and returning an int	N/A	N/A	int int_gcd ( int a , int b )	int int_gcd ( int a, int b )
18562	returna if b is 0 else return int_gcd of b and a mod b	N/A	N/A	return b == 0 ? a : int_gcd ( b , a % b ) ;	return b == 0? a : int_gcd ( b, a % b ) ;
18563	DUMMY	0.0	0.0	}	DUMMY
18564	in function lcm taking two long long ints a and b and returning a long long int	N/A	N/A	long long int lcm ( long long int a , long long int b )	long long int lcm ( long long a, long long b )
18565	return a / gcd of a and b * b	N/A	N/A	return a / gcd ( a , b ) * b ;	return a / gcd ( a, b ) * b ;
18566	DUMMY	0.0	0.0	}	DUMMY
18567	in function poww taking three long long ints base , exp and mod and returning a long long int	N/A	N/A	long long int poww ( long long int base , long long int exp , long long int mod )	long long int poww ( long long base, long long exp, long double mod )
18568	set base to base modulo mod	N/A	N/A	base %= mod ;	base %= mod ;
18569	result = long long int with result = 1	N/A	N/A	long long int result = 1 ;	long long int result = 1 ;
18570	loop while exp is greater than 0	N/A	N/A	while ( exp > 0 )	while ( exp > 0 )
18571	if exp bitwise - and 1 is 1 then set result to ( result * base ) modulo mod	N/A	N/A	if ( exp & 1 ) result = ( result * base ) % mod ;	if ( exp & 1 ) result = ( result * base ) % mod ;
18572	set base to ( base * base ) modulo mod	N/A	N/A	base = ( base * base ) % mod ;	base = ( base * base ) % mod ;
18573	set exp to exp bitshift right by 1	N/A	N/A	exp >>= 1 ;	exp >>= 1 ;
18574	DUMMY	0.0	0.0	}	DUMMY
18575	return result	N/A	N/A	return result ;	return result ;
18576	DUMMY	0.0	0.0	}	DUMMY
18577	in function cube_root taking a long long int x and returning an int	N/A	N/A	int cube_root ( long long int x )	int cube_root ( long long int x )
18578	l , r = long long int with l = 1 and r = 1e6 + 10	N/A	N/A	long long int l = 1 , r = 1e6 + 10 ;	long long int l = 1, r = 1e6 + 10 ;
18579	loop while l is less than r	N/A	N/A	while ( l < r )	while ( l < r )
18580	mid = long long int with mid = ( l + r ) bitshift right by 1	N/A	N/A	long long int mid = ( l + r ) >> 1 ;	long long int mid = ( l + r ) >> 1 ;
18581	if mid * mid * mid is greater or equal to x	N/A	N/A	if ( mid * mid * mid >= x )	if ( mid + mid * mid >= x )
18582	set r to mid	N/A	N/A	r = mid ;	r = mid ;
18583	else	N/A	N/A	else	else
18584	set l ti mid + 1	N/A	N/A	l = mid + 1 ;	l = mid + 1 ;
18585	DUMMY	0.0	0.0	}	DUMMY
18586	DUMMY	0.0	0.0	}	DUMMY
18587	if l * l * l is x then return l	N/A	N/A	if ( l * l * l == x ) { return l ; }	if ( ( l * l ) * l == x ) return l ;
18588	return - 1	N/A	N/A	return - 1 ;	return - 1 ;
18589	DUMMY	0.0	0.0	}	DUMMY
18590	DUMMY	0.0	0.0	int main() {	DUMMY
18591	call boostISO	N/A	N/A	boostIO ( ) ;	boostISO ( ) ;
18592	t = int	N/A	N/A	int t ;	int t ;
18593	read t	N/A	N/A	cin >> t ;	cin >> t ;
18594	loop t times	N/A	N/A	while ( t -- )	while ( t -- )
18595	a , b = long long int	N/A	N/A	long long int a , b ;	long long int a, b ;
18596	read a then b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
18597	value = int with value = cube_root of a * b	N/A	N/A	int value = cube_root ( a * b ) ;	int value = cube_root ( a * b ) ;
18598	if value is not - 1	N/A	N/A	if ( value != - 1 )	if ( value!= - 1 )
18599	g = long long int with g = gcd of a and b	N/A	N/A	long long int g = gcd ( a , b ) ;	long long int g = gcd ( a, b ) ;
18600	if g is a multiple of value	N/A	N/A	if ( g % value == 0 )	if ( g % 2 == 0 )
18601	print " YES "	N/A	N/A	puts ( " Yes " ) ;	cout << " YES\n " ;
18602	continue loop	N/A	N/A	continue ;	continue ;
18603	DUMMY	0.0	0.0	}	DUMMY
18604	DUMMY	0.0	0.0	}	DUMMY
18605	print " NO "	N/A	N/A	puts ( " No " ) ;	cout << " NO " << endl ;
18606	DUMMY	0.0	0.0	}	DUMMY
18607	DUMMY	0.0	0.0	}	DUMMY
18608	create const integer MAX = 2e5 + 7	N/A	N/A	const int MAX = 2e5 + 7 ;	const int MAX = 2e5 + 7 ;
18609	create const integer INF = 0x3f3f3f3f	N/A	N/A	const int INF = 0x3f3f3f3f ;	const int INF = ( 0x3f3f )3f ;
18610	declare integer variables N , M and K	N/A	N/A	int N , M , K ;	int N, M, K ;
18611	declare an arrays of integers prea and preb with size MAX	N/A	N/A	int prea [ MAX ] , preb [ MAX ] ;	int prea [ MAX ], preb [ MAX + 1 ] ;
18612	integer function cal with integer arguments a and b and char argument c	N/A	N/A	int cal ( int a , char c , int b )	int cal ( int a, int b, char c )
18613	if c = ' & ' , return a & b	N/A	N/A	if ( c == ' & ' ) return a & b ;	if ( c =='&') return a & b ;
18614	if c = ' | ' , return a | b	N/A	N/A	if ( c == ' | ' ) return a | b ;	if ( c =='|') return a | b ;
18615	return a ^ b	N/A	N/A	return a ^ b ;	return a ^ b ;
18616	DUMMY	0.0	0.0	}	DUMMY
18617	DUMMY	0.0	0.0	int main() {	DUMMY
18618	read N and loop further	N/A	N/A	while ( cin >> N )	while ( cin >> N )
18619	create integers x = 0 and y = 1023	N/A	N/A	int x = 0 , y = 1023 ;	int x = 0, y = 1023 ;
18620	for i from 0 to N exclusive	N/A	N/A	for ( int i = 0 ; i < N ; i ++ )	for ( int i = 0 ; i < N ; i ++ )
18621	declare character c	N/A	N/A	char c ;	char c ;
18622	declare integer a	N/A	N/A	int a ;	int a ;
18623	read c and a	N/A	N/A	cin >> c >> a ;	cin >> c >> a ;
18624	set x to cal ( x , c , a )	N/A	N/A	x = cal ( x , c , a ) ;	x = cal ( x, c, a ) ;
18625	set y to cal ( y , c , a )	N/A	N/A	y = cal ( y , c , a ) ;	y = cal ( y, c, a ) ;
18626	DUMMY	0.0	0.0	}	DUMMY
18627	declare integers a and b = 0 and c = 1023	N/A	N/A	int a = 0 , b = 0 , c = 1023 ;	int a, b = 0, c = 1023 ;
18628	for integer i = 0 to 10 exclusive	N/A	N/A	for ( int i = 0 ; i < 10 ; i ++ )	for ( int i = 0 ; i < 10 ; i ++ )
18629	integer p = 1 < < i	N/A	N/A	int p = 1 << i ;	int p = 1 << i ;
18630	if x & p ! = 0	N/A	N/A	if ( x & p )	if ( x && p )
18631	if y & p ! = 0	N/A	N/A	if ( y & p )	if ( y & p )
18632	a | = p	N/A	N/A	a |= p ;	a |= p ;
18633	else	N/A	N/A	else	else
18634	b | = p	N/A	N/A	b |= p ;	b |= p ;
18635	else	N/A	N/A	else	else
18636	if y & p = 0 , set c to c ^ p	N/A	N/A	if ( ! ( y & p ) ) c ^= p ;	if ( y & p == 0 ) c ^= p ;
18637	DUMMY	0.0	0.0	}	DUMMY
18638	DUMMY	0.0	0.0	}	DUMMY
18639	print 3	N/A	N/A	cout << 3 << endl ;	cout << 3 << endl ;
18640	print " | " and a	N/A	N/A	cout << " | " << a << endl ;	cout << " | " << a << endl ;
18641	print " ^ " and b	N/A	N/A	cout << " ^ " << b << endl ;	cout << " ^ " << b << endl ;
18642	print " & " and c	N/A	N/A	cout << " & " << c << endl ;	cout << " & " << c << endl ;
18643	DUMMY	0.0	0.0	}	DUMMY
18644	DUMMY	0.0	0.0	return 0;	DUMMY
18645	DUMMY	0.0	0.0	}	DUMMY
18646	DUMMY	0.0	0.0	int main() {	DUMMY
18647	n , xx = long long	N/A	N/A	long long n , xx ;	long long n, xx ;
18648	read n	N/A	N/A	cin >> n ;	cin >> n ;
18649	m1 = 0 , m2 = 1023	N/A	N/A	long long m1 = 0 , m2 = 1023 ;	long long m1 = 0, m2 = 1023 ;
18650	rr and ss = array of 1024 long long	N/A	N/A	long long rr [ 1024 ] , ss [ 1024 ] ;	long long ss [ 1024 ] = { }, rr1 [ 512 ] ={ } ;
18651	for i = 0 to 1024 exclusive	N/A	N/A	for ( long long i = 0 ; i < 1024 ; i ++ )	for ( long long i = 0 ; i < 1024 ; i ++ )
18652	rr [ i ] = i	N/A	N/A	rr [ i ] = i ;	rr [ i ] = i ;
18653	ss [ i ] = i	N/A	N/A	ss [ i ] = i ;	ss [ i ] = i ;
18654	DUMMY	0.0	0.0	}	DUMMY
18655	while decremented value of n is not 0	N/A	N/A	while ( n -- )	while ( n -- )
18656	r = char	N/A	N/A	char r ;	char r ;
18657	read r , xx	N/A	N/A	cin >> r >> xx ;	cin >> r >> xx ;
18658	if r is ' | '	N/A	N/A	if ( r == ' | ' )	if ( r =='|')
18659	m1 = m1 or xx	N/A	N/A	m1 = m1 | xx ;	m1 |= xx ;
18660	m2 = m2 or xx	N/A	N/A	m2 = m2 | xx ;	m2 |= xx ;
18661	for i = 0 to 1024 exclusive rr [ i ] = rr [ i ] or xx	N/A	N/A	for ( long long i = 0 ; i < 1024 ; i ++ ) { rr [ i ] = rr [ i ] | xx ; }	for ( int i = 0 ; i < 1024 ; i ++ ) { rr [ i ] |= xx ; }
18662	else if r is ' ^ '	N/A	N/A	else if ( r == ' ^ ' )	else if ( r =='^')
18663	m1 = m1 xor xx	N/A	N/A	m1 = m1 ^ xx ;	m1 = m1 ^ xx ;
18664	m2 = m2 xor xx	N/A	N/A	m2 = m2 ^ xx ;	m2 = m2 ^ xx ;
18665	for i = 0 to 1024 exclusive rr [ i ] = rr [ i ] xor xx	N/A	N/A	for ( long long i = 0 ; i < 1024 ; i ++ ) { rr [ i ] = rr [ i ] ^ xx ; }	for ( int i = 0 ; i < 1024 ; i ++ ) rr [ i ] ^= xx ;
18666	else	N/A	N/A	else	else
18667	m1 = m1 and xx	N/A	N/A	m1 = m1 & xx ;	m1 += xx ;
18668	m2 = m2 and xx	N/A	N/A	m2 = m2 & xx ;	m2 += xx ;
18669	for i = 0 to 1024 exclusive rr [ i ] = rr [ i ] and xx	N/A	N/A	for ( long long i = 0 ; i < 1024 ; i ++ ) { rr [ i ] = rr [ i ] & xx ; }	for ( int i = 0 ; i < 1024 ; i ++ ) rr [ i ] += xx ;
18670	DUMMY	0.0	0.0	}	DUMMY
18671	DUMMY	0.0	0.0	}	DUMMY
18672	x , a , o = 0	N/A	N/A	long long x = 0 , a = 0 , o = 0 ;	int x, a, o = 0 ;
18673	for i = 0 to 10 exclusive	N/A	N/A	for ( long long i = 0 ; i < 10 ; i ++ )	for ( int i = 0 ; i < 10 ; i ++ )
18674	u = m1 and ( 2 ^ ( i + 1 ) )	N/A	N/A	long long u = m1 & ( 1 << i ) ;	u = m1 && ( 2 ^ ( i + 1 ) ) ;
18675	v = m2 and ( 2 ^ ( i + 1 ) )	N/A	N/A	long long v = m2 & ( 1 << i ) ;	v = m2 && ( 2 ^ ( i + 1 ) ) ;
18676	if m1 and ( 2 ^ ( i + 1 ) ) and v is 0	N/A	N/A	if ( m1 & ( 1 << i ) && v == 0 )	if ( m1 && ( 2 ^ ( i + 1 ) ) && v == 0 )
18677	x = x or ( 2 ^ ( i + 1 ) )	N/A	N/A	x = x | ( 1 << i ) ;	x |= ( 2 ^ ( i + 1 ) ) ;
18678	a = a or ( 2 ^ ( i + 1 ) )	N/A	N/A	a = a | ( 1 << i ) ;	a |= ( 2 ^ ( i + 1 ) ) ;
18679	else if u is 0 and m2 and ( 2 ^ ( i + 1 ) )	N/A	N/A	else if ( u == 0 && m2 & ( 1 << i ) )	else if ( u == 0 && m2 && ( 2 ^ ( i + 1 ) ) )
18680	a = a or ( 2 ^ ( i + 1 ) )	N/A	N/A	a = a | ( 1 << i ) ;	a |= ( 2 ^ ( i + 1 ) ) ;
18681	else if m1 and ( 2 ^ ( i + 1 ) ) and m2 and ( 2 ^ ( i + 1 ) )	N/A	N/A	else if ( m1 & ( 1 << i ) && m2 & ( 1 << i ) )	else if ( m1 && ( 2 ^ ( i + 1 ) ) && m2 && ( pow ( 2, i + 2 ) ) )
18682	a = a or ( 2 ^ ( i + 1 ) )	N/A	N/A	a = a | ( 1 << i ) ;	a |= ( 2 ^ ( i + 1 ) ) ;
18683	o = o or ( 2 ^ ( i + 1 ) )	N/A	N/A	o = o | ( 1 << i ) ;	o |= ( 2 ^ ( i + 1 ) ) ;
18684	DUMMY	0.0	0.0	}	DUMMY
18685	DUMMY	0.0	0.0	}	DUMMY
18686	print " 3 "	N/A	N/A	cout << " 3 " << ' \n ' ;	cout << " 3 " << endl ;
18687	print " | " and o	N/A	N/A	cout << " | " << o << ' \n ' ;	cout << " | " << o << endl ;
18688	print " ^ " and x	N/A	N/A	cout << " ^ " << x << ' \n ' ;	cout << " ^ " << x << endl ;
18689	print " & " and a	N/A	N/A	cout << " & " << a << ' \n ' ;	cout << " & " << a ;
18690	DUMMY	0.0	0.0	}	DUMMY
18691	DUMMY	0.0	0.0	int main() {	DUMMY
18692	create long longs n , M , M2 , s , with s = 0	N/A	N/A	long long n , M , M2 , s = 0 ;	long long n, M, M2, s = 0 ;
18693	create long long array t with size 100005	N/A	N/A	long long t [ 100005 ] ;	long long t [ 100005 ] ;
18694	create long long array t2 with size 100005	N/A	N/A	long long t2 [ 100005 ] ;	long long t2 [ 100005 ] ;
18695	read n	N/A	N/A	cin >> n ;	cin >> n ;
18696	for i = 0 to n exclusive	N/A	N/A	for ( long long i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
18697	read t [ i ]	N/A	N/A	cin >> t [ i ] ;	cin >> t [ i ] ;
18698	increment s by t [ i ]	N/A	N/A	s += t [ i ] ;	s += t [ i ] ;
18699	DUMMY	0.0	0.0	}	DUMMY
18700	for i = 0 to n exclusive , read t2 [ i ]	N/A	N/A	for ( long long i = 0 ; i < n ; i ++ ) { cin >> t2 [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> t2 [ i ] ; }
18701	sort elements from t2 to t2 + n	N/A	N/A	sort ( t2 , t2 + n ) ;	sort ( t2, t2 + n ) ;
18702	if s is less than or equal to t2 [ n - 1 ] + t2 [ n - 2 ]	N/A	N/A	if ( s <= t2 [ n - 1 ] + t2 [ n - 2 ] )	if ( s <= t2 [ n - 1 ] + t2. at ( n - 2 ) )
18703	print " YES " print newline	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
18704	else	N/A	N/A	else	else
18705	print " NO " print newline	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
18706	DUMMY	0.0	0.0	return 0;	DUMMY
18707	DUMMY	0.0	0.0	}	DUMMY
18708	DUMMY	0.0	0.0	int main() {	DUMMY
18709	create long longs n , sum with sum = 0	N/A	N/A	long long n , sum = 0 ;	long long n, sum = 0 ;
18710	read n	N/A	N/A	cin >> n ;	cin >> n ;
18711	create long long array a with size n	N/A	N/A	long long a [ n ] ;	long long a [ n ] ;
18712	create long long array b with size n	N/A	N/A	long long b [ n ] ;	long long b [ n ] ;
18713	for i = 0 to n exclusive	N/A	N/A	for ( long long i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
18714	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
18715	increment sum by a [ i ]	N/A	N/A	sum += a [ i ] ;	sum += a [ i ] ;
18716	DUMMY	0.0	0.0	}	DUMMY
18717	for i = 0 to n exclusive , read b [ i ]	N/A	N/A	for ( long long i = 0 ; i < n ; i ++ ) { cin >> b [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> b [ i ] ; }
18718	sort elements from b to b + n	N/A	N/A	sort ( b , b + n ) ;	sort ( b, b + n ) ;
18719	print " YES " if b [ n - 2 ] + b [ n - 1 ] is greater than or equal to sum , else " NO " , print ' \ n '	N/A	N/A	cout << ( b [ n - 2 ] + b [ n - 1 ] >= sum ? " YES " : " NO " ) << ' \n ' ;	cout << ( b [ n - 2 ] + b [ N - 1 ] >= sum? " YES " : " NO " ) <<'\n';
18720	DUMMY	0.0	0.0	return 0;	DUMMY
18721	DUMMY	0.0	0.0	}	DUMMY
18722	create long long array num with 100010 elements	N/A	N/A	long long num [ 100010 ] ;	long long num [ 100010 ] ;
18723	function cmp with integer arguments a and b that returns boolean	N/A	N/A	bool cmp ( int a , int b )	bool cmp ( int a, int b )
18724	return a > b	N/A	N/A	return a > b ;	return a > b ;
18725	DUMMY	0.0	0.0	}	DUMMY
18726	DUMMY	0.0	0.0	int main() {	DUMMY
18727	declare long long variable sum = 0	N/A	N/A	long long sum = 0 ;	long long sum = 0 ;
18728	declare integer n	N/A	N/A	int n ;	int n ;
18729	read n	N/A	N/A	cin >> n ;	cin >> n ;
18730	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
18731	declare integer a	N/A	N/A	int a ;	int a ;
18732	read a	N/A	N/A	cin >> a ;	cin >> a ;
18733	increase sum by a	N/A	N/A	sum += a ;	sum += a ;
18734	DUMMY	0.0	0.0	}	DUMMY
18735	read n elements into num	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> num [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> num [ i ] ; }
18736	sort num using cmp as comparator function	N/A	N/A	sort ( num , num + n , cmp ) ;	sort ( num, num + n, cmp ) ;
18737	if num [ 0 ] + num [ 1 ] > = sum	N/A	N/A	if ( num [ 0 ] + num [ 1 ] >= sum )	if ( num [ 0 ] + num [ 1 ] >= sum )
18738	print " YES "	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
18739	else	N/A	N/A	else	else
18740	print " NO "	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
18741	DUMMY	0.0	0.0	}	DUMMY
18742	DUMMY	0.0	0.0	int main() {	DUMMY
18743	declare long long variables cans , sum and aux , with sum = 0	N/A	N/A	long long cans , sum = 0 , aux ;	long long cans, sum = 0, aux ;
18744	read cans	N/A	N/A	cin >> cans ;	cin >> cans ;
18745	val is an array of long longs with size cans + 2	N/A	N/A	long long val [ cans + 2 ] ;	long long val [ cans + 2 ] ;
18746	for i = 0 to cans exclusive	N/A	N/A	for ( int i = 0 ; i < cans ; i ++ )	for ( int i = 0 ; i < cans ; i ++ )
18747	read aux	N/A	N/A	cin >> aux ;	cin >> aux ;
18748	increase sum by aux	N/A	N/A	sum += aux ;	sum += aux ;
18749	DUMMY	0.0	0.0	}	DUMMY
18750	read val cans times	N/A	N/A	for ( int i = 0 ; i < cans ; i ++ ) cin >> val [ i ] ;	for ( int i = 0 ; i < cans ; i ++ ) cin >> val [ i ] ;
18751	sort val	N/A	N/A	sort ( val , val + cans ) ;	sort ( val, val + cans ) ;
18752	if sum < = val [ cans - 1 ] + val [ cans - 2 ]	N/A	N/A	if ( sum <= val [ cans - 1 ] + val [ cans - 2 ] )	if ( sum <= val [ cans - 1 ] + val [ can - 2 ] )
18753	print " YES \ n "	N/A	N/A	cout << " YES\n " ;	cout << " YES\n " ;
18754	else	N/A	N/A	else	else
18755	print " NO \ n "	N/A	N/A	cout << " NO\n " ;	cout << " NO\n " ;
18756	DUMMY	0.0	0.0	return 0;	DUMMY
18757	DUMMY	0.0	0.0	}	DUMMY
18758	DUMMY	0.0	0.0	int main() {	DUMMY
18759	let n , sum be long integers with sum is equal to 0	N/A	N/A	long long n , sum = 0 ;	long long n, sum = 0 ;
18760	read n	N/A	N/A	cin >> n ;	cin >> n ;
18761	b = array of long inters of length n	N/A	N/A	long long b [ n ] ;	long int b [ n ] ;
18762	for long integer i = 0 to n exclusive	N/A	N/A	for ( long long i = 0 ; i < n ; i ++ )	for ( long long i = 0 ; i < n ; i ++ )
18763	let x be a long integer	N/A	N/A	long long x ;	long long x ;
18764	read x	N/A	N/A	cin >> x ;	cin >> x ;
18765	sum is equal to sum + x	N/A	N/A	sum += x ;	sum += x ;
18766	DUMMY	0.0	0.0	}	DUMMY
18767	for long integer i = 0 to n exclusive , read ith element of b array	N/A	N/A	for ( long long i = 0 ; i < n ; i ++ ) { cin >> b [ i ] ; }	for ( long long i = 0 ; i < n ; i ++ ) { cin >> b [ i ] ; }
18768	sorting the data of b , b + n	N/A	N/A	sort ( b , b + n ) ;	sort ( b, b + n ) ;
18769	print YES if ( b [ n - 2 ] + b [ n - 1 ] > = sum ) else print NO	N/A	N/A	cout << ( b [ n - 2 ] + b [ n - 1 ] >= sum ? " YES " : " NO " ) << ' \n ' ;	cout << ( b [ n - 2 ] + b [ N - 1 ] >= sum? " YES " : " NO " ) << endl ;
18770	DUMMY	0.0	0.0	return 0;	DUMMY
18771	DUMMY	0.0	0.0	}	DUMMY
18772	create constant integer N with N = 1e5 + 10	N/A	N/A	const int N = 1e5 + 10 ;	const int N = 1e5 + 10 ;
18773	DUMMY	0.0	0.0	int main() {	DUMMY
18774	create integer n	N/A	N/A	int n ;	int n ;
18775	read n	N/A	N/A	cin >> n ;	cin >> n ;
18776	create integer arrays a , b , with a size N , b size N	N/A	N/A	int a [ N ] , b [ N ] ;	int a [ n ], b [ N ] ;
18777	create long long sum with sum = 0	N/A	N/A	long long sum = 0 ;	long long sum = 0 ;
18778	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
18779	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
18780	increment sum by a [ i ]	N/A	N/A	sum += a [ i ] ;	sum += a [ i ] ;
18781	DUMMY	0.0	0.0	}	DUMMY
18782	for i = 0 to n exclusive , read b [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> b [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> b [ i ] ; }
18783	sort elements from b to b + n using integer greater to compare	N/A	N/A	sort ( b , b + n , greater < int > ( ) ) ;	sort ( b, b + n, greater ) ;
18784	if sum is less than or equal to ( b [ 0 ] + b [ 1 ] )	N/A	N/A	if ( sum <= ( b [ 0 ] + b [ 1 ] ) )	if ( sum <= ( b [ 0 ] + b [ 1 ] ) )
18785	print " YES " print newline	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
18786	else	N/A	N/A	else	else
18787	print " NO " print newline	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
18788	DUMMY	0.0	0.0	return 0;	DUMMY
18789	DUMMY	0.0	0.0	}	DUMMY
18790	declare constant integer N = 1e5 + 10	N/A	N/A	const int N = 1e5 + 10 ;	const int N = 1e5 + 10 ;
18791	DUMMY	0.0	0.0	int main() {	DUMMY
18792	declare integer variable n	N/A	N/A	int n ;	int n ;
18793	read n	N/A	N/A	cin >> n ;	cin >> n ;
18794	create long long arrays a and b with N elements	N/A	N/A	long long a [ N ] , b [ N ] ;	long long a [ n ], b [ N ] ;
18795	declare long long sum = 0	N/A	N/A	long long sum = 0 ;	long long sum = 0 ;
18796	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
18797	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
18798	increase sum by a [ i ]	N/A	N/A	sum += a [ i ] ;	sum += a [ i ] ;
18799	DUMMY	0.0	0.0	}	DUMMY
18800	for i = 0 to n exclusive read b [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> b [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> b [ i ] ;
18801	sort b using greater function as comparer	N/A	N/A	sort ( b , b + n , greater < int > ( ) ) ;	sort ( b, b + greater < int > ( ) ) ;
18802	if sum < = ( b [ 0 ] + b [ 1 ] )	N/A	N/A	if ( sum <= ( b [ 0 ] + b [ 1 ] ) )	if ( sum <= ( b [ 0 ] + b [ 1 ] ) )
18803	print " YES "	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
18804	else	N/A	N/A	else	else
18805	print " NO "	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
18806	DUMMY	0.0	0.0	return 0;	DUMMY
18807	DUMMY	0.0	0.0	}	DUMMY
18808	let a , b , i , n be integers where a and b are arrays of length 100001	N/A	N/A	int a [ 100001 ] , b [ 100001 ] , i , n ;	int a [ 1000001 ], b [ 100001 ], i, n ;
18809	let s be a long integer	N/A	N/A	long long s ;	long long s ;
18810	DUMMY	0.0	0.0	int main() {	DUMMY
18811	read n	N/A	N/A	cin >> n ;	cin >> n ;
18812	for i = 1 to n inclusive	N/A	N/A	for ( i = 1 ; i <= n ; i ++ )	for ( i = 1 ; i <= n ; i ++ )
18813	read ith element of array a	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
18814	s is equal to s + ith element of array a	N/A	N/A	s += a [ i ] ;	s += a [ i ] ;
18815	DUMMY	0.0	0.0	}	DUMMY
18816	for i = 1 to n inclusive , read ith element of array b	N/A	N/A	for ( i = 1 ; i <= n ; i ++ ) cin >> b [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) { cin >> b [ i ] ; }
18817	sort the values b + 1 , b + n + 1	N/A	N/A	sort ( b + 1 , b + n + 1 ) ;	sort ( b + 1, b + n + 1 ) ;
18818	if ( nth term of array b + [ n - 1 ] th term of array b is greater than or equal to s )	N/A	N/A	if ( b [ n ] + b [ n - 1 ] >= s )	if ( b [ n - 1 ] >= s )
18819	print YES and newline	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
18820	else do the following	N/A	N/A	else	else
18821	print NO and newline	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
18822	DUMMY	0.0	0.0	return 0;	DUMMY
18823	DUMMY	0.0	0.0	}	DUMMY
18824	function gcd with long long arguments a and b that returns long long	N/A	N/A	long long gcd ( long long a , long long b )	long long gcd ( long long a, long long b )
18825	if b = 0 , return a	N/A	N/A	if ( b == 0 ) return a ;	if ( b == 0 ) return a ;
18826	return gcd ( b , a % b )	N/A	N/A	return gcd ( b , a % b ) ;	return gcd ( b, a % b ) ;
18827	DUMMY	0.0	0.0	}	DUMMY
18828	function lcm with long long arguments a and b that returns long long	N/A	N/A	long long lcm ( long long a , long long b )	long long lcm ( long long a, long long b )
18829	return a * b / gcd ( a , b )	N/A	N/A	return a * b / gcd ( a , b ) ;	return a * b / gcd ( a, b ) ;
18830	DUMMY	0.0	0.0	}	DUMMY
18831	DUMMY	0.0	0.0	int main() {	DUMMY
18832	create long longs i and j	N/A	N/A	long long i , j ;	long long i, j ;
18833	declare long long n	N/A	N/A	long long n ;	long long n ;
18834	read n	N/A	N/A	cin >> n ;	cin >> n ;
18835	create vectors of long long a and b with n elements each	N/A	N/A	vector < long long > a ( n ) , b ( n ) ;	vector < long long > a ( n ), b ( n, 0 ) ;
18836	read n elements into a	N/A	N/A	for ( long long i = 0 ; i < ( n ) ; i ++ ) cin >> a [ i ] ;	for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
18837	read n elements into b	N/A	N/A	for ( long long i = 0 ; i < ( n ) ; i ++ ) cin >> b [ i ] ;	for ( i = 0 ; i < n ; i ++ ) cin >> b [ i ] ;
18838	declare long long variable sum = 0	N/A	N/A	long long sum = 0 ;	long long sum = 0 ;
18839	add all elements of a to the sum one by one	N/A	N/A	for ( long long i = 0 ; i < ( n ) ; i ++ ) sum += a [ i ] ;	for ( long long i = 0 ; i < n ; i ++ ) { sum += a [ i ] ; }
18840	sort array b	N/A	N/A	sort ( b . begin ( ) , b . end ( ) ) ;	sort ( b. begin ( ), b. end ( ) ) ;
18841	if sum is greater than b [ n - 1 ] + b [ n - 2 ]	N/A	N/A	if ( sum > b [ n - 1 ] + b [ n - 2 ] )	if ( sum > b [ n - 1 ] + b [ N - 2 ] )
18842	print " NO " and a new line	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
18843	else	N/A	N/A	else	else
18844	print " YES " and a new line	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
18845	DUMMY	0.0	0.0	}	DUMMY
18846	DUMMY	0.0	0.0	}	DUMMY
18847	DUMMY	0.0	0.0	int main() {	DUMMY
18848	create long long integers n and k , array c with 2 elements filled with 0 , and arrays a and b with size 100000	N/A	N/A	long long int n , a [ 100000 ] , b [ 100000 ] , c [ 2 ] = { 0 } , k ;	long long int n, k, c [ 2 ] = { 0 }, b [ 100000 ] ;
18849	declare long long integer variables i , j and sum where sum = 0	N/A	N/A	long long int i , j , sum = 0 ;	long long int i, j, sum = 0 ;
18850	read n	N/A	N/A	cin >> n ;	cin >> n ;
18851	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
18852	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
18853	set sum to sum + a [ i ]	N/A	N/A	sum = sum + a [ i ] ;	sum += a [ i ] ;
18854	DUMMY	0.0	0.0	}	DUMMY
18855	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
18856	read b [ i ]	N/A	N/A	cin >> b [ i ] ;	cin >> b [ i ] ;
18857	if b [ i ] is greater than c [ 0 ]	N/A	N/A	if ( b [ i ] > c [ 0 ] )	if ( b [ i ] > c [ 0 ] )
18858	c [ 0 ] = b [ i ]	N/A	N/A	c [ 0 ] = b [ i ] ;	c [ 0 ] = b [ i ] ;
18859	k = i	N/A	N/A	k = i ;	k = i ;
18860	DUMMY	0.0	0.0	}	DUMMY
18861	DUMMY	0.0	0.0	}	DUMMY
18862	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
18863	if c [ 1 ] < b [ i ] and b [ i ] < = c [ 0 ] and i ! = k , set c [ 1 ] to b [ i ]	N/A	N/A	if ( c [ 1 ] < b [ i ] && b [ i ] <= c [ 0 ] && i != k ) c [ 1 ] = b [ i ] ;	if ( c [ 1 ] < b [ 0 ] && b [ i ] <= c [ 2 ] && i!= k ) { c [ l1 ] = b [ l2 ] ; }
18864	DUMMY	0.0	0.0	}	DUMMY
18865	if c [ 1 ] + c [ 0 ] > = sum	N/A	N/A	if ( c [ 1 ] + c [ 0 ] >= sum )	if ( c [ 1 ] + c [ 0 ] >= sum )
18866	print " YES "	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
18867	else	N/A	N/A	else	else
18868	print " NO "	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
18869	DUMMY	0.0	0.0	}	DUMMY
18870	DUMMY	0.0	0.0	return 0;	DUMMY
18871	DUMMY	0.0	0.0	}	DUMMY
18872	create long long arrays a , b , with a size 100010 , b size 100010	N/A	N/A	long long a [ 100010 ] , b [ 100010 ] ;	long long a [ 100010 ], b [ 100000 ] ;
18873	declare cmp with integers a , b as arguments , returning boolean	N/A	N/A	bool cmp ( int a , int b )	bool cmp ( int a, int b )
18874	return a is greater than b	N/A	N/A	return a > b ;	return a > b ;
18875	DUMMY	0.0	0.0	}	DUMMY
18876	DUMMY	0.0	0.0	int main() {	DUMMY
18877	create integers n , i , j	N/A	N/A	int n , i , j ;	int n, i, j ;
18878	while read n is true	N/A	N/A	while ( cin >> n )	while ( cin >> n )
18879	set bytes from a to size of a to value 0	N/A	N/A	memset ( a , 0 , sizeof ( a ) ) ;	memset ( a, 0, sizeof ( a ) ) ;
18880	set bytes from b to size of b to value 0	N/A	N/A	memset ( b , 0 , sizeof ( b ) ) ;	memset ( b, 0, sizeof ( b ) ) ;
18881	create double sum with sum = 0	N/A	N/A	double sum = 0 ;	double sum = 0 ;
18882	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
18883	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
18884	increment sum by a [ i ]	N/A	N/A	sum += a [ i ] ;	sum += a [ i ] ;
18885	DUMMY	0.0	0.0	}	DUMMY
18886	for i = 0 to n exclusive , read b [ i ]	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { cin >> b [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> b [ i ] ; }
18887	sort elements from b to b + i using cmp to compare	N/A	N/A	sort ( b , b + i , cmp ) ;	sort ( b, b + i, cmp ) ;
18888	if b [ 0 ] + b [ 1 ] is greater than or equal to sum	N/A	N/A	if ( b [ 0 ] + b [ 1 ] >= sum )	if ( b [ 0 ] + b [ 1 ] >= sum )
18889	print " YES " print newline	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
18890	else	N/A	N/A	else	else
18891	print " NO " print newline	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
18892	DUMMY	0.0	0.0	}	DUMMY
18893	DUMMY	0.0	0.0	return 0;	DUMMY
18894	DUMMY	0.0	0.0	}	DUMMY
18895	DUMMY	0.0	0.0	int main() {	DUMMY
18896	n , M , M2 , s = long long and set s to 0	N/A	N/A	long long n , M , M2 , s = 0 ;	long long n, M, M2, s = 0 ;
18897	t = long long array of size 100005	N/A	N/A	long long t [ 100005 ] ;	long long t [ 100005 ] ;
18898	t2 = long long array of size 100005	N/A	N/A	long long t2 [ 100005 ] ;	long long t2 [ 100005 ] ;
18899	read n	N/A	N/A	cin >> n ;	cin >> n ;
18900	for long long i = 0 to n exclusive	N/A	N/A	for ( long long i = 0 ; i < n ; i ++ )	for ( long long i = 0 ; i < n ; i ++ )
18901	read t [ i ]	N/A	N/A	cin >> t [ i ] ;	cin >> t [ i ] ;
18902	increase s by t [ i ]	N/A	N/A	s += t [ i ] ;	s += t [ i ] ;
18903	DUMMY	0.0	0.0	}	DUMMY
18904	for long long i = 0 to n exclusive read t2 [ i ]	N/A	N/A	for ( long long i = 0 ; i < n ; i ++ ) { cin >> t2 [ i ] ; }	for ( long long i = 0 ; i < n ; i ++ ) { cin >> t2 [ i ] ; }
18905	sort the first n elements of t2	N/A	N/A	sort ( t2 , t2 + n ) ;	sort ( t2, t2 + n ) ;
18906	if s < = t2 [ n - 1 ] + t2 [ n - 2 ]	N/A	N/A	if ( s <= t2 [ n - 1 ] + t2 [ n - 2 ] )	if ( s <= t2 [ n - 1 ] + t2. n - 2 ] )
18907	print YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
18908	else	N/A	N/A	else	else
18909	print NO	N/A	N/A	cout << " NO " << endl ;	cout << " NO\n " ;
18910	DUMMY	0.0	0.0	return 0;	DUMMY
18911	DUMMY	0.0	0.0	}	DUMMY
18912	create constant long long Mod with value 1e9 + 7	N/A	N/A	const long long Mod = 1e9 + 7 ;	const long long Mod = 1e9 + 7 ;
18913	create constant double pi with value 2 * acos ( 0 . 0 )	N/A	N/A	const double pi = 2 * acos ( 0.0 ) ;	const double pi = 2 * acos ( 0.0 ) ;
18914	create constant double N with value 2e5 + 5	N/A	N/A	const int N = 2e5 + 5 ;	const double N = 2e5 + 5 ;
18915	arr is an integer array with size N	N/A	N/A	int arr [ N ] ;	int arr [ N ] ;
18916	DUMMY	0.0	0.0	int main() {	DUMMY
18917	create long longs n , x and s , with s = 0	N/A	N/A	long long n , x , s = 0 ;	long long n, x, s = 0 ;
18918	read n	N/A	N/A	cin >> n ;	cin >> n ;
18919	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
18920	read x	N/A	N/A	cin >> x ;	cin >> x ;
18921	increase s by x	N/A	N/A	s += x ;	s += x ;
18922	DUMMY	0.0	0.0	}	DUMMY
18923	for integer i = 0 to n exclusive read arr [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }
18924	sort arr	N/A	N/A	sort ( arr , arr + n ) ;	sort ( arr, arr + n ) ;
18925	if arr [ n - 1 ] + arr [ n - 2 ] > = s	N/A	N/A	if ( arr [ n - 1 ] + arr [ n - 2 ] >= s )	if ( arr [ n - 1 ] + arr [ N - 2 ] >= s )
18926	print " YES " and a new line	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
18927	else	N/A	N/A	else	else
18928	print " NO " and a new line	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
18929	DUMMY	0.0	0.0	return 0;	DUMMY
18930	DUMMY	0.0	0.0	}	DUMMY
18931	DUMMY	0.0	0.0	int main() {	DUMMY
18932	declare integer variable n	N/A	N/A	int n ;	int n ;
18933	read n	N/A	N/A	cin >> n ;	cin >> n ;
18934	let sum and cur be long longs where sum = 0	N/A	N/A	long long sum = 0 , cur ;	long long sum = 0, cur ;
18935	for size_t = 0 to n exclusive	N/A	N/A	for ( size_t i = 0 ; i < n ; i ++ )	for ( size_t i = 0 ; i < n ; i ++ )
18936	read cur	N/A	N/A	cin >> cur ;	cin >> cur ;
18937	increase sum by cur	N/A	N/A	sum += cur ;	sum += cur ;
18938	DUMMY	0.0	0.0	}	DUMMY
18939	create long longs Max1 and Max2 = - 1	N/A	N/A	long long Max1 = - 1 , Max2 = - 1 ;	long long Max1 = - 2, Max2 = - 1 ;
18940	for size_t = 0 to n exclusive	N/A	N/A	for ( size_t i = 0 ; i < n ; i ++ )	for ( size_t i = 0 ; i < n ; i ++ )
18941	read cur	N/A	N/A	cin >> cur ;	cin >> cur ;
18942	if cur is greater than Max1	N/A	N/A	if ( cur > Max1 )	if ( cur > Max1 )
18943	set Max2 to Max1	N/A	N/A	Max2 = Max1 ;	Max2 = Max1 ;
18944	set value of Max1 to cur	N/A	N/A	Max1 = cur ;	Max1 = cur ;
18945	else if cur is greater than Max2	N/A	N/A	else if ( cur > Max2 )	else if ( cur > Max2 )
18946	Max2 = cur	N/A	N/A	Max2 = cur ;	Max2 = cur ;
18947	DUMMY	0.0	0.0	}	DUMMY
18948	DUMMY	0.0	0.0	}	DUMMY
18949	print " YES \ n " if Max2 + Max1 > = sum , else pring " NO \ n "	N/A	N/A	cout << ( ( Max2 + Max1 >= sum ) ? " YES\n " : " NO\n " ) ;	cout << ( Max2 + Max1 >= sum? " YES\n " : " NO\nt " ) ;
18950	DUMMY	0.0	0.0	return 0;	DUMMY
18951	DUMMY	0.0	0.0	}	DUMMY
18952	DUMMY	0.0	0.0	int main() {	DUMMY
18953	create integer x	N/A	N/A	int x ;	int x ;
18954	create long long integer k with k = 0	N/A	N/A	long long int k = 0 ;	long long int k = 0 ;
18955	read x	N/A	N/A	cin >> x ;	cin >> x ;
18956	create long long integer vector v	N/A	N/A	vector < long long int > v ;	vector < long long int > v ;
18957	create integer arrays a , b , with a size x , b size x	N/A	N/A	int a [ x ] , b [ x ] ;	int a [ x ], b [ y ] ;
18958	for i = 0 to x exclusive	N/A	N/A	for ( int i = 0 ; i < x ; i ++ )	for ( int i = 0 ; i < x ; i ++ )
18959	create integer s	N/A	N/A	int s ;	int s ;
18960	read s	N/A	N/A	cin >> s ;	cin >> s ;
18961	increment k by s	N/A	N/A	k += s ;	k += s ;
18962	DUMMY	0.0	0.0	}	DUMMY
18963	for i = 0 to x exclusive	N/A	N/A	for ( int i = 0 ; i < x ; i ++ )	for ( int i = 0 ; i < x ; i ++ )
18964	create long long integer d	N/A	N/A	long long int d ;	long long int d ;
18965	read d	N/A	N/A	cin >> d ;	cin >> d ;
18966	add element d to end of v	N/A	N/A	v . push_back ( d ) ;	v. push_back ( d ) ;
18967	DUMMY	0.0	0.0	}	DUMMY
18968	sort elements from beginning of v to end of v	N/A	N/A	sort ( v . begin ( ) , v . end ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
18969	create long long integer s with s = v [ x - 1 ] + v [ x - 2 ]	N/A	N/A	long int s = v [ x - 1 ] + v [ x - 2 ] ;	long long int s = v [ x - 1 ] + v [x - 2 ] ;
18970	if s is greater than or equal to k	N/A	N/A	if ( s >= k )	if ( s >= k )
18971	print " YES " print newline	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
18972	else	N/A	N/A	else	else
18973	print " NO " print newline	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
18974	DUMMY	0.0	0.0	}	DUMMY
18975	DUMMY	0.0	0.0	return 0;	DUMMY
18976	DUMMY	0.0	0.0	}	DUMMY
18977	declare gcd with long longs a , b as arguments , returning long long	N/A	N/A	long long gcd ( long long a , long long b )	long long gcd ( long long a, long long b )
18978	while b is true , swap values of ( set a to a % b , and b )	N/A	N/A	while ( b ) swap ( a %= b , b ) ;	while ( b ) swap ( a % b, b ) ;
18979	return a	N/A	N/A	return a ;	return a ;
18980	DUMMY	0.0	0.0	}	DUMMY
18981	DUMMY	0.0	0.0	int main() {	DUMMY
18982	create long long n	N/A	N/A	long long n ;	long long n ;
18983	read n	N/A	N/A	cin >> n ;	cin >> n ;
18984	create long long vector nums initialized with n	N/A	N/A	vector < long long > nums ( n ) ;	vector < long long > nums ( n ) ;
18985	create long long sum with sum = 0	N/A	N/A	long long sum = 0 ;	long long sum = 0 ;
18986	for i = 0 to n exclusive	N/A	N/A	for ( long long i = 0 ; i < n ; ++ i )	for ( long long i = 0 ; i < n ; i ++ )
18987	create long long a	N/A	N/A	long long a ;	long long a ;
18988	read a	N/A	N/A	cin >> a ;	cin >> a ;
18989	increment sum by a	N/A	N/A	sum += a ;	sum += a ;
18990	DUMMY	0.0	0.0	}	DUMMY
18991	create long longs mx1 , mx2 with mx1 = 0 , mx2 = 0	N/A	N/A	long long mx1 = 0 , mx2 = 0 ;	long long mx1 = 0, mx2 = 0 ;
18992	for i = 0 to n exclusive	N/A	N/A	for ( long long i = 0 ; i < n ; ++ i )	for ( long long i = 0 ; i < n ; i ++ )
18993	read nums [ i ]	N/A	N/A	cin >> nums [ i ] ;	cin >> nums [ i ] ;
18994	if nums [ i ] is greater than mx1	N/A	N/A	if ( nums [ i ] > mx1 )	if ( nums [ i ] > mx1 )
18995	set mx2 to mx1 , set mx1 to nums [ i ]	N/A	N/A	mx2 = mx1 , mx1 = nums [ i ] ;	mx1 = mx2, mx1 = nums [ i ] ;
18996	else if nums [ i ] is less than or equal to mx1 and nums [ i ] is greater than mx2	N/A	N/A	else if ( nums [ i ] <= mx1 && nums [ i ] > mx2 )	else if ( ( nums [ i ] <= mx1 ) && ( nums [ 1 ] > mx2 ) )
18997	set mx2 to nums [ i ]	N/A	N/A	mx2 = nums [ i ] ;	mx2 = nums [ i ] ;
18998	DUMMY	0.0	0.0	}	DUMMY
18999	if sum is less than or equal to mx1 + mx2	N/A	N/A	if ( sum <= mx1 + mx2 )	if ( sum <= mx1 + mx2 )
19000	print " YES " print newline	N/A	N/A	cout << " YES " << endl ;	cout << " YES " << endl ;
19001	else	N/A	N/A	else	else
19002	print " NO " print newline	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
19003	DUMMY	0.0	0.0	}	DUMMY
19004	n , j , minnum and ans are integers with minnum = 1000000002 and ans = 100002	N/A	N/A	int n , j , minnum = 1000000002 , ans = 100002 ;	int n, j, minnum = 1000000002, ans = 100002 ;
19005	create an arrays of ints a and flag with size 100005	N/A	N/A	int a [ 100005 ] , flag [ 100005 ] ;	int n, flag [ 100005 ] ;
19006	DUMMY	0.0	0.0	int main() {	DUMMY
19007	read n	N/A	N/A	cin >> n ;	cin >> n ;
19008	for i from 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
19009	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
19010	if minnum is greater than a [ i ] , change minnum to a [ i ]	N/A	N/A	if ( minnum > a [ i ] ) minnum = a [ i ] ;	if ( minnum > a [ 1 ] ) minnum = a [ i ] ;
19011	DUMMY	0.0	0.0	}	DUMMY
19012	for i from 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
19013	if a [ i ] = minnum	N/A	N/A	if ( a [ i ] == minnum )	if ( a [ i ] == minnum )
19014	increment j	N/A	N/A	j ++ ;	j ++ ;
19015	change flag [ j ] to i	N/A	N/A	flag [ j ] = i ;	flag [ j ] = i ;
19016	DUMMY	0.0	0.0	}	DUMMY
19017	DUMMY	0.0	0.0	}	DUMMY
19018	for integer i = 1 to j exclusive	N/A	N/A	for ( int i = 1 ; i < j ; i ++ )	for ( int i = 1 ; i < j ; i ++ )
19019	if flag [ i + 1 ] - flag [ i ] is less than ans , set ans to flag [ i + 1 ] - flag [ i ]	N/A	N/A	if ( flag [ i + 1 ] - flag [ i ] < ans ) ans = flag [ i + 1 ] - flag [ i ] ;	if ( flag [ i + 1 ] - flag [ 1 ] < ans ) { ans = flag [ j + i ] -flag [ i ] ; }
19020	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
19021	DUMMY	0.0	0.0	return 0;	DUMMY
19022	DUMMY	0.0	0.0	}	DUMMY
19023	n , a , mink , pr , mind = integers with a = integer array of size 100001 , mink = 2e9 , pr = - 1 , mind = 2e9	N/A	N/A	int n , a [ 100001 ] , mink = 2e9 , pr = - 1 , mind = 2e9 ;	int n, a [ 100001 ] = { 0 }, mink = 2e9, pr = - 1, mind = ( 0 ) ;
19024	DUMMY	0.0	0.0	int main() {	DUMMY
19025	read n	N/A	N/A	cin >> n ;	cin >> n ;
19026	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19027	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
19028	mink = min of mink and a [ i ]	N/A	N/A	mink = min ( mink , a [ i ] ) ;	mink = min ( mink, a [ i ] ) ;
19029	DUMMY	0.0	0.0	}	DUMMY
19030	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19031	if pr is not - 1 and a [ i ] is mink , mind = min ( mind , i - pr )	N/A	N/A	if ( pr != - 1 && a [ i ] == mink ) { mind = min ( mind , i - pr ) ; }	if ( pr!= - 1 && a [ i ] == mink ) { mind = min ( mind, i - pr ) ; }
19032	if a [ i ] is mink , pr = i	N/A	N/A	if ( a [ i ] == mink ) { pr = i ; }	if ( a [ i ] == mink ) pr = i ;
19033	DUMMY	0.0	0.0	}	DUMMY
19034	print mind	N/A	N/A	cout << mind << endl ;	cout << mind << endl ;
19035	DUMMY	0.0	0.0	}	DUMMY
19036	create constant int maxn = 1e7 + 10	N/A	N/A	const int maxn = 1e7 + 10 ;	const int maxn = 1e7 + 10 ;
19037	let int array a of size maxn	N/A	N/A	int a [ maxn ] ;	int a [ maxn ] ;
19038	let int n	N/A	N/A	int n ;	int n ;
19039	let integer mini = 1e9 + 10	N/A	N/A	int mini = 1e9 + 10 ;	int mini = 1e9 + 10 ;
19040	DUMMY	0.0	0.0	int main() {	DUMMY
19041	read n	N/A	N/A	cin >> n ;	cin >> n ;
19042	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19043	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
19044	if a [ i ] is less than mini , set mini to a [ i ]	N/A	N/A	if ( a [ i ] < mini ) mini = a [ i ] ;	if ( a [ i ] < mini ) mini = a [ 1 ] ;
19045	DUMMY	0.0	0.0	}	DUMMY
19046	create int vector vec	N/A	N/A	vector < int > vec ;	vector < int > vec ;
19047	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19048	if mini is equal to a [ i ] , append i to vec	N/A	N/A	if ( mini == a [ i ] ) { vec . push_back ( i ) ; }	if ( mini == a [ i ] ) vec. push_back ( i ) ;
19049	DUMMY	0.0	0.0	}	DUMMY
19050	set mini to n	N/A	N/A	mini = n ;	mini = n ;
19051	for i = 0 to the size of vec exclusive , set mini to the min of mini and vec [ i + 1 ] - vec [ i ]	N/A	N/A	for ( int i = 0 ; i < vec . size ( ) - 1 ; i ++ ) { mini = min ( mini , vec [ i + 1 ] - vec [ i ] ) ; }	for ( int i = 0 ; i < vec. size ( ) ; i ++ ) { mini = min ( mini, vec [ i + 1 ] - vec [ 1 ] ) ; }
19052	print mini	N/A	N/A	cout << mini << endl ;	cout << mini << endl ;
19053	DUMMY	0.0	0.0	return 0;	DUMMY
19054	DUMMY	0.0	0.0	}	DUMMY
19055	DUMMY	0.0	0.0	int main() {	DUMMY
19056	v = long long vector	N/A	N/A	vector < long long > v ;	vector < long long > v ;
19057	v1 = long long vector	N/A	N/A	vector < long long > v1 ;	vector < long long > v1 ;
19058	i , j , n , ans , min , t , flag = long long with min = 1000000002	N/A	N/A	long long i , j , n , ans , min = 1000000002 , t , flag ;	long long i, j, n, ans, min = 1000000002, t, flag ;
19059	read n	N/A	N/A	cin >> n ;	cin >> n ;
19060	for i = 0 to n	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
19061	x = long long	N/A	N/A	long long x ;	long long x ;
19062	read x	N/A	N/A	cin >> x ;	cin >> x ;
19063	append x to v	N/A	N/A	v . push_back ( x ) ;	v. push_back ( x ) ;
19064	if x is less than min set min to x	N/A	N/A	if ( x < min ) { min = x ; }	if ( x < min ) min = x ;
19065	DUMMY	0.0	0.0	}	DUMMY
19066	for i = 0 to n	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( long long i = 0 ; i < n ; i ++ )
19067	if min is v [ i ] append i to v1	N/A	N/A	if ( min == v [ i ] ) { v1 . push_back ( i ) ; }	if ( min == v [ i ] ) v1. push_back ( i ) ;
19068	DUMMY	0.0	0.0	}	DUMMY
19069	set min to 1000000002	N/A	N/A	min = 1000000002 ;	min = 1000000002 ;
19070	for i = 1 to size of v1	N/A	N/A	for ( i = 1 ; i < v1 . size ( ) ; i ++ )	for ( int i = 1 ; i < v1. size ( ) ; i ++ )
19071	if ( v1 [ i ] - v1 [ i - 1 ] ) < min set min to v1 [ i ] - v1 [ i - 1 ]	N/A	N/A	if ( ( v1 [ i ] - v1 [ i - 1 ] ) < min ) { min = ( v1 [ i ] - v1 [ i - 1 ] ) ; }	if ( ( v1. at ( i ) - v1 [ i - 1 ] ) < min ) min = v1. i ] - v2 [ i + 1 ] ;
19072	DUMMY	0.0	0.0	}	DUMMY
19073	print min	N/A	N/A	cout << min << endl ;	cout << min << endl ;
19074	DUMMY	0.0	0.0	}	DUMMY
19075	a = array of integers of length 100010	N/A	N/A	int a [ 100010 ] ;	int a [ 100010 ] ;
19076	DUMMY	0.0	0.0	int main() {	DUMMY
19077	let n , m , j , k , l , i , o , p be integers with j = INT_MAX , l = INT_MAX	N/A	N/A	int n , m , j = INT_MAX , k , l = INT_MAX , i , o , p ;	int n, m, j = INT_MAX, k, l, i, o, p ;
19078	read n	N/A	N/A	cin >> n ;	cin >> n ;
19079	for i = 1 to n inclusive	N/A	N/A	for ( i = 1 ; i <= n ; i ++ )	for ( i = 1 ; i <= n ; i ++ )
19080	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
19081	l is equal to minimum of l , a [ i ]	N/A	N/A	l = min ( l , a [ i ] ) ;	l = min ( l, a [ i ] ) ;
19082	DUMMY	0.0	0.0	}	DUMMY
19083	k is equal to distance ( a , find ( a + 1 , a + n + 1 , l ) )	N/A	N/A	k = distance ( a , find ( a + 1 , a + n + 1 , l ) ) ;	k = distance ( a, find ( a + i, a + n + 1, l ) ) ;
19084	for i = k + 1 to n inclusive	N/A	N/A	for ( i = k + 1 ; i <= n ; i ++ )	for ( int i = k + 1 ; i <= n ; i ++ )
19085	if a [ i ] is equal to l	N/A	N/A	if ( a [ i ] == l )	if ( a [ i ] == l )
19086	j is equal to minimum of j , i - k	N/A	N/A	j = min ( j , i - k ) ;	j = min ( j, i - k ) ;
19087	k is equal to i	N/A	N/A	k = i ;	k = i ;
19088	DUMMY	0.0	0.0	}	DUMMY
19089	DUMMY	0.0	0.0	}	DUMMY
19090	print j and newline	N/A	N/A	cout << j << endl ;	cout << j << endl ;
19091	DUMMY	0.0	0.0	return 0;	DUMMY
19092	DUMMY	0.0	0.0	}	DUMMY
19093	n , a , Min , pre , ans = integers with a = array of size 100005 , ans = 100005	N/A	N/A	int n , a [ 100005 ] , Min , pre , ans = 100005 ;	int n, a [ 100005 ], Min, pre, ans = 100005 ;
19094	DUMMY	0.0	0.0	int main() {	DUMMY
19095	read n	N/A	N/A	cin >> n ;	cin >> n ;
19096	for i = 1 to n , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
19097	Min = a [ 1 ]	N/A	N/A	Min = a [ 1 ] ;	Min = a [ 1 ] ;
19098	for i = 2 to n , Min = min of Min and a [ i ]	N/A	N/A	for ( int i = 2 ; i <= n ; i ++ ) Min = min ( Min , a [ i ] ) ;	for ( int i = 2 ; i <= n ; i ++ ) Min = min ( Min, a [ i ] ) ;
19099	for i = 1 to n	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
19100	if a [ i ] is Min	N/A	N/A	if ( a [ i ] == Min )	if ( a [ i ] == Min )
19101	if not pre	N/A	N/A	if ( ! pre )	if (! pre )
19102	pre = i	N/A	N/A	pre = i ;	pre = i ;
19103	else	N/A	N/A	else	else
19104	ans = min ( ans , i - pre ) , pre = i	N/A	N/A	ans = min ( ans , i - pre ) , pre = i ;	ans = min ( ans, i - pre ), pre = i ;
19105	DUMMY	0.0	0.0	}	DUMMY
19106	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
19107	DUMMY	0.0	0.0	return 0;	DUMMY
19108	DUMMY	0.0	0.0	}	DUMMY
19109	DUMMY	0.0	0.0	int main() {	DUMMY
19110	let int s = 9999999999	N/A	N/A	int s = 9999999999 ;	int s = 9999999999 ;
19111	let int n	N/A	N/A	int n ;	int n ;
19112	read n	N/A	N/A	cin >> n ;	cin >> n ;
19113	create pair array a of int and int of size n	N/A	N/A	pair < int , int > a [ n ] ;	pair < int, int > a [ n ] ;
19114	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19115	read a [ i ] . first	N/A	N/A	cin >> a [ i ] . first ;	cin >> a [ i ]. first ;
19116	set a [ i ] . second to i + 1	N/A	N/A	a [ i ] . second = i + 1 ;	a [ i ]. second = i + 1 ;
19117	DUMMY	0.0	0.0	}	DUMMY
19118	sort array a	N/A	N/A	sort ( a , a + n ) ;	sort ( a, a + n ) ;
19119	for i = 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
19120	if a [ i ] . first equals a [ i + 1 ] . first and a [ 0 ] . first equals a [ i ] . first , set s to min of s and a [ i + 1 ] . second - a [ i ] . second	N/A	N/A	if ( a [ i ] . first == a [ i + 1 ] . first && a [ 0 ] . first == a [ i ] . first ) { s = min ( s , a [ i + 1 ] . second - a [ i ] . second ) ; }	if ( a [ i ]. first == a [ n + 1 ] & first && a [ 0 ].first == a []. first ) { s = min ( s, a [ 1 ]. second - a [ j ].second ) ; }
19121	DUMMY	0.0	0.0	}	DUMMY
19122	print s	N/A	N/A	cout << s << endl ;	cout << s << endl ;
19123	DUMMY	0.0	0.0	return 0;	DUMMY
19124	DUMMY	0.0	0.0	}	DUMMY
19125	DUMMY	0.0	0.0	int main() {	DUMMY
19126	size = int and in = int array of size 100005	N/A	N/A	int size , in [ 100005 ] ;	int size, in [ 100005 ] ;
19127	d1 = int vector	N/A	N/A	vector < int > d1 ;	vector < int > d1 ;
19128	read size	N/A	N/A	cin >> size ;	cin >> size ;
19129	read size values into in	N/A	N/A	for ( int i = 0 ; i < size ; i ++ ) { cin >> in [ i ] ; }	for ( int i = 0 ; i < size ; i ++ ) cin >> in [ i ] ;
19130	mn = int with mn = 1e9	N/A	N/A	int mn = 1e9 ;	int mn = 1e9 ;
19131	for i = 0 to size	N/A	N/A	for ( int i = 0 ; i < size ; i ++ )	for ( int i = 0 ; i < size ; i ++ )
19132	if in [ i ] < mn set mn to in [ i ]	N/A	N/A	if ( in [ i ] < mn ) { mn = in [ i ] ; }	if ( in [ i ] < mn ) mn = in [ 1 ] ;
19133	DUMMY	0.0	0.0	}	DUMMY
19134	for i = 0 to size	N/A	N/A	for ( int i = 0 ; i < size ; i ++ )	for ( int i = 0 ; i < size ; i ++ )
19135	if mn is in [ i ] append i to d1	N/A	N/A	if ( mn == in [ i ] ) { d1 . push_back ( i ) ; }	if ( mn == in [ i ] ) d1. push_back ( i ) ;
19136	DUMMY	0.0	0.0	}	DUMMY
19137	mns = int with mns = 1e9	N/A	N/A	int mns = 1e9 ;	int mns = 1e9 ;
19138	for i = 0 to size of d1 - 1	N/A	N/A	for ( int i = 0 ; i < d1 . size ( ) - 1 ; i ++ )	for ( int i = 0 ; i < d1. size ( ) - 1 ; i ++ )
19139	if absolute of d1 [ i ] - d1 [ i + 1 ] < mns set mns to ansolute of d1 [ i ] - d1 [ i + 1 ]	N/A	N/A	if ( abs ( d1 [ i ] - d1 [ i + 1 ] ) < mns ) { mns = abs ( d1 [ i ] - d1 [ i + 1 ] ) ; }	if ( abs ( d1. at ( i ) - d1 [ i + 1 ] ) < mns ) { mns = ansolute ( ( int ) d1. at ( 1 ) - ( long long ) d2 [ i ] ) ; }
19140	DUMMY	0.0	0.0	}	DUMMY
19141	print mns	N/A	N/A	cout << mns << endl ;	cout << mns << endl ;
19142	DUMMY	0.0	0.0	return 0;	DUMMY
19143	DUMMY	0.0	0.0	}	DUMMY
19144	DUMMY	0.0	0.0	int main() {	DUMMY
19145	n = integer	N/A	N/A	int n ;	int n ;
19146	while read n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
19147	v = vector of integer with v = n	N/A	N/A	vector < int > v ( n ) ;	vector < int > v ( n ) ;
19148	s = vector of integer with s = n	N/A	N/A	vector < int > s ( n ) ;	vector < int > s ( n ) ;
19149	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19150	read v [ i ]	N/A	N/A	cin >> v [ i ] ;	cin >> v [ i ] ;
19151	s [ i ] = v [ i ]	N/A	N/A	s [ i ] = v [ i ] ;	s [ i ] = v [ 1 ] ;
19152	DUMMY	0.0	0.0	}	DUMMY
19153	sort s . begin ( ) and s . end ( )	N/A	N/A	sort ( s . begin ( ) , s . end ( ) ) ;	sort ( s. begin ( ), s. end ( ) ) ;
19154	a , b = integers	N/A	N/A	int a , b ;	int a, b ;
19155	a = s [ 0 ]	N/A	N/A	a = s [ 0 ] ;	a = s [ 0 ] ;
19156	b = s [ 1 ]	N/A	N/A	b = s [ 1 ] ;	b = s [ 1 ] ;
19157	x , y , d = integers	N/A	N/A	int x , y , d ;	int x, y, d ;
19158	d = x = y = 1000000100	N/A	N/A	d = x = y = 1000000100 ;	d = x = y = 1000000100 ;
19159	sw = bool with sw = true	N/A	N/A	bool sw = true ;	bool sw = true ;
19160	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19161	if a is v [ i ]	N/A	N/A	if ( a == v [ i ] )	if ( a == v [ i ] )
19162	x = i	N/A	N/A	x = i ;	x = i ;
19163	break loop	N/A	N/A	break ;	break ;
19164	DUMMY	0.0	0.0	}	DUMMY
19165	DUMMY	0.0	0.0	}	DUMMY
19166	for i = x + 1 to n exclusive	N/A	N/A	for ( int i = x + 1 ; i < n ; i ++ )	for ( int i = x + 1 ; i < n ; i ++ )
19167	if b is v [ i ]	N/A	N/A	if ( b == v [ i ] )	if ( b == v [ i ] )
19168	y = i	N/A	N/A	y = i ;	y = i ;
19169	d = min of d and abs ( x - y )	N/A	N/A	d = min ( d , abs ( x - y ) ) ;	d = min ( d, abs ( x - y ) ) ;
19170	x = i	N/A	N/A	x = i ;	x = i ;
19171	DUMMY	0.0	0.0	}	DUMMY
19172	DUMMY	0.0	0.0	}	DUMMY
19173	print d	N/A	N/A	cout << d << " \n " ;	cout << d << endl ;
19174	DUMMY	0.0	0.0	}	DUMMY
19175	DUMMY	0.0	0.0	return 0;	DUMMY
19176	DUMMY	0.0	0.0	}	DUMMY
19177	DUMMY	0.0	0.0	int main() {	DUMMY
19178	n , menor , pos , ans , i = int	N/A	N/A	int n , menor , pos , ans , i ;	int n, menor, pos, ans, i ;
19179	read n	N/A	N/A	cin >> n ;	cin >> n ;
19180	V = int vector of size n	N/A	N/A	vector < int > V ( n ) ;	vector < int > V ( n ) ;
19181	read n values into V	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { cin >> V [ i ] ; }	for ( i = 0 ; i < n ; i ++ ) cin >> V [ i ] ;
19182	set menor to 2000000000	N/A	N/A	menor = 2000000000 ;	menor = 2000000000 ;
19183	for i = 0 to n set menor to min of menor and V [ i ]	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { menor = min ( menor , V [ i ] ) ; }	for ( i = 0 ; i < n ; i ++ ) menor = min ( menor, V [ i ] ) ;
19184	for i = 0 to n	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19185	if V [ i ] = menor	N/A	N/A	if ( V [ i ] == menor )	if ( V [ i ] == menor )
19186	set pos to i	N/A	N/A	pos = i ;	pos = i ;
19187	break	N/A	N/A	break ;	break ;
19188	DUMMY	0.0	0.0	}	DUMMY
19189	DUMMY	0.0	0.0	}	DUMMY
19190	set ans to 1000000	N/A	N/A	ans = 1000000 ;	int ans = 1000000 ;
19191	for i = pos + 1 to n	N/A	N/A	for ( i = pos + 1 ; i < n ; i ++ )	for ( int i = pos + 1 ; i <= n ; i ++ )
19192	if V [ i ] = menor	N/A	N/A	if ( V [ i ] == menor )	if ( V [ i ] == menor )
19193	if i - pos < ans set ans to i - pos	N/A	N/A	if ( i - pos < ans ) ans = i - pos ;	if ( ( i - pos ) < ans ) ans = ( i ) - pos ;
19194	set pos to i	N/A	N/A	pos = i ;	pos = i ;
19195	DUMMY	0.0	0.0	}	DUMMY
19196	DUMMY	0.0	0.0	}	DUMMY
19197	print ans	N/A	N/A	cout << ans << ' \n ' ;	cout << ans << endl ;
19198	DUMMY	0.0	0.0	}	DUMMY
19199	create long long array a of length 100005	N/A	N/A	long long a [ 100005 ] ;	long long a [ 100005 ] ;
19200	DUMMY	0.0	0.0	int main() {	DUMMY
19201	create long long a and mi , set mi to 1000000007	N/A	N/A	long long n , mi = 1000000007 ;	long long a, mi = 1000000007 ;
19202	read n	N/A	N/A	cin >> n ;	cin >> n ;
19203	for i = 1 to n + 1 exclusive	N/A	N/A	for ( long long i = 1 ; i < n + 1 ; i ++ )	for ( long long i = 1 ; i < n + 1 ; ++ i )
19204	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
19205	set mi to min of mi and a [ i ]	N/A	N/A	mi = min ( mi , a [ i ] ) ;	mi = min ( mi, a [ i ] ) ;
19206	DUMMY	0.0	0.0	}	DUMMY
19207	set j to - 1000000007 and ans to 1000000007	N/A	N/A	long long j = - 1000000007 , ans = 1000000007 ;	long long j = - 1000000007, ans = 1e9 + 7 ;
19208	for i = 1 to n + 1 exclusive	N/A	N/A	for ( long long i = 1 ; i < n + 1 ; i ++ )	for ( int i = 1 ; i < n + 1 ; ++ i )
19209	if a [ i ] = mi	N/A	N/A	if ( a [ i ] == mi )	if ( a [ i ] == mi )
19210	set ans to min of ans and i - j	N/A	N/A	ans = min ( ans , i - j ) ;	ans = min ( ans, i - j ) ;
19211	assign i to j	N/A	N/A	j = i ;	j = i ;
19212	DUMMY	0.0	0.0	}	DUMMY
19213	DUMMY	0.0	0.0	}	DUMMY
19214	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
19215	DUMMY	0.0	0.0	return 0;	DUMMY
19216	DUMMY	0.0	0.0	}	DUMMY
19217	DUMMY	0.0	0.0	int main() {	DUMMY
19218	declare integer n	N/A	N/A	int n ;	int n ;
19219	read n	N/A	N/A	cin >> n ;	cin >> n ;
19220	declare integer pointer a = new integer array size n	N/A	N/A	int * a = new int [ n ] ;	int * a = new int [ n ] ;
19221	declare long long integer min = 99999999999999999	N/A	N/A	long long int min = 99999999999999999 ;	long long int min = 9999999999999 ;
19222	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19223	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
19224	if a [ i ] is less than min , let min = a [ i ]	N/A	N/A	if ( a [ i ] < min ) { min = a [ i ] ; }	if ( a [ i ] < min ) min = a [ 1 ] ;
19225	DUMMY	0.0	0.0	}	DUMMY
19226	declare integer array p size 100000	N/A	N/A	int p [ 100000 ] ;	int p [ 100000 ] ;
19227	declare integer c = 0	N/A	N/A	int c = 0 ;	int c = 0 ;
19228	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19229	if a [ i ] is min	N/A	N/A	if ( a [ i ] == min )	if ( a [ i ] == min )
19230	let p [ c ] be i	N/A	N/A	p [ c ] = i ;	p [ c ] = i ;
19231	increment c	N/A	N/A	c ++ ;	c ++ ;
19232	DUMMY	0.0	0.0	}	DUMMY
19233	DUMMY	0.0	0.0	}	DUMMY
19234	let min be 99999999999999999	N/A	N/A	min = 99999999999999999 ;	min = 9999999999999 ;
19235	for i = 1 to c exclusive	N/A	N/A	for ( int i = 1 ; i < c ; i ++ )	for ( int i = 1 ; i < c ; i ++ )
19236	declare integer r = p [ i ] - p [ i - 1 ]	N/A	N/A	int r = p [ i ] - p [ i - 1 ] ;	int r = p [ i ] - p [ j - 1 ] ;
19237	if r is less than min , let min be r	N/A	N/A	if ( r < min ) { min = r ; }	if ( r < min ) min = r ;
19238	DUMMY	0.0	0.0	}	DUMMY
19239	print min , newline	N/A	N/A	cout << min << endl ;	cout << min << endl ;
19240	DUMMY	0.0	0.0	}	DUMMY
19241	let maxn be a constant integer with maxn = 1e6 + 7	N/A	N/A	const int maxn = 1e6 + 7 ;	const int maxn = 1e6 + 7 ;
19242	let mod be a constant integer with mod = 998244353	N/A	N/A	const int mod = 998244353 ;	const int mod = 998244353 ;
19243	read the integer data	N/A	N/A	int read ( )	cin >> n ;
19244	let c , Nig , x be integers with Nig = 1 , x = 0	N/A	N/A	int c = getchar ( ) , Nig = 1 , x = 0 ;	int c, Nig = 1, x = 0 ;
19245	while not isdigit of c , c = getchar ( )	N/A	N/A	while ( ! isdigit ( c ) ) c = getchar ( ) ;	while (! isdigit ( c ) ) c = getchar ( ) ;
19246	if c is equal to - , Nig = - 1 , c = getchar ( )	N/A	N/A	if ( c == ' - ' ) Nig = - 1 , c = getchar ( ) ;	if ( c =='-') Nig = - 1, c = getchar ( ) ;
19247	while isdigit of c , x is equal to ( ( x < < 1 ) + ( x < < 3 ) ) + ( c ^ ' 0 ' ) , c is equal to getchar ( )	N/A	N/A	while ( isdigit ( c ) ) x = ( ( x << 1 ) + ( x << 3 ) ) + ( c ^ ' 0 ' ) , c = getchar ( ) ;	while (! isdigit ( c ) ) { x = ( ( x << 1 ) + ( x < 3 ) ) + c ^'0'), c = getchar ( ) ; }
19248	return the value of Nig * x	N/A	N/A	return Nig * x ;	return Nig * x ;
19249	DUMMY	0.0	0.0	}	DUMMY
19250	a = array of integers of length maxn	N/A	N/A	int a [ maxn ] ;	int a [ maxn ] ;
19251	DUMMY	0.0	0.0	int main() {	DUMMY
19252	read from n	N/A	N/A	int n = read ( ) ;	cin >> n ;
19253	for i = 1 to n inclusive , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) { a [ i ] = read ( ) ; }	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
19254	let minl be a integer with minl = * min_element ( a + 1 , a + 1 + n )	N/A	N/A	int minl = * min_element ( a + 1 , a + 1 + n ) ;	int minl = * min_element ( a + i, a + 1 + n ) ;
19255	let pos , ans be integers with pos = - 1 , ans = 0x3f3f3f3f	N/A	N/A	int pos = - 1 , ans = 0x3f3f3f3f ;	int pos = - 1, ans = 0x3f3f2f ;
19256	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
19257	if a [ i ] is equal to minl	N/A	N/A	if ( a [ i ] == minl )	if ( a [ i ] == minl )
19258	if ~ pos	N/A	N/A	if ( ~ pos )	if ( ~ pos )
19259	ans is equal to minimum of ans and i - pos , pos is equal to i	N/A	N/A	ans = min ( ans , i - pos ) , pos = i ;	ans = min ( ans, i - pos ), pos = i ;
19260	else do the following	N/A	N/A	else	else
19261	pos is equal to i	N/A	N/A	pos = i ;	pos = i ;
19262	DUMMY	0.0	0.0	}	DUMMY
19263	DUMMY	0.0	0.0	}	DUMMY
19264	print ans and new line	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
19265	DUMMY	0.0	0.0	return 0;	DUMMY
19266	DUMMY	0.0	0.0	}	DUMMY
19267	create new array of long longs a with 200050 elements	N/A	N/A	long long a [ 200050 ] ;	long long a [ 200050 ] ;
19268	create new array of long longs b with size 200050	N/A	N/A	long long b [ 200050 ] ;	long long b [ 200050 ] ;
19269	declare integer variable len with value 0	N/A	N/A	int len = 0 ;	int len = 0 ;
19270	DUMMY	0.0	0.0	int main() {	DUMMY
19271	declare new integer called n	N/A	N/A	int n ;	int n ;
19272	read n	N/A	N/A	cin >> n ;	cin >> n ;
19273	for i from 0 to n exclusive , read standard input to a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
19274	create long long minn with value 1000000009	N/A	N/A	long long minn = 1000000009 ;	long long minn = 1000000009 ;
19275	for integer i = 0 to n exclusive , set minn to min of minn and a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { minn = min ( minn , a [ i ] ) ; }	for ( int i = 0 ; i < n ; i ++ ) { minn = min ( minn, a [ i ] ) ; }
19276	for integer i = 0 to n exclusive incrementing i	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19277	if a [ i ] = minn	N/A	N/A	if ( a [ i ] == minn )	if ( a [ i ] == minn )
19278	assign i to b [ len ]	N/A	N/A	b [ len ] = i ;	b [ len ] = i ;
19279	increment len by one	N/A	N/A	len ++ ;	len ++ ;
19280	DUMMY	0.0	0.0	}	DUMMY
19281	DUMMY	0.0	0.0	}	DUMMY
19282	declare new long long called minnn = 200000050	N/A	N/A	long long minnn = 200000050 ;	long long minnn = 200000050 ;
19283	in a for loop , change i from 1 to len exclusive , assigning min of minnn and b [ i ] - b [ i - 1 ] to minnn on each loop	N/A	N/A	for ( int i = 1 ; i < len ; i ++ ) { minnn = min ( minnn , b [ i ] - b [ i - 1 ] ) ; }	for ( int i = 1 ; i < len ; i ++ ) minnn = min ( minnn, b [ i ] - b [ ( i - 1 ] ) ) ;
19284	print minnn to the standard output	N/A	N/A	cout << minnn << endl ;	cout << minnn << endl ;
19285	DUMMY	0.0	0.0	return 0;	DUMMY
19286	DUMMY	0.0	0.0	}	DUMMY
19287	DUMMY	0.0	0.0	int main() {	DUMMY
19288	a , b , n , mini , ans = long long int with ans = 0	N/A	N/A	long long int a , b , n , mini , ans = 0 ;	long long int a, b, n, mini, ans = 0 ;
19289	read n	N/A	N/A	cin >> n ;	cin >> n ;
19290	for i = 0 to n	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19291	read a	N/A	N/A	cin >> a ;	cin >> a ;
19292	increment ans	N/A	N/A	ans ++ ;	ans ++ ;
19293	if i is 0 or a is less than mini	N/A	N/A	if ( i == 0 || a < mini )	if ( i == 0 || a < mini )
19294	set mini to a	N/A	N/A	mini = a ;	mini = a ;
19295	set ans to 0	N/A	N/A	ans = 0 ;	ans = 0 ;
19296	set b to 0	N/A	N/A	b = 0 ;	b = 0 ;
19297	else if a is mini	N/A	N/A	else if ( a == mini )	else if ( a == mini )
19298	if ans is less than b or b is 0 set b to ans	N/A	N/A	if ( ( ans < b ) || ( b == 0 ) ) { b = ans ; }	if ( ans < b || b == 0 ) b = ans ;
19299	set ans to 0	N/A	N/A	ans = 0 ;	ans = 0 ;
19300	DUMMY	0.0	0.0	}	DUMMY
19301	DUMMY	0.0	0.0	}	DUMMY
19302	print b	N/A	N/A	cout << b << endl ;	cout << b << endl ;
19303	DUMMY	0.0	0.0	return 0;	DUMMY
19304	DUMMY	0.0	0.0	}	DUMMY
19305	DUMMY	0.0	0.0	int main() {	DUMMY
19306	let ints n , min = INT_MAX , cnt = 0 , first , last , and selisih and int array num of size 100005	N/A	N/A	int n , num [ 100005 ] , min = INT_MAX , cnt = 0 , first , last , selisih ;	int n, min = INT_MAX, cnt = 0, first, last, selisih, num [ 100005 ] ;
19307	create int has = INT_MAX and int array arrpos of size 100005	N/A	N/A	int arrpos [ 100005 ] , has = INT_MAX ;	int arrpos [ 100005 ], has = INT_MAX ;
19308	read n	N/A	N/A	cin >> n ;	cin >> n ;
19309	for x = 1 to n	N/A	N/A	for ( int x = 1 ; x <= n ; x ++ )	for ( int x = 1 ; x <= n ; x ++ )
19310	read num [ x ]	N/A	N/A	cin >> num [ x ] ;	cin >> num [ x ] ;
19311	if num [ x ] is less than min , set min to num [ x ]	N/A	N/A	if ( num [ x ] < min ) { min = num [ x ] ; }	if ( num [ x ] < min ) { min = num [ 1 ] ; }
19312	DUMMY	0.0	0.0	}	DUMMY
19313	for x = 1 to n	N/A	N/A	for ( int x = 1 ; x <= n ; x ++ )	for ( int x = 1 ; x <= n ; x ++ )
19314	if num [ x ] equals min	N/A	N/A	if ( num [ x ] == min )	if ( num [ x ] == min )
19315	if cnt is equal to 0	N/A	N/A	if ( cnt == 0 )	if ( cnt == 0 )
19316	set arrpos [ x ] to x	N/A	N/A	arrpos [ x ] = x ;	arrpos [ x ] = x ;
19317	set first to x	N/A	N/A	first = x ;	first = x ;
19318	DUMMY	0.0	0.0	}	DUMMY
19319	if cnt equals 1	N/A	N/A	if ( cnt == 1 )	if ( cnt == 1 )
19320	set arrpos [ x ] to x	N/A	N/A	arrpos [ x ] = x ;	arrpos [ x ] = x ;
19321	set last to x	N/A	N/A	last = x ;	last = x ;
19322	DUMMY	0.0	0.0	}	DUMMY
19323	if cnt is greater than or equal to 2	N/A	N/A	if ( cnt >= 2 )	if ( cnt >= 2 )
19324	set first to last	N/A	N/A	first = last ;	first = last ;
19325	set last to x	N/A	N/A	last = x ;	last = x ;
19326	set arrpos [ x ] to x	N/A	N/A	arrpos [ x ] = x ;	arrpos [ x ] = x ;
19327	DUMMY	0.0	0.0	}	DUMMY
19328	increment cnt	N/A	N/A	cnt ++ ;	cnt ++ ;
19329	DUMMY	0.0	0.0	}	DUMMY
19330	if cnt is greater than or equal to 2	N/A	N/A	if ( cnt >= 2 )	if ( cnt >= 2 )
19331	set selisih to the result of arrpos [ last ] - arrpos [ first ]	N/A	N/A	selisih = arrpos [ last ] - arrpos [ first ] ;	selisih = arrpos [ last ] - arrpos. first ] ;
19332	if selisih is less than has , set has to selisih	N/A	N/A	if ( selisih < has ) { has = selisih ; }	if ( selisih < has ) has = seliih ;
19333	DUMMY	0.0	0.0	}	DUMMY
19334	DUMMY	0.0	0.0	}	DUMMY
19335	print has	N/A	N/A	cout << has << endl ;	cout << has << endl ;
19336	DUMMY	0.0	0.0	return 0;	DUMMY
19337	DUMMY	0.0	0.0	}	DUMMY
19338	a is a new array of integers with size 1e5 + 5	N/A	N/A	int a [ ( int ) 1e5 + 5 ] ;	int a [ 1e5 + 5 ] ;
19339	function min with long long arguments a and b that returns long long	N/A	N/A	long long min ( long long a , long long b )	long long min ( long long a, long long b )
19340	if a is greater than b	N/A	N/A	if ( a > b )	if ( a > b )
19341	return b	N/A	N/A	return b ;	return b ;
19342	else	N/A	N/A	else	else
19343	return a	N/A	N/A	return a ;	return a ;
19344	DUMMY	0.0	0.0	}	DUMMY
19345	DUMMY	0.0	0.0	}	DUMMY
19346	DUMMY	0.0	0.0	int main() {	DUMMY
19347	declare integer variable n	N/A	N/A	int n ;	int n ;
19348	read n from the user input	N/A	N/A	cin >> n ;	cin >> n ;
19349	declare long long m with value 1e9 + 1	N/A	N/A	long long m = 1e9 + 1 ;	long long m = 1e9 + 1 ;
19350	for integer i = 1 to n inclusive incrementing i	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
19351	read input to a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
19352	change m to min of m and a [ i ]	N/A	N/A	m = min ( m , a [ i ] ) ;	m = min ( m, a [ i ] ) ;
19353	DUMMY	0.0	0.0	}	DUMMY
19354	declare vector of integers called ans	N/A	N/A	vector < int > ans ;	vector < int > ans ;
19355	for i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
19356	if a [ i ] is equal to m , push i into ans	N/A	N/A	if ( a [ i ] == m ) { ans . push_back ( i ) ; }	if ( a [ i ] == m ) ans. push_back ( i ) ;
19357	DUMMY	0.0	0.0	}	DUMMY
19358	create new integer called mins = 1e9	N/A	N/A	int mins = 1e9 ;	int mins = 1e9 ;
19359	declare integer size with value length of ans - 1	N/A	N/A	int size = ans . size ( ) - 1 ;	int size = ans. size ( ) - 1 ;
19360	for i from 1 to size inclusive , assign min of mins and ans [ i ] - ans [ i - 1 ] to mins	N/A	N/A	for ( int i = 1 ; i <= size ; i ++ ) { mins = min ( mins , ans [ i ] - ans [ i - 1 ] ) ; }	for ( int i = 1 ; i <= size ; i ++ ) { mins = min ( mins, ans [ i ] - ans [ 1 ] ) ; }
19361	print mins to the standard output	N/A	N/A	cout << mins << endl ;	cout << mins << endl ;
19362	DUMMY	0.0	0.0	return 0;	DUMMY
19363	DUMMY	0.0	0.0	}	DUMMY
19364	DUMMY	0.0	0.0	int main() {	DUMMY
19365	t , n , i , x , pp , count , flag , dis , min , sum = integers with flag = 0 , dis = 0 , min = 0	N/A	N/A	int t , n , i , x , pp , count , flag = 0 , dis = 0 , min = 0 , sum ;	int t, n, i, x, pp, count, flag ( 0 ), dis = 0, min ( 0, sum ;
19366	v = vector of integer	N/A	N/A	vector < int > v ;	vector < int > v ;
19367	it = iterator vector of integer	N/A	N/A	vector < int > :: iterator it ;	vector < int > :: iterator it ;
19368	read n	N/A	N/A	cin >> n ;	cin >> n ;
19369	while decrement n	N/A	N/A	while ( n -- )	while ( n -- )
19370	read x	N/A	N/A	cin >> x ;	cin >> x ;
19371	append x in v	N/A	N/A	v . push_back ( x ) ;	v. push_back ( x ) ;
19372	DUMMY	0.0	0.0	}	DUMMY
19373	t = pointer min_element on v . begin ( ) and v . end ( )	N/A	N/A	t = * min_element ( v . begin ( ) , v . end ( ) ) ;	int * t = * min_element ( v. begin ( ), v. end ( ) ) ;
19374	for i = 0 to v . size ( ) exclusive	N/A	N/A	for ( i = 0 ; i < v . size ( ) ; i ++ )	for ( int i = 0 ; i < v. size ( ) ; i ++ )
19375	if v [ i ] is t	N/A	N/A	if ( v [ i ] == t )	if ( v [ i ] == t )
19376	if flag is not 0	N/A	N/A	if ( flag != 0 )	if ( flag )
19377	dis = i - pp	N/A	N/A	dis = i - pp ;	dis = i - pp ;
19378	if min is 0 and dis is not 0	N/A	N/A	if ( min == 0 && dis != 0 )	if ( min == 0 && dis!= 0 )
19379	min = dis	N/A	N/A	min = dis ;	min = dis ;
19380	else if min is not 0 and min > dis	N/A	N/A	else if ( min != 0 && min > dis )	else if ( min!= 0 && min > dis )
19381	min = dis	N/A	N/A	min = dis ;	min = dis ;
19382	DUMMY	0.0	0.0	}	DUMMY
19383	increment flag	N/A	N/A	flag ++ ;	flag ++ ;
19384	pp = i	N/A	N/A	pp = i ;	pp = i ;
19385	DUMMY	0.0	0.0	}	DUMMY
19386	DUMMY	0.0	0.0	}	DUMMY
19387	print min	N/A	N/A	cout << min << endl ;	cout << min << endl ;
19388	DUMMY	0.0	0.0	return 0;	DUMMY
19389	DUMMY	0.0	0.0	}	DUMMY
19390	DUMMY	0.0	0.0	int main() {	DUMMY
19391	create integer x	N/A	N/A	int x ;	int x ;
19392	read x from the input	N/A	N/A	cin >> x ;	cin >> x ;
19393	create new array of integers ara with x elements	N/A	N/A	int ara [ x ] ;	int ara [ x ] ;
19394	create new integer maxn	N/A	N/A	int maxn ;	int maxn ;
19395	create new set of integers s	N/A	N/A	set < int > s ;	set < int > s ;
19396	set maxn to 1000000009	N/A	N/A	maxn = 1000000009 ;	maxn = 1000000009 ;
19397	declare new integer variable d with value 1000000009	N/A	N/A	int d = 1000000009 ;	int d = 1000000009 ;
19398	create boolean variable with name b with value 0	N/A	N/A	bool b = 0 ;	bool b = 0 ;
19399	in the for loop , change integer w from 0 to x exclusive	N/A	N/A	for ( int w = 0 ; w < x ; w ++ )	for ( int w = 0 ; w < x ; w ++ )
19400	read variable ara [ w ] from the input	N/A	N/A	cin >> ara [ w ] ;	cin >> ara [ w ] ;
19401	if ara [ w ] is less than maxn , change maxn to ara [ w ]	N/A	N/A	if ( ara [ w ] < maxn ) { maxn = ara [ w ] ; }	if ( ara [ w ] < maxn ) maxn = ara ( w ] ;
19402	DUMMY	0.0	0.0	}	DUMMY
19403	for w from 0 to x exclusive	N/A	N/A	for ( int w = 0 ; w < x ; w ++ )	for ( int w = 0 ; w < x ; w ++ )
19404	if ara [ w ] = maxn , insert w into set s	N/A	N/A	if ( ara [ w ] == maxn ) { s . insert ( w ) ; }	if ( ara [ w ] == maxn ) s. insert ( w ) ;
19405	DUMMY	0.0	0.0	}	DUMMY
19406	i is a new iterator for the set of integers	N/A	N/A	set < int > :: iterator i ;	set < int > :: iterator i ;
19407	j is a new iterator for the set of integers pointed to the end of s	N/A	N/A	set < int > :: iterator j = s . end ( ) ;	set < int > :: iterator j = s. begin ( ) ;
19408	decrement j	N/A	N/A	j -- ;	j -- ;
19409	declare ints l and m	N/A	N/A	int l , m ;	int l, m ;
19410	move i through s in a for loop	N/A	N/A	for ( i = s . begin ( ) ; i != s . end ( ) ; i ++ )	for ( ; i = s. begin ( ) ; )
19411	if i is equal to j , skip the rest of the loop	N/A	N/A	if ( i == j ) continue ;	if ( i == j ) continue ;
19412	change m to the value pointed by i	N/A	N/A	m = * i ;	m = pointed ( i ) ;
19413	increment i	N/A	N/A	i ++ ;	i ++ ;
19414	change l to the value pointed by i	N/A	N/A	l = * i ;	l = pointed ( i ) ;
19415	decrement i	N/A	N/A	i -- ;	i -- ;
19416	if l - m is less than d , set d to ( l - m )	N/A	N/A	if ( l - m < d ) d = ( l - m ) ;	if ( ( l - m ) < d ) { d = ( k ) - m ; }
19417	DUMMY	0.0	0.0	}	DUMMY
19418	print d to the standard output	N/A	N/A	cout << d << endl ;	cout << d << endl ;
19419	DUMMY	0.0	0.0	return 0;	DUMMY
19420	DUMMY	0.0	0.0	}	DUMMY
19421	a is a new array of integers with 300000 elements	N/A	N/A	int a [ 300000 ] ;	int a [ 300000 ] ;
19422	DUMMY	0.0	0.0	int main() {	DUMMY
19423	create ints n , m1 , m2 , minn and minn2 with m1 and m2 = 0 , minn2 = 9999999 and minn = 9999999999	N/A	N/A	int n , m1 = 0 , m2 = 0 , minn = 9999999999 , minn2 = 9999999 ;	int n, m1 ( 0 ), m2 ( 0), minn ( 9999999 ), minm2 ( 999999 ) ;
19424	read standard input to n	N/A	N/A	cin >> n ;	cin >> n ;
19425	for i from 1 to n inclusive incrementing i	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
19426	read input to a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
19427	if minn is greater than a [ i ] , assign a [ i ] to minn	N/A	N/A	if ( minn > a [ i ] ) minn = a [ i ] ;	if ( minn > a [ 1 ] ) minn = a [ i ] ;
19428	DUMMY	0.0	0.0	}	DUMMY
19429	start for loop from i = 1 to n inclusive on each loop	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
19430	if a [ i ] is equal to minn	N/A	N/A	if ( a [ i ] == minn )	if ( a [ i ] == minn )
19431	if m1 is equal to 0	N/A	N/A	if ( m1 == 0 )	if ( m1 == 0 )
19432	change m1 to i	N/A	N/A	m1 = i ;	m1 = i ;
19433	else if m2 = 0	N/A	N/A	else if ( m2 == 0 )	else if ( m2 == 0 )
19434	assign i to m2	N/A	N/A	m2 = i ;	m2 = i ;
19435	if minn2 is greater than m2 - m1 , change minn2 to m2 - m1	N/A	N/A	if ( minn2 > m2 - m1 ) minn2 = m2 - m1 ;	if ( minn2 > m2 - m1 ) m2 -= m1 ;
19436	else	N/A	N/A	else	else
19437	change m1 to m2	N/A	N/A	m1 = m2 ;	m1 = m2 ;
19438	assign i to m2	N/A	N/A	m2 = i ;	m2 = i ;
19439	if minn2 is greater than m2 - m1 , change minn2 to m2 - m1	N/A	N/A	if ( minn2 > m2 - m1 ) minn2 = m2 - m1 ;	if ( minn2 > m2 - m1 ) mn2 -= m1 ;
19440	DUMMY	0.0	0.0	}	DUMMY
19441	DUMMY	0.0	0.0	}	DUMMY
19442	DUMMY	0.0	0.0	}	DUMMY
19443	print minn2 to the standard output	N/A	N/A	cout << minn2 << endl ;	cout << minn2 << endl ;
19444	DUMMY	0.0	0.0	return 0;	DUMMY
19445	DUMMY	0.0	0.0	}	DUMMY
19446	nums is a new vector of integers	N/A	N/A	vector < int > nums ;	vector < int > nums ;
19447	DUMMY	0.0	0.0	int main() {	DUMMY
19448	declare int variables n , a , last and dist	N/A	N/A	int n , a , last , dist ;	int n, a, last, dist ;
19449	create integer variable min with value INT_MAX	N/A	N/A	int min = INT_MAX ;	int min = INT_MAX ;
19450	mindist is a new integer with value INT_MAX	N/A	N/A	int mindist = INT_MAX ;	int mindist = INT_MAX ;
19451	read n from the user input	N/A	N/A	cin >> n ;	cin >> n ;
19452	for i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19453	read input to a	N/A	N/A	cin >> a ;	cin >> a ;
19454	push a to the end of nums	N/A	N/A	nums . push_back ( a ) ;	nums. push_back ( a ) ;
19455	if a is less than min , set min to a	N/A	N/A	if ( a < min ) min = a ;	if ( a < min ) min = a ;
19456	DUMMY	0.0	0.0	}	DUMMY
19457	in a for loop , change i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19458	if nums [ i ] = min	N/A	N/A	if ( nums [ i ] == min )	if ( nums [ i ] == min )
19459	change last to i	N/A	N/A	last = i ;	last = i ;
19460	break	N/A	N/A	break ;	break ;
19461	DUMMY	0.0	0.0	}	DUMMY
19462	DUMMY	0.0	0.0	}	DUMMY
19463	for i from last + 1 to n exclusive incrementing i	N/A	N/A	for ( int i = last + 1 ; i < n ; i ++ )	for ( int i = last + 1 ; i < n ; i ++ )
19464	if nums [ i ] = min	N/A	N/A	if ( nums [ i ] == min )	if ( nums [ i ] == min )
19465	change dist to i - last	N/A	N/A	dist = i - last ;	dist = i - last ;
19466	if dist is less than mindist , change mindist to dist	N/A	N/A	if ( dist < mindist ) mindist = dist ;	if ( dist < mindist ) mindist = dist ;
19467	assign i to last	N/A	N/A	last = i ;	last = i ;
19468	DUMMY	0.0	0.0	}	DUMMY
19469	DUMMY	0.0	0.0	}	DUMMY
19470	print mindist to the standard output	N/A	N/A	cout << mindist << endl ;	cout << mindist << endl ;
19471	DUMMY	0.0	0.0	}	DUMMY
19472	DUMMY	0.0	0.0	int main() {	DUMMY
19473	declare integer variable n and an array of integers ar with size 100010	N/A	N/A	int n , ar [ 100010 ] ;	int n, ar [ 100010 ] ;
19474	read n	N/A	N/A	cin >> n ;	cin >> n ;
19475	read input into ar n times	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> ar [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> ar [ i ] ; }
19476	declare integer variable mn = ar [ 0 ]	N/A	N/A	int mn = ar [ 0 ] ;	int mn = ar [ 0 ] ;
19477	for i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19478	if mn is greater than ar [ i ] , assign ar [ i ] to mn	N/A	N/A	if ( mn > ar [ i ] ) mn = ar [ i ] ;	if ( mn > ar [ 1 ] ) mn = ar [ i ] ;
19479	DUMMY	0.0	0.0	}	DUMMY
19480	declare integers p1 , p2 and d with p1 and p2 = - 1	N/A	N/A	int p1 = - 1 , p2 = - 1 , d ;	int p1 = 1, p2 = - 1, d ;
19481	create int mnd = n	N/A	N/A	int mnd = n ;	int mnd = n ;
19482	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19483	if ar [ i ] = mn	N/A	N/A	if ( ar [ i ] == mn )	if ( ar [ i ] == mn )
19484	assign i to p1	N/A	N/A	p1 = i ;	p1 = i ;
19485	if p2 ! = - 1	N/A	N/A	if ( p2 != - 1 )	if ( p2!= - 1 )
19486	if mnd is greater than ( p1 - p2 ) , change mnd to p1 - p2	N/A	N/A	if ( mnd > ( p1 - p2 ) ) { mnd = p1 - p2 ; }	if ( mnd > ( p1 - p2 ) ) { mnd = p1 + p2 ; }
19487	DUMMY	0.0	0.0	}	DUMMY
19488	assign p1 to p2	N/A	N/A	p2 = p1 ;	p2 = p1 ;
19489	DUMMY	0.0	0.0	}	DUMMY
19490	DUMMY	0.0	0.0	}	DUMMY
19491	print mnd	N/A	N/A	cout << mnd << endl ;	cout << mnd << endl ;
19492	DUMMY	0.0	0.0	return 0;	DUMMY
19493	DUMMY	0.0	0.0	}	DUMMY
19494	n , mn , skr , mnd = integers with mn = 1e9 + 7 , skr = 1e9 + 7 , mnd = 1e6	N/A	N/A	int n , mn = 1e9 + 7 , skr = 1e9 + 7 , mnd = 1e6 ;	long long int n, mn = 1e9 + 7, skr = (e9+ 7 ), mnd = ( 1e6 ) ;
19495	in the function masuk that takes integer idx	N/A	N/A	void masuk ( int idx )	void masuk ( int idx )
19496	if idx < n	N/A	N/A	if ( idx < n )	if ( idx < n )
19497	ai = integer	N/A	N/A	int ai ;	int ai ;
19498	read ai	N/A	N/A	cin >> ai ;	cin >> ai ;
19499	mn = min of mn and ai	N/A	N/A	mn = min ( mn , ai ) ;	mn = min ( mn, ai ) ;
19500	masuk of idx + 1	N/A	N/A	masuk ( idx + 1 ) ;	masuk ( idx + 1 ) ;
19501	if ai is mn	N/A	N/A	if ( ai == mn )	if ( ai == mn )
19502	mnd = min of mnd and skr - idx	N/A	N/A	mnd = min ( mnd , skr - idx ) ;	mnd = min ( mnd, skr - idx ) ;
19503	skr = idx	N/A	N/A	skr = idx ;	skr = idx ;
19504	DUMMY	0.0	0.0	}	DUMMY
19505	DUMMY	0.0	0.0	}	DUMMY
19506	DUMMY	0.0	0.0	}	DUMMY
19507	DUMMY	0.0	0.0	int main() {	DUMMY
19508	read n	N/A	N/A	cin >> n ;	cin >> n ;
19509	masuk of 0	N/A	N/A	masuk ( 0 ) ;	masuk ( 0 ) ;
19510	print mnd	N/A	N/A	cout << mnd << ' \n ' ;	cout << mnd << endl ;
19511	DUMMY	0.0	0.0	return 0;	DUMMY
19512	DUMMY	0.0	0.0	}	DUMMY
19513	DUMMY	0.0	0.0	int main() {	DUMMY
19514	t , n , i , x , pp , count , sum = int , flag , dis , min = 0	N/A	N/A	int t , n , i , x , pp , count , flag = 0 , dis = 0 , min = 0 , sum ;	int t, n, i, x, pp, count, sum, flag = 0, dis, min = 0 ;
19515	v = vector of int	N/A	N/A	vector < int > v ;	vector < int > v ;
19516	it = iterator on vector of int	N/A	N/A	vector < int > :: iterator it ;	vector < int > :: iterator it ;
19517	read n	N/A	N/A	cin >> n ;	cin >> n ;
19518	while decremented value of n is not zero	N/A	N/A	while ( n -- )	while ( n -- )
19519	read x	N/A	N/A	cin >> x ;	cin >> x ;
19520	put x at end of v	N/A	N/A	v . push_back ( x ) ;	v. push_back ( x ) ;
19521	DUMMY	0.0	0.0	}	DUMMY
19522	t = item of v with min value	N/A	N/A	t = * min_element ( v . begin ( ) , v . end ( ) ) ;	t = v. top ( ) ;
19523	for i = 0 to size of v exclusive	N/A	N/A	for ( i = 0 ; i < v . size ( ) ; i ++ )	for ( int i = 0 ; i < v. size ( ) ; i ++ )
19524	if v [ i ] is t	N/A	N/A	if ( v [ i ] == t )	if ( v [ i ] == t )
19525	if flag ! = 0	N/A	N/A	if ( flag != 0 )	if ( flag )
19526	dis = i - pp	N/A	N/A	dis = i - pp ;	dis = i - pp ;
19527	if min is 0 and dis is not 0	N/A	N/A	if ( min == 0 && dis != 0 )	if ( min == 0 && dis!= 0 )
19528	min = dis	N/A	N/A	min = dis ;	min = dis ;
19529	else if min is not 0 and min > dis	N/A	N/A	else if ( min != 0 && min > dis )	else if ( min!= 0 && min > dis )
19530	min = dis	N/A	N/A	min = dis ;	min = dis ;
19531	DUMMY	0.0	0.0	}	DUMMY
19532	increment flag	N/A	N/A	flag ++ ;	flag ++ ;
19533	pp = i	N/A	N/A	pp = i ;	pp = i ;
19534	DUMMY	0.0	0.0	}	DUMMY
19535	DUMMY	0.0	0.0	}	DUMMY
19536	print min	N/A	N/A	cout << min << endl ;	cout << min << endl ;
19537	DUMMY	0.0	0.0	return 0;	DUMMY
19538	DUMMY	0.0	0.0	}	DUMMY
19539	DUMMY	0.0	0.0	int main() {	DUMMY
19540	create int n , minix , p , q	N/A	N/A	int n , minix , p , q ;	int n, minix, p, q ;
19541	read n	N/A	N/A	cin >> n ;	cin >> n ;
19542	create vector int v ( n )	N/A	N/A	vector < int > v ( n ) ;	vector < int > v ( n ) ;
19543	minix = INT_MAX	N/A	N/A	minix = INT_MAX ;	minix = INT_MAX ;
19544	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19545	read v [ i ]	N/A	N/A	cin >> v [ i ] ;	cin >> v [ i ] ;
19546	set minix to min of minix and v [ i ]	N/A	N/A	minix = min ( minix , v [ i ] ) ;	minix = min ( minix, v [ i ] ) ;
19547	DUMMY	0.0	0.0	}	DUMMY
19548	assign - 999999 to p	N/A	N/A	p = - 999999 ;	p = - 999999 ;
19549	set q to INT_MAX	N/A	N/A	q = INT_MAX ;	q = INT_MAX ;
19550	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19551	if v [ i ] = minix	N/A	N/A	if ( v [ i ] == minix )	if ( v [ i ] == minix )
19552	set q = min of q and i - p	N/A	N/A	q = min ( q , i - p ) ;	q = min ( q, i - p ) ;
19553	p = i	N/A	N/A	p = i ;	p = i ;
19554	DUMMY	0.0	0.0	}	DUMMY
19555	DUMMY	0.0	0.0	}	DUMMY
19556	print q	N/A	N/A	cout << q << endl ;	cout << q << endl ;
19557	DUMMY	0.0	0.0	return 0;	DUMMY
19558	DUMMY	0.0	0.0	}	DUMMY
19559	create const int oo = 1e9	N/A	N/A	const int oo = 1e9 ;	const int oo = 1e9 ;
19560	DUMMY	0.0	0.0	int main() {	DUMMY
19561	declare int variable n	N/A	N/A	int n ;	int n ;
19562	read n	N/A	N/A	cin >> n ;	cin >> n ;
19563	declare vector of integers called a with n elements	N/A	N/A	vector < int > a ( n ) ;	vector < int > a ( n ) ;
19564	read n elements from the input into a	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
19565	create int mn = pointer to the min element of a	N/A	N/A	int mn = * min_element ( a . begin ( ) , a . end ( ) ) ;	int mn = * min_element ( a. begin ( ), a. end ( ) ) ;
19566	create integer ans = oo	N/A	N/A	int ans = oo ;	int ans = oo ;
19567	for i = 0 and prev = - oo while i < n , incrementing i	N/A	N/A	for ( int i = 0 , prev = - oo ; i < n ; i ++ )	for ( int i = 0, prev = - oo ; i < n ; ++ i )
19568	if a [ i ] is equal to mn	N/A	N/A	if ( a [ i ] == mn )	if ( a [ i ] == mn )
19569	set ans to min of ans and i - prev	N/A	N/A	ans = min ( ans , i - prev ) ;	ans = min ( ans, i - prev ) ;
19570	set prev to i	N/A	N/A	prev = i ;	prev = i ;
19571	DUMMY	0.0	0.0	}	DUMMY
19572	print ans and ' \ n '	N/A	N/A	cout << ans << ' \n ' ;	cout << ans <<'\n';
19573	DUMMY	0.0	0.0	return 0;	DUMMY
19574	DUMMY	0.0	0.0	}	DUMMY
19575	DUMMY	0.0	0.0	int main() {	DUMMY
19576	declare vector of long longs v	N/A	N/A	vector < long long > v ;	vector < long long > v ;
19577	create new vector of long longs v1	N/A	N/A	vector < long long > v1 ;	vector < long long > v1 ;
19578	declare long longs i , j , n , ans , min , t and flag with min = 1000000002	N/A	N/A	long long i , j , n , ans , min = 1000000002 , t , flag ;	long long i, j, n, ans, min = 1000000002, t, flag ;
19579	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
19580	for i = 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )
19581	declare long long variable x	N/A	N/A	long long x ;	long long x ;
19582	read from the input to x	N/A	N/A	cin >> x ;	cin >> x ;
19583	push x to the back of v	N/A	N/A	v . push_back ( x ) ;	v. push_back ( x ) ;
19584	if x is less than min , set min to x	N/A	N/A	if ( x < min ) { min = x ; }	if ( x < min ) min = x ;
19585	DUMMY	0.0	0.0	}	DUMMY
19586	for i from 0 to n exclusive	N/A	N/A	for ( i = 0 ; i < n ; i ++ )	for ( long long i = 0 ; i < n ; i ++ )
19587	if min = v [ i ] , push i into v1	N/A	N/A	if ( min == v [ i ] ) { v1 . push_back ( i ) ; }	if ( min == v [ i ] ) v1. push_back ( i ) ;
19588	DUMMY	0.0	0.0	}	DUMMY
19589	assign 1000000002 to min	N/A	N/A	min = 1000000002 ;	min = 1000000002 ;
19590	start for loop from i = 1 to length of v1 exclusive	N/A	N/A	for ( i = 1 ; i < v1 . size ( ) ; i ++ )	for ( int i = 1 ; i < v1. size ( ) ; i ++ )
19591	if ( v1 [ i ] - v1 [ i - 1 ] ) is less than min , assign v1 [ i ] - v1 [ i - 1 ] to min	N/A	N/A	if ( ( v1 [ i ] - v1 [ i - 1 ] ) < min ) { min = ( v1 [ i ] - v1 [ i - 1 ] ) ; }	if ( ( v1. at ( i ) - v1 [ i - 1 ] ) < min ) min = v1. i ] - v2 [ i + 1 ] ;
19592	DUMMY	0.0	0.0	}	DUMMY
19593	print min to the standard output	N/A	N/A	cout << min << endl ;	cout << min << endl ;
19594	DUMMY	0.0	0.0	}	DUMMY
19595	arr = array of integers of length 1000000	N/A	N/A	int arr [ 1000000 ] ;	int arr [ 1000000 ] ;
19596	DUMMY	0.0	0.0	int main() {	DUMMY
19597	let n be a integer	N/A	N/A	int n ;	int n ;
19598	read n	N/A	N/A	cin >> n ;	cin >> n ;
19599	let minimum , answer be integers wih answer = ( int ) 1e9	N/A	N/A	int minimum , answer = ( int ) 1e9 ;	int minimum, answer = ( int ) 1e9 ;
19600	create a vector of integers with name occurrences	N/A	N/A	vector < int > occurrences ;	vector < int > occurrences ;
19601	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19602	read arr [ i ]	N/A	N/A	cin >> arr [ i ] ;	cin >> arr [ i ] ;
19603	if not i , minimum is equal to arr [ 0 ]	N/A	N/A	if ( ! i ) minimum = arr [ 0 ] ;	if (! i ) minimum = arr [ 0 ] ;
19604	minimum is equal to minimum of minimum , arr [ i ]	N/A	N/A	minimum = min ( minimum , arr [ i ] ) ;	minimum = min ( minimum, arr [ i ] ) ;
19605	DUMMY	0.0	0.0	}	DUMMY
19606	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19607	if arr [ i ] is equal to minimum , push i into occurrences from back	N/A	N/A	if ( arr [ i ] == minimum ) occurrences . push_back ( i ) ;	if ( arr [ i ] == minimum ) back. push_back ( i ) ;
19608	for i = 1 to length of occurrences exclusive , answer = minimum of answer , occurrences [ i ] - occurrences [ i - 1 ]	N/A	N/A	for ( int i = 1 ; i < occurrences . size ( ) ; i ++ ) answer = min ( answer , occurrences [ i ] - occurrences [ i - 1 ] ) ;	for ( int i = 1 ; i < occurrences. size ( ) ; i ++ ) answer = min ( answer, occurrences [ i ] - occurrences [ 1 - 1 ] ) ;
19609	print answer and newline	N/A	N/A	cout << answer << endl ;	cout << answer << endl ;
19610	DUMMY	0.0	0.0	return 0;	DUMMY
19611	DUMMY	0.0	0.0	}	DUMMY
19612	DUMMY	0.0	0.0	int main() {	DUMMY
19613	n , i = int	N/A	N/A	int n , i ;	int n, i ;
19614	a = int array of size 100005	N/A	N/A	int a [ 100005 ] ;	int a [ 100005 ] ;
19615	loop while reading n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
19616	Min = int with Min = 0x7fffffff	N/A	N/A	int Min = 0x7fffffff ;	int Min = 0x7fffffff ;
19617	for i = 1 to n inclusive	N/A	N/A	for ( i = 1 ; i <= n ; i ++ )	for ( i = 1 ; i <= n ; i ++ )
19618	read a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
19619	set Min to min of a [ i ] and Min	N/A	N/A	Min = min ( a [ i ] , Min ) ;	Min = min ( a [ i ], Min ) ;
19620	DUMMY	0.0	0.0	}	DUMMY
19621	ans = int with ans = 0x7fffffff	N/A	N/A	int ans = 0x7fffffff ;	int ans = 0x7fffffff ;
19622	t = int with t = - 1	N/A	N/A	int t = - 1 ;	int t = - 1 ;
19623	for i = 1 to n inclusive	N/A	N/A	for ( i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
19624	if a [ i ] is Min	N/A	N/A	if ( a [ i ] == Min )	if ( a [ i ] == Min )
19625	set t to i	N/A	N/A	t = i ;	t = i ;
19626	break	N/A	N/A	break ;	break ;
19627	DUMMY	0.0	0.0	}	DUMMY
19628	DUMMY	0.0	0.0	}	DUMMY
19629	for i = t + 1 to n inclusive	N/A	N/A	for ( i = t + 1 ; i <= n ; i ++ )	for ( int i = t + 1 ; i <= n ; i ++ )
19630	if a [ i ] is Min	N/A	N/A	if ( a [ i ] == Min )	if ( a [ i ] == Min )
19631	set ans to min of i - t and ans	N/A	N/A	ans = min ( i - t , ans ) ;	ans = min ( i - t, ans ) ;
19632	set t to i	N/A	N/A	t = i ;	t = i ;
19633	DUMMY	0.0	0.0	}	DUMMY
19634	DUMMY	0.0	0.0	}	DUMMY
19635	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
19636	DUMMY	0.0	0.0	}	DUMMY
19637	DUMMY	0.0	0.0	return 0;	DUMMY
19638	DUMMY	0.0	0.0	}	DUMMY
19639	declare new constant integer called maxn = 1e7 + 10	N/A	N/A	const int maxn = 1e7 + 10 ;	const int maxn = 1e7 + 10 ;
19640	a is a new array of integers with maxn elements	N/A	N/A	int a [ maxn ] ;	int a [ maxn ] ;
19641	n is a new integer variable	N/A	N/A	int n ;	int n ;
19642	create new integer variable mini = 1e9 + 10	N/A	N/A	int mini = 1e9 + 10 ;	int mini = 1e9 + 10 ;
19643	DUMMY	0.0	0.0	int main() {	DUMMY
19644	read from the input to n	N/A	N/A	cin >> n ;	cin >> n ;
19645	start for loop from i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19646	read from the input to a [ i ]	N/A	N/A	cin >> a [ i ] ;	cin >> a [ i ] ;
19647	if a [ i ] is less than mini , assign a [ i ] to mini	N/A	N/A	if ( a [ i ] < mini ) mini = a [ i ] ;	if ( a [ i ] < mini ) mini = a [ 1 ] ;
19648	DUMMY	0.0	0.0	}	DUMMY
19649	create new vector of integers vec	N/A	N/A	vector < int > vec ;	vector < int > vec ;
19650	start for loop from i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19651	if mini = a [ i ] , add i to the end of vec	N/A	N/A	if ( mini == a [ i ] ) { vec . push_back ( i ) ; }	if ( mini == a [ i ] ) vec. push_back ( i ) ;
19652	DUMMY	0.0	0.0	}	DUMMY
19653	assign n to mini	N/A	N/A	mini = n ;	mini = n ;
19654	for i from 0 to length of vec - 1 exclusive , assign min of mini and vec [ i + 1 ] - vec [ i ] to mini	N/A	N/A	for ( int i = 0 ; i < vec . size ( ) - 1 ; i ++ ) { mini = min ( mini , vec [ i + 1 ] - vec [ i ] ) ; }	for ( int i = 0 ; i < vec. size ( ) - 1 ; i ++ ) { mini = min ( mini, vec [ i + 1 ] - vec [ 1 ] ) ; }
19655	print mini	N/A	N/A	cout << mini << endl ;	cout << mini << endl ;
19656	DUMMY	0.0	0.0	return 0;	DUMMY
19657	DUMMY	0.0	0.0	}	DUMMY
19658	DUMMY	0.0	0.0	int main() {	DUMMY
19659	r , c = integers	N/A	N/A	int r , c ;	int r, c ;
19660	flag = integer with flag = - 1	N/A	N/A	int flag = - 1 ;	int flag = - 1 ;
19661	read r , c	N/A	N/A	cin >> r >> c ;	cin >> r >> c ;
19662	v = 2d character array of size [ r ] [ c ]	N/A	N/A	char v [ r ] [ c ] ;	char v [ r ] [ c ] ;
19663	empt , wolf , sheep = integers with empt = 0 , wolf = 0 , sheep = 0	N/A	N/A	int empt = 0 , wolf = 0 , sheep = 0 ;	int empt = 0, wolf = 1, sheep = 0 ;
19664	p = character	N/A	N/A	char p ;	char p ;
19665	for i = 0 to r exclusive	N/A	N/A	for ( int i = 0 ; i < r ; i ++ )	for ( int i = 0 ; i < r ; i ++ )
19666	for j = 0 to c exclusive	N/A	N/A	for ( int j = 0 ; j < c ; j ++ )	for ( int j = 0 ; j < c ; j ++ )
19667	read p	N/A	N/A	cin >> p ;	cin >> p ;
19668	if p is .	N/A	N/A	if ( p == ' . ' )	if ( p == '.')
19669	v [ i ] [ j ] = D	N/A	N/A	v [ i ] [ j ] = ' D ' ;	v [ i ] [ j ] ='D';
19670	else	N/A	N/A	else	else
19671	v [ i ] [ j ] = p	N/A	N/A	v [ i ] [ j ] = p ;	v [ i ] [ j ] = p ;
19672	DUMMY	0.0	0.0	}	DUMMY
19673	DUMMY	0.0	0.0	}	DUMMY
19674	for i = 0 to r exclusive	N/A	N/A	for ( int i = 0 ; i < r ; i ++ )	for ( int i = 0 ; i < r ; i ++ )
19675	for j = 0 to c exclusive	N/A	N/A	for ( int j = 0 ; j < c ; j ++ )	for ( int j = 0 ; j < c ; j ++ )
19676	if v [ i ] [ j ] is S	N/A	N/A	if ( v [ i ] [ j ] == ' S ' )	if ( v [ i ] [ j ] =='S')
19677	if v [ i - 1 ] [ j ] is W and i - 1 > = 0 , flag = 0	N/A	N/A	if ( v [ i - 1 ] [ j ] == ' W ' && i - 1 >= 0 ) flag = 0 ;	if ( v [ i - 1 ] [ j ] =='W'&& i - l >= 0 ) flag = 0 ;
19678	if v [ i + 1 ] [ j ] is W and i + 1 < r , flag = 0	N/A	N/A	if ( v [ i + 1 ] [ j ] == ' W ' && i + 1 < r ) flag = 0 ;	if ( v [ i + 1 ] [ j ] =='W'&& i + 2 < r ) flag = 0 ;
19679	if v [ i ] [ j + 1 ] is W and j + 1 < c , flag = 0	N/A	N/A	if ( v [ i ] [ j + 1 ] == ' W ' && j + 1 < c ) flag = 0 ;	if ( v [ i ] [ j + 1 ] =='W'&& j + i < c ) flag = 0 ;
19680	if v [ i ] [ j - 1 ] is W and j - 1 > = 0 , flag = 0	N/A	N/A	if ( v [ i ] [ j - 1 ] == ' W ' && j - 1 >= 0 ) flag = 0 ;	if ( v [ i ] [ j - 1 ] =='W'&& j - i >= 0 ) flag = 0 ;
19681	DUMMY	0.0	0.0	}	DUMMY
19682	DUMMY	0.0	0.0	}	DUMMY
19683	DUMMY	0.0	0.0	}	DUMMY
19684	if flag is 0	N/A	N/A	if ( flag == 0 )	if ( flag == 0 )
19685	print NO	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
19686	else	N/A	N/A	else	else
19687	print YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES\n " ;
19688	for i = 0 to r exclusive	N/A	N/A	for ( int i = 0 ; i < r ; i ++ )	for ( int i = 0 ; i < r ; i ++ )
19689	for j = 0 to c exclusive , print v [ i ] [ j ]	N/A	N/A	for ( int j = 0 ; j < c ; j ++ ) { cout << v [ i ] [ j ] ; }	for ( int j = 0 ; j < c ; j ++ ) { cout << v [ i ] [ j ] ; }
19690	print new line	N/A	N/A	cout << endl ;	cout << endl ;
19691	DUMMY	0.0	0.0	}	DUMMY
19692	DUMMY	0.0	0.0	}	DUMMY
19693	DUMMY	0.0	0.0	}	DUMMY
19694	create long long a and b	N/A	N/A	long long a , b ;	long long a, b ;
19695	create char s [ 1000 ] [ 1000 ]	N/A	N/A	char s [ 1000 ] [ 1000 ] ;	char s [ 1000 ] [ 1000 + 1 ] ;
19696	DUMMY	0.0	0.0	int main() {	DUMMY
19697	read a and b	N/A	N/A	cin >> a >> b ;	cin >> a >> b ;
19698	for i = 0 to a exclusive	N/A	N/A	for ( int i = 0 ; i < a ; i ++ )	for ( long long i = 0 ; i < a ; i ++ )
19699	for j = 0 to b exclusive , read cin > > s [ i ] [ j ]	N/A	N/A	for ( int j = 0 ; j < b ; j ++ ) { cin >> s [ i ] [ j ] ; }	for ( long long j = 0 ; j < b ; j ++ ) { cin >> s [ i ] [ j ] ; }
19700	DUMMY	0.0	0.0	}	DUMMY
19701	for i = 0 to a exclusive	N/A	N/A	for ( int i = 0 ; i < a ; i ++ )	for ( int i = 0 ; i < a ; i ++ )
19702	for j = 0 to b exclusive	N/A	N/A	for ( int j = 0 ; j < b ; j ++ )	for ( int j = 0 ; j < b ; j ++ )
19703	if s [ i ] [ j ] = S	N/A	N/A	if ( s [ i ] [ j ] == ' S ' )	if ( s [ i ] [ j ] =='S')
19704	if s [ i ] [ j + 1 ] = W	N/A	N/A	if ( s [ i ] [ j + 1 ] == ' W ' )	if ( s [ i ] [ j + 1 ] =='W')
19705	print NO	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
19706	DUMMY	0.0	0.0	return 0;	DUMMY
19707	DUMMY	0.0	0.0	}	DUMMY
19708	if s [ i ] [ j - 1 ] equal to W	N/A	N/A	if ( s [ i ] [ j - 1 ] == ' W ' )	if ( s [ i ] [ j - 1 ] =='W')
19709	print NO	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
19710	DUMMY	0.0	0.0	return 0;	DUMMY
19711	DUMMY	0.0	0.0	}	DUMMY
19712	s [ i + 1 ] [ j ] = W	N/A	N/A	if ( s [ i + 1 ] [ j ] == ' W ' )	s [ i + 1 ] [ j ] ='W';
19713	print NO	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
19714	DUMMY	0.0	0.0	return 0;	DUMMY
19715	DUMMY	0.0	0.0	}	DUMMY
19716	if s [ i - 1 ] [ j ] = W	N/A	N/A	if ( s [ i - 1 ] [ j ] == ' W ' )	if ( s [ i - 1 ] [ j ] =='W')
19717	print NO and a newline	N/A	N/A	cout << " NO " << endl ;	cout << " NO " << endl ;
19718	DUMMY	0.0	0.0	return 0;	DUMMY
19719	DUMMY	0.0	0.0	}	DUMMY
19720	DUMMY	0.0	0.0	}	DUMMY
19721	DUMMY	0.0	0.0	}	DUMMY
19722	DUMMY	0.0	0.0	}	DUMMY
19723	print YES	N/A	N/A	cout << " YES " << endl ;	cout << " YES "
19724	for i = 0 to a exclusive	N/A	N/A	for ( int i = 0 ; i < a ; i ++ )	for ( int i = 0 ; i < a ; i ++ )
19725	for j = 0 to b exclusive	N/A	N/A	for ( int j = 0 ; j < b ; j ++ )	for ( int j = 0 ; j < b ; j ++ )
19726	if s [ i ] [ j ] = . , set s [ i ] [ j ] to D	N/A	N/A	if ( s [ i ] [ j ] == ' . ' ) { s [ i ] [ j ] = ' D ' ; }	if ( strcmp ( s [ i ] [ j ], '.') == 0 ) { s [ j -- ] ='D'; }
19727	print s [ i ] [ j ]	N/A	N/A	cout << s [ i ] [ j ] ;	cout << s [ i ] [ j ] ;
19728	DUMMY	0.0	0.0	}	DUMMY
19729	print a newline	N/A	N/A	cout << endl ;	cout << endl ;
19730	DUMMY	0.0	0.0	}	DUMMY
19731	DUMMY	0.0	0.0	}	DUMMY
19732	declare int array freq with size 1005	N/A	N/A	int freq [ 1005 ] ;	int freq [ 1005 ] ;
19733	DUMMY	0.0	0.0	int main() {	DUMMY
19734	declare int variables hh and mm	N/A	N/A	int hh , mm ;	int hh, mm ;
19735	declare double variables h , d , c and n	N/A	N/A	double h , d , c , n ;	double h, d, c, n ;
19736	declare doubles cost1 and cost2	N/A	N/A	double cost1 , cost2 ;	double cost1, cost2 ;
19737	read hh and mm	N/A	N/A	cin >> hh >> mm ;	cin >> hh >> mm ;
19738	read input to h , d , c and n	N/A	N/A	cin >> h >> d >> c >> n ;	cin >> h >> d >> c >> n ;
19739	declare int time = ( hh * 60 ) + mm	N/A	N/A	int time = ( hh * 60 ) + mm ;	int time = ( hh * 60 ) + mm ;
19740	declare int buns = 0	N/A	N/A	int buns = 0 ;	int buns = 0 ;
19741	declare int hunger = h	N/A	N/A	int hunger = h ;	int hunger = h ;
19742	while hunger > 0	N/A	N/A	while ( hunger > 0 )	while ( hunger > 0 )
19743	subtract n from hunger	N/A	N/A	hunger -= n ;	hunger -= n ;
19744	increment buns	N/A	N/A	buns ++ ;	buns ++ ;
19745	DUMMY	0.0	0.0	}	DUMMY
19746	assign buns * c to cost1	N/A	N/A	cost1 = buns * c ;	cost1 = buns * c ;
19747	if time is less than 1200	N/A	N/A	if ( time < 1200 )	if ( time < 1200 )
19748	set hunger to h + ( ( 1200 - time ) * d )	N/A	N/A	hunger = h + ( ( 1200 - time ) * d ) ;	hunger = h + ( ( 1200 - time ) * d ) ;
19749	else	N/A	N/A	else	else
19750	change hunger to h	N/A	N/A	hunger = h ;	hunger = h ;
19751	change buns to 0	N/A	N/A	buns = 0 ;	buns = 0 ;
19752	while hunger > 0	N/A	N/A	while ( hunger > 0 )	while ( hunger -- )
19753	decrease hunger by n	N/A	N/A	hunger -= n ;	hunger -= n ;
19754	increment buns	N/A	N/A	buns ++ ;	buns ++ ;
19755	DUMMY	0.0	0.0	}	DUMMY
19756	decrease c by c * ( 20 . 0 / 100 )	N/A	N/A	c -= c * ( 20.0 / 100 ) ;	c -= c * ( 20.0 / 100 ) ;
19757	change cost2 to c * buns	N/A	N/A	cost2 = c * buns ;	cost2 = c * buns ;
19758	change decimal precision of the output to 5 , set showpoint and fixed flags and print the min of cost2 and cost1	N/A	N/A	cout << setprecision ( 5 ) << showpoint << fixed << min ( cost2 , cost1 ) << endl ;	cout. precision ( 5 ), showpoint << fixed << min ( cost2, cost1 ) << endl ;
19759	DUMMY	0.0	0.0	}	DUMMY
19760	create vector integer v	N/A	N/A	vector < int > v ;	vector < int > v ;
19761	create integer arrays num , value , with num size 51 , value size 51	N/A	N/A	int num [ 51 ] , value [ 51 ] ;	int num [ 51 ] = { 51 }, value ;
19762	DUMMY	0.0	0.0	int main() {	DUMMY
19763	create integers n , index with index = 1	N/A	N/A	int n , index = 1 ;	int n, index = 1 ;
19764	read n	N/A	N/A	cin >> n ;	cin >> n ;
19765	for i = 0 to n exclusive , read num [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> num [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> num [ i ] ;
19766	add element num [ n - 1 ] to end of v	N/A	N/A	v . push_back ( num [ n - 1 ] ) ;	v. push_back ( num [ n - 1 ] ) ;
19767	for i = n - 2 to 0 inclusive , decrementing i	N/A	N/A	for ( int i = n - 2 ; i >= 0 ; i -- )	for ( int i = n - 2 ; i >= 0 ; i -- )
19768	create integers j , flag with j = 0 , flag = 0	N/A	N/A	int j = 0 , flag = 0 ;	int j = 0, flag = 0 ;
19769	while j is less than size of v	N/A	N/A	while ( j < v . size ( ) )	while ( j < v. size ( ) )
19770	if num [ i ] is v [ j ]	N/A	N/A	if ( num [ i ] == v [ j ] )	if ( num [ i ] == v [ j ] )
19771	set flag to 1	N/A	N/A	flag = 1 ;	flag = 1 ;
19772	break loop	N/A	N/A	break ;	break ;
19773	DUMMY	0.0	0.0	}	DUMMY
19774	increment j	N/A	N/A	j ++ ;	j ++ ;
19775	DUMMY	0.0	0.0	}	DUMMY
19776	if not flag , add element num [ i ] to end of v	N/A	N/A	if ( ! flag ) v . push_back ( num [ i ] ) ;	if (! flag ) v. push_back ( num [ i ] ) ;
19777	DUMMY	0.0	0.0	}	DUMMY
19778	print size of v print newline	N/A	N/A	cout << v . size ( ) << endl ;	cout << v. size ( ) << endl ;
19779	print v [ size of v - 1 ]	N/A	N/A	cout << v [ v . size ( ) - 1 ] ;	cout << v [ v. size ( ) - 1 ] << endl ;
19780	for i = size of v - 2 to 0 inclusive , decrementing i , print " " print v [ i ]	N/A	N/A	for ( int i = v . size ( ) - 2 ; i >= 0 ; i -- ) cout << " " << v [ i ] ;	for ( int i = v. size ( ) - 2 ; i >= 0 ; i -- ) { cout << " " << v [ i ] ; }
19781	print newline	N/A	N/A	cout << endl ;	cout << endl ;
19782	DUMMY	0.0	0.0	}	DUMMY
19783	create integer array a with size 555	N/A	N/A	int a [ 55 ] ;	int a [ 555 ] ;
19784	create boolean array vis with size 1005	N/A	N/A	bool vis [ 1005 ] ;	bool vis [ 1005 ] ;
19785	create integer vector s	N/A	N/A	vector < int > s ;	vector < int > s ;
19786	DUMMY	0.0	0.0	int main() {	DUMMY
19787	create integer n , tot with tot = 0	N/A	N/A	int n , tot = 0 ;	int n, tot = 0 ;
19788	read n	N/A	N/A	cin >> n ;	cin >> n ;
19789	for i = 0 to n exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }
19790	for i = n - 1 to 0 inclusive , decrementing i	N/A	N/A	for ( int i = n - 1 ; i >= 0 ; i -- )	for ( int i = n - 1 ; i >= 0 ; i -- )
19791	if vis [ a [ i ] ] is false	N/A	N/A	if ( ! vis [ a [ i ] ] )	if (! vis [ a [ i ] ] )
19792	add element a [ i ] to end of s	N/A	N/A	s . push_back ( a [ i ] ) ;	s. push_back ( a [ i ] ) ;
19793	set vis [ a [ i ] ] to true	N/A	N/A	vis [ a [ i ] ] = true ;	vis [ a [ i ] ] = true ;
19794	DUMMY	0.0	0.0	}	DUMMY
19795	DUMMY	0.0	0.0	}	DUMMY
19796	create integer len with len = size of s	N/A	N/A	int len = s . size ( ) ;	int len = s. size ( ) ;
19797	print len print newline	N/A	N/A	cout << len << endl ;	cout << len << endl ;
19798	for i = len - 1 to 0 exclusive , decrementing i , print s [ i ] print " "	N/A	N/A	for ( int i = len - 1 ; i > 0 ; i -- ) cout << s [ i ] << " " ;	for ( int i = len - 1 ; i > 0 ; i -- ) { cout << s [ i ] << " " ; }
19799	print s [ 0 ] print newline	N/A	N/A	cout << s [ 0 ] << endl ;	cout << s [ 0 ] << endl ;
19800	DUMMY	0.0	0.0	return 0;	DUMMY
19801	DUMMY	0.0	0.0	}	DUMMY
19802	create integer array num of size 100	N/A	N/A	int num [ 100 ] ;	int num [ 100 ] ;
19803	create integer array nn of size 100	N/A	N/A	int nn [ 100 ] ;	int nn [ 100 ] ;
19804	create integer cnt with cnt = 0	N/A	N/A	int cnt = 0 ;	int cnt = 0 ;
19805	create integer cc1 with cc1 = 0	N/A	N/A	int cc1 = 0 ;	int cc1 = 0 ;
19806	declare num_find with integer in as argument , returning boolean	N/A	N/A	bool num_find ( int in )	bool num_find ( int in )
19807	for i = 0 to cnt exclusive	N/A	N/A	for ( int i = 0 ; i < cnt ; i ++ )	for ( int i = 0 ; i < cnt ; i ++ )
19808	if num [ i ] is in , return true from function	N/A	N/A	if ( num [ i ] == in ) return true ;	if ( num [ i ] == in ) return true ;
19809	DUMMY	0.0	0.0	}	DUMMY
19810	return false from function	N/A	N/A	return false ;	return false ;
19811	DUMMY	0.0	0.0	}	DUMMY
19812	DUMMY	0.0	0.0	int main() {	DUMMY
19813	create integer N	N/A	N/A	int N ;	int N ;
19814	read N	N/A	N/A	cin >> N ;	cin >> N ;
19815	for i = 0 to N exclusive	N/A	N/A	for ( int i = 0 ; i < N ; i ++ )	for ( int i = 0 ; i < N ; i ++ )
19816	read nn [ cc1 ]	N/A	N/A	cin >> nn [ cc1 ] ;	cin >> nn [ cc1 ] ;
19817	increment cc1	N/A	N/A	cc1 ++ ;	cc1 ++ ;
19818	DUMMY	0.0	0.0	}	DUMMY
19819	for i = N - 1 to 0 inclusive , decrement i	N/A	N/A	for ( int i = N - 1 ; i >= 0 ; i -- )	for ( int i = N - 1 ; i >= 0 ; i -- )
19820	create integer tmp	N/A	N/A	int tmp ;	int tmp ;
19821	set tmp to nn [ i ]	N/A	N/A	tmp = nn [ i ] ;	tmp = nn [ i ] ;
19822	if result of num_find with tmp as argument is false	N/A	N/A	if ( ! num_find ( tmp ) )	if (! num_find ( tmp ) )
19823	set num [ cnt ] is tmp	N/A	N/A	num [ cnt ] = tmp ;	num [ cnt ] = tmp ;
19824	increment cnt	N/A	N/A	cnt ++ ;	cnt ++ ;
19825	DUMMY	0.0	0.0	}	DUMMY
19826	DUMMY	0.0	0.0	}	DUMMY
19827	print cnt print newlien	N/A	N/A	cout << cnt << endl ;	cout << cnt << endl ;
19828	for i = cnt - 1 to 0 exclusive , decrementing i , print num [ i ] print " "	N/A	N/A	for ( int i = cnt - 1 ; i > 0 ; i -- ) cout << num [ i ] << " " ;	for ( int i = cnt - 1 ; i > 0 ; i -- ) { cout << num [ i ] << " " ; }
19829	print num [ 0 ] print newline	N/A	N/A	cout << num [ 0 ] << endl ;	cout << num [ 0 ] << endl ;
19830	DUMMY	0.0	0.0	}	DUMMY
19831	declare integers n and t , integer arrays a and b with 100 elements and an array of integers visit with 1010 elements	N/A	N/A	int n , a [ 100 ] , b [ 100 ] , visit [ 1010 ] , t ;	int n, b [ 100 ], visit [ 1010 ], t ;
19832	DUMMY	0.0	0.0	int main() {	DUMMY
19833	while reading n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
19834	call memset with arguments a , 0 and sizeof ( a )	N/A	N/A	memset ( a , 0 , sizeof ( a ) ) ;	memset ( a, 0, sizeof ( a ) ) ;
19835	call memset with arguments b , 0 and sizeof ( b )	N/A	N/A	memset ( b , 0 , sizeof ( b ) ) ;	memset ( b, 0, sizeof ( b ) ) ;
19836	call memset with arguments visit , 0 and sizeof ( visit )	N/A	N/A	memset ( visit , 0 , sizeof ( visit ) ) ;	memset ( visit, 0, sizeof ( visit ) ) ;
19837	t = 0	N/A	N/A	t = 0 ;	t = 0 ;
19838	for i = 0 to n exclusive read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
19839	declare integer variable p = n	N/A	N/A	int p = n ;	int p = n ;
19840	for i = n - 1 to 0 inclusive counting down	N/A	N/A	for ( int i = n - 1 ; i >= 0 ; i -- )	for ( int i = n - 1 ; i >= 0 ; i -- )
19841	if visit [ a [ i ] ] is greater than 0	N/A	N/A	if ( visit [ a [ i ] ] > 0 )	if ( visit [ a [ i ] ] > 0 )
19842	decrement p	N/A	N/A	p -- ;	p -- ;
19843	continue the loop	N/A	N/A	continue ;	continue ;
19844	DUMMY	0.0	0.0	}	DUMMY
19845	set b [ t ] to a [ i ] and increment t	N/A	N/A	b [ t ++ ] = a [ i ] ;	b [ t ++ ] = a [ i ] ;
19846	increase visit [ a [ i ] ]	N/A	N/A	visit [ a [ i ] ] ++ ;	visit [ a [ i ] ] ++ ;
19847	DUMMY	0.0	0.0	}	DUMMY
19848	print p	N/A	N/A	cout << p << endl ;	cout << p << endl ;
19849	for i = t - 1 to 0 inclusive counting down	N/A	N/A	for ( int i = t - 1 ; i >= 0 ; i -- )	for ( int i = t - 1 ; i >= 0 ; i -- )
19850	print b [ i ]	N/A	N/A	cout << b [ i ] ;	cout << b [ i ] << endl ;
19851	if i ! = 0 , print " "	N/A	N/A	if ( i != 0 ) cout << " " ;	if ( i!= 0 ) { cout << " " ; }
19852	DUMMY	0.0	0.0	}	DUMMY
19853	print new line	N/A	N/A	cout << endl ;	cout << endl ;
19854	DUMMY	0.0	0.0	}	DUMMY
19855	DUMMY	0.0	0.0	}	DUMMY
19856	DUMMY	0.0	0.0	int main() {	DUMMY
19857	create integer arrays a , b with a size 5000 , b size 5000	N/A	N/A	int a [ 5000 ] , b [ 5000 ] ;	int a [ 5000 ] = { 0 }, b [ 3000 ] ;
19858	create integer array flag of size 5000	N/A	N/A	int flag [ 5000 ] ;	int flag [ 5000 ] ;
19859	set bytes from flag to size of flag to value true	N/A	N/A	memset ( flag , true , sizeof ( flag ) ) ;	memset ( flag, true, sizeof flag ) ;
19860	create integer n	N/A	N/A	int n ;	int n ;
19861	read n	N/A	N/A	cin >> n ;	cin >> n ;
19862	for i = 0 to n exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
19863	create integer len with len = 0	N/A	N/A	int len = 0 ;	int len = 0 ;
19864	for i = n - 1 to 0 inclusive , decrementing i	N/A	N/A	for ( int i = n - 1 ; i >= 0 ; i -- )	for ( int i = n - 1 ; i >= 0 ; i -- )
19865	if flag [ a [ i ] ] is true	N/A	N/A	if ( flag [ a [ i ] ] )	if ( flag [ a [ i ] ] )
19866	increment len	N/A	N/A	len ++ ;	len ++ ;
19867	set b [ len ] to a [ i ]	N/A	N/A	b [ len ] = a [ i ] ;	b [ len ] = a [ i ] ;
19868	set flag [ a [ i ] ] to false	N/A	N/A	flag [ a [ i ] ] = false ;	flag [ a [ i ] ] = false ;
19869	DUMMY	0.0	0.0	}	DUMMY
19870	DUMMY	0.0	0.0	}	DUMMY
19871	print len print newline	N/A	N/A	cout << len << endl ;	cout << len << endl ;
19872	for i = len to 1 inclusive , decrementing i	N/A	N/A	for ( int i = len ; i >= 1 ; i -- )	for ( int i = len ; i >= 1 ; i -- )
19873	if i is not 1	N/A	N/A	if ( i != 1 )	if ( i!= 1 )
19874	print b [ i ] print ' '	N/A	N/A	cout << b [ i ] << ' ' ;	cout << b [ i ] <<' ';
19875	else	N/A	N/A	else	else
19876	print b [ i ] print newline	N/A	N/A	cout << b [ i ] << endl ;	cout << b [ i ] << endl ;
19877	DUMMY	0.0	0.0	return 0;	DUMMY
19878	DUMMY	0.0	0.0	}	DUMMY
19879	let n be integer	N/A	N/A	int n ;	int n ;
19880	A = array of integers of size 60	N/A	N/A	int A [ 60 ] ;	int A [ 60 ] ;
19881	let sum be integer	N/A	N/A	int sum ;	int sum ;
19882	let B be an array of integers of size 60	N/A	N/A	int B [ 60 ] ;	int B [ 60 ] ;
19883	DUMMY	0.0	0.0	int main() {	DUMMY
19884	read n	N/A	N/A	cin >> n ;	cin >> n ;
19885	sum = n	N/A	N/A	sum = n ;	sum = n ;
19886	create integer t with value 0	N/A	N/A	int t = 0 ;	int t = 0 ;
19887	read n elements from the input to A	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> A [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> A [ i ] ; }
19888	for integer i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
19889	for integer x = i + 1 to n exclusive	N/A	N/A	for ( int x = i + 1 ; x < n ; x ++ )	for ( int x = i + 1 ; x < n ; x ++ )
19890	if A [ i ] = A [ x ]	N/A	N/A	if ( A [ i ] == A [ x ] )	if ( A [ i ] == A [ x ] )
19891	assign value of 0 to the A [ i ]	N/A	N/A	A [ i ] = 0 ;	A [ i ] = 0 ;
19892	assign value of i to the B [ t ]	N/A	N/A	B [ t ] = i ;	B [ t ] = i ;
19893	increase t	N/A	N/A	t ++ ;	t ++ ;
19894	stop the loop	N/A	N/A	break ;	break ;
19895	DUMMY	0.0	0.0	}	DUMMY
19896	DUMMY	0.0	0.0	}	DUMMY
19897	DUMMY	0.0	0.0	}	DUMMY
19898	for i = t - 1 to 0	N/A	N/A	for ( int i = t - 1 ; i >= 0 ; i -- )	for ( int i = t - 1 ; i >= 0 ; i -- )
19899	decrease sum by one	N/A	N/A	sum -- ;	sum -- ;
19900	for integer x = B [ i ] to n exclusive	N/A	N/A	for ( int x = B [ i ] ; x < n ; x ++ )	for ( int x = B [ i ] ; x < n ; x ++ )
19901	A [ x ] = A [ x + 1 ]	N/A	N/A	A [ x ] = A [ x + 1 ] ;	A [ x ] = A [ x + 1 ] ;
19902	A [ x + 1 ] = 0	N/A	N/A	A [ x + 1 ] = 0 ;	A [ x + 1 ] = 0 ;
19903	DUMMY	0.0	0.0	}	DUMMY
19904	DUMMY	0.0	0.0	}	DUMMY
19905	print sum and a new line	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
19906	for i = 0 to sum exclusive	N/A	N/A	for ( int i = 0 ; i < sum ; i ++ )	for ( int i = 0 ; i < sum ; i ++ )
19907	print A [ i ]	N/A	N/A	cout << A [ i ] ;	cout << A [ i ] ;
19908	if i ! = sum - 1 , print " "	N/A	N/A	if ( i != sum - 1 ) { cout << " " ; }	if ( i!= sum - 1 ) cout << " " ;
19909	DUMMY	0.0	0.0	}	DUMMY
19910	print new line	N/A	N/A	cout << endl ;	<< " \n " ;
19911	DUMMY	0.0	0.0	}	DUMMY
19912	DUMMY	0.0	0.0	int main() {	DUMMY
19913	let n and sum be integers , with sum = 0 ; a and b are arrays of integers with size 50 and v is an array of integers with size 1001 filled with 0	N/A	N/A	int a [ 50 ] , b [ 50 ] , v [ 1001 ] = { 0 } , n , sum = 0 ;	int n, a [ 50 ], v [ 1001 ] = { 0 }, sum = 0 ;
19914	read n	N/A	N/A	cin >> n ;	cin >> n ;
19915	read n elements into a	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
19916	for integer i = n - 1 to 0 inclusive counting down	N/A	N/A	for ( int i = n - 1 ; i >= 0 ; i -- )	for ( int i = n - 1 ; i >= 0 ; i -- )
19917	if v [ a [ i ] ] is 0	N/A	N/A	if ( ! v [ a [ i ] ] )	if ( v [ a [ i ] ] == 0 )
19918	set value of v [ a [ i ] ] to 1	N/A	N/A	v [ a [ i ] ] = 1 ;	v [ a [ i ] ] = 1 ;
19919	set value of b [ sum ] to a [ i ]	N/A	N/A	b [ sum ] = a [ i ] ;	b [ sum ] = a [ i ] ;
19920	increment sum	N/A	N/A	sum ++ ;	sum ++ ;
19921	DUMMY	0.0	0.0	}	DUMMY
19922	print sum and a new line	N/A	N/A	cout << sum << endl ;	cout << sum << endl ;
19923	for i = sum - 1 to 0 exclusive counting down , print b [ i ] and ' '	N/A	N/A	for ( int i = sum - 1 ; i > 0 ; i -- ) cout << b [ i ] << ' ' ;	for ( int i = sum - 1 ; i > 0 ; i -- ) { cout << b [ i ] <<' '; }
19924	print b [ 0 ] and a new line	N/A	N/A	cout << b [ 0 ] << endl ;	cout << b [ 0 ] << endl ;
19925	DUMMY	0.0	0.0	return 0;	DUMMY
19926	DUMMY	0.0	0.0	}	DUMMY
19927	create constant integer Max with Max = 1e3 + 10	N/A	N/A	const int Max = 1e3 + 10 ;	const int Max = 1e3 + 10 ;
19928	create integer arrays a , ans , flag , with a size Max , ans size Max , flag size Max	N/A	N/A	int a [ Max ] , ans [ Max ] , flag [ Max ] ;	int a [ Max ], ans [ Max ++ ], flag [ Max -- ] ;
19929	DUMMY	0.0	0.0	int main() {	DUMMY
19930	create integers n , tot with tot = 0	N/A	N/A	int n , tot = 0 ;	int n, tot = 0 ;
19931	read n	N/A	N/A	cin >> n ;	cin >> n ;
19932	for i = 1 to n inclusive , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
19933	for i = n to 1 inclusive , decrementing i	N/A	N/A	for ( int i = n ; i >= 1 ; i -- )	for ( int i = n ; i >= 1 ; i -- )
19934	if not flag [ a [ i ] ]	N/A	N/A	if ( ! flag [ a [ i ] ] )	if (! flag [ a [ i ] ] )
19935	set flag [ a [ i ] ] to 1	N/A	N/A	flag [ a [ i ] ] = 1 ;	flag [ a [ i ] ] = 1 ;
19936	set ans [ increment tot ] to a [ i ]	N/A	N/A	ans [ tot ++ ] = a [ i ] ;	ans [ tot ++ ] = a [ i ] ;
19937	DUMMY	0.0	0.0	}	DUMMY
19938	DUMMY	0.0	0.0	}	DUMMY
19939	print tot print newline	N/A	N/A	cout << tot << endl ;	cout << tot << endl ;
19940	for i = tot - 1 to 0 inclusive , decrementing i	N/A	N/A	for ( int i = tot - 1 ; i >= 0 ; i -- )	for ( int i = tot - 1 ; i >= 0 ; i -- )
19941	print ans [ i ]	N/A	N/A	cout << ans [ i ] ;	cout << ans [ i ] ;
19942	if i is not 0 print " "	N/A	N/A	if ( i != 0 ) cout << " " ;	if ( i!= 0 ) cout << " " ;
19943	DUMMY	0.0	0.0	}	DUMMY
19944	print newline	N/A	N/A	cout << endl ;	cout << endl ;
19945	DUMMY	0.0	0.0	return 0;	DUMMY
19946	DUMMY	0.0	0.0	}	DUMMY
19947	DUMMY	0.0	0.0	int main() {	DUMMY
19948	create long long integer n	N/A	N/A	long long int n ;	long long int n ;
19949	while read n	N/A	N/A	while ( cin >> n )	while ( cin >> n )
19950	if n is 0	N/A	N/A	if ( n == 0 )	if ( n == 0 )
19951	print 0 print newline	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
19952	else if ( n + 1 ) % 2 is 0	N/A	N/A	else if ( ( n + 1 ) % 2 == 0 )	else if ( ( n + 1 ) % 2 == 0 )
19953	print ( n + 1 ) / 2 print newline	N/A	N/A	cout << ( n + 1 ) / 2 << endl ;	cout << ( n + 1 ) / 2 << endl ;
19954	else	N/A	N/A	else	else
19955	print n + 1 print newline	N/A	N/A	cout << n + 1 << endl ;	cout << n + 1 << endl ;
19956	DUMMY	0.0	0.0	}	DUMMY
19957	DUMMY	0.0	0.0	return 0;	DUMMY
19958	DUMMY	0.0	0.0	}	DUMMY
19959	DUMMY	0.0	0.0	int main() {	DUMMY
19960	create long long int n	N/A	N/A	long long int n ;	long long int n ;
19961	read n	N/A	N/A	cin >> n ;	cin >> n ;
19962	if n = 0	N/A	N/A	if ( n == 0 )	if ( n == 0 )
19963	print n and a newline	N/A	N/A	cout << n << " \n " ;	cout << n << " \n " ;
19964	else	N/A	N/A	else	else
19965	if n is even	N/A	N/A	if ( n % 2 == 0 )	if ( n % 2 == 0 )
19966	print n + 1 and a newline	N/A	N/A	cout << n + 1 << " \n " ;	cout << n + 1 << " \n " ;
19967	otherwise	N/A	N/A	else	else
19968	print ( n + 1 ) / 2 and a newline	N/A	N/A	cout << ( n + 1 ) / 2 << " \n " ;	cout << ( n + 1 ) / 2 << " \n " ;
19969	DUMMY	0.0	0.0	}	DUMMY
19970	DUMMY	0.0	0.0	}	DUMMY
19971	DUMMY	0.0	0.0	}	DUMMY
19972	DUMMY	0.0	0.0	int main() {	DUMMY
19973	declare int64_t N	N/A	N/A	int64_t N ;	int64_t N ;
19974	read N	N/A	N/A	cin >> N ;	cin >> N ;
19975	declare int64_t ans = 0 if N = 0 , ( N + 1 ) / 2 if N is even , or N + 1 if N is odd	N/A	N/A	int64_t ans = N == 0 ? 0 : ( N % 2 ? ( N + 1 ) / 2 : N + 1 ) ;	int64_t ans = ( N == 0 )? 0 : ( N + 1 ) / 2 if ( N % 2 == 1 ) || N + i == 1 ;
19976	print ans	N/A	N/A	cout << ans << endl ;	cout << ans << endl ;
19977	DUMMY	0.0	0.0	return 0;	DUMMY
19978	DUMMY	0.0	0.0	}	DUMMY
19979	create long long n	N/A	N/A	long long n ;	long long n ;
19980	DUMMY	0.0	0.0	int main() {	DUMMY
19981	read n	N/A	N/A	cin >> n ;	cin >> n ;
19982	if n = 0	N/A	N/A	if ( n == 0 )	if ( n == 0 )
19983	print 0	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
19984	else if n is even	N/A	N/A	else if ( n % 2 == 0 )	else if ( n % 2 == 0 )
19985	print n + 1	N/A	N/A	cout << n + 1 << endl ;	cout << n + 1 << endl ;
19986	otherwise	N/A	N/A	else	else
19987	print ( n + 1 ) / 2 and a newline	N/A	N/A	cout << ( n + 1 ) / 2 << endl ;	cout << ( n + 1 ) / 2 << endl ;
19988	DUMMY	0.0	0.0	return 0;	DUMMY
19989	DUMMY	0.0	0.0	}	DUMMY
19990	DUMMY	0.0	0.0	int main() {	DUMMY
19991	n = integer	N/A	N/A	long long n ;	int n ;
19992	Read n	N/A	N/A	cin >> n ;	cin >> n ;
19993	if ( n + 1 ) modulo 2 is equal to 0	N/A	N/A	if ( ( n + 1 ) % 2 == 0 )	if ( ( n + 1 ) % 2 == 0 )
19994	print ( n + 1 ) / 2 and a new line	N/A	N/A	cout << ( n + 1 ) / 2 << endl ;	cout << ( n + 1 ) / 2 << endl ;
19995	else do the following	N/A	N/A	else	else
19996	if n is equal to 0	N/A	N/A	if ( n == 0 )	if ( n == 0 )
19997	print 0 and a new line	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
19998	else do the following	N/A	N/A	else	else
19999	print n + 1 and a new line	N/A	N/A	cout << n + 1 << endl ;	cout << n + 1 << endl ;
20000	DUMMY	0.0	0.0	}	DUMMY
20001	DUMMY	0.0	0.0	}	DUMMY
20002	DUMMY	0.0	0.0	}	DUMMY
20003	DUMMY	0.0	0.0	int main() {	DUMMY
20004	let n be a unsigned long integer	N/A	N/A	unsigned long long int n ;	unsigned long long n ;
20005	read n	N/A	N/A	cin >> n ;	cin >> n ;
20006	increase n value by 1	N/A	N/A	n ++ ;	n ++ ;
20007	if ( n modulus 2 is equal to 0 )	N/A	N/A	if ( n % 2 == 0 )	if ( n % 2 == 0 )
20008	print n / 2 and newline	N/A	N/A	cout << n / 2 << endl ;	cout << n / 2 << endl ;
20009	else if ( n is equal to 1 )	N/A	N/A	else if ( n == 1 )	else if ( n == 1 )
20010	print 0 and newline	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
20011	else do the following	N/A	N/A	else	else
20012	print n and newline	N/A	N/A	cout << n << endl ;	cout << n << endl ;
20013	DUMMY	0.0	0.0	}	DUMMY
20014	integer function gcd with integer arguments a and b	N/A	N/A	int gcd ( int a , int b )	int gcd ( int a, int b )
20015	if b = 0	N/A	N/A	if ( b == 0 )	if ( b == 0 )
20016	return a	N/A	N/A	return a ;	return a ;
20017	else	N/A	N/A	else	else
20018	call gcd with arguments b and a % b	N/A	N/A	gcd ( b , a % b ) ;	gcd ( b, a % b ) ;
20019	DUMMY	0.0	0.0	}	DUMMY
20020	DUMMY	0.0	0.0	int main() {	DUMMY
20021	declare long long integer variable n	N/A	N/A	long long int n ;	long long int n ;
20022	read n and keep looping	N/A	N/A	while ( cin >> n )	while ( cin >> n )
20023	increase n by one	N/A	N/A	n ++ ;	n ++ ;
20024	if n = 1	N/A	N/A	if ( n == 1 )	if ( n == 1 )
20025	print " 0 "	N/A	N/A	cout << " 0 " ;	cout << " 0 " << endl ;
20026	else if n is even	N/A	N/A	else if ( n % 2 == 0 )	else if ( n % 2 == 0 )
20027	print n / 2	N/A	N/A	cout << n / 2 ;	cout << n / 2 << endl ;
20028	else	N/A	N/A	else	else
20029	print n	N/A	N/A	cout << n ;	cout << n << endl ;
20030	print new line	N/A	N/A	cout << endl ;	cout << endl ;
20031	DUMMY	0.0	0.0	}	DUMMY
20032	DUMMY	0.0	0.0	}	DUMMY
20033	DUMMY	0.0	0.0	int main() {	DUMMY
20034	declare long long n	N/A	N/A	long long n ;	long long n ;
20035	read n	N/A	N/A	cin >> n ;	cin >> n ;
20036	if n = 0	N/A	N/A	if ( n == 0 )	if ( n == 0 )
20037	print 0 and " \ n "	N/A	N/A	cout << 0 << " \n " ;	cout << 0 << " \n " ;
20038	DUMMY	0.0	0.0	return 0;	DUMMY
20039	DUMMY	0.0	0.0	}	DUMMY
20040	if n = 1	N/A	N/A	if ( n == 1 )	if ( n == 1 )
20041	print 1 and " \ n "	N/A	N/A	cout << 1 << " \n " ;	cout << 1 << " \n " ;
20042	DUMMY	0.0	0.0	return 0;	DUMMY
20043	DUMMY	0.0	0.0	}	DUMMY
20044	if odd is greater than even	N/A	N/A	if ( n % 2 == 1 )	if ( odd > even )
20045	print ( n + 1 ) / 2 and " \ n "	N/A	N/A	cout << ( n + 1 ) / 2 << " \n " ;	cout << ( n + 1 ) / 2 << " \n " ;
20046	else	N/A	N/A	else	else
20047	print n + 1 and " \ n "	N/A	N/A	cout << n + 1 << " \n " ;	cout << n + 1 << " \n " ;
20048	DUMMY	0.0	0.0	return 0;	DUMMY
20049	DUMMY	0.0	0.0	}	DUMMY
20050	DUMMY	0.0	0.0	int main() {	DUMMY
20051	create long long n	N/A	N/A	long long n ;	long long n ;
20052	read n	N/A	N/A	cin >> n ;	cin >> n ;
20053	if n is equal to 0	N/A	N/A	if ( n == 0 )	if ( n == 0 )
20054	print 0	N/A	N/A	cout << 0 << endl ;	cout << 0 << endl ;
20055	DUMMY	0.0	0.0	return 0;	DUMMY
20056	DUMMY	0.0	0.0	}	DUMMY
20057	if n is even	N/A	N/A	if ( n % 2 == 0 )	if ( n % 2 == 0 )
20058	print n + 1 and a newline	N/A	N/A	cout << n + 1 << endl ;	cout << n + 1 << endl ;
20059	else	N/A	N/A	else	else
20060	print ( n + 1 ) / 2	N/A	N/A	cout << ( n + 1 ) / 2 << endl ;	cout << ( n + 1 ) / 2 << endl ;
20061	DUMMY	0.0	0.0	return 0;	DUMMY
20062	DUMMY	0.0	0.0	}	DUMMY
20063	DUMMY	0.0	0.0	int main() {	DUMMY
20064	n = long long	N/A	N/A	long long n ;	long long n ;
20065	read n	N/A	N/A	cin >> n ;	cin >> n ;
20066	print if not n then 0 else if n & 1 then ( n + 1 ) > > 1 else n + 1	N/A	N/A	cout << ( ! n ? 0 : n & 1 ? ( n + 1 ) >> 1 : n + 1 ) << endl ;	cout << (! n? n : ( n + 1 ) >> 1? ( n ++ 1 ) : n + 2 ) << endl ;
20067	DUMMY	0.0	0.0	return 0;	DUMMY
20068	DUMMY	0.0	0.0	}	DUMMY
20069	DUMMY	0.0	0.0	int main() {	DUMMY
20070	create long long int s , n , i , j , p , h , set h to 0	N/A	N/A	long long int s , n , i , j , p , h = 0 ;	long long int s, n, i, j, p, h = 0 ;
20071	read n	N/A	N/A	cin >> n ;	cin >> n ;
20072	if n equal to 0	N/A	N/A	if ( n == 0 )	if ( n == 0 )
20073	print 0	N/A	N/A	cout << " 0 " << endl ;	cout << 0 << endl ;
20074	else if n is even	N/A	N/A	else if ( n % 2 == 0 )	else if ( n % 2 == 0 )
20075	print n + 1	N/A	N/A	cout << n + 1 << endl ;	cout << n + 1 << endl ;
20076	else	N/A	N/A	else	else
20077	print ( n + 1 ) / 2 and a newline	N/A	N/A	cout << ( n + 1 ) / 2 << endl ;	cout << ( n + 1 ) / 2 << endl ;
20078	DUMMY	0.0	0.0	}	DUMMY
20079	create long longs n , p , b and q	N/A	N/A	long long n , p , b , q ;	long long n, p, b, q ;
20080	long long function gcd with long long arguments a and b	N/A	N/A	long long gcd ( long long a , long long b )	long long gcd ( long long a, long long b )
20081	return a if b = 0	N/A	N/A	if ( b == 0 ) return a ;	if ( b == 0 ) return a ;
20082	return gcd ( b , a % b )	N/A	N/A	return gcd ( b , a % b ) ;	return gcd ( b, a % b ) ;
20083	DUMMY	0.0	0.0	}	DUMMY
20084	DUMMY	0.0	0.0	int main() {	DUMMY
20085	read n	N/A	N/A	cin >> n ;	cin >> n ;
20086	decrement n and loop further , while n > 0	N/A	N/A	while ( n -- )	while ( n -- )
20087	read from the input to p , q and b	N/A	N/A	cin >> p >> q >> b ;	cin >> p >> q >> b ;
20088	declare long long variable tmp = gcd ( p , q )	N/A	N/A	long long tmp = gcd ( p , q ) ;	long long tmp = gcd ( p, q ) ;
20089	divide p by tmp	N/A	N/A	p /= tmp ;	p /= tmp ;
20090	divide q by tmp	N/A	N/A	q /= tmp ;	q /= tmp ;
20091	create long long div = gcd of b and q	N/A	N/A	long long div = gcd ( b , q ) ;	long long div = gcd ( b, q ) ;
20092	while div = ( gcd ( b , q ) ! = 1 )	N/A	N/A	while ( ( div = gcd ( b , q ) ) != 1 )	while ( div == ( gcd ( b, q )!= 1 ) )
20093	while q % div is 0 , divide q by div	N/A	N/A	while ( q % div == 0 ) q /= div ;	while ( q % div == 0 ) q /= div ;
20094	if q is 1	N/A	N/A	if ( q == 1 )	if ( q == 1 )
20095	print " Finite "	N/A	N/A	cout << " Finite " << endl ;	cout << " Finite\n " ;
20096	else	N/A	N/A	else	else
20097	print " Infinite "	N/A	N/A	cout << " Infinite " << endl ;	cout << " Infinite\n " ;
20098	DUMMY	0.0	0.0	}	DUMMY
20099	DUMMY	0.0	0.0	return 0;	DUMMY
20100	DUMMY	0.0	0.0	}	DUMMY
20101	long long function gcd with long long arguments a and b	N/A	N/A	long long gcd ( long long a , long long b )	long long gcd ( long long a, long long b )
20102	while b > 0	N/A	N/A	while ( b > 0 )	while ( b > 0 )
20103	a = a modulo b	N/A	N/A	a %= b ;	a = a % b ;
20104	swap a and b	N/A	N/A	swap ( a , b ) ;	swap ( a, b ) ;
20105	DUMMY	0.0	0.0	}	DUMMY
20106	return a	N/A	N/A	return a ;	return a ;
20107	DUMMY	0.0	0.0	}	DUMMY
20108	declare string sy = " Finite \ n "	N/A	N/A	string sy = " Finite\n " ;	string sy = " Finite\n " ;
20109	declare string sn = " Infinite \ n "	N/A	N/A	string sn = " Infinite\n " ;	string sn = " Infinite\n " ;
20110	create map m of long long pairs to chars	N/A	N/A	map < pair < long long , long long > , char > m ;	map < pair < long long, char > m ;
20111	void function solve	N/A	N/A	void solve ( )	void solve ( )
20112	create int n	N/A	N/A	int n ;	int n ;
20113	read n	N/A	N/A	cin >> n ;	cin >> n ;
20114	loop i from 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
20115	create long longs p , q and b	N/A	N/A	long long p , q , b ;	long long p, q, b ;
20116	read input to p , q and b	N/A	N/A	cin >> p >> q >> b ;	cin >> p >> q >> b ;
20117	p = p modulo q	N/A	N/A	p %= q ;	p %= q ;
20118	declare long long g = gcd of p and q	N/A	N/A	long long g = gcd ( p , q ) ;	long long g = gcd ( p, q ) ;
20119	divide p by g	N/A	N/A	p /= g ;	p /= g ;
20120	divide q by g	N/A	N/A	q /= g ;	q /= g ;
20121	if p = 0	N/A	N/A	if ( p == 0 )	if ( p == 0 )
20122	print sy	N/A	N/A	cout << sy ;	cout << sy << endl ;
20123	go to the start of the loop	N/A	N/A	continue ;	continue ;
20124	DUMMY	0.0	0.0	}	DUMMY
20125	if pair { q , b } is present in m	N/A	N/A	if ( m . find ( { q , b } ) != m . end ( ) )	if ( m. find ( pair < q, b ) == m. end ( ) )
20126	if m [ { q , b } ] ! = 0	N/A	N/A	if ( m [ { q , b } ] )	if ( m [ { q, b } ]!= 0 )
20127	print sy	N/A	N/A	cout << sy ;	cout << sy << endl ;
20128	else	N/A	N/A	else	else
20129	print sn	N/A	N/A	cout << sn ;	cout << sn << endl ;
20130	continue the loop	N/A	N/A	continue ;	continue ;
20131	DUMMY	0.0	0.0	}	DUMMY
20132	declare long long q1 = q	N/A	N/A	long long q1 = q ;	long long q1 = q ;
20133	change g to gcd ( q , b )	N/A	N/A	g = gcd ( q , b ) ;	g = gcd ( q, b ) ;
20134	while g > 1	N/A	N/A	while ( g > 1 )	while ( g > 1 )
20135	while q % g = 0	N/A	N/A	while ( q % g == 0 ) q /= g ;	while ( q % g == 0 )
20136	set g to gcd ( q , b )	N/A	N/A	g = gcd ( q , b ) ;	g = gcd ( q, b ) ;
20137	DUMMY	0.0	0.0	}	DUMMY
20138	if q = 1	N/A	N/A	if ( q == 1 )	if ( q == 1 )
20139	assign true to m [ { q1 , b } ]	N/A	N/A	m [ { q1 , b } ] = true ;	m [ { q1, b } ] = true ;
20140	print sy	N/A	N/A	cout << sy ;	cout << sy << endl ;
20141	else	N/A	N/A	else	else
20142	assign false to m [ { q1 , b } ]	N/A	N/A	m [ { q1 , b } ] = false ;	m [ { q1, b } ] = false ;
20143	print sn	N/A	N/A	cout << sn ;	cout << sn << endl ;
20144	DUMMY	0.0	0.0	}	DUMMY
20145	DUMMY	0.0	0.0	}	DUMMY
20146	DUMMY	0.0	0.0	}	DUMMY
20147	DUMMY	0.0	0.0	int main() {	DUMMY
20148	initialize random number generator using 555 as a seed	N/A	N/A	srand ( 555 ) ;	srand ( 555, 0 ) ;
20149	invoke function solve	N/A	N/A	solve ( ) ;	solve ( ) ;
20150	DUMMY	0.0	0.0	}	DUMMY
20151	n = integer	N/A	N/A	int n ;	int n ;
20152	p , q , b = long long	N/A	N/A	long long p , q , b ;	long long p, q, b ;
20153	DUMMY	0.0	0.0	int main() {	DUMMY
20154	read n	N/A	N/A	cin >> n ;	cin >> n ;
20155	while decrement n	N/A	N/A	while ( n -- )	while ( n -- )
20156	read p , q , b	N/A	N/A	cin >> p >> q >> b ;	cin >> p >> q >> b ;
20157	if p modulo q is 0	N/A	N/A	if ( p % q == 0 )	if ( p % q == 0 )
20158	print Finite	N/A	N/A	cout << " Finite\n " ;	cout << " Finite\n " ;
20159	continue iteration	N/A	N/A	continue ;	continue ;
20160	DUMMY	0.0	0.0	}	DUMMY
20161	q = q / gcd of p and q	N/A	N/A	q /= __gcd ( p , q ) ;	q = q / gcd ( p, q ) ;
20162	g = long long	N/A	N/A	long long g ;	long long g ;
20163	while 1	N/A	N/A	while ( 1 )	while ( 1 )
20164	g = gcd of q and b	N/A	N/A	g = __gcd ( q , b ) ;	g = gcd ( q, b ) ;
20165	if g is 1 , break loop	N/A	N/A	if ( g == 1 ) break ;	if ( g == 1 ) break ;
20166	while q modulo g is 0 , q = q / g	N/A	N/A	while ( q % g == 0 ) q /= g ;	while ( q % g == 0 ) q /= g ;
20167	DUMMY	0.0	0.0	}	DUMMY
20168	if q is not 1	N/A	N/A	if ( q != 1 )	if ( q!= 1 )
20169	print Infinite	N/A	N/A	cout << " Infinite\n " ;	cout << " Infinite\n " ;
20170	else	N/A	N/A	else	else
20171	print Finite	N/A	N/A	cout << " Finite\n " ;	cout << " Finite " << endl ;
20172	DUMMY	0.0	0.0	}	DUMMY
20173	DUMMY	0.0	0.0	}	DUMMY
20174	N = integer	N/A	N/A	int N ;	int N ;
20175	P , Q , B = long long	N/A	N/A	long long P , Q , B ;	long long P, Q, B ;
20176	in the function gcd that takes long long x , y and returns long long	N/A	N/A	long long gcd ( long long x , long long y )	long long gcd ( long long x, long long y )
20177	if y is 0 , return x	N/A	N/A	if ( y == 0 ) return x ;	if ( y == 0 ) return x ;
20178	return gcd of y and x modulo y	N/A	N/A	return gcd ( y , x % y ) ;	return gcd ( y, x % y ) ;
20179	DUMMY	0.0	0.0	}	DUMMY
20180	DUMMY	0.0	0.0	int main() {	DUMMY
20181	read N	N/A	N/A	cin >> N ;	cin >> N ;
20182	while decrement N	N/A	N/A	while ( N -- )	while ( N -- )
20183	read P , Q , B	N/A	N/A	cin >> P >> Q >> B ;	cin >> P >> Q >> B ;
20184	P = P modulo Q	N/A	N/A	P %= Q ;	P %= Q ;
20185	G = long long with G = gcd of P and Q	N/A	N/A	long long G = gcd ( P , Q ) ;	long long G = gcd ( P, Q ) ;
20186	Q = Q / G	N/A	N/A	Q /= G ;	Q = Q / G ;
20187	C = long long with C = gcd of B and Q	N/A	N/A	long long C = gcd ( B , Q ) ;	long long C = gcd ( B, Q ) ;
20188	while C is not 1	N/A	N/A	while ( C != 1 )	while ( C!= 1 )
20189	Q = Q / C	N/A	N/A	Q /= C ;	Q = Q / C ;
20190	C = gcd of C and Q	N/A	N/A	C = gcd ( C , Q ) ;	C = gcd ( C, Q ) ;
20191	DUMMY	0.0	0.0	}	DUMMY
20192	if Q is not 1	N/A	N/A	if ( Q != 1 )	if ( Q!= 1 )
20193	print Infinite	N/A	N/A	cout << " Infinite\n " ;	cout << " Infinite\n " ;
20194	else	N/A	N/A	else	else
20195	print Finite	N/A	N/A	cout << " Finite\n " ;	cout << " Finite " << endl ;
20196	DUMMY	0.0	0.0	}	DUMMY
20197	DUMMY	0.0	0.0	return 0;	DUMMY
20198	DUMMY	0.0	0.0	}	DUMMY
20199	DUMMY	0.0	0.0	int main() {	DUMMY
20200	declare long longs n , p , q and b	N/A	N/A	long long n , p , q , b ;	long long n, p, q, b ;
20201	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
20202	for integer i = 1 to n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
20203	read p , q and b from the input	N/A	N/A	cin >> p >> q >> b ;	cin >> p >> q >> b ;
20204	declare long long variable t = __gcd of p and q	N/A	N/A	long long t = __gcd ( p , q ) ;	long long t = __gcd ( p, q ) ;
20205	divide q by t	N/A	N/A	q /= t ;	q /= t ;
20206	assign b to t	N/A	N/A	t = b ;	t = b ;
20207	while q ! = 1	N/A	N/A	while ( q != 1 )	while ( q!= 1 )
20208	assign result of __gcd ( q , t ) to t	N/A	N/A	t = __gcd ( q , t ) ;	t = __gcd ( q, t ) ;
20209	divide q by t	N/A	N/A	q /= t ;	q /= t ;
20210	break if t = 1	N/A	N/A	if ( t == 1 ) break ;	if ( t == 1 ) break ;
20211	DUMMY	0.0	0.0	}	DUMMY
20212	if q = 1	N/A	N/A	if ( q == 1 )	if ( q == 1 )
20213	print " Finite \ n "	N/A	N/A	cout << " Finite\n " ;	cout << " Finite\n " ;
20214	else	N/A	N/A	else	else
20215	print " Infinite \ n "	N/A	N/A	cout << " Infinite\n " ;	cout << " Infinite\n " ;
20216	DUMMY	0.0	0.0	}	DUMMY
20217	DUMMY	0.0	0.0	}	DUMMY
20218	in the function freac	N/A	N/A	void freac ( ) { }	void freac ( )
20219	DX = array of const integers with DX = + 1 , 0 , - 1 , 0 , + 1 , + 1 , - 1 , - 1	N/A	N/A	const int DX [ ] = { + 1 , 0 , - 1 , 0 , + 1 , + 1 , - 1 , - 1 } ;	const int DX [ ] = { + 1, 0, - 1, - 0, + 1 } ;
20220	DX = array of const integers with DY = 0 , + 1 , 0 , - 1 , + 1 , - 1 , + 1 , - 1	N/A	N/A	const int DY [ ] = { 0 , + 1 , 0 , - 1 , + 1 , - 1 , + 1 , - 1 } ;	const int DY [ ] = { 0, + 1, 0, - 1, + 2, - 2, + - 1 } ;
20221	INF = const integer with INF = cast 1e9 + 123 from integer	N/A	N/A	const int INF = ( int ) 1e9 + 123 ;	const int INF = ( int ) 1e9 + 123 ;
20222	INFL = const long long with INFL = cast 1e18 + 123 from long long	N/A	N/A	const long long INFL = ( long long ) 1e18 + 123 ;	const long long INFL = 1e18 + 123 ;
20223	EPS = const double with EPS = 1e - 9	N/A	N/A	const double EPS = 1e-9 ;	const double EPS = 1e-9 ;
20224	in the function lifestyle	N/A	N/A	void lifestyle ( ) { }	void lifestyle ( )
20225	DUMMY	0.0	0.0	int main() {	DUMMY
20226	call lifestyle	N/A	N/A	lifestyle ( ) ;	lifestyle ( ) ;
20227	call freac	N/A	N/A	freac ( ) ;	freac ( ) ;
20228	n = integer	N/A	N/A	int n ;	int n ;
20229	p , q , b = long long	N/A	N/A	long long p , q , b ;	long long p, q, b ;
20230	read n	N/A	N/A	cin >> n ;	cin >> n ;
20231	while decrement n	N/A	N/A	while ( n -- )	while ( n -- )
20232	read p , q , b	N/A	N/A	cin >> p >> q >> b ;	cin >> p >> q >> b ;
20233	g = long long with g = gcd of p and q	N/A	N/A	long long g = __gcd ( p , q ) ;	long long g = gcd ( p, q ) ;
20234	q = q / g	N/A	N/A	q /= g ;	q = q / g ;
20235	while b is not 1	N/A	N/A	while ( b != 1 )	while ( b!= 1 )
20236	while q modulo b is 0 , q = q / b	N/A	N/A	while ( q % b == 0 ) q /= b ;	while ( q % b == 0 ) q /= b ;
20237	b = gcd of q and b	N/A	N/A	b = __gcd ( q , b ) ;	b = gcd ( q, b ) ;
20238	DUMMY	0.0	0.0	}	DUMMY
20239	if q is 1 print Finite else print Infinite	N/A	N/A	cout << ( ( q == 1 ) ? " Finite " : " Infinite " ) << endl ;	cout << ( q == 1? " Finite " : " Infinite " ) << endl ;
20240	DUMMY	0.0	0.0	}	DUMMY
20241	return false	N/A	N/A	return false ;	return false ;
20242	DUMMY	0.0	0.0	}	DUMMY
20243	declare int n	N/A	N/A	int n ;	int n ;
20244	declare long longs p , q , and b	N/A	N/A	long long p , q , b ;	long long p, q, b ;
20245	declare long long NWD with long long x and long long y	N/A	N/A	long long NWD ( long long x , long long y )	long long NWD ( long long x, long long y )
20246	if y is 0	N/A	N/A	if ( y == 0 )	if ( y == 0 )
20247	return x	N/A	N/A	return x ;	return x ;
20248	else	N/A	N/A	else	else
20249	return the NWD of y , and x mod y	N/A	N/A	return NWD ( y , x % y ) ;	return NWD ( y, x % y ) ;
20250	DUMMY	0.0	0.0	}	DUMMY
20251	DUMMY	0.0	0.0	int main() {	DUMMY
20252	input n	N/A	N/A	cin >> n ;	cin >> n ;
20253	loop i between 1 and n inclusive	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ )	for ( int i = 1 ; i <= n ; i ++ )
20254	input p , q , and b	N/A	N/A	cin >> p >> q >> b ;	cin >> p >> q >> b ;
20255	declare long long blep to be NWD of p and q	N/A	N/A	long long blep = NWD ( p , q ) ;	long long blep = NWD ( p, q ) ;
20256	divide q by q over blep	N/A	N/A	q /= blep ;	q /= blep ;
20257	set blep to NWD of q and b	N/A	N/A	blep = NWD ( q , b ) ;	blep = NWD ( q, b ) ;
20258	while blep is more than 1	N/A	N/A	while ( blep > 1 )	while ( blep > 1 )
20259	while q mod blep is zero , then set q to q over blep	N/A	N/A	while ( q % blep == 0 ) q /= blep ;	while ( q % blep == 0 ) q /= blep ;
20260	set blep to NWD of q and b	N/A	N/A	blep = NWD ( q , b ) ;	blep = NWD ( q, b ) ;
20261	DUMMY	0.0	0.0	}	DUMMY
20262	if q is greater than 1	N/A	N/A	if ( q > 1 )	if ( q > 1 )
20263	output " Infinite "	N/A	N/A	cout << " Infinite " << endl ;	cout << " Infinite\n " ;
20264	else	N/A	N/A	else	else
20265	output " Finite "	N/A	N/A	cout << " Finite " << endl ;	cout << " Finite\n " ;
20266	DUMMY	0.0	0.0	}	DUMMY
20267	DUMMY	0.0	0.0	return 0;	DUMMY
20268	DUMMY	0.0	0.0	}	DUMMY
20269	in function gcd taking two long longs a and b and returning a long long	N/A	N/A	long long gcd ( long long a , long long b )	long long gcd ( long long a, long long b )
20270	return __gcd of a and b	N/A	N/A	return __gcd ( a , b ) ;	return __gcd ( a, b ) ;
20271	DUMMY	0.0	0.0	}	DUMMY
20272	in function solve returning a bool	N/A	N/A	bool solve ( )	bool solve ( )
20273	p , q , b = long long	N/A	N/A	long long p , q , b ;	long long p, q, b ;
20274	read p then q then b	N/A	N/A	cin >> p >> q >> b ;	cin >> p >> q >> b ;
20275	if p is 0 then return true	N/A	N/A	if ( p == 0 ) return true ;	if ( p == 0 ) return true ;
20276	gc = long long with gc = gcd of p and q	N/A	N/A	long long gc = gcd ( p , q ) ;	long long gc = __gcd ( p, q ) ;
20277	set p to p / gc	N/A	N/A	p /= gc ;	p /= gc ;
20278	set q to q / gc	N/A	N/A	q /= gc ;	q /= gc ;
20279	x = long long	N/A	N/A	long long x ;	long long x ;
20280	loop while setting x to gcd of q and b and x is greater than 1	N/A	N/A	while ( ( x = gcd ( q , b ) ) > 1 )	while ( x = gcd ( q, b, x ) > 1 )
20281	loop while q mod x is 0 set q to q / x	N/A	N/A	while ( q % x == 0 ) q /= x ;	while ( q % x == 0 ) q /= x ;
20282	set x to gcd of q and b	N/A	N/A	x = gcd ( q , b ) ;	x = gcd ( q, b ) ;
20283	DUMMY	0.0	0.0	}	DUMMY
20284	return true if q is 1 else return false	N/A	N/A	return q == 1 ;	return q == 1 ;
20285	DUMMY	0.0	0.0	}	DUMMY
20286	DUMMY	0.0	0.0	int main() {	DUMMY
20287	t = int	N/A	N/A	int t ;	int t ;
20288	read t	N/A	N/A	cin >> t ;	cin >> t ;
20289	loop t times	N/A	N/A	while ( t -- )	while ( t -- )
20290	is = bool with is = solve	N/A	N/A	bool is = solve ( ) ;	bool is = solve ( ) ;
20291	print " Finite " if is is true else print " Infinte "	N/A	N/A	cout << ( is ? " Finite " : " Infinite " ) << ' \n ' ;	cout << ( is? " Finite " : " Infinte " ) << endl ;
20292	DUMMY	0.0	0.0	}	DUMMY
20293	DUMMY	0.0	0.0	return 0;	DUMMY
20294	DUMMY	0.0	0.0	}	DUMMY
20295	create long longs p , q , k	N/A	N/A	long long p , q , k ;	long long p, q, k ;
20296	declare gcd with long longs a , b as arguments , returning long long	N/A	N/A	long long gcd ( long long a , long long b )	long long gcd ( long long a, long long b )
20297	return a if b is 0 , else result of run gcd with b , a % b as arguments	N/A	N/A	return b == 0 ? a : gcd ( b , a % b ) ;	return b == 0? a : gcd ( b, a % b ) ;
20298	DUMMY	0.0	0.0	}	DUMMY
20299	declare inline rd with no arguments , returning long long	N/A	N/A	inline long long rd ( )	inline long long rd ( )
20300	create long longs x , f , with x = 0 , f = 1	N/A	N/A	long long x = 0 , f = 1 ;	long long x = 0, f = 1 ;
20301	create character ch with ch = getchar	N/A	N/A	char ch = getchar ( ) ;	char ch = getchar ( ) ;
20302	while ch is greater than ' 9 ' or ch is less than ' 0 '	N/A	N/A	while ( ch > ' 9 ' || ch < ' 0 ' )	while ( ch >'9'|| ch <'0')
20303	if ch is ' - ' , set f to - 1	N/A	N/A	if ( ch == ' - ' ) f = - 1 ;	if ( ch =='-') f = - 1 ;
20304	set ch to read character	N/A	N/A	ch = getchar ( ) ;	ch = getchar ( ) ;
20305	DUMMY	0.0	0.0	}	DUMMY
20306	while ch is greater than or equal to ' 0 ' and ch is less than or equal to ' 9 '	N/A	N/A	while ( ch >= ' 0 ' && ch <= ' 9 ' )	while ( ch >='0'&& ch <='9')
20307	set x to ( x bitshift left 1 ) + ( x bitshift left 3 ) + ch - ' 0 '	N/A	N/A	x = ( x << 1 ) + ( x << 3 ) + ch - ' 0 ' ;	x = ( x >> 1 ) + ( x << 3 ) + ch -'0';
20308	set ch to read character	N/A	N/A	ch = getchar ( ) ;	ch = getchar ( ) ;
20309	DUMMY	0.0	0.0	}	DUMMY
20310	return x * f from function	N/A	N/A	return x * f ;	return x * f ;
20311	DUMMY	0.0	0.0	}	DUMMY
20312	declare inline solve with no arguments , returning void	N/A	N/A	inline void solve ( )	inline void solve ( )
20313	set p to result of run rd , set q to result of run rd , set k to result of run rd	N/A	N/A	p = rd ( ) , q = rd ( ) , k = rd ( ) ;	p = rd ( ), q = rnd ( ) ), k = d ( ) ;
20314	create long long t with t = result of run gcd with p , q as arguments	N/A	N/A	long long t = gcd ( p , q ) ;	long long t = gcd ( p, q ) ;
20315	set q to q / t	N/A	N/A	q /= t ;	q /= t ;
20316	while ( set t to result of run gcd with k , q as arguments ) is not 1	N/A	N/A	while ( ( t = gcd ( k , q ) ) != 1 )	while ( gcd ( k, q )!= 1 )
20317	while ( q % t is 0 ) set q to q / t	N/A	N/A	while ( q % t == 0 ) q /= t ;	while ( q % t == 0 ) q /= t ;
20318	DUMMY	0.0	0.0	}	DUMMY
20319	print " Finite " if q is 1 , else " Infinite "	N/A	N/A	puts ( q == 1 ? " Finite " : " Infinite " ) ;	cout << ( q == 1? " Finite " : " Infinite " ) << endl ;
20320	DUMMY	0.0	0.0	}	DUMMY
20321	DUMMY	0.0	0.0	int main() {	DUMMY
20322	for T = result of run rd to T , decrementing T , run solve	N/A	N/A	for ( int T = rd ( ) ; T ; T -- ) solve ( ) ;	for ( long long T = rd ( T ) ; T ; T -- ) solve ( ) ;
20323	DUMMY	0.0	0.0	return 0;	DUMMY
20324	DUMMY	0.0	0.0	}	DUMMY
20325	in function compare taking two pointers to const void x1 and x2 and returning an int	N/A	N/A	int compare ( const void * x1 , const void * x2 )	int compare ( const void * x1, const void & x2 )
20326	return value of x1 as pointer to in - value of x2 as pointer to int	N/A	N/A	return ( * ( int * ) x1 - * ( int * ) x2 ) ;	return * x1 - * x2 ;
20327	DUMMY	0.0	0.0	}	DUMMY
20328	DUMMY	0.0	0.0	int main() {	DUMMY
20329	N = int	N/A	N/A	int N ;	int N ;
20330	final = int	N/A	N/A	int final ;	int final ;
20331	read N	N/A	N/A	cin >> N ;	cin >> N ;
20332	massiv = int array of size N	N/A	N/A	int massiv [ N ] ;	int massiv [ N ] ;
20333	d = int	N/A	N/A	int d ;	int d ;
20334	R = int	N/A	N/A	int R ;	int R ;
20335	for R = 0 to N	N/A	N/A	for ( R = 0 ; R < N ; R ++ )	for ( R = 0 ; R < N ; R ++ )
20336	read d	N/A	N/A	cin >> d ;	cin >> d ;
20337	set massiv [ R ] to d	N/A	N/A	massiv [ R ] = d ;	massiv [ R ] = d ;
20338	DUMMY	0.0	0.0	}	DUMMY
20339	call qsort on massiv , N , sizeof of int and compare	N/A	N/A	qsort ( massiv , N , sizeof ( int ) , compare ) ;	qsort ( massiv, N, sizeof ( int ) ) ;
20340	if N is even	N/A	N/A	if ( N % 2 == 0 )	if ( N % 2 == 0 )
20341	set final to massiv [ R / 2 - 1 ]	N/A	N/A	final = massiv [ R / 2 - 1 ] ;	final = massiv [ R / 2 - 1 ] ;
20342	else	N/A	N/A	else	else
20343	set final to massiv [ R / 2 ]	N/A	N/A	final = massiv [ R / 2 ] ;	final = massiv [ R / 2 ] ;
20344	DUMMY	0.0	0.0	}	DUMMY
20345	print final	N/A	N/A	cout << final << endl ;	cout << final << endl ;
20346	DUMMY	0.0	0.0	}	DUMMY
20347	DUMMY	0.0	0.0	int main() {	DUMMY
20348	declare long long n and an array of long longs arr with 1001 element	N/A	N/A	long long n , arr [ 1001 ] ;	long long n, arr [ 1001 ] ;
20349	read n	N/A	N/A	cin >> n ;	cin >> n ;
20350	for i from 0 to n exclusive , read arr [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;	for ( long long i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }
20351	sort arr	N/A	N/A	sort ( arr , arr + n ) ;	sort ( arr, arr + n ) ;
20352	if n is even	N/A	N/A	if ( n % 2 == 0 )	if ( n % 2 == 0 )
20353	print arr [ ( n / 2 ) - 1 ]	N/A	N/A	cout << arr [ ( n / 2 ) - 1 ] << endl ;	cout << arr [ ( n / 2 ) - 1 ] << endl ;
20354	else	N/A	N/A	else	else
20355	print arr [ n / 2 ]	N/A	N/A	cout << arr [ n / 2 ] << endl ;	cout << arr [ n / 2 ] << endl ;
20356	DUMMY	0.0	0.0	return 0;	DUMMY
20357	DUMMY	0.0	0.0	}	DUMMY
20358	DUMMY	0.0	0.0	int main() {	DUMMY
20359	create integer array a with size 1005	N/A	N/A	int a [ 1005 ] ;	int a [ 1005 ] ;
20360	create integer n	N/A	N/A	int n ;	int n ;
20361	create integer sum with sum = 0	N/A	N/A	int sum = 0 ;	int sum = 0 ;
20362	read n	N/A	N/A	cin >> n ;	cin >> n ;
20363	for i = 0 to n exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }
20364	sort elements from a to a + n	N/A	N/A	sort ( a , a + n ) ;	sort ( a, a + n ) ;
20365	if n % 2	N/A	N/A	if ( n % 2 )	if ( n % 2 )
20366	print a [ n / 2 ] print newline	N/A	N/A	cout << a [ n / 2 ] << endl ;	cout << a [ n / 2 ] << endl ;
20367	else	N/A	N/A	else	else
20368	print a [ n / 2 - 1 ] print newline	N/A	N/A	cout << a [ n / 2 - 1 ] << endl ;	cout << a [ n / 2 - 1 ] << endl ;
20369	DUMMY	0.0	0.0	}	DUMMY
20370	create constant integer N with N = 100010	N/A	N/A	const int N = 100010 ;	const int N = 100010 ;
20371	create integer array a with size N	N/A	N/A	int a [ N ] ;	int a [ N ] ;
20372	DUMMY	0.0	0.0	int main() {	DUMMY
20373	create integer N	N/A	N/A	int n ;	int n ;
20374	read n	N/A	N/A	cin >> n ;	cin >> n ;
20375	for i = 1 to n inclusive , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
20376	sort elements from a + 1 to a + n + 1	N/A	N/A	sort ( a + 1 , a + n + 1 ) ;	sort ( a + 1, a + n + 1 ) ;
20377	print a [ ( n + 1 ) / 2 ] print " \ n "	N/A	N/A	cout << a [ ( n + 1 ) / 2 ] << " \n " ;	cout << a [ ( n + 1 ) / 2 ] << " \n " ;
20378	DUMMY	0.0	0.0	return 0;	DUMMY
20379	DUMMY	0.0	0.0	}	DUMMY
20380	DUMMY	0.0	0.0	int main() {	DUMMY
20381	n = int	N/A	N/A	int n ;	int n ;
20382	read n	N/A	N/A	cin >> n ;	cin >> n ;
20383	v = vector of int	N/A	N/A	vector < int > v ;	vector < int > v ;
20384	for i = 0 to n exclusive	N/A	N/A	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )
20385	x = int	N/A	N/A	int x ;	int x ;
20386	read x	N/A	N/A	cin >> x ;	cin >> x ;
20387	add x at end of v	N/A	N/A	v . push_back ( x ) ;	v. push_back ( x ) ;
20388	DUMMY	0.0	0.0	}	DUMMY
20389	sort first n items of v in numeric ascending order	N/A	N/A	sort ( v . begin ( ) , v . begin ( ) + n , greater < int > ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
20390	turn = 0	N/A	N/A	int turn = 0 ;	int turn = 0 ;
20391	while size of v is not 1	N/A	N/A	while ( v . size ( ) != 1 )	while ( v. size ( )!= 1 )
20392	if turn is even	N/A	N/A	if ( turn % 2 == 0 )	if ( turn % 2 == 0 )
20393	erase first item of v	N/A	N/A	v . erase ( v . begin ( ) ) ;	v. erase ( v. begin ( ) + 1 ) ;
20394	else	N/A	N/A	else	else
20395	pop last item of v	N/A	N/A	v . pop_back ( ) ;	v. pop_back ( ) ;
20396	DUMMY	0.0	0.0	}	DUMMY
20397	turn = ( incremented value of turn ) modulo 2	N/A	N/A	turn = ( ++ turn ) % 2 ;	turn = ( turn ++ ) % 2 ;
20398	DUMMY	0.0	0.0	}	DUMMY
20399	print first item of v	N/A	N/A	cout << v . front ( ) << endl ;	cout << v. first << endl ;
20400	DUMMY	0.0	0.0	return 0;	DUMMY
20401	DUMMY	0.0	0.0	}	DUMMY
20402	DUMMY	0.0	0.0	int main() {	DUMMY
20403	create int n , a [ 1001 ]	N/A	N/A	int n , a [ 1001 ] ;	int n, a [ 1001 ] ;
20404	read n	N/A	N/A	cin >> n ;	cin >> n ;
20405	for i = 1 to n inclusive , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
20406	sort elements bewteen a + 1 and a + n + 1	N/A	N/A	sort ( a + 1 , a + n + 1 ) ;	sort ( a + 1, a + n + 1 ) ;
20407	if n is even	N/A	N/A	if ( n % 2 == 0 )	if ( n % 2 == 0 )
20408	print a [ n / 2 ]	N/A	N/A	cout << a [ n / 2 ] << endl ;	cout << a [ n / 2 ] << endl ;
20409	otherwise	N/A	N/A	else	else
20410	print a [ n / 2 + 1 ] and a newline	N/A	N/A	cout << a [ n / 2 + 1 ] << endl ;	cout << a [ n / 2 + 1 ] <<'\n';
20411	DUMMY	0.0	0.0	}	DUMMY
20412	create long int array arr with size 1001	N/A	N/A	long int arr [ 1001 ] ;	long int arr [ 1001 ] ;
20413	DUMMY	0.0	0.0	int main() {	DUMMY
20414	create integers n , i and mid	N/A	N/A	int n , i , mid ;	int n, i, mid ;
20415	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
20416	for i from 0 to n exclusive , read arr [ i ]	N/A	N/A	for ( i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }	for ( i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }
20417	sort arr	N/A	N/A	sort ( arr , arr + n ) ;	sort ( arr, arr + n ) ;
20418	mid = n / 2 rounded up	N/A	N/A	mid = ceil ( ( double ) n / 2 ) ;	mid = ceil ( n / 2 ) ;
20419	print arr [ mid - 1 ]	N/A	N/A	cout << arr [ mid - 1 ] << endl ;	cout << arr [ mid - 1 ] << endl ;
20420	DUMMY	0.0	0.0	}	DUMMY
20421	maxn = const integer with maxn = 1e3 + 10	N/A	N/A	const int maxn = 1e3 + 10 ;	const int maxn = 1e3 + 10 ;
20422	DUMMY	0.0	0.0	int main() {	DUMMY
20423	n = integer	N/A	N/A	int n ;	int n ;
20424	a = integer array of size maxn	N/A	N/A	int a [ maxn ] ;	int a [ maxn ] ;
20425	read n	N/A	N/A	cin >> n ;	cin >> n ;
20426	for i = 1 to n , read a [ i ]	N/A	N/A	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;	for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;
20427	sort a + 1 and a + n + 1	N/A	N/A	sort ( a + 1 , a + n + 1 ) ;	sort ( a + 1, a + n + 1 ) ;
20428	print a [ ( n + 1 ) / 2 ]	N/A	N/A	cout << a [ ( n + 1 ) / 2 ] << endl ;	cout << a [ ( n + 1 ) / 2 ] << endl ;
20429	DUMMY	0.0	0.0	return 0;	DUMMY
20430	DUMMY	0.0	0.0	}	DUMMY
20431	DUMMY	0.0	0.0	int main() {	DUMMY
20432	declare integer variable n	N/A	N/A	int n ;	int n ;
20433	read input to n	N/A	N/A	cin >> n ;	cin >> n ;
20434	declare vector of integers a with size n	N/A	N/A	vector < int > a ( n ) ;	vector < int > a ( n ) ;
20435	for i from 0 to n exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
20436	sort a	N/A	N/A	sort ( a . begin ( ) , a . end ( ) ) ;	sort ( a. begin ( ), a. end ( ) ) ;
20437	create integer idx = ( length of a - 1 ) / 2	N/A	N/A	int idx = ( a . size ( ) - 1 ) / 2 ;	int idx = ( a. size ( ) - 1 ) / 2 ;
20438	print a [ idx ]	N/A	N/A	cout << a [ idx ] << endl ;	cout << a [ idx ] << endl ;
20439	DUMMY	0.0	0.0	return 0;	DUMMY
20440	DUMMY	0.0	0.0	}	DUMMY
20441	DUMMY	0.0	0.0	int main() {	DUMMY
20442	let int n	N/A	N/A	int n ;	int n ;
20443	read n	N/A	N/A	cin >> n ;	cin >> n ;
20444	create int array a of size n	N/A	N/A	int a [ n ] ;	int a [ n ] ;
20445	for i = 0 to n exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;
20446	for i = 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
20447	for j = 0 to n - i - 1 exclusive	N/A	N/A	for ( int j = 0 ; j < n - i - 1 ; j ++ )	for ( int j = 0 ; j < n - i - 1 ; j ++ )
20448	if a [ j ] is greater than a [ j + 1 ] , swap values between a [ j ] and a [ j + 1 ]	N/A	N/A	if ( a [ j ] > a [ j + 1 ] ) { swap ( a [ j ] , a [ j + 1 ] ) ; }	if ( a [ j ] > a [ i + 1 ] ) { swap ( arr [ i ], arr [ j + i ] ) ; }
20449	DUMMY	0.0	0.0	}	DUMMY
20450	DUMMY	0.0	0.0	}	DUMMY
20451	if n modulo 2 is 0	N/A	N/A	if ( n % 2 == 0 )	if ( n % 2 == 0 )
20452	print a [ n / 2 - 1 ]	N/A	N/A	cout << a [ n / 2 - 1 ] << endl ;	cout << a [ n / 2 - 1 ] << endl ;
20453	else	N/A	N/A	else	else
20454	print a [ n / 2 ]	N/A	N/A	cout << a [ n / 2 ] << endl ;	cout << a [ n / 2 ] << endl ;
20455	DUMMY	0.0	0.0	}	DUMMY
20456	DUMMY	0.0	0.0	return 0;	DUMMY
20457	DUMMY	0.0	0.0	}	DUMMY
20458	DUMMY	0.0	0.0	int main() {	DUMMY
20459	let int n and int array a of size 1110	N/A	N/A	int n , a [ 1110 ] ;	int n, a [ 1110 ] ;
20460	read n	N/A	N/A	cin >> n ;	cin >> n ;
20461	for i = 0 to n exclusive , read a [ i ]	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }
20462	sort array a	N/A	N/A	sort ( a , a + n ) ;	sort ( a, a + n ) ;
20463	print a [ ( n - 1 ) / 2 ]	N/A	N/A	cout << a [ ( n - 1 ) / 2 ] << endl ;	cout << a [ ( n - 1 ) / 2 ] << endl ;
20464	DUMMY	0.0	0.0	return 0;	DUMMY
20465	DUMMY	0.0	0.0	}	DUMMY
20466	DUMMY	0.0	0.0	int main() {	DUMMY
20467	create int n	N/A	N/A	int n ;	int n ;
20468	read n	N/A	N/A	cin >> n ;	cin >> n ;
20469	create vector of integers v with size n	N/A	N/A	vector < int > v ( n ) ;	vector < int > v ( n ) ;
20470	read n elements into v	N/A	N/A	for ( int i = 0 ; i < n ; i ++ ) { cin >> v [ i ] ; }	for ( int i = 0 ; i < n ; i ++ ) cin >> v [ i ] ;
20471	sort v	N/A	N/A	sort ( v . begin ( ) , v . end ( ) ) ;	sort ( v. begin ( ), v. end ( ) ) ;
20472	for i from 0 to n - 1 exclusive	N/A	N/A	for ( int i = 0 ; i < n - 1 ; i ++ )	for ( int i = 0 ; i < n - 1 ; i ++ )
20473	if i is odd	N/A	N/A	if ( i % 2 != 0 )	if ( i % 2!= 0 )
20474	remove first element from v	N/A	N/A	v . erase ( v . begin ( ) ) ;	v. erase ( v. begin ( ) ) ;
20475	else	N/A	N/A	else	else
20476	remove the last element from v	N/A	N/A	v . pop_back ( ) ;	v. pop_back ( ) ;
20477	DUMMY	0.0	0.0	}	DUMMY
20478	DUMMY	0.0	0.0	}	DUMMY
20479	print the first element of v	N/A	N/A	cout << v [ 0 ] << endl ;	cout << v. first << endl ;
20480	DUMMY	0.0	0.0	}	DUMMY
