create long long array a with size 202000	long long a [ 202000 ] ;
	long long a [ 202000 ] ;	1
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
create integer n	int n ;
	int n ;	1
read n	cin >> n ;
	cin >> n ;	1
for i = 1 to i is less than or equal to ( n bitshift left 1 ) , incrementing i , read a [ i ]	for ( int i = 1 ; i <= ( n << 1 ) ; i ++ ) cin >> a [ i ] ;
	for ( int i = 1 ; i <= ( n << 1 ) ; ++ i ) { cin >> a [ i ] ; }	NA
sort elements from a + 1 to a + 1 + n + n	sort ( a + 1, a + 2 + n + n ) ;
	sort ( a + 1 , a + 1 + n + n ) ;	NA
create long long s with s = ( s , ( a [ n ] - a [ 1 ] ) * ( a [ n bitshift left 1 ] - a [ n + 1 ] ) )	long long s = ( long long ) ( s, ( a [ n ] - a [ 1 ] ) * ( ( ( n << 1 ] - A [ n + i ] ) ) ) ;
	long long s = ( s , ( a [ n ] - a [ 1 ] ) * ( a [ n << 1 ] - a [ n + 1 ] ) ) ;	NA
for i = 2 to n inclusive , set s to minimum of ( s and ( a [ n bitshift left 1 ] - a [ 1 ] ) * ( a [ n + i - 1 ] - a [ i ] )	for ( int i = 2 ; i <= n ; i ++ ) { s = min ( s, ( a [ n << 1 ] - a [ 1 ] ) * ( ( n + i - 1 ] + a [ i ] ) ) ) ; }
	for ( int i = 2 ; i <= n ; i ++ ) { s = min ( s , ( a [ n << 1 ] - a [ 1 ] ) * ( a [ n + i - 1 ] - a [ i ] ) ) ; }	NA
print s print newline	cout << s << endl ;
	cout << s << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
