a = int array of size 3 with all values set to 0	int a [ 3 ] = { 0 } ;
	int a [ 3 ] = { 0 } ;	1
dp = int array of size 10000	int dp [ 10000 ] ;
	int dp [ 10000 ] ;	1
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
n = int	int n ;
	int n ;	1
read n then a [ 0 ] then a [ 1 ] then a [ 2 ]	cin >> n >> a [ 0 ] >> a1 ] >> dp [ 2 ] ;
	cin >> n >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ;	NA
set all values of dp to - 100	memset ( dp, - 100, sizeof dp ) ;
	memset ( dp , - 100 , sizeof ( dp ) ) ;	NA
set dp [ 0 ] to 0	dp [ 0 ] = 0 ;
	dp [ 0 ] = 0 ;	1
for i = 0 to 3	for ( int i = 0 ; i < 3 ; i ++ )
	for ( int i = 0 ; i < 3 ; i ++ )	1
for j = a [ i ] to n inclusive set dp [ j ] to max of dp [ j ] and dp [ j - a [ i ] ] + 1	for ( int j = a [ i ] ; j <= n ; j ++ ) { dp [ j ] = max ( dp. begin ( ), dp. end ( ) + i ) ; }
	for ( int j = a [ i ] ; j <= n ; j ++ ) { dp [ j ] = max ( dp [ j ] , dp [ j - a [ i ] ] + 1 ) ; }	NA
}	}	}	DUMMY	DUMMY	DUMMY
print dp [ n ]	cout << dp [ n ] << endl ;
	cout << dp [ n ] << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
