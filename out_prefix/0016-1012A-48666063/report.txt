int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
n = long long	long long n ;
	long long n ;	1
while the loop reads n	while ( cin >> n )
	while ( cin >> n )	1
a = long long array of size 2 * n + 10	long long a [ 2 * n + 10 ] ;
	long long a [ 2 * n + 10 ] ;	1
for i = 0 to 2 * n exclusive , read a [ i ]	for ( long long i = 0 ; i < 2 * n ; i ++ ) { cin >> a [ i ] ; }
	for ( int i = 0 ; i < 2 * n ; i ++ ) cin >> a [ i ] ;	NA
sort a in ascending order	sort ( a, a + n ) ;
	sort ( a , a + 2 * n ) ;	NA
ans = long long = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] )	long long ans = ( long long ) ( a [ n - 1 ] - a [ 0 ] ) * ( ( long double ) a [ 2 * n - i ] - ( double ) b [ n ] ) ;
	long long ans = ( a [ n - 1 ] - a [ 0 ] ) * ( a [ 2 * n - 1 ] - a [ n ] ) ;	NA
for i = 1 to n exclusive , ans = the minimum value between ans and ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( a [ i + n - 1 ] - a [ i ] )	for ( long long i = 1 ; i < n ; i ++ ) { ans = min ( ans, ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( b [ i + n - i ] - b [ 1 ] ) ) ; }
	for ( int i = 1 ; i < n ; i ++ ) ans = min ( ans , ( a [ 2 * n - 1 ] - a [ 0 ] ) * ( a [ i + n - 1 ] - a [ i ] ) ) ;	NA
print ans	cout << ans << endl ;
	cout << ans << endl ;	1
}	}	}	DUMMY	DUMMY	DUMMY
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
