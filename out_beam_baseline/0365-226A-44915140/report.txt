m = long long	long long m ;	long long m ;	1
in function pw taking two long longs x and p and returning a long long	long long pw ( long long x, long long p )	long long pw ( long long x , long long p )	NA
if p is 0 return 1 mod m	if ( p == 0 ) return 1 % m ;	if ( ! p ) return 1 % m ;	NA
z = long long with z = pw of x and p / 2	long long z = pw ( x, p / 2 ) ;	long long z = pw ( x , p / 2 ) ;	NA
set z to z * z	z *= z ;	z *= z ;	1
set z to z mod m	z = z % m ;	z %= m ;	2
if p is even return z	if ( p % 2 == 0 ) return z ;	if ( p % 2 == 0 ) return z ;	1
set z to z * x	z *= x ;	z *= x ;	1
set z to z mod m	z = z % m ;	z %= m ;	2
return z	return z ;	return z ;	1
}	}	}	DUMMY	DUMMY	DUMMY
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
n = long long	long long n ;	long long n ;	1
raed n then m	cin >> n >> m ;	cin >> n >> m ;	1
res = long long with res = 2 * ( ( pw of 3 and n ) - 1 ) / 2	long long res = 2 * ( ( pw ( 3, n ) ) - 1 ) / 2 ;	long long res = 2 * ( pw ( 3 , n ) - 1 ) / ( 2 ) ;	NA
set res to res mod m	res %= m ;	res %= m ;	1
increment res by m	res += m ;	res += m ;	1
set res to res mod m	res %= m ;	res %= m ;	1
print res	cout << res << endl ;	cout << res << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
