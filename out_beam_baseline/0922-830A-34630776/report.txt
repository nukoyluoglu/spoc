int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
create long long n , k , p	long long n, k, p ;	long long n , k , p ;	NA
read n read k read p	cin >> n >> k >> p ;	cin >> n >> k >> p ;	1
create long long arrays pe , ke , with pe size 1001 , ke size 2002	long long pe [ 1001 ], ke [ 2002 ] ;	long long pe [ 1001 ] , ke [ 2002 ] ;	NA
for a = 0 to n exclusive , read pe [ a ]	for ( int a = 0 ; a < n ; a ++ ) { cin >> pe [ a ] ; }	for ( int a = 0 ; a < n ; a ++ ) cin >> pe [ a ] ;	2
for a = 0 to k exclusive , read ke [ a ]	for ( int a = 0 ; a < k ; a ++ ) { cin >> ke [ a ] ; }	for ( int a = 0 ; a < k ; a ++ ) cin >> ke [ a ] ;	2
sort elements from pe to pe + n	sort ( pe, pe + n ) ;	sort ( pe , pe + n ) ;	NA
sort elements from ke to pe + k	sort ( ke, ke + k ) ;	sort ( ke , ke + k ) ;	NA
create long long mins with mins = 99999999999999	long long mins = 99999999999999 ;	long long mins = 99999999999999 ;	1
for a = 0 to k - n + 1 exclusive	for ( int a = 0 ; a < k - n + 1 ; a ++ )	for ( int a = 0 ; a < k - n + 1 ; a ++ )	1
create long long tmp with tmp = 0	long long tmp = 0 ;	long long tmp = 0 ;	1
for b = 0 to n exclusive , set tmp to maximum of tmp and absolute value of ( pe [ b ] - ke [ a + b ] ) + absolute value of ( ke [ a + b ] - p )	for ( b = 0 ; b < n ; b ++ ) { tmp = max ( tmp, abs ( pe [ b ] - ke [ a + b ] ) + abs ( ke [ ( b ] + p ) ) ; }	for ( int b = 0 ; b < n ; b ++ ) tmp = max ( tmp , abs ( pe [ b ] - ke [ a + b ] ) + abs ( ke [ a + b ] - p ) ) ;	NA
set mins to minimum of tmp and mins	mins = min ( tmp, mins ) ;	mins = min ( tmp , mins ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
print mins print newline	cout << mins << endl ;	cout << mins << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
