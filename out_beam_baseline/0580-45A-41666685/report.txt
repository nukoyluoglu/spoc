create a map from integers to strings with name m	map < int, string > m ;	map < int , string > m ;	NA
create iterator it for map of int to strings	map < int, string > :: iterator it ;	map < int , string > :: iterator it ;	NA
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
s = array of characters of size 20	char s [ 20 ] ;	char s [ 20 ] ;	1
declare integer variable n	int n ;	int n ;	1
m [ 0 ] = " January "	m [ 0 ] = " January " ;	m [ 0 ] = " January " ;	1
m [ 1 ] = " February "	m [ 1 ] = " February " ;	m [ 1 ] = " February " ;	1
m [ 2 ] = " March "	m [ 2 ] = " March " ;	m [ 2 ] = " March " ;	1
m [ 3 ] = " April "	m [ 3 ] = " April " ;	m [ 3 ] = " April " ;	1
m [ 4 ] = " May "	m [ 4 ] = " May " ;	m [ 4 ] = " May " ;	1
m [ 5 ] = " June "	m [ 5 ] = " June " ;	m [ 5 ] = " June " ;	1
m [ 6 ] = " July "	m [ 6 ] = " July " ;	m [ 6 ] = " July " ;	1
m [ 7 ] = " August "	m [ 7 ] = " August " ;	m [ 7 ] = " August " ;	1
m [ 8 ] = " September "	m [ 8 ] = " September " ;	m [ 8 ] = " September " ;	1
m [ 9 ] = " October "	m [ 9 ] = " October " ;	m [ 9 ] = " October " ;	1
m [ 10 ] = " November "	m [ 10 ] = " November " ;	m [ 10 ] = " November " ;	1
m [ 11 ] = " December "	m [ 11 ] = " December " ;	m [ 11 ] = " December " ;	1
while cin > > s > > n	while ( cin >> s >> n )	while ( cin >> s >> n )	1
create integer j with value 0	int j = 0 ;	int j = 0 ;	1
move it through m from the beginning	for ( it = m. begin ( ) ; it!= m. end ( ) - 1 ; it ++ )	for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ )	NA
increment j	j ++ ;	++ j ;	2
if it - > second = s . break	if ( it -> second == s ) break ;	if ( it -> second == s ) break ;	1
}	}	}	DUMMY	DUMMY	DUMMY
print m [ ( j + n - 1 ) % 12 ] and a new line	cout << m [ ( j + n - 1 ) % 12 ] << endl ;	cout << m [ ( j + n - 1 ) % 12 ] << endl ;	1
}	}	}	DUMMY	DUMMY	DUMMY
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
