int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
k = int	int k ;	int k ;	1
s = string	string s ;	string s ;	1
read k , s	cin >> k >> s ;	cin >> k >> s ;	1
count = array of 26 int filled with 0	int count [ 26 ] = { 0 } ;	int count [ 26 ] = { 0 } ;	1
for i = 0 to length of s exclusive increment count [ s [ i ] - ' a ' ]	for ( int i = 0 ; i < s. length ( ) ; i ++ ) { count [ s [ i ] -'a'] ++ ; }	for ( int i = 0 ; i < s . length ( ) ; ++ i ) { count [ s [ i ] - ' a ' ] += 1 ; }	NA
s1 = string	string s1 ;	string s1 ;	1
c = 0	c = 0 ;	int c = 0 ;	2
increment c while c < 26	while ( c < 26 ) { c ++ ; }	for ( ; c < 26 ; ++ c )	24
if count [ c ] modulo k not equal 0	if ( count [ c ] % k!= 0 )	if ( count [ c ] % k != 0 )	NA
break	break ;	break ;	1
else	else	else	1
append count [ c ] / k copies of ' a ' + c to s1	s1 += ( count [ c ] / k ) <<'a'+ c ;	s1 . append ( count [ c ] / k , ' a ' + c ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
if c is 26	if ( c == 26 )	if ( c == 26 )	1
while decremented value of k not equal 0 print s1	while ( k -- ) cout << s1 << endl ;	while ( k -- ) { cout << s1 ; }	5
print newline	cout << endl ;	cout << endl ;	1
else	else	else	1
print - 1	cout << - 1 << endl ;	cout << - 1 << endl ;	1
}	}	}	DUMMY	DUMMY	DUMMY
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
