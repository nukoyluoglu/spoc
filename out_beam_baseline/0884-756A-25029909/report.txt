int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
create int i , j and n	int i, j, n ;	int i , j , n ;	NA
set int arrays p , b and status of length 200000 to all 0	int p [ 200000 ] = { " 0 ", " b ", { " status " } = { 0 } ;	int p [ 200000 ] , b [ 200000 ] , status [ 200000 ] = { 0 } ;	NA
set count and result to 0	int count = 0, result = 0 ;	int count = 0 , result = 0 ;	NA
read n	cin >> n ;	cin >> n ;	1
for i = 0 to n exclusive	for ( int i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )	2
read p [ i ]	cin >> p [ i ] ;	cin >> p [ i ] ;	1
decrement p [ i ]	p [ i ] -- ;	p [ i ] -- ;	1
}	}	}	DUMMY	DUMMY	DUMMY
for i = 0 to n exclusive	for ( int i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )	2
read b [ i ]	cin >> b [ i ] ;	cin >> b [ i ] ;	1
if b [ i ] = 1 , increment count	if ( b [ i ] == 1 ) count ++ ;	if ( b [ i ] == 1 ) count ++ ;	1
}	}	}	DUMMY	DUMMY	DUMMY
if count is even , increment result	if ( count % 2 == 0 ) result ++ ;	if ( count % 2 == 0 ) result ++ ;	1
count = 0	count = 0 ;	count = 0 ;	1
if i = 0 to n exclusive	for ( int i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )	2
if status [ i ] equal to 0	if ( status [ i ] == 0 )	if ( status [ i ] == 0 )	1
assign 1 to status [ i ]	status [ i ] = 1 ;	status [ i ] = 1 ;	1
set t to p [ i ]	t = p [ i ] ;	int t = p [ i ] ;	2
while t different from 1	while ( t!= 1 )	while ( t != i )	NA
status [ t ] = 1	status [ t ] = 1 ;	status [ t ] = 1 ;	1
t = p [ t ]	t = p [ t ] ;	t = p [ t ] ;	1
}	}	}	DUMMY	DUMMY	DUMMY
add 1 to count	count ++ ;	count ++ ;	1
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
if count greater than 1 , set result to result + count	if ( count > 1 ) result += count ;	if ( count > 1 ) result += count ;	1
print result	cout << result << endl ;	cout << result << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
