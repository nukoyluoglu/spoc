function gcd with long long arguments a and b that returns long long	long long gcd ( long long a, long long b )	long long gcd ( long long a , long long b )	NA
if b = 0 , return a	if ( b == 0 ) return a ;	if ( b == 0 ) return a ;	1
return gcd ( b , a % b )	return gcd ( b, a % b ) ;	return gcd ( b , a % b ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
function lcm with long long arguments a and b that returns long long	long long lcm ( long long a, long long b )	long long lcm ( long long a , long long b )	NA
return a * b / gcd ( a , b )	return a * b / gcd ( a, b ) ;	return a * b / gcd ( a , b ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
create long longs i and j	long long i, j ;	long long i , j ;	NA
declare long long n	long long n ;	long long n ;	1
read n	cin >> n ;	cin >> n ;	1
create vectors of long long a and b with n elements each	vector < long long > a ( n, b ( n ) ;	vector < long long > a ( n ) , b ( n ) ;	NA
read n elements into a	for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;	for ( long long i = 0 ; i < ( n ) ; i ++ ) cin >> a [ i ] ;	45
read n elements into b	for ( int i = 0 ; i < n ; i ++ ) cin >> b [ i ] ;	for ( long long i = 0 ; i < ( n ) ; i ++ ) cin >> b [ i ] ;	45
declare long long variable sum = 0	long long sum = 0 ;	long long sum = 0 ;	1
add all elements of a to the sum one by one	for ( int i = 0 ; i < a. size ( ) ; i ++ ) { sum += a [ i ] ; }	for ( long long i = 0 ; i < ( n ) ; i ++ ) sum += a [ i ] ;	NA
sort array b	sort ( b, b + n ) ;	sort ( b . begin ( ) , b . end ( ) ) ;	NA
if sum is greater than b [ n - 1 ] + b [ n - 2 ]	if ( sum > n - 1 ] + b [ n - 2 ] )	if ( sum > b [ n - 1 ] + b [ n - 2 ] )	NA
print " NO " and a new line	cout << " NO " << endl ;	cout << " NO " << endl ;	1
else	else	else	1
print " YES " and a new line	cout << " YES " << endl ;	cout << " YES " << endl ;	1
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
