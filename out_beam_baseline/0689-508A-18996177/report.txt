create 2d ingeger arrays a , vis , with a size 1005 by 1005 , vis size 1005 by 1005	for ( int i = 0 ; i < 1005 && vis ; i ++ ) { a [ i ] [ 1005 ] = { 0 } ; }	int a [ 1005 ] [ 1005 ] , vis [ 1005 ] [ 1005 ] ;	NA
create integer ans	int ans ;	int ans ;	1
create integers n , m	int n, m ;	int n , m ;	NA
create 2d integer array fang with size 4 by 2 with fang = { 1 , 0 , - 1 , 0 , 0 , 1 , 0 , - 1 }	int fang [ 4 ] [ 2 ] = { 1, 0, - 1, " 0.0 ", " 1 ",'0 ', " -1 " } ;	int fang [ 4 ] [ 2 ] = { 1 , 0 , - 1 , 0 , 0 , 1 , 0 , - 1 } ;	NA
declare dfs with integers x , y as arguments , returning void	void dfs ( int x, int y )	void dfs ( int x , int y )	NA
increment ans	ans ++ ;	ans ++ ;	1
for i = 0 to 4 exclusive	for ( int i = 0 ; i < 4 ; i ++ )	for ( int i = 0 ; i < 4 ; ++ i )	3
create integer nx with nx = x + fang [ i ] [ 0 ]	int nx = x + fang [ i ] [ 0 ] ;	int nx = x + fang [ i ] [ 0 ] ;	1
create integer ny with ny = y + fang [ i ] [ 1 ]	int ny = y + fang [ i ] [ 1 ] ;	int ny = y + fang [ i ] [ 1 ] ;	1
if nx is greater than 0 and nx is less than or equal to n and ny is greater than 0 and ny is less than or equal to m and a [ nx ] [ ny ] and not vis [ nx ] [ ny ]	if ( nx > 0 and nx <= n and ny > 0 && ny <= m &&! vis [ nx ] [ ny ] )	if ( nx > 0 && nx <= n && ny > 0 && ny <= m && a [ nx ] [ ny ] && ! vis [ nx ] [ ny ] )	NA
set vis [ nx ] [ ny ] to 1	vis [ nx ] [ ny ] = 1 ;	vis [ nx ] [ ny ] = 1 ;	1
run dfs with nx , ny as arguments	dfs ( nx, ny ) ;	dfs ( nx , ny ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
create integers k , i , j	int k, i, j ;	int k , i , j ;	NA
while read n read m read k	while ( cin >> n >> m >> k )	while ( cin >> n >> m >> k )	1
set ans to 0	ans = 0 ;	ans = 0 ;	1
create integers x , y	int x, y ;	int x , y ;	NA
set bytes from a to size of a to value 0	memset ( a, 0, sizeof ( a ) ) ;	memset ( a , 0 , sizeof ( a ) ) ;	NA
create integer res with res = 0	int res = 0 ;	int res = 0 ;	1
for i = 1 to k inclusive	for ( int i = 1 ; i <= k ; i ++ )	for ( i = 1 ; i <= k ; ++ i )	7
read x read y	cin >> x >> y ;	cin >> x >> y ;	1
set a [ x ] [ y ] to 1	a [ x ] [ y ] = 1 ;	a [ x ] [ y ] = 1 ;	1
if not res	if (! res )	if ( ! res )	NA
increment ans	ans ++ ;	ans ++ ;	1
if ( a [ x ] [ y ] and a [ x + 1 ] [ y ] and a [ x ] [ y + 1 ] and a [ x + 1 ] [ y + 1 ] ) , set res to 1	if ( a [ x ] [ y ] ) { res = 1 ; }	if ( a [ x ] [ y ] && a [ x + 1 ] [ y ] && a [ x ] [ y + 1 ] && a [ x + 1 ] [ y + 1 ] ) res = 1 ;	NA
if ( a [ x ] [ y ] and a [ x + 1 ] [ y ] and a [ x ] [ y - 1 ] and a [ x + 1 ] [ y - 1 ] ) , set res to 1	if ( a [ x ] [ y ] ) { res = 1 ; }	if ( a [ x ] [ y ] && a [ x + 1 ] [ y ] && a [ x ] [ y - 1 ] && a [ x + 1 ] [ y - 1 ] ) res = 1 ;	NA
if ( a [ x ] [ y ] and a [ x - 1 ] [ y ] and a [ x ] [ y + 1 ] and a [ x - 1 ] [ y + 1 ] ) , set res to 1	if ( a [ x ] [ y ] ) { res = 1 ; }	if ( a [ x ] [ y ] && a [ x - 1 ] [ y ] && a [ x ] [ y + 1 ] && a [ x - 1 ] [ y + 1 ] ) res = 1 ;	NA
if ( a [ x ] [ y ] and a [ x - 1 ] [ y ] and a [ x ] [ y - 1 ] and a [ x - 1 ] [ y - 1 ] ) , set res to 1	if ( a [ x ] [ y ] ) { res = 1 ; }	if ( a [ x ] [ y ] && a [ x - 1 ] [ y ] && a [ x ] [ y - 1 ] && a [ x - 1 ] [ y - 1 ] ) res = 1 ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
if not res , set ans to 0	if (! res ) ans = 0 ;	if ( ! res ) ans = 0 ;	NA
print ans print newline	cout << ans << endl ;	cout << ans << endl ;	1
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
