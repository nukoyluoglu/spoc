let ret an array of long longs of length 50	long long ret [ 50 ] ;	long long ret [ 50 ] ;	1
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
let n , p ints	int n, p ;	int n , p ;	NA
read n and p	cin >> n >> p ;	cin >> n >> p ;	1
let ans , temp be long longs with ans = 1 , tmp = 0	long long ans = 1, tmp = 0 ;	long long ans = 1 , tmp = 0 ;	NA
for i = 0 to n exclusive	for ( int i = 0 ; i < n ; i ++ )	for ( int i = 0 ; i < n ; i ++ )	1
let s a string	string s ;	string s ;	1
read s	cin >> s ;	cin >> s ;	1
if s is half	if ( s == half )	if ( s == " half " )	8
set ret [ i ] to 1	ret [ i ] = 1 ;	ret [ i ] = 1 ;	1
otherwise	else	else	1
set ret [ i ] to 2 and increment tmp	ret [ i ] = 2, tmp ++ ;	ret [ i ] = 2 , tmp ++ ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
for i = n - 2 down to 0 inclusive	for ( int i = n - 2 ; i >= 0 ; i -- )	for ( int i = n - 2 ; i >= 0 ; i -- )	1
if ret [ i ] is 1	if ( ret [ i ] == 1 )	if ( ret [ i ] == 1 )	1
multiply ans by 2	ans *= 2 ;	ans = ans * 2 ;	2
otherwise	else	else	1
set ans to ans * 2 + 1	ans = ans * 2 + 1 ;	ans = ans * 2 + 1 ;	1
}	}	}	DUMMY	DUMMY	DUMMY
set ans to ans * p - tmp * ( p / 2 )	ans = ans * p - tmp * ( p / 2 ) ;	ans = ans * p - tmp * ( p / 2 ) ;	1
print ans	cout << ans << endl ;	cout << ans << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
