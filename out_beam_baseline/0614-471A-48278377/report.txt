create integer array mp with size 20	int mp [ 20 ] ;	int mp [ 20 ] ;	1
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
create integer n	int n ;	int n ;	1
create integer vector Q	vector < int > Q ;	vector < int > Q ;	1
set bytes from mp to size of mp to value 0	memset ( mp, 0, sizeof ( mp ) ) ;	memset ( mp , 0 , sizeof mp ) ;	NA
for i = 1 to 6 inclusive	for ( int i = 1 ; i <= 6 ; i ++ )	for ( int i = 1 ; i <= 6 ; i ++ )	1
create integer p	int p ;	int p ;	1
read p	cin >> p ;	cin >> p ;	1
increment mp [ p ]	mp [ p ] ++ ;	mp [ p ] ++ ;	1
add character p to end of Q	Q. push ( p ) ;	Q . push_back ( p ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
create integers flag1 , flag2 with flag1 = 0 , flag2 = 0	int flag1 = 0, flag2 = 0 ;	int flag1 = 0 , flag2 = 0 ;	NA
for i = 0 to size of Q exclusive	for ( int i = 0 ; i < Q. size ( ) ; i ++ )	for ( int i = 0 ; i < Q . size ( ) ; i ++ )	NA
if mp [ Q [ i ] ] is greater than or equal to 4 , set flag1 to 1	if ( mp [ Q [ i ] ] >= 4 ) flag1 = 1 ;	if ( mp [ Q [ i ] ] >= 4 ) { flag1 = 1 ; }	2
if mp [ Q [ i ] ] is 2 , set flag2 to 1	if ( mp [ Q [ i ] ] == 2 ) flag2 = 1 ;	if ( mp [ Q [ i ] ] == 2 ) { flag2 = 1 ; }	2
if mp [ Q [ i ] ] is 6	if ( mp [ Q [ i ] ] == 6 )	if ( mp [ Q [ i ] ] == 6 )	1
set flag1 to 1	flag1 = 1 ;	flag1 = 1 ;	1
set flag2 to 1	flag2 = 1 ;	flag2 = 1 ;	1
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
if flag1 is 1 and flag2 is 0	if ( flag1 == 1 && flag2 == 0 )	if ( flag1 == 1 and flag2 == 0 )	2
print " Bear \ n "	cout << " Bear\n " ;	cout << " Bear\n " ;	1
else if flag1 is 1 and flag2 is 1	else if ( flag1 == 1 && flag2 == 1 )	else if ( flag1 == 1 and flag2 == 1 )	2
print " Elephant \ n "	cout << " Elephant\n " ;	cout << " Elephant\n " ;	1
else	else	else	1
print " Alien \ n "	cout << " Alien\n " ;	cout << " Alien\n " ;	1
}	}	}	DUMMY	DUMMY	DUMMY
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
