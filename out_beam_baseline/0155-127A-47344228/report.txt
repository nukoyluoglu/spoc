double function dist with integer arguments x1 , y1 , x2 and y2	double dist ( int y1, int x2, int y2 )	double dist ( int x1 , int y1 , int x2 , int y2 )	NA
return square root of ( pow ( ( x1 - x2 ) , 2 ) + pow ( ( y1 - y2 ) , 2 ) )	return ( x1 - x2 ) + pow ( ( y1 - y2 ), 2 ) ) ;	return sqrt ( pow ( ( x1 - x2 ) , 2 ) + pow ( ( y1 - y2 ) , 2 ) ) ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
create integers n and k	int n, k ;	int n , k ;	NA
read n and k	cin >> n >> k ;	cin >> n >> k ;	1
declare boolean f = true	bool f = true ;	bool f = true ;	1
create integers x1 , y1 , x2 and y2	int x1, y1, x2, y2 ;	int x1 , y1 , x2 , y2 ;	NA
create double totDist	double totDist ;	double totDist ;	1
decrement n in a loop while n > 0	while ( n -- )	while ( n -- )	1
if f is true	if ( f )	if ( f )	1
read x1 and y1	cin >> x1 >> y1 ;	cin >> x1 >> y1 ;	1
set f to false	f = false ;	f = false ;	1
else	else	else	1
read x2 and y2	cin >> x2 >> y2 ;	cin >> x2 >> y2 ;	1
increase totDist by dist of ( x1 , y1 , x2 , y2 )	totDist += dist ( x1, y1, x2, y2 ) ;	totDist += dist ( x1 , y1 , x2 , y2 ) ;	NA
set x1 to x2	x1 = x2 ;	x1 = x2 ;	1
assign value of y2 to y1	y1 = y2 ;	y1 = y2 ;	1
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
create double r = totDist * k / 50 . 0	double r = totDist * k / 50.0 ;	double r = totDist * k / 50.0 ;	1
print fixed and r	cout << fixed << r << endl ;	cout << fixed << r << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
