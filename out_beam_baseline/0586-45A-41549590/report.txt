declare map from integer to string m	map < int, string > m ;	map < int , string > m ;	NA
declare map iterator from integer to string it	map < int, string > :: iterator it ;	map < int , string > :: iterator it ;	NA
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
declare character array s size 20	char s [ 20 ] ;	char s [ 20 ] ;	1
declare integer n	int n ;	int n ;	1
let m [ 0 ] be " January "	m [ 0 ] = " January " ;	m [ 0 ] = " January " ;	1
let m [ 1 ] be " February "	m [ 1 ] = " February " ;	m [ 1 ] = " February " ;	1
let m [ 2 ] be " March "	m [ 2 ] = " March " ;	m [ 2 ] = " March " ;	1
let m [ 3 ] be " April "	m [ 3 ] = " April " ;	m [ 3 ] = " April " ;	1
let m [ 4 ] be " May "	m [ 4 ] = " May " ;	m [ 4 ] = " May " ;	1
let m [ 5 ] be " June "	m [ 5 ] = " June " ;	m [ 5 ] = " June " ;	1
let m [ 6 ] be " July "	m [ 6 ] = " July " ;	m [ 6 ] = " July " ;	1
let m [ 7 ] be " August "	m [ 7 ] = " August " ;	m [ 7 ] = " August " ;	1
let m [ 8 ] be " September "	m [ 8 ] = " September " ;	m [ 8 ] = " September " ;	1
let m [ 9 ] be " October "	m [ 9 ] = " October " ;	m [ 9 ] = " October " ;	1
let m [ 10 ] be " November "	m [ 10 ] = " November " ;	m [ 10 ] = " November " ;	1
let m [ 11 ] be " December "	m [ 11 ] = " December " ;	m [ 11 ] = " December " ;	1
while read s , n	while ( cin >> s >> n )	while ( cin >> s >> n )	1
declare integer j = 0	int j = 0 ;	int j = 0 ;	1
for it = beginning of m to it is not end of m , incrementing it	for ( map < string, int > :: iterator it = m. begin ( ) ; it!= m. end ( ) - 1 ; ++ it )	for ( it = m . begin ( ) ; it != m . end ( ) ; it ++ )	NA
increment j	j ++ ;	++ j ;	2
if second element of it is s , end loop	if ( it -> second == s ) break ;	if ( it -> second == s ) break ;	1
}	}	}	DUMMY	DUMMY	DUMMY
print m [ ( j + n - 1 ) % 12 ] , newline	cout << m [ ( j + n - 1 ) % 12 ] << endl ;	cout << m [ ( j + n - 1 ) % 12 ] << endl ;	1
}	}	}	DUMMY	DUMMY	DUMMY
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
