create constant double PI with PI = 3 . 14159265358979323846264338327	const double PI = 3.14159265358979323846264338327 ;	const double PI = 3.14159265358979323846264338327 ;	1
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
create strings a , b	string a, b ;	string a , b ;	NA
read a read b	cin >> a >> b ;	cin >> a >> b ;	1
create integer vectors a1 , b1 with a1 initialized with 100020 , b1 initialized with 100020	vector < int > a1 ( 300020 ), b1 ( 100020 ) ;	vector < int > a1 ( 100020 ) , b1 ( 100020 ) ;	NA
for i = size of a - 1 to 0 inclusive , decrementing i , set a1 [ size of a - 1 - i ] to a [ i ] - ' 0 '	for ( int i = a. size ( ) - 1 ; i >= 0 ; i -- ) a1 [ a [ i ] - 1 - i ] -='0';	for ( int i = a . size ( ) - 1 ; i >= 0 ; i -- ) a1 [ a . size ( ) - 1 - i ] = a [ i ] - ' 0 ' ;	NA
for i = size of b - 1 to 0 inclusive , decrementing i , set b1 [ size of b - 1 - i ] to b [ i ] - ' 0 '	for ( map < int, int > :: iterator i = b. size ( ) - 1 ; i >= 0 ; i -- ) b1 [ b [ i ] -'0'] -- ;	for ( int i = b . size ( ) - 1 ; i >= 0 ; i -- ) b1 [ b . size ( ) - 1 - i ] = b [ i ] - ' 0 ' ;	NA
for i = 100010 to 0 inclusive , decrementing i	for ( int i = 100010 ; i >= 0 ; i -- )	for ( int i = 100010 ; i >= 0 ; i -- )	1
for j = i to a1 [ j ] and a1 [ j + 1 ] , incrementing j by 2 , set a1 [ j ] to a1 [ j + 1 ] to 0 , set a1 [ j + 2 ] to 1	for ( long long j = i + 1 ; a1 [ j ] <= a2 [ j + 1 ] ; j += 2 )	for ( int j = i ; a1 [ j ] && a1 [ j + 1 ] ; j += 2 ) a1 [ j ] = a1 [ j + 1 ] = 0 , a1 [ j + 2 ] = 1 ;	NA
for j = i to b1 [ j ] and b1 [ j + 1 ] , incrementing j by 2 , set b1 [ j ] to b1 [ j + 1 ] to 0 , set b1 [ j + 2 ] to 1	for ( int j = i ; b2 [ j ] && b1 [ j + 1 ] ; j += 2 )	for ( int j = i ; b1 [ j ] && b1 [ j + 1 ] ; j += 2 ) b1 [ j ] = b1 [ j + 1 ] = 0 , b1 [ j + 2 ] = 1 ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
for i = 100010 to 0 inclusive , decrementing i	for ( int i = 100010 ; i >= 0 ; i -- )	for ( int i = 100010 ; i >= 0 ; i -- )	1
if a1 [ i ] is less than b1 [ i ] , return print ' < ' print newline , 0 from function	if ( a1 [ i ] < b1 [ 1 ] ) return cout <<'<'<< endl, 0 ;	if ( a1 [ i ] < b1 [ i ] ) return cout << ' < ' << endl , 0 ;	NA
if a1 [ i ] is greater than b1 [ i ] , return print ' > ' print newline , 0	if ( a1 [ i ] > b1 [ j ] ) return cout <<'>'<< endl, 0 ;	if ( a1 [ i ] > b1 [ i ] ) return cout << ' > ' << endl , 0 ;	NA
}	}	}	DUMMY	DUMMY	DUMMY
print ' = ' print newline	cout <<'='<< endl ;	cout << ' = ' << endl ;	NA
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
