create long long arrays a , b , with a size 100010 , b size 100010	long long a [ 100010 ], b [ 100000 ] ;	long long a [ 100010 ] , b [ 100010 ] ;	NA
declare cmp with integers a , b as arguments , returning boolean	bool cmp ( int a, int b )	bool cmp ( int a , int b )	NA
return a is greater than b	return a > b ;	return a > b ;	1
}	}	}	DUMMY	DUMMY	DUMMY
int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
create integers n , i , j	int n, i, j ;	int n , i , j ;	NA
while read n is true	while ( cin >> n )	while ( cin >> n )	1
set bytes from a to size of a to value 0	memset ( a, 0, sizeof ( a ) ) ;	memset ( a , 0 , sizeof ( a ) ) ;	NA
set bytes from b to size of b to value 0	memset ( b, 0, sizeof ( b ) ) ;	memset ( b , 0 , sizeof ( b ) ) ;	NA
create double sum with sum = 0	double sum = 0 ;	double sum = 0 ;	1
for i = 0 to n exclusive	for ( int i = 0 ; i < n ; i ++ )	for ( i = 0 ; i < n ; i ++ )	2
read a [ i ]	cin >> a [ i ] ;	cin >> a [ i ] ;	1
increment sum by a [ i ]	sum += a [ i ] ;	sum += a [ i ] ;	1
}	}	}	DUMMY	DUMMY	DUMMY
for i = 0 to n exclusive , read b [ i ]	for ( int i = 0 ; i < n ; i ++ ) cin >> b [ i ] ;	for ( i = 0 ; i < n ; i ++ ) { cin >> b [ i ] ; }	4
sort elements from b to b + i using cmp to compare	sort ( b, b + i, cmp ) ;	sort ( b , b + i , cmp ) ;	NA
if b [ 0 ] + b [ 1 ] is greater than or equal to sum	if ( b [ 0 ] + b [ 1 ] >= sum )	if ( b [ 0 ] + b [ 1 ] >= sum )	1
print " YES " print newline	cout << " YES " << endl ;	cout << " YES " << endl ;	1
else	else	else	1
print " NO " print newline	cout << " NO " << endl ;	cout << " NO " << endl ;	1
}	}	}	DUMMY	DUMMY	DUMMY
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
