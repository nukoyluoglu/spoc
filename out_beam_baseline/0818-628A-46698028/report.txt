int main() {	int main() {	int main() {	DUMMY	DUMMY	DUMMY
P = array of 9 int filled with 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256	int P [ 9 ] = { 1, 2, 4, 8, 16, 32, 64, 128, 256 } ;	int P [ 9 ] = { 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256 } ;	NA
n , b , p = int	int n, b, p ;	int n , b , p ;	NA
read n , b , p	cin >> n >> b >> p ;	cin >> n >> b >> p ;	1
B = 0	B = 0 ;	int B = 0 ;	2
N = n	N = n ;	int N = n ;	2
while n > 1	while ( n > 1 )	while ( n > 1 )	1
k = int	int k ;	int k ;	1
for i = 8 down to - 1 exclusive	for ( int i = 8 ; i > - 1 ; i -- )	for ( int i = 8 ; i > - 1 ; i -- )	1
if P [ i ] < = n	if ( P [ i ] <= n )	if ( P [ i ] <= n )	1
k = P [ i ]	k = P [ i ] ;	k = P [ i ] ;	1
break	break ;	break ;	1
}	}	}	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
add k * ( 2 * b + 1 ) / 2 to B	B += k * ( 2 * b + 1 ) / 2 ;	B += k * ( 2 * b + 1 ) / 2 ;	1
subtract k / 2 from n	n -= k / 2 ;	n -= k / 2 ;	1
}	}	}	DUMMY	DUMMY	DUMMY
print B , space , N * p	cout << B << " " << N * p << endl ;	cout << B << " " << N * p << endl ;	1
return 0;	return 0;	return 0;	DUMMY	DUMMY	DUMMY
}	}	}	DUMMY	DUMMY	DUMMY
